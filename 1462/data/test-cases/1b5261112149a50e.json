{"uid":"1b5261112149a50e","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"92fec5fac7da5ac3a26deeb8207f2647","time":{"start":1727392146578,"stop":1727392183659,"duration":37081},"status":"failed","statusMessage":"AssertionError: assert 22 == 21.5","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff824817d0>\ndevice = <golioth.golioth.Device object at 0xffff8249c410>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 22 == 21.5\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727392116528,"stop":1727392116528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727392116529,"stop":1727392116529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727392116529,"stop":1727392116529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1727392116530,"stop":1727392116530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727392116530,"stop":1727392116530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1727392116531,"stop":1727392116533,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727392116534,"stop":1727392116534,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727392116534,"stop":1727392116534,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727392116535,"stop":1727392117000,"duration":465},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727392117000,"stop":1727392118033,"duration":1033},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1727392118034,"stop":1727392145482,"duration":27448},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1727392145482,"stop":1727392146575,"duration":1093},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 22 == 21.5","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff824817d0>\ndevice = <golioth.golioth.Device object at 0xffff8249c410>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 22 == 21.5\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","steps":[],"attachments":[{"uid":"b7bd3682bffccb45","name":"log","source":"b7bd3682bffccb45.txt","type":"text/plain","size":16095}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1727392183938,"stop":1727392184204,"duration":266},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727392184206,"stop":1727392184696,"duration":490},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727392184698,"stop":1727392184700,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1727392184705,"stop":1727392184705,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"3f682364c78b"},{"name":"thread","value":"619-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":15},"items":[{"uid":"42727ce8f0b5d6d2","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/42727ce8f0b5d6d2","status":"failed","statusDetails":"AssertionError: assert 21.5 == 21.0","time":{"start":1727386439718,"stop":1727386467974,"duration":28256}},{"uid":"3d34ef0918a20814","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/3d34ef0918a20814","status":"passed","time":{"start":1727384106792,"stop":1727384133582,"duration":26790}},{"uid":"e1e5ffbb9b76b8a8","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/e1e5ffbb9b76b8a8","status":"passed","time":{"start":1727381072110,"stop":1727381103612,"duration":31502}},{"uid":"edbd9d1cdcb723af","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/edbd9d1cdcb723af","status":"passed","time":{"start":1727375281523,"stop":1727375307461,"duration":25938}},{"uid":"df5132c820ce038d","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/df5132c820ce038d","status":"passed","time":{"start":1727370806831,"stop":1727370834128,"duration":27297}},{"uid":"96354e5fd82b942f","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/96354e5fd82b942f","status":"passed","time":{"start":1727369192439,"stop":1727369218508,"duration":26069}},{"uid":"54bb38859cad6588","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/54bb38859cad6588","status":"passed","time":{"start":1727361832949,"stop":1727361859368,"duration":26419}},{"uid":"7a6406b9c6b004db","reportUrl":"https://golioth.github.io/allure-reports/1432//#testresult/7a6406b9c6b004db","status":"passed","time":{"start":1727316142420,"stop":1727316168558,"duration":26138}},{"uid":"4cbe6946c4eca817","reportUrl":"https://golioth.github.io/allure-reports/1429//#testresult/4cbe6946c4eca817","status":"passed","time":{"start":1727313218547,"stop":1727313247061,"duration":28514}},{"uid":"d2438c6256d56e3d","reportUrl":"https://golioth.github.io/allure-reports/1424//#testresult/d2438c6256d56e3d","status":"passed","time":{"start":1727306984340,"stop":1727307009006,"duration":24666}},{"uid":"fe6481667d1d938e","reportUrl":"https://golioth.github.io/allure-reports/1421//#testresult/fe6481667d1d938e","status":"passed","time":{"start":1727296065118,"stop":1727296087848,"duration":22730}},{"uid":"ecedf69258e88f9d","reportUrl":"https://golioth.github.io/allure-reports/1420//#testresult/ecedf69258e88f9d","status":"passed","time":{"start":1727289893859,"stop":1727289918210,"duration":24351}},{"uid":"68638c47b81ff74e","reportUrl":"https://golioth.github.io/allure-reports/1419//#testresult/68638c47b81ff74e","status":"passed","time":{"start":1727285916646,"stop":1727285938148,"duration":21502}},{"uid":"9caa4c9a761d2ddd","reportUrl":"https://golioth.github.io/allure-reports/1417//#testresult/9caa4c9a761d2ddd","status":"passed","time":{"start":1727283699682,"stop":1727283721222,"duration":21540}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"1b5261112149a50e.json","parameterValues":["'nrf9160dk'","'zephyr'"]}