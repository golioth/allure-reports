{"uid":"120c9270d82c0596","name":"test_settings","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.settings.pytest.test_sample#test_settings","historyId":"d6d167c5ecb927d8d413dac5f1f3452a","time":{"start":1727456017894,"stop":1727456036320,"duration":18426},"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:257: in __aiter__\n    async for part in self._httpcore_stream:\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:367: in __aiter__\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:363: in __aiter__\n    async for part in self._stream:\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:349: in __aiter__\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:341: in __aiter__\n    async for chunk in self._connection._receive_response_body(**kwargs):\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:210: in _receive_response_body\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nshell = <twister_harness.helpers.shell.Shell object at 0xffffa8b8b590>\nproject = <golioth.golioth.Project object at 0xffffa8d24550>\ndevice = <golioth.golioth.Device object at 0xffffa8ba9e50>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_settings(shell, project, device, wifi_ssid, wifi_psk):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level setting exists\n    \n        await project.settings.set('LOOP_DELAY_S', 1)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        shell._device.readlines_until(regex=\".*Setting loop delay to 1 s\", timeout=90.0)\n    \n        # Set device-level setting\n    \n>       await device.settings.set('LOOP_DELAY_S', 5)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/settings/pytest/test_sample.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:713: in set\n    setting = await self.device.project.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:986: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:982: in get_all\n    response = await self.project.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1688: in send\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1682: in send\n    await response.aread()\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:913: in aread\n    self._content = b\"\".join([part async for part in self.aiter_bytes()])\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:913: in <listcomp>\n    self._content = b\"\".join([part async for part in self.aiter_bytes()])\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:931: in aiter_bytes\n    async for raw_bytes in self.aiter_raw():\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:989: in aiter_raw\n    async for raw_stream_bytes in self.stream:\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:150: in __aiter__\n    async for chunk in self._stream:\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:256: in __aiter__\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1727455987519,"stop":1727455987520,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727455987520,"stop":1727455987520,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727455987521,"stop":1727455987521,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727455987521,"stop":1727455987521,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727455987522,"stop":1727455987523,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727455987522,"stop":1727455987522,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1727455987524,"stop":1727455987526,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1727455987524,"stop":1727455987524,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727455987527,"stop":1727455988377,"duration":850},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727455988378,"stop":1727455989350,"duration":972},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1727455989350,"stop":1727456016799,"duration":27449},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1727456016800,"stop":1727456017889,"duration":1089},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:257: in __aiter__\n    async for part in self._httpcore_stream:\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:367: in __aiter__\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:363: in __aiter__\n    async for part in self._stream:\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:349: in __aiter__\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:341: in __aiter__\n    async for chunk in self._connection._receive_response_body(**kwargs):\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:210: in _receive_response_body\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nshell = <twister_harness.helpers.shell.Shell object at 0xffffa8b8b590>\nproject = <golioth.golioth.Project object at 0xffffa8d24550>\ndevice = <golioth.golioth.Device object at 0xffffa8ba9e50>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_settings(shell, project, device, wifi_ssid, wifi_psk):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level setting exists\n    \n        await project.settings.set('LOOP_DELAY_S', 1)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        shell._device.readlines_until(regex=\".*Setting loop delay to 1 s\", timeout=90.0)\n    \n        # Set device-level setting\n    \n>       await device.settings.set('LOOP_DELAY_S', 5)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/settings/pytest/test_sample.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:713: in set\n    setting = await self.device.project.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:986: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:982: in get_all\n    response = await self.project.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1688: in send\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1682: in send\n    await response.aread()\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:913: in aread\n    self._content = b\"\".join([part async for part in self.aiter_bytes()])\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:913: in <listcomp>\n    self._content = b\"\".join([part async for part in self.aiter_bytes()])\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:931: in aiter_bytes\n    async for raw_bytes in self.aiter_raw():\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:989: in aiter_raw\n    async for raw_stream_bytes in self.stream:\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:150: in __aiter__\n    async for chunk in self._stream:\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:256: in __aiter__\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout","steps":[],"attachments":[{"uid":"c5f7409adcd30f33","name":"log","source":"c5f7409adcd30f33.txt","type":"text/plain","size":25776}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1727456037719,"stop":1727456037900,"duration":181},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727456037902,"stop":1727456038681,"duration":779},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727456038683,"stop":1727456038685,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1727456038687,"stop":1727456038687,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"4b4eea3c7543"},{"name":"thread","value":"570-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.settings.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"fc656da4022c5537","status":"passed","time":{"start":1727392088865,"stop":1727392112286,"duration":23421}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":14,"unknown":0,"total":22},"items":[{"uid":"8d0fe9d32bf15664","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/8d0fe9d32bf15664","status":"passed","time":{"start":1727453170667,"stop":1727453185612,"duration":14945}},{"uid":"ae873a77e772f087","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/ae873a77e772f087","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727400217548,"stop":1727400312994,"duration":95446}},{"uid":"2a3d36eaa93ab9ca","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/2a3d36eaa93ab9ca","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727395011275,"stop":1727395106444,"duration":95169}},{"uid":"b7f2cf2bef91d8ef","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/b7f2cf2bef91d8ef","status":"passed","time":{"start":1727392836996,"stop":1727392853062,"duration":16066}},{"uid":"56d7553373e682a6","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/56d7553373e682a6","status":"passed","time":{"start":1727392088865,"stop":1727392112286,"duration":23421}},{"uid":"29b61ae0e3ce9f84","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/29b61ae0e3ce9f84","status":"passed","time":{"start":1727386391782,"stop":1727386406082,"duration":14300}},{"uid":"615cfc03bf76476a","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/615cfc03bf76476a","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727383977451,"stop":1727384072469,"duration":95018}},{"uid":"3c53f71f8a7c8556","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/3c53f71f8a7c8556","status":"passed","time":{"start":1727381021846,"stop":1727381037997,"duration":16151}},{"uid":"cf4b5316a25b6f47","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/cf4b5316a25b6f47","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727375152456,"stop":1727375246987,"duration":94531}},{"uid":"6feba475d32ff043","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/6feba475d32ff043","status":"passed","time":{"start":1727373600319,"stop":1727373629429,"duration":29110}},{"uid":"653663bfff07bb54","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/653663bfff07bb54","status":"passed","time":{"start":1727370756304,"stop":1727370772514,"duration":16210}},{"uid":"e133030b4783f6fc","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/e133030b4783f6fc","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727368238033,"stop":1727368332996,"duration":94963}},{"uid":"800666dfe236c234","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/800666dfe236c234","status":"passed","time":{"start":1727361782098,"stop":1727361798837,"duration":16739}},{"uid":"d3a2181ecb1f4a7b","reportUrl":"https://golioth.github.io/allure-reports/1432//#testresult/d3a2181ecb1f4a7b","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1727316714273,"stop":1727316720364,"duration":6091}},{"uid":"507409990952dea8","reportUrl":"https://golioth.github.io/allure-reports/1429//#testresult/507409990952dea8","status":"passed","time":{"start":1727313168759,"stop":1727313184363,"duration":15604}},{"uid":"5cae7f4775bd2dde","reportUrl":"https://golioth.github.io/allure-reports/1424//#testresult/5cae7f4775bd2dde","status":"passed","time":{"start":1727306939792,"stop":1727306951931,"duration":12139}},{"uid":"88e0e5b11ee9ac08","reportUrl":"https://golioth.github.io/allure-reports/1422//#testresult/88e0e5b11ee9ac08","status":"passed","time":{"start":1727302549137,"stop":1727302560185,"duration":11048}},{"uid":"9bb691fc85e85e76","reportUrl":"https://golioth.github.io/allure-reports/1421//#testresult/9bb691fc85e85e76","status":"passed","time":{"start":1727296011928,"stop":1727296030736,"duration":18808}},{"uid":"96230424f0434c3b","reportUrl":"https://golioth.github.io/allure-reports/1420//#testresult/96230424f0434c3b","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727289840694,"stop":1727289860600,"duration":19906}},{"uid":"b5b1d6b9e93729bc","reportUrl":"https://golioth.github.io/allure-reports/1419//#testresult/b5b1d6b9e93729bc","status":"passed","time":{"start":1727285863834,"stop":1727285882009,"duration":18175}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"120c9270d82c0596.json","parameterValues":["'nrf9160dk'","'zephyr'"]}