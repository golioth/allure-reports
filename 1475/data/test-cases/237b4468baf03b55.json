{"uid":"237b4468baf03b55","name":"test_cancel_all","fullName":"tests.hil.tests.settings.test_settings#test_cancel_all","historyId":"ffae0428d4c82c3a34e0e75a53083a28","time":{"start":1727656741538,"stop":1727656746976,"duration":5438},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffff7ee678d0>\ndevice = <golioth.golioth.Device object at 0xffff7ee5e310>\n\n    async def test_cancel_all(board, device):\n        # Cancel all settings\n>       await device.settings.set('TEST_CANCEL', True)\n\ntests/hil/tests/settings/test_settings.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727656599411,"stop":1727656599412,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727656599412,"stop":1727656599413,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727656599413,"stop":1727656599413,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727656599414,"stop":1727656599414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727656599415,"stop":1727656599415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727656599416,"stop":1727656599416,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727656599416,"stop":1727656599416,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727656599417,"stop":1727656599417,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727656599417,"stop":1727656599418,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727656599418,"stop":1727656599418,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727656599418,"stop":1727656599418,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727656599419,"stop":1727656599419,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727656599419,"stop":1727656599909,"duration":490},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727656599910,"stop":1727656612681,"duration":12771},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727656612683,"stop":1727656613784,"duration":1101},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727656613785,"stop":1727656631492,"duration":17707},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727656782762,"stop":1727656782763,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727656782768,"stop":1727656783390,"duration":622},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727656783392,"stop":1727656783446,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727656783448,"stop":1727656783451,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"d07b5e839e48"},{"name":"thread","value":"321-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":29,"unknown":0,"total":34},"items":[{"uid":"1f59045afd471df","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/1f59045afd471df","status":"passed","time":{"start":1727570432052,"stop":1727570465589,"duration":33537}},{"uid":"6f51bcb328dfe018","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/6f51bcb328dfe018","status":"passed","time":{"start":1727545330248,"stop":1727545362899,"duration":32651}},{"uid":"93ce41e2cc56b0ed","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/93ce41e2cc56b0ed","status":"passed","time":{"start":1727542835682,"stop":1727542867810,"duration":32128}},{"uid":"f4e777934a6785de","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/f4e777934a6785de","status":"passed","time":{"start":1727541460261,"stop":1727541493378,"duration":33117}},{"uid":"713e969fa9c6b73","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/713e969fa9c6b73","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1727483743860,"stop":1727483743860,"duration":0}},{"uid":"d010e54bd256813d","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/d010e54bd256813d","status":"passed","time":{"start":1727475818734,"stop":1727475850594,"duration":31860}},{"uid":"cc6d8b7aec3ed5c8","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/cc6d8b7aec3ed5c8","status":"passed","time":{"start":1727461086269,"stop":1727461118905,"duration":32636}},{"uid":"e12e15606d7702a1","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/e12e15606d7702a1","status":"passed","time":{"start":1727461086269,"stop":1727461118905,"duration":32636}},{"uid":"36dac3ed20dc1333","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/36dac3ed20dc1333","status":"passed","time":{"start":1727458764044,"stop":1727458796664,"duration":32620}},{"uid":"641fc10a8b77a7cf","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/641fc10a8b77a7cf","status":"passed","time":{"start":1727393630885,"stop":1727393662821,"duration":31936}},{"uid":"36fc4af24c4d73c2","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/36fc4af24c4d73c2","status":"passed","time":{"start":1727387558320,"stop":1727387590775,"duration":32455}},{"uid":"8d25243793c95676","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/8d25243793c95676","status":"passed","time":{"start":1727363928162,"stop":1727363960846,"duration":32684}},{"uid":"bd0fccce80beacd7","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/bd0fccce80beacd7","status":"passed","time":{"start":1727393630885,"stop":1727393662821,"duration":31936}},{"uid":"41cfed15fd26abf","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/41cfed15fd26abf","status":"passed","time":{"start":1727388301963,"stop":1727388333985,"duration":32022}},{"uid":"72c631ed17ec9605","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/72c631ed17ec9605","status":"passed","time":{"start":1727387558320,"stop":1727387590775,"duration":32455}},{"uid":"a90f360b7346e99d","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/a90f360b7346e99d","status":"passed","time":{"start":1727384418588,"stop":1727384450536,"duration":31948}},{"uid":"1493def5a2f683d0","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/1493def5a2f683d0","status":"passed","time":{"start":1727382066642,"stop":1727382098799,"duration":32157}},{"uid":"35e57030363f8d4d","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/35e57030363f8d4d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727378867910,"stop":1727378913425,"duration":45515}},{"uid":"f96ff58952b6aec7","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/f96ff58952b6aec7","status":"passed","time":{"start":1727360165773,"stop":1727360198440,"duration":32667}},{"uid":"f613a3ed9e65b46","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/f613a3ed9e65b46","status":"passed","time":{"start":1727371455163,"stop":1727371488277,"duration":33114}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"237b4468baf03b55.json","parameterValues":["'nrf52840dk'","'zephyr'"]}