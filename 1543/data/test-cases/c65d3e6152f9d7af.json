{"uid":"c65d3e6152f9d7af","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1727968439058,"stop":1727968452451,"duration":13393},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffbc5bbc50>\ndevice = <golioth.golioth.Device object at 0xffffbc5652d0>\nproject = <golioth.golioth.Project object at 0xffffbc4fc9d0>\nreleases = {'test_blocks': Release <66feb4a72860a8ee0e303097, release_tags=[], device_tags=['66feb4a52860a8ee0e303094'], artifact..., release_tags=[], device_tags=['66feb4a52860a8ee0e303094'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727968363488,"stop":1727968363489,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727968363490,"stop":1727968363490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727968363491,"stop":1727968363491,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727968363492,"stop":1727968363492,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727968363494,"stop":1727968363494,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727968363495,"stop":1727968363495,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727968363496,"stop":1727968363496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727968363497,"stop":1727968363497,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727968363498,"stop":1727968363498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727968363499,"stop":1727968363499,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727968363500,"stop":1727968363500,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727968363501,"stop":1727968363501,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727968363502,"stop":1727968415160,"duration":51658},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727968415161,"stop":1727968415666,"duration":505},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727968415666,"stop":1727968416510,"duration":844},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727968416511,"stop":1727968421110,"duration":4599},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727968421111,"stop":1727968421608,"duration":497},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727968421608,"stop":1727968422384,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727968422385,"stop":1727968423957,"duration":1572},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727968439054,"stop":1727968439055,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffbc5bbc50>\ndevice = <golioth.golioth.Device object at 0xffffbc5652d0>\nproject = <golioth.golioth.Project object at 0xffffbc4fc9d0>\nreleases = {'test_blocks': Release <66feb4a72860a8ee0e303097, release_tags=[], device_tags=['66feb4a52860a8ee0e303094'], artifact..., release_tags=[], device_tags=['66feb4a52860a8ee0e303094'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"9aec58a29ce5a2b1","name":"stdout","source":"9aec58a29ce5a2b1.txt","type":"text/plain","size":881}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727968452501,"stop":1727968453328,"duration":827},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727968453330,"stop":1727968454803,"duration":1473},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727968454805,"stop":1727968455548,"duration":743},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727968455550,"stop":1727968455550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727968455552,"stop":1727968455552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727968455554,"stop":1727968455976,"duration":422},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727968455979,"stop":1727968455979,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727968455981,"stop":1727968455984,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"fa1e73782262"},{"name":"thread","value":"241-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":9,"skipped":0,"passed":42,"unknown":0,"total":69},"items":[{"uid":"6d6317c4a4f8925c","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/6d6317c4a4f8925c","status":"passed","time":{"start":1727964685560,"stop":1727964762599,"duration":77039}},{"uid":"85c31a8ca8dc6aee","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/85c31a8ca8dc6aee","status":"passed","time":{"start":1727959368616,"stop":1727959449095,"duration":80479}},{"uid":"c98900bcb5ca46db","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/c98900bcb5ca46db","status":"passed","time":{"start":1727956113757,"stop":1727956194390,"duration":80633}},{"uid":"efe0d7e271fe4c45","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/efe0d7e271fe4c45","status":"passed","time":{"start":1727955058734,"stop":1727955136444,"duration":77710}},{"uid":"86a28b99e4d0e550","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/86a28b99e4d0e550","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727951462288,"stop":1727951475563,"duration":13275}},{"uid":"7eafe3b4d063ac15","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/7eafe3b4d063ac15","status":"passed","time":{"start":1727925904334,"stop":1727925981705,"duration":77371}},{"uid":"e6bfc49b623c975a","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/e6bfc49b623c975a","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727945037763,"stop":1727945050916,"duration":13153}},{"uid":"bf83665b92c0041a","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/bf83665b92c0041a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727944102289,"stop":1727944122678,"duration":20389}},{"uid":"507829cb9a9bb744","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/507829cb9a9bb744","status":"passed","time":{"start":1727943370033,"stop":1727943448057,"duration":78024}},{"uid":"292be6c078857560","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/292be6c078857560","status":"passed","time":{"start":1727831539937,"stop":1727831616744,"duration":76807}},{"uid":"ae7fb5e15dafd442","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/ae7fb5e15dafd442","status":"passed","time":{"start":1727925904334,"stop":1727925981705,"duration":77371}},{"uid":"63a51370c476b2a8","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/63a51370c476b2a8","status":"passed","time":{"start":1727925904334,"stop":1727925981705,"duration":77371}},{"uid":"29e730de3d5f6bcc","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/29e730de3d5f6bcc","status":"passed","time":{"start":1727915571958,"stop":1727915649524,"duration":77566}},{"uid":"b6a2f016f527e51f","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/b6a2f016f527e51f","status":"failed","statusDetails":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","time":{"start":1727906850899,"stop":1727906893184,"duration":42285}},{"uid":"e1066e9cd74919fa","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/e1066e9cd74919fa","status":"passed","time":{"start":1727831539937,"stop":1727831616744,"duration":76807}},{"uid":"790af021e43a9d04","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/790af021e43a9d04","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1727829123314,"stop":1727829145602,"duration":22288}},{"uid":"949f3b408a018019","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/949f3b408a018019","status":"passed","time":{"start":1727801547083,"stop":1727801626841,"duration":79758}},{"uid":"558470ecc9f7eea0","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/558470ecc9f7eea0","status":"passed","time":{"start":1727813124443,"stop":1727813204032,"duration":79589}},{"uid":"e377971d6070e1b0","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/e377971d6070e1b0","status":"passed","time":{"start":1727795356149,"stop":1727795433531,"duration":77382}},{"uid":"f5b379086ad3eabe","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/f5b379086ad3eabe","status":"passed","time":{"start":1727809276036,"stop":1727809353034,"duration":76998}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"c65d3e6152f9d7af.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}