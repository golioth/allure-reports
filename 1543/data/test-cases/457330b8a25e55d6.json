{"uid":"457330b8a25e55d6","name":"test_bool_return","fullName":"tests.hil.tests.rpc.test_rpc#test_bool_return","historyId":"50db862bc4248984919783f22a8fc56e","time":{"start":1727968533318,"stop":1727968538633,"duration":5315},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa26f6410>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa26d3990>\ndevice = <golioth.golioth.Device object at 0xffffa26f6450>\n\n    async def test_bool_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"bool\")\n\ntests/hil/tests/rpc/test_rpc.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa26f6410>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727968459191,"stop":1727968459192,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727968459193,"stop":1727968459194,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727968459193,"stop":1727968459193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727968459194,"stop":1727968459194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727968459195,"stop":1727968459195,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727968459196,"stop":1727968459196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727968459197,"stop":1727968459197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727968459197,"stop":1727968459197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727968459198,"stop":1727968459198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727968459199,"stop":1727968459199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727968459199,"stop":1727968459199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727968459200,"stop":1727968459594,"duration":394},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727968459200,"stop":1727968459200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727968459595,"stop":1727968511153,"duration":51558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727968511155,"stop":1727968512144,"duration":989},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727968512144,"stop":1727968519181,"duration":7037},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727968566792,"stop":1727968566793,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727968566795,"stop":1727968567188,"duration":393},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727968567190,"stop":1727968567191,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727968567193,"stop":1727968567196,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"fa1e73782262"},{"name":"thread","value":"246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":64,"unknown":0,"total":69},"items":[{"uid":"e9e1ebfc0beaa82f","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/e9e1ebfc0beaa82f","status":"passed","time":{"start":1727964824544,"stop":1727964825878,"duration":1334}},{"uid":"d64e90d34d4307a9","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/d64e90d34d4307a9","status":"passed","time":{"start":1727959497793,"stop":1727959499292,"duration":1499}},{"uid":"842b0a8d59f348c3","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/842b0a8d59f348c3","status":"passed","time":{"start":1727956246794,"stop":1727956248287,"duration":1493}},{"uid":"24b52b99dc6a8524","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/24b52b99dc6a8524","status":"passed","time":{"start":1727955198200,"stop":1727955200143,"duration":1943}},{"uid":"baa0193c5696ee72","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/baa0193c5696ee72","status":"passed","time":{"start":1727951524111,"stop":1727951525363,"duration":1252}},{"uid":"837fd890511128a8","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/837fd890511128a8","status":"passed","time":{"start":1727926042490,"stop":1727926043609,"duration":1119}},{"uid":"4e90d1400b2f394","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/4e90d1400b2f394","status":"passed","time":{"start":1727945098647,"stop":1727945099896,"duration":1249}},{"uid":"a05473fdbbc40d5a","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/a05473fdbbc40d5a","status":"passed","time":{"start":1727944228724,"stop":1727944231725,"duration":3001}},{"uid":"bd63938eceb5a108","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/bd63938eceb5a108","status":"passed","time":{"start":1727943508326,"stop":1727943509318,"duration":992}},{"uid":"8b9b5a2a158bc34e","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/8b9b5a2a158bc34e","status":"passed","time":{"start":1727831676680,"stop":1727831677589,"duration":909}},{"uid":"b176821c9c3ffa5c","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/b176821c9c3ffa5c","status":"passed","time":{"start":1727926042490,"stop":1727926043609,"duration":1119}},{"uid":"738a3aff7b3f67e7","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/738a3aff7b3f67e7","status":"passed","time":{"start":1727926042490,"stop":1727926043609,"duration":1119}},{"uid":"95b5f0d2dee50219","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/95b5f0d2dee50219","status":"passed","time":{"start":1727915711436,"stop":1727915712347,"duration":911}},{"uid":"8fd6ae1f1c92ffc2","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/8fd6ae1f1c92ffc2","status":"passed","time":{"start":1727906955560,"stop":1727906956472,"duration":912}},{"uid":"10814a8b01908528","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/10814a8b01908528","status":"passed","time":{"start":1727831676680,"stop":1727831677589,"duration":909}},{"uid":"f3987a99350e8f8b","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/f3987a99350e8f8b","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727829232182,"stop":1727829237492,"duration":5310}},{"uid":"ad2818617bfaf557","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/ad2818617bfaf557","status":"passed","time":{"start":1727801674981,"stop":1727801676480,"duration":1499}},{"uid":"6efd2dc79d70abe2","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/6efd2dc79d70abe2","status":"passed","time":{"start":1727813252712,"stop":1727813253960,"duration":1248}},{"uid":"4167f5ac0422ced8","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/4167f5ac0422ced8","status":"passed","time":{"start":1727795511043,"stop":1727795512058,"duration":1015}},{"uid":"76967aa3235f6569","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/76967aa3235f6569","status":"passed","time":{"start":1727809412713,"stop":1727809414040,"duration":1327}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"457330b8a25e55d6.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}