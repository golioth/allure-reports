{"uid":"2a13805a56e8408d","name":"test_cancel_all","fullName":"tests.hil.tests.settings.test_settings#test_cancel_all","historyId":"54ec7c21843ff8ae8e981e795cc5ec2b","time":{"start":1727968775399,"stop":1727968786128,"duration":10729},"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff8e7babd0>\ndevice = <golioth.golioth.Device object at 0xffff8e733f90>\n\n    async def test_cancel_all(board, device):\n        # Cancel all settings\n>       await device.settings.set('TEST_CANCEL', True)\n\ntests/hil/tests/settings/test_settings.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:715: in set\n    response = await self.device.project.post('settings', json=json)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:103: in post\n    return await c.post(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727968570453,"stop":1727968570453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727968570454,"stop":1727968570455,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727968570454,"stop":1727968570454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727968570456,"stop":1727968570456,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727968570456,"stop":1727968570456,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727968570457,"stop":1727968570457,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727968570458,"stop":1727968570459,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727968570458,"stop":1727968570458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727968570459,"stop":1727968570459,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727968570460,"stop":1727968570461,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727968570460,"stop":1727968570460,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727968570461,"stop":1727968570461,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727968570462,"stop":1727968570868,"duration":406},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727968570869,"stop":1727968622387,"duration":51518},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727968622388,"stop":1727968623319,"duration":931},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727968623320,"stop":1727968637334,"duration":14014},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727968841321,"stop":1727968841321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727968841324,"stop":1727968842355,"duration":1031},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727968842357,"stop":1727968842358,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727968842360,"stop":1727968842363,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"fa1e73782262"},{"name":"thread","value":"252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":67,"unknown":0,"total":69},"items":[{"uid":"16bae86109b66190","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/16bae86109b66190","status":"passed","time":{"start":1727965066008,"stop":1727965099312,"duration":33304}},{"uid":"cd63a0a055b472","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/cd63a0a055b472","status":"passed","time":{"start":1727959688864,"stop":1727959719725,"duration":30861}},{"uid":"5c09175c706044b9","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/5c09175c706044b9","status":"passed","time":{"start":1727956443714,"stop":1727956479765,"duration":36051}},{"uid":"bcecb1733382d2e4","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/bcecb1733382d2e4","status":"passed","time":{"start":1727955408637,"stop":1727955440127,"duration":31490}},{"uid":"45676e3a6d5e79f","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/45676e3a6d5e79f","status":"passed","time":{"start":1727951712335,"stop":1727951743186,"duration":30851}},{"uid":"dd1ed52bd3ba95ca","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/dd1ed52bd3ba95ca","status":"passed","time":{"start":1727926258359,"stop":1727926291638,"duration":33279}},{"uid":"3f623687748ae04","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/3f623687748ae04","status":"passed","time":{"start":1727945293501,"stop":1727945324081,"duration":30580}},{"uid":"1a04ff856abda0af","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/1a04ff856abda0af","status":"passed","time":{"start":1727944446781,"stop":1727944479539,"duration":32758}},{"uid":"2502abb0d07befae","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/2502abb0d07befae","status":"passed","time":{"start":1727943723551,"stop":1727943756634,"duration":33083}},{"uid":"7b4a087a4ddf50bb","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/7b4a087a4ddf50bb","status":"passed","time":{"start":1727831883734,"stop":1727831916014,"duration":32280}},{"uid":"d99c7ade1799c1d5","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/d99c7ade1799c1d5","status":"passed","time":{"start":1727926258359,"stop":1727926291638,"duration":33279}},{"uid":"1dc2dee220c40288","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/1dc2dee220c40288","status":"passed","time":{"start":1727926258359,"stop":1727926291638,"duration":33279}},{"uid":"8c5b01b3581f8d2f","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/8c5b01b3581f8d2f","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1727915834084,"stop":1727915834084,"duration":0}},{"uid":"f8cad8c31c5333ce","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/f8cad8c31c5333ce","status":"passed","time":{"start":1727907177976,"stop":1727907210068,"duration":32092}},{"uid":"79c96754894694e5","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/79c96754894694e5","status":"passed","time":{"start":1727831883734,"stop":1727831916014,"duration":32280}},{"uid":"e1e4fb1b964a0666","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/e1e4fb1b964a0666","status":"passed","time":{"start":1727829433985,"stop":1727829465737,"duration":31752}},{"uid":"f14d1df6d7993dd4","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/f14d1df6d7993dd4","status":"passed","time":{"start":1727801876441,"stop":1727801906946,"duration":30505}},{"uid":"a3727c9856bc0ebe","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/a3727c9856bc0ebe","status":"passed","time":{"start":1727813440781,"stop":1727813471397,"duration":30616}},{"uid":"7c1e5135895dded8","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/7c1e5135895dded8","status":"passed","time":{"start":1727795736651,"stop":1727795768311,"duration":31660}},{"uid":"ec5b68e177b92310","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/ec5b68e177b92310","status":"passed","time":{"start":1727809627453,"stop":1727809658762,"duration":31309}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"2a13805a56e8408d.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}