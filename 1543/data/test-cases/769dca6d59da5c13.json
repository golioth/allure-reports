{"uid":"769dca6d59da5c13","name":"test_manifest","fullName":"tests.hil.tests.ota.test_ota#test_manifest","historyId":"4894399faf16b83950447320961dcfd4","time":{"start":1727967703082,"stop":1727967733511,"duration":30429},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 219982.45417440828\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nartifacts = {'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>, 'test_blocks': ...lueprint=None>, 'test_multiple': Artifact <65f8bcd2d8a3255581782b58, package=main, version=1.2.5, blueprint=None>, ...}\nboard = <espidfboard.ESPIDFBoard object at 0xffffb5c3add0>\nproject = <golioth.golioth.Project object at 0xffffb72dfa50>\nreleases = {'test_blocks': Release <66feb1d62860a8ee0e302f2c, release_tags=[], device_tags=['66feb1d42860a8ee0e302f29'], artifact..., release_tags=[], device_tags=['66feb1d42860a8ee0e302f29'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_manifest(artifacts, board, project, releases):\n        await project.releases.rollout_set(releases[\"test_manifest\"].id, True)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest received', timeout_s=30)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest successfully decoded', timeout_s=2)\n    \n        # We may need to wait for the second manifest to trigger this line (the first has no rollouts)\n    \n>       assert None != await board.wait_for_regex_in_line('Found main component', timeout_s=30)\n\ntests/hil/tests/ota/test_ota.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 219982.45417440828\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727967649319,"stop":1727967649320,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727967649320,"stop":1727967649320,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727967649321,"stop":1727967649321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727967649322,"stop":1727967649322,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727967649322,"stop":1727967649322,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727967649323,"stop":1727967649323,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727967649323,"stop":1727967649324,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727967649324,"stop":1727967649324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727967649324,"stop":1727967649325,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727967649325,"stop":1727967649325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727967649326,"stop":1727967649327,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727967649327,"stop":1727967649328,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727967649328,"stop":1727967695908,"duration":46580},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727967695910,"stop":1727967696403,"duration":493},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727967696404,"stop":1727967697334,"duration":930},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727967697335,"stop":1727967700049,"duration":2714},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727967700049,"stop":1727967700614,"duration":565},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727967700615,"stop":1727967701385,"duration":770},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727967701386,"stop":1727967703078,"duration":1692},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727967703078,"stop":1727967703079,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 219982.45417440828\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nartifacts = {'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>, 'test_blocks': ...lueprint=None>, 'test_multiple': Artifact <65f8bcd2d8a3255581782b58, package=main, version=1.2.5, blueprint=None>, ...}\nboard = <espidfboard.ESPIDFBoard object at 0xffffb5c3add0>\nproject = <golioth.golioth.Project object at 0xffffb72dfa50>\nreleases = {'test_blocks': Release <66feb1d62860a8ee0e302f2c, release_tags=[], device_tags=['66feb1d42860a8ee0e302f29'], artifact..., release_tags=[], device_tags=['66feb1d42860a8ee0e302f29'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_manifest(artifacts, board, project, releases):\n        await project.releases.rollout_set(releases[\"test_manifest\"].id, True)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest received', timeout_s=30)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest successfully decoded', timeout_s=2)\n    \n        # We may need to wait for the second manifest to trigger this line (the first has no rollouts)\n    \n>       assert None != await board.wait_for_regex_in_line('Found main component', timeout_s=30)\n\ntests/hil/tests/ota/test_ota.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 219982.45417440828\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"d43eb52fa1bf8908","name":"stdout","source":"d43eb52fa1bf8908.txt","type":"text/plain","size":8829}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727967734106,"stop":1727967734984,"duration":878},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727967820908,"stop":1727967822355,"duration":1447},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727967822357,"stop":1727967823229,"duration":872},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727967823231,"stop":1727967823231,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727967823233,"stop":1727967823233,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727967823235,"stop":1727967823684,"duration":449},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727967823686,"stop":1727967823686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727967823688,"stop":1727967823691,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"92b4b62a96d2"},{"name":"thread","value":"239-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":69,"unknown":0,"total":70},"items":[{"uid":"8525ac2f6effd98a","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/8525ac2f6effd98a","status":"passed","time":{"start":1727964602222,"stop":1727964603029,"duration":807}},{"uid":"f67402a958d582b7","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/f67402a958d582b7","status":"passed","time":{"start":1727961790466,"stop":1727961791262,"duration":796}},{"uid":"9a1f86e8cbe1f740","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/9a1f86e8cbe1f740","status":"passed","time":{"start":1727957642412,"stop":1727957643443,"duration":1031}},{"uid":"948ab9a22ccdcb04","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/948ab9a22ccdcb04","status":"passed","time":{"start":1727956021219,"stop":1727956022353,"duration":1134}},{"uid":"11e4be0e38c3c304","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/11e4be0e38c3c304","status":"passed","time":{"start":1727906476027,"stop":1727906476803,"duration":776}},{"uid":"341cc2c9a421adc0","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/341cc2c9a421adc0","status":"passed","time":{"start":1727925786233,"stop":1727925787191,"duration":958}},{"uid":"8fd12066c017211c","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/8fd12066c017211c","status":"passed","time":{"start":1727943676498,"stop":1727943677403,"duration":905}},{"uid":"c27fec9f89598f","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/c27fec9f89598f","status":"passed","time":{"start":1727943190073,"stop":1727943190886,"duration":813}},{"uid":"3579732b39de5f90","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/3579732b39de5f90","status":"passed","time":{"start":1727831763914,"stop":1727831764785,"duration":871}},{"uid":"4e6970db682eae26","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/4e6970db682eae26","status":"passed","time":{"start":1727925786233,"stop":1727925787191,"duration":958}},{"uid":"d2feb43b8e8f7169","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/d2feb43b8e8f7169","status":"passed","time":{"start":1727925786233,"stop":1727925787191,"duration":958}},{"uid":"44714a1845e0cf7a","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/44714a1845e0cf7a","status":"passed","time":{"start":1727915454916,"stop":1727915455443,"duration":527}},{"uid":"a4ba1f2270f3efd5","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/a4ba1f2270f3efd5","status":"passed","time":{"start":1727906476027,"stop":1727906476803,"duration":776}},{"uid":"af292d2c3cde74a3","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/af292d2c3cde74a3","status":"passed","time":{"start":1727831763914,"stop":1727831764785,"duration":871}},{"uid":"85be038ad20cd229","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/85be038ad20cd229","status":"passed","time":{"start":1727829074309,"stop":1727829075086,"duration":777}},{"uid":"2a54bc7bbd1193f4","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/2a54bc7bbd1193f4","status":"passed","time":{"start":1727801092771,"stop":1727801093681,"duration":910}},{"uid":"7a92455a4f712863","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/7a92455a4f712863","status":"passed","time":{"start":1727813907044,"stop":1727813908024,"duration":980}},{"uid":"f7558b5360f5527","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/f7558b5360f5527","status":"passed","time":{"start":1727795379867,"stop":1727795380567,"duration":700}},{"uid":"9f28d68cc2da83f4","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/9f28d68cc2da83f4","status":"passed","time":{"start":1727809590842,"stop":1727809591785,"duration":943}},{"uid":"f7d7dadc6bc9e5e","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/f7d7dadc6bc9e5e","status":"passed","time":{"start":1727805351749,"stop":1727805352411,"duration":662}}]},"tags":["esp-idf","anyio","esp32_devkitc_wrover_espidf","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"769dca6d59da5c13.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}