{"uid":"25f86bb427304e90","name":"test_int_too_small","fullName":"tests.hil.tests.settings.test_settings#test_int_too_small","historyId":"9a158ab876eb6bcacb2a056562120108","time":{"start":1728520567123,"stop":1728520581736,"duration":14613},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8f413550>\ndevice = <golioth.golioth.Device object at 0xffff8f488f90>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8f488f90>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728520473645,"stop":1728520473645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728520473646,"stop":1728520473646,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728520473647,"stop":1728520473647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728520473648,"stop":1728520473648,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728520473649,"stop":1728520473650,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728520473649,"stop":1728520473649,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728520473650,"stop":1728520473650,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728520473651,"stop":1728520473651,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728520473651,"stop":1728520473651,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728520473652,"stop":1728520473652,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728520473652,"stop":1728520473652,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728520473653,"stop":1728520473653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728520473653,"stop":1728520474063,"duration":410},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728520474064,"stop":1728520525765,"duration":51701},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728520525767,"stop":1728520526735,"duration":968},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728520526736,"stop":1728520548037,"duration":21301},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8f413550>\ndevice = <golioth.golioth.Device object at 0xffff8f488f90>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8f488f90>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"406838294af13065","name":"stdout","source":"406838294af13065.txt","type":"text/plain","size":609}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728520715036,"stop":1728520715036,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728520715038,"stop":1728520715538,"duration":500},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728520715540,"stop":1728520715541,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728520715543,"stop":1728520715546,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"ae2e4c244479"},{"name":"thread","value":"253-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":3,"skipped":0,"passed":112,"unknown":0,"total":124},"items":[{"uid":"3e2f2e6997989828","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/3e2f2e6997989828","status":"passed","time":{"start":1728319983656,"stop":1728319996664,"duration":13008}},{"uid":"b446d2e9895a2bf3","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/b446d2e9895a2bf3","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1728491712274,"stop":1728491712274,"duration":0}},{"uid":"93d9cb2a1d18ab9f","reportUrl":"https://golioth.github.io/allure-reports/1619//#testresult/93d9cb2a1d18ab9f","status":"passed","time":{"start":1728483509340,"stop":1728483523351,"duration":14011}},{"uid":"a9c4774cffc4f9ae","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/a9c4774cffc4f9ae","status":"passed","time":{"start":1728434234313,"stop":1728434247820,"duration":13507}},{"uid":"90d1c432c25762d7","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/90d1c432c25762d7","status":"passed","time":{"start":1728424857670,"stop":1728424871281,"duration":13611}},{"uid":"9c365c18a4f09bd5","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/9c365c18a4f09bd5","status":"passed","time":{"start":1728330450160,"stop":1728330463532,"duration":13372}},{"uid":"c07cb9f035be4437","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/c07cb9f035be4437","status":"passed","time":{"start":1728327445070,"stop":1728327458103,"duration":13033}},{"uid":"7cfdec8d8020f0a0","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/7cfdec8d8020f0a0","status":"passed","time":{"start":1728339030372,"stop":1728339043369,"duration":12997}},{"uid":"d0b0c67c6abf68f6","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/d0b0c67c6abf68f6","status":"passed","time":{"start":1728399351122,"stop":1728399363983,"duration":12861}},{"uid":"d176eccb5453f69a","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/d176eccb5453f69a","status":"passed","time":{"start":1728339030372,"stop":1728339043369,"duration":12997}},{"uid":"1da7b480018691b6","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/1da7b480018691b6","status":"passed","time":{"start":1728347943620,"stop":1728347958195,"duration":14575}},{"uid":"58ccdc2b663f1095","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/58ccdc2b663f1095","status":"passed","time":{"start":1728339833911,"stop":1728339846644,"duration":12733}},{"uid":"1028e5ac2777140d","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/1028e5ac2777140d","status":"passed","time":{"start":1728339030372,"stop":1728339043369,"duration":12997}},{"uid":"f2e6f67bc868536a","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/f2e6f67bc868536a","status":"passed","time":{"start":1728335909829,"stop":1728335923718,"duration":13889}},{"uid":"2ad61d9d5d8f74b9","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/2ad61d9d5d8f74b9","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728328252103,"stop":1728328265200,"duration":13097}},{"uid":"56f59b4753f97aa1","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/56f59b4753f97aa1","status":"passed","time":{"start":1728319983656,"stop":1728319996664,"duration":13008}},{"uid":"d4c7bb83389e338a","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/d4c7bb83389e338a","status":"passed","time":{"start":1728319983656,"stop":1728319996664,"duration":13008}},{"uid":"6de619383950607e","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/6de619383950607e","status":"passed","time":{"start":1728316487671,"stop":1728316500597,"duration":12926}},{"uid":"d1aa3fd62a348836","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/d1aa3fd62a348836","status":"passed","time":{"start":1728312576715,"stop":1728312589461,"duration":12746}},{"uid":"cebccfca8c86453d","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/cebccfca8c86453d","status":"passed","time":{"start":1728125585326,"stop":1728125598287,"duration":12961}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"25f86bb427304e90.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}