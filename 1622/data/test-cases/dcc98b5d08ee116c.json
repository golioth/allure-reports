{"uid":"dcc98b5d08ee116c","name":"test_lightdb_reported","fullName":"tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"49765a4c987ee000521ef4c418c5605d","time":{"start":1728520224412,"stop":1728520229702,"duration":5290},"status":"failed","statusMessage":"AssertionError: assert None == {'c': '26', 'd': -12}","statusTrace":"device = <golioth.golioth.Device object at 0xffff9d5a2890>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/false')) is False\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/int')) == 13\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/float')) == -234.25\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/str')) == '15'\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/obj')) == {'c': '26', 'd': -12}\n    \n        assert (await device.lightdb.get('hil/lightdb/reported/sync/invalid')) in ('GOLIOTH_ERR_NULL', 'GOLIOTH_ERR_BAD_REQUEST')\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/nothing')) == 'GOLIOTH_ERR_NULL'\n    \n        assert (await device.lightdb.get('hil/lightdb/reported/async/true')) is True\n        assert (await device.lightdb.get('hil/lightdb/reported/async/false')) is False\n        assert (await device.lightdb.get('hil/lightdb/reported/async/int')) == 13\n        assert (await device.lightdb.get('hil/lightdb/reported/async/float')) == -234.25\n        assert (await device.lightdb.get('hil/lightdb/reported/async/str')) == '15'\n>       assert (await device.lightdb.get('hil/lightdb/reported/async/obj')) == {'c': '26', 'd': -12}\nE       AssertionError: assert None == {'c': '26', 'd': -12}\n\ntests/hil/tests/lightdb/test_lightdb.py:73: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728520128594,"stop":1728520128594,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728520128595,"stop":1728520128595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728520128596,"stop":1728520128596,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728520128597,"stop":1728520128597,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728520128598,"stop":1728520128598,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728520128598,"stop":1728520128598,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728520128599,"stop":1728520128599,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728520128599,"stop":1728520128600,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728520128600,"stop":1728520128600,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728520128600,"stop":1728520128600,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728520128601,"stop":1728520128601,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728520128601,"stop":1728520128601,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728520128602,"stop":1728520129022,"duration":420},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728520129023,"stop":1728520180888,"duration":51865},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728520180890,"stop":1728520182000,"duration":1110},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728520182000,"stop":1728520224403,"duration":42403},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None == {'c': '26', 'd': -12}","statusTrace":"device = <golioth.golioth.Device object at 0xffff9d5a2890>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/false')) is False\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/int')) == 13\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/float')) == -234.25\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/str')) == '15'\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/obj')) == {'c': '26', 'd': -12}\n    \n        assert (await device.lightdb.get('hil/lightdb/reported/sync/invalid')) in ('GOLIOTH_ERR_NULL', 'GOLIOTH_ERR_BAD_REQUEST')\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/nothing')) == 'GOLIOTH_ERR_NULL'\n    \n        assert (await device.lightdb.get('hil/lightdb/reported/async/true')) is True\n        assert (await device.lightdb.get('hil/lightdb/reported/async/false')) is False\n        assert (await device.lightdb.get('hil/lightdb/reported/async/int')) == 13\n        assert (await device.lightdb.get('hil/lightdb/reported/async/float')) == -234.25\n        assert (await device.lightdb.get('hil/lightdb/reported/async/str')) == '15'\n>       assert (await device.lightdb.get('hil/lightdb/reported/async/obj')) == {'c': '26', 'd': -12}\nE       AssertionError: assert None == {'c': '26', 'd': -12}\n\ntests/hil/tests/lightdb/test_lightdb.py:73: AssertionError","steps":[],"attachments":[{"uid":"2222daad23bee389","name":"stdout","source":"2222daad23bee389.txt","type":"text/plain","size":8924}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728520242767,"stop":1728520243124,"duration":357},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728520243126,"stop":1728520243497,"duration":371},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728520243499,"stop":1728520243500,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728520243502,"stop":1728520243504,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"ae2e4c244479"},{"name":"thread","value":"235-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":13,"skipped":0,"passed":110,"unknown":0,"total":124},"items":[{"uid":"17e5eb9592f1f3a9","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/17e5eb9592f1f3a9","status":"passed","time":{"start":1728319650706,"stop":1728319656926,"duration":6220}},{"uid":"8c93e40340d3468b","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/8c93e40340d3468b","status":"passed","time":{"start":1728491379458,"stop":1728491390110,"duration":10652}},{"uid":"fce508e9bb0089b2","reportUrl":"https://golioth.github.io/allure-reports/1619//#testresult/fce508e9bb0089b2","status":"passed","time":{"start":1728483145285,"stop":1728483150519,"duration":5234}},{"uid":"7b25062e7f7b25ed","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/7b25062e7f7b25ed","status":"passed","time":{"start":1728433877546,"stop":1728433884248,"duration":6702}},{"uid":"96a96358472c0e6c","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/96a96358472c0e6c","status":"passed","time":{"start":1728424497172,"stop":1728424503527,"duration":6355}},{"uid":"e8892beb5899a3ae","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/e8892beb5899a3ae","status":"passed","time":{"start":1728330149637,"stop":1728330154878,"duration":5241}},{"uid":"7d6a145ae369b53c","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/7d6a145ae369b53c","status":"passed","time":{"start":1728327110582,"stop":1728327116889,"duration":6307}},{"uid":"76e3601f8b99a494","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/76e3601f8b99a494","status":"passed","time":{"start":1728338694535,"stop":1728338700768,"duration":6233}},{"uid":"5893370c374d5ae9","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/5893370c374d5ae9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728398916885,"stop":1728398916885,"duration":0}},{"uid":"70b0a33585807394","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/70b0a33585807394","status":"passed","time":{"start":1728338694535,"stop":1728338700768,"duration":6233}},{"uid":"bc7333c1f4ecbbbe","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/bc7333c1f4ecbbbe","status":"passed","time":{"start":1728347578070,"stop":1728347586281,"duration":8211}},{"uid":"f3c1d4c3d56eb3a","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/f3c1d4c3d56eb3a","status":"passed","time":{"start":1728339488684,"stop":1728339493720,"duration":5036}},{"uid":"2dd44a252cc2f825","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/2dd44a252cc2f825","status":"passed","time":{"start":1728338694535,"stop":1728338700768,"duration":6233}},{"uid":"402d377940cd3673","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/402d377940cd3673","status":"passed","time":{"start":1728335553223,"stop":1728335559586,"duration":6363}},{"uid":"21315a0f52700efe","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/21315a0f52700efe","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728327832971,"stop":1728327832971,"duration":0}},{"uid":"5fd9aba58fb0b313","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/5fd9aba58fb0b313","status":"passed","time":{"start":1728319650706,"stop":1728319656926,"duration":6220}},{"uid":"a11885d564ab43f4","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/a11885d564ab43f4","status":"passed","time":{"start":1728319650706,"stop":1728319656926,"duration":6220}},{"uid":"b410a8e543a53c3d","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/b410a8e543a53c3d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728316054714,"stop":1728316054714,"duration":0}},{"uid":"320ecb050b7b8aee","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/320ecb050b7b8aee","status":"passed","time":{"start":1728312274651,"stop":1728312279833,"duration":5182}},{"uid":"4be5572781fffd99","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/4be5572781fffd99","status":"passed","time":{"start":1728125269407,"stop":1728125274988,"duration":5581}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"dcc98b5d08ee116c.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}