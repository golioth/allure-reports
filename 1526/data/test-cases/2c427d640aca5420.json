{"uid":"2c427d640aca5420","name":"test_object_return","fullName":"tests.hil.tests.rpc.test_rpc#test_object_return","historyId":"472c02b868827006340ecb95f4740f5d","time":{"start":1727916438717,"stop":1727916446443,"duration":7726},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffba496050>\nmethod = 'object_return_type', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffba442b90>\ndevice = <golioth.golioth.Device object at 0xffffba4961d0>\n\n    async def test_object_return(board, device):\n>       rsp = await device.rpc.object_return_type()\n\ntests/hil/tests/rpc/test_rpc.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffba496050>\nmethod = 'object_return_type', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727916386068,"stop":1727916386068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727916386069,"stop":1727916386069,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727916386070,"stop":1727916386071,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727916386070,"stop":1727916386070,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727916386071,"stop":1727916386071,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727916386072,"stop":1727916386072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727916386073,"stop":1727916386073,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727916386073,"stop":1727916386073,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727916386074,"stop":1727916386074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727916386075,"stop":1727916386076,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727916386075,"stop":1727916386075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727916386076,"stop":1727916386076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727916386077,"stop":1727916386539,"duration":462},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727916386540,"stop":1727916401281,"duration":14741},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727916401284,"stop":1727916402821,"duration":1537},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727916402822,"stop":1727916411641,"duration":8819},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727916508313,"stop":1727916508313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727916508316,"stop":1727916508952,"duration":636},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727916508956,"stop":1727916508993,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727916508997,"stop":1727916509002,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"35af3d289b2e"},{"name":"thread","value":"305-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":11,"skipped":0,"passed":48,"unknown":0,"total":59},"items":[{"uid":"e39c9fb94131f8fb","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/e39c9fb94131f8fb","status":"passed","time":{"start":1727907796753,"stop":1727907797753,"duration":1000}},{"uid":"561d75b97cf436d5","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/561d75b97cf436d5","status":"passed","time":{"start":1727833193682,"stop":1727833196217,"duration":2535}},{"uid":"45f9e1dfa45e6e04","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/45f9e1dfa45e6e04","status":"passed","time":{"start":1727830067964,"stop":1727830069080,"duration":1116}},{"uid":"38278dc9b53999f6","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/38278dc9b53999f6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727814292519,"stop":1727814292519,"duration":0}},{"uid":"9e3b8fabadf81d72","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/9e3b8fabadf81d72","status":"passed","time":{"start":1727815643850,"stop":1727815644843,"duration":993}},{"uid":"34e72d61a5aa4a70","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/34e72d61a5aa4a70","status":"passed","time":{"start":1727798246632,"stop":1727798247827,"duration":1195}},{"uid":"ae7696ee0141c130","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/ae7696ee0141c130","status":"passed","time":{"start":1727810838420,"stop":1727810839162,"duration":742}},{"uid":"ee32600383a21971","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/ee32600383a21971","status":"passed","time":{"start":1727806424066,"stop":1727806425366,"duration":1300}},{"uid":"f5a6b9f5e3cfb815","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/f5a6b9f5e3cfb815","status":"passed","time":{"start":1727798246632,"stop":1727798247827,"duration":1195}},{"uid":"baa165c6c6df48e5","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/baa165c6c6df48e5","status":"passed","time":{"start":1727797434255,"stop":1727797435685,"duration":1430}},{"uid":"cb882874cc40722c","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/cb882874cc40722c","status":"passed","time":{"start":1727789179412,"stop":1727789180642,"duration":1230}},{"uid":"5b5dfb5d12eb1ce4","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/5b5dfb5d12eb1ce4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784984209,"stop":1727784984209,"duration":0}},{"uid":"cd1276e2fdca2626","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/cd1276e2fdca2626","status":"passed","time":{"start":1727774415631,"stop":1727774417133,"duration":1502}},{"uid":"90a86659fda31ecc","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/90a86659fda31ecc","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727779578181,"stop":1727779578181,"duration":0}},{"uid":"165a25fc34dcc8a5","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/165a25fc34dcc8a5","status":"passed","time":{"start":1727777101222,"stop":1727777102245,"duration":1023}},{"uid":"35f6570eb85863a3","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/35f6570eb85863a3","status":"passed","time":{"start":1727774415631,"stop":1727774417133,"duration":1502}},{"uid":"18a0b6e791f1c0ed","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/18a0b6e791f1c0ed","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727771138047,"stop":1727771138047,"duration":0}},{"uid":"37b16883a02f7c6e","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/37b16883a02f7c6e","status":"passed","time":{"start":1727768935170,"stop":1727768936365,"duration":1195}},{"uid":"d58909af84073158","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/d58909af84073158","status":"passed","time":{"start":1727764658641,"stop":1727764660969,"duration":2328}},{"uid":"b6f5edd89267d503","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/b6f5edd89267d503","status":"passed","time":{"start":1727763720025,"stop":1727763721429,"duration":1404}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"2c427d640aca5420.json","parameterValues":["'nrf9160dk'","'zephyr'"]}