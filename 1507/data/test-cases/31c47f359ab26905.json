{"uid":"31c47f359ab26905","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"107219ae297537605b8b92c8950f3c78","time":{"start":1727785706638,"stop":1727785706638,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_rpc>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:63: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727785706641,"stop":1727785706641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727785706642,"stop":1727785706642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727785706642,"stop":1727785706642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727785706643,"stop":1727785706643,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1727785706644,"stop":1727785706644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1727785706644,"stop":1727785706646,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727785706647,"stop":1727785706647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727785706647,"stop":1727785706648,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727785706648,"stop":1727785707199,"duration":551},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727785707199,"stop":1727785708165,"duration":966},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1727785708165,"stop":1727785716085,"duration":7920},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1727785716085,"stop":1727785736116,"duration":20031},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 63, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_rpc>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:63: Failed","steps":[],"attachments":[{"uid":"fda6bf8878ce3b3c","name":"log","source":"fda6bf8878ce3b3c.txt","type":"text/plain","size":9458}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1727785736436,"stop":1727785736614,"duration":178},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727785736616,"stop":1727785737064,"duration":448},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727785737066,"stop":1727785737068,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1727785737073,"stop":1727785737073,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"43c1465d685a"},{"name":"thread","value":"468-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":8,"skipped":0,"passed":34,"unknown":0,"total":43},"items":[{"uid":"63155cc87e3b10","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/63155cc87e3b10","status":"passed","time":{"start":1727774998867,"stop":1727775008398,"duration":9531}},{"uid":"49155ab2b59f6329","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/49155ab2b59f6329","status":"passed","time":{"start":1727780395356,"stop":1727780405306,"duration":9950}},{"uid":"4eb7fb0efb00e8c4","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/4eb7fb0efb00e8c4","status":"passed","time":{"start":1727777825492,"stop":1727777831957,"duration":6465}},{"uid":"aaa7c3d8485d771f","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/aaa7c3d8485d771f","status":"passed","time":{"start":1727774998867,"stop":1727775008398,"duration":9531}},{"uid":"5ca11f59b3608d98","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/5ca11f59b3608d98","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727771779903,"stop":1727771872661,"duration":92758}},{"uid":"8663bf00c033da2d","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/8663bf00c033da2d","status":"passed","time":{"start":1727770091972,"stop":1727770101768,"duration":9796}},{"uid":"cc493061b76057ed","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/cc493061b76057ed","status":"passed","time":{"start":1727765274570,"stop":1727765285329,"duration":10759}},{"uid":"f247e56b8138b8d6","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/f247e56b8138b8d6","status":"passed","time":{"start":1727764237611,"stop":1727764248184,"duration":10573}},{"uid":"c8cef302031b27de","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/c8cef302031b27de","status":"passed","time":{"start":1727760500562,"stop":1727760511183,"duration":10621}},{"uid":"b7b626cd525dd912","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/b7b626cd525dd912","status":"passed","time":{"start":1727744585479,"stop":1727744596420,"duration":10941}},{"uid":"2242b29a203f5bb1","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/2242b29a203f5bb1","status":"passed","time":{"start":1727732233372,"stop":1727732243640,"duration":10268}},{"uid":"9074e156d430267d","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/9074e156d430267d","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727658142060,"stop":1727658234997,"duration":92937}},{"uid":"288b8db280056324","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/288b8db280056324","status":"passed","time":{"start":1727571781314,"stop":1727571790806,"duration":9492}},{"uid":"32467b8ae6f7d50e","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/32467b8ae6f7d50e","status":"passed","time":{"start":1727546710686,"stop":1727546721286,"duration":10600}},{"uid":"a0a313f4db4ecdf1","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/a0a313f4db4ecdf1","status":"passed","time":{"start":1727545985460,"stop":1727545994920,"duration":9460}},{"uid":"189344e3bd26642","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/189344e3bd26642","status":"passed","time":{"start":1727544808714,"stop":1727544818738,"duration":10024}},{"uid":"a9ad50b07a193228","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/a9ad50b07a193228","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727485107784,"stop":1727485200572,"duration":92788}},{"uid":"e3d8f75968761e77","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/e3d8f75968761e77","status":"passed","time":{"start":1727477106541,"stop":1727477116146,"duration":9605}},{"uid":"393adf2f33398e27","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/393adf2f33398e27","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727464946851,"stop":1727465039638,"duration":92787}},{"uid":"39b3656dead441d9","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/39b3656dead441d9","status":"passed","time":{"start":1727462514133,"stop":1727462523843,"duration":9710}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"31c47f359ab26905.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}