{"uid":"616d0cd6aa4ce31c","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"7b5bd2e87b0538b1f5ac1141f1902779","time":{"start":1727813915538,"stop":1727813971426,"duration":55888},"status":"failed","statusMessage":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb20aaad0>\ndevice = <golioth.golioth.Device object at 0xffffb2080390>\nproject = <golioth.golioth.Project object at 0xffffb21c6b90>\nreleases = {'test_blocks': Release <66fc5912e2ec7f08ac9f7344, release_tags=[], device_tags=['66fc5911e2ec7f08ac9f7341'], artifact..., release_tags=[], device_tags=['66fc5911e2ec7f08ac9f7341'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 7 == 6\nE            +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727813859077,"stop":1727813859077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727813859079,"stop":1727813859079,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727813859080,"stop":1727813859080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727813859081,"stop":1727813859081,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727813859082,"stop":1727813859082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727813859083,"stop":1727813859084,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727813859085,"stop":1727813859085,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727813859086,"stop":1727813859086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727813859087,"stop":1727813859087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727813859088,"stop":1727813859088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727813859089,"stop":1727813859089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727813859090,"stop":1727813859090,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727813859091,"stop":1727813899915,"duration":40824},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727813899917,"stop":1727813900391,"duration":474},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727813900392,"stop":1727813901181,"duration":789},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727813901182,"stop":1727813904167,"duration":2985},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727813904168,"stop":1727813904693,"duration":525},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727813904694,"stop":1727813905447,"duration":753},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727813905447,"stop":1727813907039,"duration":1592},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727813915535,"stop":1727813915536,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb20aaad0>\ndevice = <golioth.golioth.Device object at 0xffffb2080390>\nproject = <golioth.golioth.Project object at 0xffffb21c6b90>\nreleases = {'test_blocks': Release <66fc5912e2ec7f08ac9f7344, release_tags=[], device_tags=['66fc5911e2ec7f08ac9f7341'], artifact..., release_tags=[], device_tags=['66fc5911e2ec7f08ac9f7341'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 7 == 6\nE            +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"14ed5406daa2344f","name":"stdout","source":"14ed5406daa2344f.txt","type":"text/plain","size":2330}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727813971576,"stop":1727813972399,"duration":823},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727813972402,"stop":1727813973837,"duration":1435},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727813973839,"stop":1727813974582,"duration":743},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727813974584,"stop":1727813974584,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727813974586,"stop":1727813974586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727813974588,"stop":1727813974986,"duration":398},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727813974988,"stop":1727813974989,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727813974990,"stop":1727813974994,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"75fe668d13ed"},{"name":"thread","value":"245-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":46,"unknown":0,"total":53},"items":[{"uid":"daf568b5f0abcc1f","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/daf568b5f0abcc1f","status":"passed","time":{"start":1727795387941,"stop":1727795466384,"duration":78443}},{"uid":"a6422fca9a543c86","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/a6422fca9a543c86","status":"passed","time":{"start":1727809599606,"stop":1727809677102,"duration":77496}},{"uid":"846cb7dcb5849515","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/846cb7dcb5849515","status":"passed","time":{"start":1727805360036,"stop":1727805438659,"duration":78623}},{"uid":"4cf0640c44657160","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/4cf0640c44657160","status":"passed","time":{"start":1727795387941,"stop":1727795466384,"duration":78443}},{"uid":"3b06cf446da1f40c","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/3b06cf446da1f40c","status":"passed","time":{"start":1727794393299,"stop":1727794470678,"duration":77379}},{"uid":"28e747e34262c8e2","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/28e747e34262c8e2","status":"passed","time":{"start":1727786946982,"stop":1727787024469,"duration":77487}},{"uid":"d94dd7579f6c44b0","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/d94dd7579f6c44b0","status":"passed","time":{"start":1727783177393,"stop":1727783255224,"duration":77831}},{"uid":"7118c890cd5329c3","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/7118c890cd5329c3","status":"passed","time":{"start":1727781739340,"stop":1727781816875,"duration":77535}},{"uid":"e5055a9c2b8a23f4","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/e5055a9c2b8a23f4","status":"passed","time":{"start":1727778829205,"stop":1727778909903,"duration":80698}},{"uid":"6087ac83d7011bf1","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/6087ac83d7011bf1","status":"passed","time":{"start":1727775597776,"stop":1727775678328,"duration":80552}},{"uid":"24b55b007e6709a3","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/24b55b007e6709a3","status":"passed","time":{"start":1727768470461,"stop":1727768556335,"duration":85874}},{"uid":"d44aa873ef70c2b1","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/d44aa873ef70c2b1","status":"failed","statusDetails":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","time":{"start":1727766737692,"stop":1727766774899,"duration":37207}},{"uid":"4d7da57f2d3e89ee","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/4d7da57f2d3e89ee","status":"passed","time":{"start":1727762638397,"stop":1727762718293,"duration":79896}},{"uid":"2522eb522a3d835","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/2522eb522a3d835","status":"passed","time":{"start":1727761343447,"stop":1727761424148,"duration":80701}},{"uid":"de421bbbb8c710f4","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/de421bbbb8c710f4","status":"passed","time":{"start":1727758326446,"stop":1727758407362,"duration":80916}},{"uid":"df00f93adc8632d9","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/df00f93adc8632d9","status":"passed","time":{"start":1727742863131,"stop":1727742940677,"duration":77546}},{"uid":"d177721f2d4e2642","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/d177721f2d4e2642","status":"passed","time":{"start":1727730423014,"stop":1727730500483,"duration":77469}},{"uid":"3827f0f9bfc23d79","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/3827f0f9bfc23d79","status":"passed","time":{"start":1727656377023,"stop":1727656454888,"duration":77865}},{"uid":"335181ada7ad89df","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/335181ada7ad89df","status":"passed","time":{"start":1727570042252,"stop":1727570119672,"duration":77420}},{"uid":"598c70548cd9eec4","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/598c70548cd9eec4","status":"passed","time":{"start":1727543387053,"stop":1727543464554,"duration":77501}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"616d0cd6aa4ce31c.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}