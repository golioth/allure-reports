{"uid":"521e827ec766c5c6","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1728074524930,"stop":1728074562864,"duration":37934},"status":"failed","statusMessage":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff8beca910>\ndevice = <golioth.golioth.Device object at 0xffff8be4f390>\nproject = <golioth.golioth.Project object at 0xffff8bfdfc50>\nreleases = {'test_blocks': Release <6700530d1b3c084061cd1241, release_tags=[], device_tags=['6700530b1b3c084061cd123e'], artifact..., release_tags=[], device_tags=['6700530b1b3c084061cd123e'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 4 == 3\nE            +  where 4 = int('4')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728074485140,"stop":1728074485140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728074485141,"stop":1728074485141,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728074485142,"stop":1728074485142,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728074485143,"stop":1728074485143,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728074485144,"stop":1728074485144,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728074485144,"stop":1728074485145,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728074485145,"stop":1728074485146,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728074485146,"stop":1728074485147,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728074485147,"stop":1728074485148,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728074485148,"stop":1728074485149,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728074485149,"stop":1728074485149,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728074485150,"stop":1728074485150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728074485151,"stop":1728074499960,"duration":14809},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728074499963,"stop":1728074500496,"duration":533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728074500496,"stop":1728074501638,"duration":1142},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728074501639,"stop":1728074506683,"duration":5044},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1728074506685,"stop":1728074507241,"duration":556},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1728074507242,"stop":1728074508351,"duration":1109},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1728074508352,"stop":1728074510350,"duration":1998},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1728074524927,"stop":1728074524927,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff8beca910>\ndevice = <golioth.golioth.Device object at 0xffff8be4f390>\nproject = <golioth.golioth.Project object at 0xffff8bfdfc50>\nreleases = {'test_blocks': Release <6700530d1b3c084061cd1241, release_tags=[], device_tags=['6700530b1b3c084061cd123e'], artifact..., release_tags=[], device_tags=['6700530b1b3c084061cd123e'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 4 == 3\nE            +  where 4 = int('4')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"ec4f8003fa023996","name":"stdout","source":"ec4f8003fa023996.txt","type":"text/plain","size":2329}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1728074563068,"stop":1728074564227,"duration":1159},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1728074564229,"stop":1728074566372,"duration":2143},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1728074566376,"stop":1728074567657,"duration":1281},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1728074567660,"stop":1728074567660,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728074567662,"stop":1728074567662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728074567664,"stop":1728074568126,"duration":462},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728074568128,"stop":1728074568128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728074568130,"stop":1728074568148,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"8c567d96383e"},{"name":"thread","value":"286-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":24,"skipped":0,"passed":55,"unknown":0,"total":86},"items":[{"uid":"12f613ac7efa9940","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/12f613ac7efa9940","status":"passed","time":{"start":1728072500053,"stop":1728072583306,"duration":83253}},{"uid":"f25e54c633ea717e","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/f25e54c633ea717e","status":"passed","time":{"start":1728067562022,"stop":1728067644739,"duration":82717}},{"uid":"5009f37e8311d633","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/5009f37e8311d633","status":"passed","time":{"start":1728051623829,"stop":1728051712637,"duration":88808}},{"uid":"6fd7305e744fc70e","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/6fd7305e744fc70e","status":"passed","time":{"start":1728060428199,"stop":1728060511004,"duration":82805}},{"uid":"c41dbf227e7051e4","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/c41dbf227e7051e4","status":"passed","time":{"start":1728065449985,"stop":1728065532854,"duration":82869}},{"uid":"2f6af44a763d7499","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/2f6af44a763d7499","status":"passed","time":{"start":1728049250117,"stop":1728049333506,"duration":83389}},{"uid":"ff634791df0db9b6","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/ff634791df0db9b6","status":"passed","time":{"start":1728027697589,"stop":1728027780910,"duration":83321}},{"uid":"4d2f2e95ecf1c433","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/4d2f2e95ecf1c433","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728022189838,"stop":1728022189838,"duration":0}},{"uid":"735d2f620645b953","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/735d2f620645b953","status":"passed","time":{"start":1728002633649,"stop":1728002717067,"duration":83418}},{"uid":"534d491c2097d734","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/534d491c2097d734","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727992146505,"stop":1727992146505,"duration":0}},{"uid":"b6747d493d52e79a","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/b6747d493d52e79a","status":"passed","time":{"start":1727992234815,"stop":1727992316600,"duration":81785}},{"uid":"82b98d2676d34a24","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/82b98d2676d34a24","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727987911535,"stop":1727987911535,"duration":0}},{"uid":"ce7afe62260c5f5f","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/ce7afe62260c5f5f","status":"failed","statusDetails":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","time":{"start":1727984714121,"stop":1727984743504,"duration":29383}},{"uid":"f80f218f5243ddf2","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/f80f218f5243ddf2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727978775595,"stop":1727978796186,"duration":20591}},{"uid":"b89dd999bdad4d64","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/b89dd999bdad4d64","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727976622639,"stop":1727976622639,"duration":0}},{"uid":"5c75253470e909d0","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/5c75253470e909d0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727973929707,"stop":1727973962913,"duration":33206}},{"uid":"86c13232b1e34abf","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/86c13232b1e34abf","status":"passed","time":{"start":1727971201187,"stop":1727971285304,"duration":84117}},{"uid":"1e664d2a08aef8d8","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/1e664d2a08aef8d8","status":"passed","time":{"start":1727958604219,"stop":1727958691787,"duration":87568}},{"uid":"4a43227703e843a7","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/4a43227703e843a7","status":"passed","time":{"start":1727948771409,"stop":1727948854363,"duration":82954}},{"uid":"8ff4ac47f1efecdc","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/8ff4ac47f1efecdc","status":"passed","time":{"start":1727954221752,"stop":1727954309158,"duration":87406}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"521e827ec766c5c6.json","parameterValues":["'nrf9160dk'","'zephyr'"]}