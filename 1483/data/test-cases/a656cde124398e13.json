{"uid":"a656cde124398e13","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1727764371677,"stop":1727764416871,"duration":45194},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff8baf17d0>\ndevice = <golioth.golioth.Device object at 0xffff8bab4710>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727764334355,"stop":1727764334355,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727764334356,"stop":1727764334356,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727764334356,"stop":1727764334356,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1727764334357,"stop":1727764334358,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727764334357,"stop":1727764334357,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1727764334358,"stop":1727764334360,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727764334361,"stop":1727764334361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727764334361,"stop":1727764334361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727764334362,"stop":1727764334828,"duration":466},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727764334829,"stop":1727764335771,"duration":942},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1727764335772,"stop":1727764371027,"duration":35255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1727764371028,"stop":1727764371674,"duration":646},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff8baf17d0>\ndevice = <golioth.golioth.Device object at 0xffff8bab4710>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"3c25265f1059206e","name":"log","source":"3c25265f1059206e.txt","type":"text/plain","size":31565}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1727764417129,"stop":1727764417143,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727764417145,"stop":1727764417602,"duration":457},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727764417604,"stop":1727764417606,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1727764417611,"stop":1727764417611,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"0444874c0df7"},{"name":"thread","value":"479-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":29,"unknown":0,"total":35},"items":[{"uid":"b3af0056ae83324","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/b3af0056ae83324","status":"passed","time":{"start":1727760523952,"stop":1727760564584,"duration":40632}},{"uid":"ab82139ce1b461f9","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/ab82139ce1b461f9","status":"passed","time":{"start":1727744893235,"stop":1727744933363,"duration":40128}},{"uid":"9ef52833a6b641b8","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/9ef52833a6b641b8","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727732629179,"stop":1727732672839,"duration":43660}},{"uid":"d961cebe13acf926","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/d961cebe13acf926","status":"passed","time":{"start":1727658452581,"stop":1727658493863,"duration":41282}},{"uid":"8e6e6aa4c1663f2f","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/8e6e6aa4c1663f2f","status":"passed","time":{"start":1727572052144,"stop":1727572092209,"duration":40065}},{"uid":"ac835f3b42a9e3e5","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/ac835f3b42a9e3e5","status":"passed","time":{"start":1727547500437,"stop":1727547540692,"duration":40255}},{"uid":"445fb1098d9df134","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/445fb1098d9df134","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727544575132,"stop":1727544619661,"duration":44529}},{"uid":"1187e5b57ead696a","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/1187e5b57ead696a","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1727544300449,"stop":1727544345636,"duration":45187}},{"uid":"3c5cda2b5dbc1d11","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/3c5cda2b5dbc1d11","status":"passed","time":{"start":1727485666406,"stop":1727485707744,"duration":41338}},{"uid":"9585ec31e52fbf23","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/9585ec31e52fbf23","status":"passed","time":{"start":1727477038338,"stop":1727477078790,"duration":40452}},{"uid":"d8a254a3d5312e5a","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/d8a254a3d5312e5a","status":"passed","time":{"start":1727462808269,"stop":1727462848211,"duration":39942}},{"uid":"e4ed79234ef0c2bd","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/e4ed79234ef0c2bd","status":"passed","time":{"start":1727462808269,"stop":1727462848211,"duration":39942}},{"uid":"29e161687ff5017c","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/29e161687ff5017c","status":"passed","time":{"start":1727365588108,"stop":1727365627933,"duration":39825}},{"uid":"b3965a8d8c689f97","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/b3965a8d8c689f97","status":"passed","time":{"start":1727455235444,"stop":1727455275628,"duration":40184}},{"uid":"91b189440cb5b26a","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/91b189440cb5b26a","status":"passed","time":{"start":1727390722522,"stop":1727390763642,"duration":41120}},{"uid":"f1c7ff4e388cb5f","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/f1c7ff4e388cb5f","status":"passed","time":{"start":1727366438087,"stop":1727366478335,"duration":40248}},{"uid":"2de6eb98ee1d498","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/2de6eb98ee1d498","status":"passed","time":{"start":1727398755243,"stop":1727398843143,"duration":87900}},{"uid":"dc8b459c2e48e939","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/dc8b459c2e48e939","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1727395065314,"stop":1727395110643,"duration":45329}},{"uid":"2b7fea57535f36bb","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/2b7fea57535f36bb","status":"passed","time":{"start":1727390244961,"stop":1727390286062,"duration":41101}},{"uid":"76d8bdadd33ea62","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/76d8bdadd33ea62","status":"passed","time":{"start":1727390722522,"stop":1727390763642,"duration":41120}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"a656cde124398e13.json","parameterValues":["'rak5010'","'zephyr'"]}