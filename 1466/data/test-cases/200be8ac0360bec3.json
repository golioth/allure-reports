{"uid":"200be8ac0360bec3","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1727460899575,"stop":1727460952341,"duration":52766},"status":"failed","statusMessage":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa01973d0>\ndevice = <golioth.golioth.Device object at 0xffffa0140f90>\nproject = <golioth.golioth.Project object at 0xffffa02aa710>\nreleases = {'test_blocks': Release <66f6f6170e704510295c8c53, release_tags=[], device_tags=['66f6f6150e704510295c8c50'], artifact..., release_tags=[], device_tags=['66f6f6150e704510295c8c50'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 7 == 6\nE            +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727460839948,"stop":1727460839948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727460839949,"stop":1727460839949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727460839950,"stop":1727460839950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727460839951,"stop":1727460839951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727460839952,"stop":1727460839952,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727460839953,"stop":1727460839954,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727460839953,"stop":1727460839953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727460839954,"stop":1727460839954,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727460839955,"stop":1727460839956,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727460839955,"stop":1727460839955,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727460839956,"stop":1727460839956,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727460839957,"stop":1727460879506,"duration":39549},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727460839957,"stop":1727460839957,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727460879508,"stop":1727460880074,"duration":566},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727460880075,"stop":1727460881351,"duration":1276},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727460881352,"stop":1727460884586,"duration":3234},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727460884587,"stop":1727460885337,"duration":750},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727460885337,"stop":1727460886131,"duration":794},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727460886132,"stop":1727460888664,"duration":2532},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727460899572,"stop":1727460899572,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa01973d0>\ndevice = <golioth.golioth.Device object at 0xffffa0140f90>\nproject = <golioth.golioth.Project object at 0xffffa02aa710>\nreleases = {'test_blocks': Release <66f6f6170e704510295c8c53, release_tags=[], device_tags=['66f6f6150e704510295c8c50'], artifact..., release_tags=[], device_tags=['66f6f6150e704510295c8c50'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 7 == 6\nE            +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"ab117ced27f98935","name":"stdout","source":"ab117ced27f98935.txt","type":"text/plain","size":2017}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727460952635,"stop":1727460953733,"duration":1098},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727460953735,"stop":1727460955376,"duration":1641},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727460955378,"stop":1727460956620,"duration":1242},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727460956622,"stop":1727460956622,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727460956624,"stop":1727460956624,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727460956626,"stop":1727460957124,"duration":498},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727460957126,"stop":1727460957126,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727460957128,"stop":1727460957135,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"a7c967ca07fb"},{"name":"thread","value":"261-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":10,"broken":4,"skipped":0,"passed":14,"unknown":0,"total":28},"items":[{"uid":"7a40a1ded70f9dec","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/7a40a1ded70f9dec","status":"failed","statusDetails":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","time":{"start":1727460899575,"stop":1727460952341,"duration":52766}},{"uid":"94e1945a180b6ba2","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/94e1945a180b6ba2","status":"passed","time":{"start":1727455494964,"stop":1727455575571,"duration":80607}},{"uid":"9067d7f12ca64e84","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/9067d7f12ca64e84","status":"passed","time":{"start":1727454739746,"stop":1727454819653,"duration":79907}},{"uid":"cacd4f8752bca040","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/cacd4f8752bca040","status":"passed","time":{"start":1727387603229,"stop":1727387681660,"duration":78431}},{"uid":"f6bed1c797c18ffd","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/f6bed1c797c18ffd","status":"passed","time":{"start":1727362800053,"stop":1727362877009,"duration":76956}},{"uid":"994f82f5006d7d04","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/994f82f5006d7d04","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727397127640,"stop":1727397138460,"duration":10820}},{"uid":"db0919173c0ca491","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/db0919173c0ca491","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727394175034,"stop":1727394188898,"duration":13864}},{"uid":"481685327acf0692","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/481685327acf0692","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1727387526025,"stop":1727387548609,"duration":22584}},{"uid":"69b9795171dd120e","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/69b9795171dd120e","status":"passed","time":{"start":1727387603229,"stop":1727387681660,"duration":78431}},{"uid":"c22ddeda514e2410","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/c22ddeda514e2410","status":"passed","time":{"start":1727383993057,"stop":1727384070508,"duration":77451}},{"uid":"e0d77cfbc1eaf29a","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/e0d77cfbc1eaf29a","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727381267125,"stop":1727381279712,"duration":12587}},{"uid":"cdd8b61a44b14a4b","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/cdd8b61a44b14a4b","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727378562513,"stop":1727378575319,"duration":12806}},{"uid":"190a722bd2adb533","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/190a722bd2adb533","status":"passed","time":{"start":1727373855519,"stop":1727373935850,"duration":80331}},{"uid":"eb03106fde6e4955","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/eb03106fde6e4955","status":"passed","time":{"start":1727370690086,"stop":1727370767490,"duration":77404}},{"uid":"6dab3e8df8bba6c5","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/6dab3e8df8bba6c5","status":"passed","time":{"start":1727363858775,"stop":1727363939319,"duration":80544}},{"uid":"ea9d4567317c389a","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/ea9d4567317c389a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727361914343,"stop":1727361934713,"duration":20370}},{"uid":"8d60019c094e547","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/8d60019c094e547","status":"passed","time":{"start":1727362800053,"stop":1727362877009,"duration":76956}},{"uid":"a4ed5a4f2005c706","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/a4ed5a4f2005c706","status":"passed","time":{"start":1727359173987,"stop":1727359250743,"duration":76756}},{"uid":"8781709252d99d18","reportUrl":"https://golioth.github.io/allure-reports/1432//#testresult/8781709252d99d18","status":"passed","time":{"start":1727313349426,"stop":1727313427118,"duration":77692}},{"uid":"abb47e5291797ce3","reportUrl":"https://golioth.github.io/allure-reports/1429//#testresult/abb47e5291797ce3","status":"passed","time":{"start":1727310713770,"stop":1727310790947,"duration":77177}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"200be8ac0360bec3.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}