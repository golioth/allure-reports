{"uid":"58ab243e3e41bf25","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"13e62dad4e4f632232e649129e1e91d5","time":{"start":1727461892138,"stop":1727461897507,"duration":5369},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffb27cf190>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffb2665d10>\ndevice = <golioth.golioth.Device object at 0xffffb26510d0>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffb27cf190>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727461834921,"stop":1727461834921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727461834922,"stop":1727461834922,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727461834923,"stop":1727461834923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727461834924,"stop":1727461834924,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727461834925,"stop":1727461834925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727461834925,"stop":1727461834925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727461834926,"stop":1727461834926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727461834926,"stop":1727461834926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727461834927,"stop":1727461834927,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727461834927,"stop":1727461834927,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727461834928,"stop":1727461834928,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727461834928,"stop":1727461834928,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727461834929,"stop":1727461835418,"duration":489},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727461835419,"stop":1727461850260,"duration":14841},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727461850263,"stop":1727461852237,"duration":1974},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727461852238,"stop":1727461856962,"duration":4724},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727461898620,"stop":1727461898621,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727461898623,"stop":1727461899224,"duration":601},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727461899226,"stop":1727461899258,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727461899260,"stop":1727461899263,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"54399915ac5c"},{"name":"thread","value":"301-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":17,"unknown":0,"total":27},"items":[{"uid":"552122b30ac380f6","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/552122b30ac380f6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727458498346,"stop":1727458498346,"duration":0}},{"uid":"c3add1533bcd8b04","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/c3add1533bcd8b04","status":"passed","time":{"start":1727455608897,"stop":1727455629159,"duration":20262}},{"uid":"ee2b1db4ec1f60b4","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/ee2b1db4ec1f60b4","status":"passed","time":{"start":1727457107972,"stop":1727457127761,"duration":19789}},{"uid":"dd6029daff137f36","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/dd6029daff137f36","status":"passed","time":{"start":1727454083231,"stop":1727454103312,"duration":20081}},{"uid":"6daa25b21820ee03","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/6daa25b21820ee03","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727399062916,"stop":1727399068273,"duration":5357}},{"uid":"91aeaa27a4623c5c","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/91aeaa27a4623c5c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727394017479,"stop":1727394017479,"duration":0}},{"uid":"50dd27d61bbbe8d3","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/50dd27d61bbbe8d3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727389461053,"stop":1727389461053,"duration":0}},{"uid":"8ca68280d956b4b5","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/8ca68280d956b4b5","status":"passed","time":{"start":1727389756500,"stop":1727389776662,"duration":20162}},{"uid":"1b2bef119977774","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/1b2bef119977774","status":"passed","time":{"start":1727385847013,"stop":1727385866829,"duration":19816}},{"uid":"e6267285567038e","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/e6267285567038e","status":"passed","time":{"start":1727382433590,"stop":1727382454909,"duration":21319}},{"uid":"6e6d4730d57ae131","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/6e6d4730d57ae131","status":"passed","time":{"start":1727380085718,"stop":1727380105442,"duration":19724}},{"uid":"eecf0241dadba18a","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/eecf0241dadba18a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727376169706,"stop":1727376169706,"duration":0}},{"uid":"674aae21b1f0d377","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/674aae21b1f0d377","status":"passed","time":{"start":1727372413302,"stop":1727372433446,"duration":20144}},{"uid":"5a064bb631fa82b8","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/5a064bb631fa82b8","status":"passed","time":{"start":1727368897522,"stop":1727368917270,"duration":19748}},{"uid":"51821e0775f982a6","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/51821e0775f982a6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727364782410,"stop":1727364782410,"duration":0}},{"uid":"b97d819b39198fa4","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/b97d819b39198fa4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727364875137,"stop":1727364875137,"duration":0}},{"uid":"617c4880a7a54a1d","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/617c4880a7a54a1d","status":"passed","time":{"start":1727360197201,"stop":1727360217869,"duration":20668}},{"uid":"14bc3e2ba79cdfbd","reportUrl":"https://golioth.github.io/allure-reports/1432//#testresult/14bc3e2ba79cdfbd","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727314881615,"stop":1727314886974,"duration":5359}},{"uid":"8f95b0dd2136224f","reportUrl":"https://golioth.github.io/allure-reports/1429//#testresult/8f95b0dd2136224f","status":"passed","time":{"start":1727311751377,"stop":1727311772073,"duration":20696}},{"uid":"71cbb91a7a7926fd","reportUrl":"https://golioth.github.io/allure-reports/1428//#testresult/71cbb91a7a7926fd","status":"passed","time":{"start":1727307831376,"stop":1727307853678,"duration":22302}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"58ab243e3e41bf25.json","parameterValues":["'nrf9160dk'","'zephyr'"]}