{"uid":"10f82ab50b39bf7c","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"fa8c1766fb90779ba45428eac4722ac6","time":{"start":1728312378526,"stop":1728312391559,"duration":13033},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff7e4157d0>\ndevice = <golioth.golioth.Device object at 0xffff7e2646d0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff7e2646d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728312335563,"stop":1728312335563,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728312335564,"stop":1728312335565,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728312335566,"stop":1728312335566,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728312335567,"stop":1728312335567,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728312335567,"stop":1728312335567,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728312335568,"stop":1728312335569,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728312335568,"stop":1728312335568,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728312335570,"stop":1728312335570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728312335571,"stop":1728312335571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728312335572,"stop":1728312335572,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728312335573,"stop":1728312335573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728312335574,"stop":1728312335574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728312335574,"stop":1728312335965,"duration":391},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728312335966,"stop":1728312361306,"duration":25340},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728312361308,"stop":1728312362271,"duration":963},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728312362272,"stop":1728312373218,"duration":10946},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff7e4157d0>\ndevice = <golioth.golioth.Device object at 0xffff7e2646d0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff7e2646d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"cf0b6a532a4b2dd0","name":"stdout","source":"cf0b6a532a4b2dd0.txt","type":"text/plain","size":3561}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728312523592,"stop":1728312523593,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728312523595,"stop":1728312524091,"duration":496},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728312524093,"stop":1728312524094,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728312524097,"stop":1728312524099,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"b20f7c860467"},{"name":"thread","value":"262-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":1,"skipped":0,"passed":94,"unknown":0,"total":108},"items":[{"uid":"19ed665f88ff3177","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/19ed665f88ff3177","status":"passed","time":{"start":1728126927431,"stop":1728126940901,"duration":13470}},{"uid":"44168f87d898d3cf","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/44168f87d898d3cf","status":"passed","time":{"start":1728122304884,"stop":1728122318061,"duration":13177}},{"uid":"2411fe4c252e5188","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/2411fe4c252e5188","status":"passed","time":{"start":1728261403029,"stop":1728261415762,"duration":12733}},{"uid":"aea9627ffd3b59e1","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/aea9627ffd3b59e1","status":"passed","time":{"start":1728124403779,"stop":1728124416668,"duration":12889}},{"uid":"4fdbe4da8d994257","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/4fdbe4da8d994257","status":"passed","time":{"start":1728175037439,"stop":1728175050234,"duration":12795}},{"uid":"f32eacbcbbe2e4a3","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/f32eacbcbbe2e4a3","status":"passed","time":{"start":1728032973004,"stop":1728032986048,"duration":13044}},{"uid":"50dd8faa39743ccd","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/50dd8faa39743ccd","status":"passed","time":{"start":1728128384761,"stop":1728128397615,"duration":12854}},{"uid":"8601cf22e61ef2ed","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/8601cf22e61ef2ed","status":"passed","time":{"start":1728126927431,"stop":1728126940901,"duration":13470}},{"uid":"c81954c6c6215653","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/c81954c6c6215653","status":"passed","time":{"start":1728122304884,"stop":1728122318061,"duration":13177}},{"uid":"e71f05d60fa4559e","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/e71f05d60fa4559e","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728121568994,"stop":1728121584280,"duration":15286}},{"uid":"5c84dd5b979914a6","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/5c84dd5b979914a6","status":"passed","time":{"start":1728024795743,"stop":1728024808636,"duration":12893}},{"uid":"b8a00566c806b0e8","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/b8a00566c806b0e8","status":"passed","time":{"start":1728059123301,"stop":1728059136328,"duration":13027}},{"uid":"cf9b1ddc148426c6","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/cf9b1ddc148426c6","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728088539667,"stop":1728088553545,"duration":13878}},{"uid":"c677cd0c87cb3088","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/c677cd0c87cb3088","status":"passed","time":{"start":1728080548687,"stop":1728080561855,"duration":13168}},{"uid":"f8d0242340135015","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/f8d0242340135015","status":"passed","time":{"start":1728073718249,"stop":1728073732342,"duration":14093}},{"uid":"7cee85ede291b127","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/7cee85ede291b127","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728071485694,"stop":1728071499141,"duration":13447}},{"uid":"dcc01adf8d4f50bf","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/dcc01adf8d4f50bf","status":"passed","time":{"start":1728068514345,"stop":1728068527174,"duration":12829}},{"uid":"97d1b24378e91a63","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/97d1b24378e91a63","status":"passed","time":{"start":1728024795743,"stop":1728024808636,"duration":12893}},{"uid":"d8349a311b9b44b6","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/d8349a311b9b44b6","status":"passed","time":{"start":1728059123301,"stop":1728059136328,"duration":13027}},{"uid":"b6fcedd225dc20f1","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/b6fcedd225dc20f1","status":"passed","time":{"start":1728036059457,"stop":1728036072433,"duration":12976}}]},"tags":["mikes_orange_pi","esp-idf","anyio","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"10f82ab50b39bf7c.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}