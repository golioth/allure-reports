{"uid":"ce7afe62260c5f5f","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1727984714121,"stop":1727984743504,"duration":29383},"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffffa6da8b10>\ndevice = <golioth.golioth.Device object at 0xffffa6daa4d0>\nproject = <golioth.golioth.Project object at 0xffffa6f2b450>\nreleases = {'test_blocks': Release <66fef43b2860a8ee0e3040bf, release_tags=[], device_tags=['66fef4392860a8ee0e3040bb'], artifact..., release_tags=[], device_tags=['66fef4392860a8ee0e3040bb'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727984677718,"stop":1727984677718,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727984677719,"stop":1727984677719,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727984677720,"stop":1727984677720,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727984677721,"stop":1727984677721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727984677721,"stop":1727984677722,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727984677722,"stop":1727984677722,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727984677723,"stop":1727984677723,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727984677724,"stop":1727984677724,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727984677725,"stop":1727984677725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727984677725,"stop":1727984677726,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727984677726,"stop":1727984677726,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727984677727,"stop":1727984677727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727984677728,"stop":1727984692297,"duration":14569},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727984692299,"stop":1727984692904,"duration":605},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727984692905,"stop":1727984693905,"duration":1000},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727984693906,"stop":1727984696528,"duration":2622},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727984696530,"stop":1727984697105,"duration":575},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727984697106,"stop":1727984698044,"duration":938},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727984698045,"stop":1727984699878,"duration":1833},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727984714118,"stop":1727984714119,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffffa6da8b10>\ndevice = <golioth.golioth.Device object at 0xffffa6daa4d0>\nproject = <golioth.golioth.Project object at 0xffffa6f2b450>\nreleases = {'test_blocks': Release <66fef43b2860a8ee0e3040bf, release_tags=[], device_tags=['66fef4392860a8ee0e3040bb'], artifact..., release_tags=[], device_tags=['66fef4392860a8ee0e3040bb'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"9201ea2f0b2b1bf7","name":"stdout","source":"9201ea2f0b2b1bf7.txt","type":"text/plain","size":1932}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727984743683,"stop":1727984744862,"duration":1179},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727984744865,"stop":1727984746678,"duration":1813},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727984746680,"stop":1727984747625,"duration":945},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727984747628,"stop":1727984747628,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727984747629,"stop":1727984747630,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727984747632,"stop":1727984748128,"duration":496},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727984748130,"stop":1727984748131,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727984748133,"stop":1727984748136,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"6c3a2208b443"},{"name":"thread","value":"269-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":21,"skipped":0,"passed":46,"unknown":0,"total":73},"items":[{"uid":"f80f218f5243ddf2","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/f80f218f5243ddf2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727978775595,"stop":1727978796186,"duration":20591}},{"uid":"b89dd999bdad4d64","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/b89dd999bdad4d64","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727976622639,"stop":1727976622639,"duration":0}},{"uid":"5c75253470e909d0","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/5c75253470e909d0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727973929707,"stop":1727973962913,"duration":33206}},{"uid":"86c13232b1e34abf","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/86c13232b1e34abf","status":"passed","time":{"start":1727971201187,"stop":1727971285304,"duration":84117}},{"uid":"1e664d2a08aef8d8","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/1e664d2a08aef8d8","status":"passed","time":{"start":1727958604219,"stop":1727958691787,"duration":87568}},{"uid":"4a43227703e843a7","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/4a43227703e843a7","status":"passed","time":{"start":1727948771409,"stop":1727948854363,"duration":82954}},{"uid":"8ff4ac47f1efecdc","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/8ff4ac47f1efecdc","status":"passed","time":{"start":1727954221752,"stop":1727954309158,"duration":87406}},{"uid":"5c456556a6f753e0","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/5c456556a6f753e0","status":"passed","time":{"start":1727952667013,"stop":1727952749706,"duration":82693}},{"uid":"22328b6374c80ce5","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/22328b6374c80ce5","status":"passed","time":{"start":1727933034748,"stop":1727933117863,"duration":83115}},{"uid":"25608cc528f1a510","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/25608cc528f1a510","status":"passed","time":{"start":1727948771409,"stop":1727948854363,"duration":82954}},{"uid":"4a546d55bdd31c01","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/4a546d55bdd31c01","status":"passed","time":{"start":1727942889134,"stop":1727942972464,"duration":83330}},{"uid":"625e37361cd26667","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/625e37361cd26667","status":"passed","time":{"start":1727933034748,"stop":1727933117863,"duration":83115}},{"uid":"f6ef22cb2b1c2321","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/f6ef22cb2b1c2321","status":"passed","time":{"start":1727926767380,"stop":1727926850582,"duration":83202}},{"uid":"c1dd0af84dba1809","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/c1dd0af84dba1809","status":"passed","time":{"start":1727916293577,"stop":1727916378002,"duration":84425}},{"uid":"34792a516203c57c","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/34792a516203c57c","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727907740920,"stop":1727907761814,"duration":20894}},{"uid":"c38d34064dbaffe8","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/c38d34064dbaffe8","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727833115050,"stop":1727833135466,"duration":20416}},{"uid":"daa2437bd6c9dc6e","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/daa2437bd6c9dc6e","status":"passed","time":{"start":1727829934273,"stop":1727830016898,"duration":82625}},{"uid":"ff7289ce1005084b","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/ff7289ce1005084b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727814104467,"stop":1727814145604,"duration":41137}},{"uid":"a06687f4289af1fc","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/a06687f4289af1fc","status":"passed","time":{"start":1727815504946,"stop":1727815589620,"duration":84674}},{"uid":"e2979a7acc338ae9","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/e2979a7acc338ae9","status":"passed","time":{"start":1727798116540,"stop":1727798199646,"duration":83106}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"ce7afe62260c5f5f.json","parameterValues":["'nrf9160dk'","'zephyr'"]}