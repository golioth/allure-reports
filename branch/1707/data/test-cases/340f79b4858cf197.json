{"uid":"340f79b4858cf197","name":"test_block_operations","fullName":"tests.hil.tests.ota.test_ota#test_block_operations","historyId":"167251c5eff20d228cebcf5f002e91ea","time":{"start":1730382951842,"stop":1730382964216,"duration":12374},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 169897.3380950074\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffff953b54d0>\nproject = <golioth.golioth.Project object at 0xffff959a3410>\nreleases = {'test_blocks': Release <67238c6398103374e37c5782, release_tags=[], device_tags=['67238c6298103374e37c577f'], artifact..., release_tags=[], device_tags=['67238c6298103374e37c577f'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_block_operations(board, project, releases):\n        await project.releases.rollout_set(releases[\"test_blocks\"].id, True)\n>       assert None != await board.wait_for_regex_in_line(f\"golioth_ota_size_to_nblocks: {TEST_BLOCK_CNT + 1}\", timeout_s=12)\n\ntests/hil/tests/ota/test_ota.py:160: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 169897.3380950074\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730382873815,"stop":1730382873815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730382873816,"stop":1730382873816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730382873817,"stop":1730382873817,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730382873818,"stop":1730382873818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730382873819,"stop":1730382873819,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730382873819,"stop":1730382873819,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730382873820,"stop":1730382873820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730382873820,"stop":1730382873820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730382873821,"stop":1730382873821,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730382873821,"stop":1730382873821,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730382873822,"stop":1730382873822,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730382873822,"stop":1730382873822,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730382873823,"stop":1730382915279,"duration":41456},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730382915281,"stop":1730382915821,"duration":540},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730382915821,"stop":1730382916621,"duration":800},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730382916622,"stop":1730382945105,"duration":28483},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1730382945107,"stop":1730382945624,"duration":517},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1730382945625,"stop":1730382946443,"duration":818},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1730382946444,"stop":1730382948045,"duration":1601},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1730382951838,"stop":1730382951839,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 169897.3380950074\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffff953b54d0>\nproject = <golioth.golioth.Project object at 0xffff959a3410>\nreleases = {'test_blocks': Release <67238c6398103374e37c5782, release_tags=[], device_tags=['67238c6298103374e37c577f'], artifact..., release_tags=[], device_tags=['67238c6298103374e37c577f'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_block_operations(board, project, releases):\n        await project.releases.rollout_set(releases[\"test_blocks\"].id, True)\n>       assert None != await board.wait_for_regex_in_line(f\"golioth_ota_size_to_nblocks: {TEST_BLOCK_CNT + 1}\", timeout_s=12)\n\ntests/hil/tests/ota/test_ota.py:160: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 169897.3380950074\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"a500ba379f4303d5","name":"stdout","source":"a500ba379f4303d5.txt","type":"text/plain","size":370}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1730382964835,"stop":1730382965756,"duration":921},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1730383049514,"stop":1730383050967,"duration":1453},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1730383050969,"stop":1730383051747,"duration":778},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1730383051749,"stop":1730383051749,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1730383051751,"stop":1730383051751,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730383051753,"stop":1730383052121,"duration":368},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730383052123,"stop":1730383052124,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730383052125,"stop":1730383052129,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"369bf9e19deb"},{"name":"thread","value":"253-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":18,"unknown":0,"total":24},"items":[{"uid":"ed5011ab42cfa604","reportUrl":"https://golioth.github.io/allure-reports/branch/1706//#testresult/ed5011ab42cfa604","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1730361615825,"stop":1730361615825,"duration":0}},{"uid":"ba32ad34ee175ab1","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/ba32ad34ee175ab1","status":"passed","time":{"start":1730235179802,"stop":1730235190690,"duration":10888}},{"uid":"98adfc9d65489555","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/98adfc9d65489555","status":"passed","time":{"start":1729788444504,"stop":1729788455462,"duration":10958}},{"uid":"19c08026bbec4913","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/19c08026bbec4913","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729781218421,"stop":1729781223235,"duration":4814}},{"uid":"ca72f24e4bf49bf","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/ca72f24e4bf49bf","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729723601074,"stop":1729723605993,"duration":4919}},{"uid":"4bf5634489d54f21","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/4bf5634489d54f21","status":"passed","time":{"start":1729720439753,"stop":1729720452806,"duration":13053}},{"uid":"21bf6ef0d796293e","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/21bf6ef0d796293e","status":"passed","time":{"start":1729718085562,"stop":1729718096568,"duration":11006}},{"uid":"e442d653ff9673ab","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/e442d653ff9673ab","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729624738777,"stop":1729624743862,"duration":5085}},{"uid":"7a7dfb5f275f5775","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/7a7dfb5f275f5775","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729528370804,"stop":1729528375681,"duration":4877}},{"uid":"9dc25aacb69294f2","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/9dc25aacb69294f2","status":"passed","time":{"start":1729526500235,"stop":1729526511597,"duration":11362}},{"uid":"68b093f536706836","reportUrl":"https://golioth.github.io/allure-reports/branch/2//#testresult/68b093f536706836","status":"passed","time":{"start":1729389169950,"stop":1729389182610,"duration":12660}},{"uid":"99b76eca43fad0d3","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/99b76eca43fad0d3","status":"passed","time":{"start":1729387778500,"stop":1729387789892,"duration":11392}},{"uid":"f7ffc3d1666807e2","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/f7ffc3d1666807e2","status":"passed","time":{"start":1729378585328,"stop":1729378601523,"duration":16195}},{"uid":"6802641ce7938a4f","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/6802641ce7938a4f","status":"passed","time":{"start":1729197402935,"stop":1729197413737,"duration":10802}},{"uid":"aeb2c517a9aba01f","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/aeb2c517a9aba01f","status":"passed","time":{"start":1729115366006,"stop":1729115382787,"duration":16781}},{"uid":"f251176f29aee871","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/f251176f29aee871","status":"passed","time":{"start":1729113350702,"stop":1729113362000,"duration":11298}},{"uid":"33a2624469a5a564","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/33a2624469a5a564","status":"passed","time":{"start":1729106619041,"stop":1729106630929,"duration":11888}},{"uid":"65db592ce80b95a","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/65db592ce80b95a","status":"passed","time":{"start":1729033488371,"stop":1729033499156,"duration":10785}},{"uid":"adc1f0a60073a8f4","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/adc1f0a60073a8f4","status":"passed","time":{"start":1729030168629,"stop":1729030185088,"duration":16459}},{"uid":"4c782c1d60b57096","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/4c782c1d60b57096","status":"passed","time":{"start":1729028079934,"stop":1729028092006,"duration":12072}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"340f79b4858cf197.json","parameterValues":["'rak5010'","'zephyr'"]}