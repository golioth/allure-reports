{"uid":"41b18f7fe943b9f6","name":"test_lightdb_observe","fullName":"examples.esp_idf.lightdb.observe.pytest.test_sample#test_lightdb_observe","historyId":"1c331a6e940d6b0260adbd1d7f0f445d","time":{"start":1730383508141,"stop":1730383513504,"duration":5363},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7f2c5bd0>\ndevice = <golioth.golioth.Device object at 0xffff7f309d90>\n\n    async def test_lightdb_observe(board, device):\n        # Delete counter in lightdb state\n    \n>       await device.lightdb.delete(\"counter\")\n\nexamples/esp_idf/lightdb/observe/pytest/test_sample.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:529: in delete\n    await c.delete(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:2012: in delete\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730383466935,"stop":1730383466936,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730383466937,"stop":1730383466938,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730383466938,"stop":1730383466939,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730383466940,"stop":1730383466940,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730383466941,"stop":1730383466941,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730383466942,"stop":1730383466943,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730383466942,"stop":1730383466942,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730383466943,"stop":1730383466943,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730383466944,"stop":1730383466944,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730383466945,"stop":1730383466945,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730383466945,"stop":1730383466945,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730383466946,"stop":1730383466946,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730383466947,"stop":1730383506635,"duration":39688},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730383506637,"stop":1730383507180,"duration":543},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730383507180,"stop":1730383508137,"duration":957},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7f2c5bd0>\ndevice = <golioth.golioth.Device object at 0xffff7f309d90>\n\n    async def test_lightdb_observe(board, device):\n        # Delete counter in lightdb state\n    \n>       await device.lightdb.delete(\"counter\")\n\nexamples/esp_idf/lightdb/observe/pytest/test_sample.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:529: in delete\n    await c.delete(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:2012: in delete\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","steps":[],"attachments":[{"uid":"5ce3ebdc23c705b1","name":"stdout","source":"5ce3ebdc23c705b1.txt","type":"text/plain","size":5935}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1730383514459,"stop":1730383514904,"duration":445},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730383514906,"stop":1730383514906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730383514908,"stop":1730383514915,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"b8f8f8a32e36"},{"name":"thread","value":"269-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.lightdb.observe.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":22,"unknown":0,"total":23},"items":[{"uid":"d5041cc41313c6da","reportUrl":"https://golioth.github.io/allure-reports/branch/1706//#testresult/d5041cc41313c6da","status":"passed","time":{"start":1730362047232,"stop":1730362057294,"duration":10062}},{"uid":"1b939f440089e668","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/1b939f440089e668","status":"passed","time":{"start":1730236028491,"stop":1730236038781,"duration":10290}},{"uid":"6d3b8d3a1654783","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/6d3b8d3a1654783","status":"passed","time":{"start":1729789150839,"stop":1729789161394,"duration":10555}},{"uid":"9deefdf4e59414ed","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/9deefdf4e59414ed","status":"passed","time":{"start":1729724991324,"stop":1729725002236,"duration":10912}},{"uid":"dc405b74acc76d9e","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/dc405b74acc76d9e","status":"passed","time":{"start":1729724991324,"stop":1729725002236,"duration":10912}},{"uid":"1bdc5f3e33e42d4f","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/1bdc5f3e33e42d4f","status":"passed","time":{"start":1729721963358,"stop":1729721984918,"duration":21560}},{"uid":"efaf835bd798e5d1","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/efaf835bd798e5d1","status":"passed","time":{"start":1729718956181,"stop":1729718966608,"duration":10427}},{"uid":"51e7b3e6d40edb8","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/51e7b3e6d40edb8","status":"passed","time":{"start":1729529846961,"stop":1729529857834,"duration":10873}},{"uid":"26b8ac5383a4f96f","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/26b8ac5383a4f96f","status":"passed","time":{"start":1729529846961,"stop":1729529857834,"duration":10873}},{"uid":"b6031e2e7a4b3c31","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/b6031e2e7a4b3c31","status":"passed","time":{"start":1729528675122,"stop":1729528685492,"duration":10370}},{"uid":"7ff8f28c8cbe0239","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/7ff8f28c8cbe0239","status":"passed","time":{"start":1729379426580,"stop":1729379437129,"duration":10549}},{"uid":"34ff5dcdc19a921a","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/34ff5dcdc19a921a","status":"passed","time":{"start":1729379426580,"stop":1729379437129,"duration":10549}},{"uid":"eb87020a6302e5d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/eb87020a6302e5d6","status":"passed","time":{"start":1729198231595,"stop":1729198242106,"duration":10511}},{"uid":"61ce20de2182325","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/61ce20de2182325","status":"passed","time":{"start":1729116284487,"stop":1729116295239,"duration":10752}},{"uid":"fa71613af360b8e3","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/fa71613af360b8e3","status":"passed","time":{"start":1729113226040,"stop":1729113236691,"duration":10651}},{"uid":"ab455edce67ce4d5","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/ab455edce67ce4d5","status":"passed","time":{"start":1729108092745,"stop":1729108102922,"duration":10177}},{"uid":"342539be2025b15","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/342539be2025b15","status":"passed","time":{"start":1729034703060,"stop":1729034713839,"duration":10779}},{"uid":"fc6bb79f3cd54ac1","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/fc6bb79f3cd54ac1","status":"passed","time":{"start":1729031411526,"stop":1729031421698,"duration":10172}},{"uid":"13d1c8c9d1b7d184","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/13d1c8c9d1b7d184","status":"passed","time":{"start":1729020849670,"stop":1729020860081,"duration":10411}},{"uid":"2fcf141fe4a3982c","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/2fcf141fe4a3982c","status":"passed","time":{"start":1729023880838,"stop":1729023891753,"duration":10915}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"41b18f7fe943b9f6.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}