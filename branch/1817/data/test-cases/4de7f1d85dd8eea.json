{"uid":"4de7f1d85dd8eea","name":"test_invalid_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_invalid_arg","historyId":"0a49aca8cfb10b2513f91807ea5eaea3","time":{"start":1732224556869,"stop":1732224562261,"duration":5392},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffad961e90>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffffad96e510>\ndevice = <golioth.golioth.Device object at 0xffffad961950>\n\n    async def test_invalid_arg(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           rsp = await device.rpc.basic_return_type(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffad961e90>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732224469120,"stop":1732224469121,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732224469121,"stop":1732224469122,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732224469122,"stop":1732224469123,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732224469123,"stop":1732224469124,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732224469124,"stop":1732224469124,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732224469124,"stop":1732224469125,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732224469125,"stop":1732224469126,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732224469125,"stop":1732224469125,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732224469126,"stop":1732224469126,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732224469127,"stop":1732224469127,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732224469128,"stop":1732224469128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732224469129,"stop":1732224469129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732224469130,"stop":1732224469584,"duration":454},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732224469585,"stop":1732224511003,"duration":41418},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732224511005,"stop":1732224511965,"duration":960},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732224511965,"stop":1732224541241,"duration":29276},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732224613902,"stop":1732224613903,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732224613905,"stop":1732224614363,"duration":458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732224614365,"stop":1732224614367,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732224614369,"stop":1732224614372,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"db681e201ef5"},{"name":"thread","value":"265-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":13,"skipped":0,"passed":51,"unknown":0,"total":64},"items":[{"uid":"42d4940c0f479043","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/42d4940c0f479043","status":"passed","time":{"start":1732212966144,"stop":1732212967635,"duration":1491}},{"uid":"61deebdc1e8d73b","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/61deebdc1e8d73b","status":"passed","time":{"start":1732207101626,"stop":1732207103769,"duration":2143}},{"uid":"e494439696c4e019","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/e494439696c4e019","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732206950256,"stop":1732206950256,"duration":0}},{"uid":"1e99b6b24f0ade8f","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/1e99b6b24f0ade8f","status":"passed","time":{"start":1732204881634,"stop":1732204883173,"duration":1539}},{"uid":"71cb961dde2a926a","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/71cb961dde2a926a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732204314776,"stop":1732204314776,"duration":0}},{"uid":"c8958a548f86d701","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/c8958a548f86d701","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732202018425,"stop":1732202018425,"duration":0}},{"uid":"e6e85b1b66b6a6ee","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/e6e85b1b66b6a6ee","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732199693561,"stop":1732199693561,"duration":0}},{"uid":"c72f2aff7ff9a76f","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/c72f2aff7ff9a76f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732196326960,"stop":1732196326960,"duration":0}},{"uid":"f04bb32ea71875e1","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/f04bb32ea71875e1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732194602807,"stop":1732194602807,"duration":0}},{"uid":"561e7d997e76693b","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/561e7d997e76693b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732193486391,"stop":1732193486391,"duration":0}},{"uid":"d039a9868f669317","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/d039a9868f669317","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732189489391,"stop":1732189489391,"duration":0}},{"uid":"47f0493efe76de59","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/47f0493efe76de59","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732187437065,"stop":1732187437065,"duration":0}},{"uid":"1f49043f02d47bf6","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/1f49043f02d47bf6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732154217742,"stop":1732154217742,"duration":0}},{"uid":"294dfd6d97a326f9","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/294dfd6d97a326f9","status":"passed","time":{"start":1732144902100,"stop":1732144903503,"duration":1403}},{"uid":"b59e104c1df15a40","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/b59e104c1df15a40","status":"passed","time":{"start":1732143687900,"stop":1732143691094,"duration":3194}},{"uid":"4436d6804ce47388","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/4436d6804ce47388","status":"passed","time":{"start":1732141330269,"stop":1732141332264,"duration":1995}},{"uid":"cc4f98deb4ee0649","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/cc4f98deb4ee0649","status":"passed","time":{"start":1732140401781,"stop":1732140405874,"duration":4093}},{"uid":"19094193819cd5a3","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/19094193819cd5a3","status":"passed","time":{"start":1732134012350,"stop":1732134014632,"duration":2282}},{"uid":"74783ac97981ada0","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/74783ac97981ada0","status":"passed","time":{"start":1732094038157,"stop":1732094040191,"duration":2034}},{"uid":"25cd065a9c243d61","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/25cd065a9c243d61","status":"passed","time":{"start":1732094038157,"stop":1732094040191,"duration":2034}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"4de7f1d85dd8eea.json","parameterValues":["'rak5010'","'zephyr'"]}