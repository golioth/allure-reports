{"uid":"ec8dbc0e9f3c6fd4","name":"test_fw_update","fullName":"examples.esp_idf.fw_update.pytest.test_sample#test_fw_update","historyId":"48d0816a206ae6718f292d04b6749e18","time":{"start":1732229756521,"stop":1732229860911,"duration":104390},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 130086.27785998397\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff94145c90>\nproject = <golioth.golioth.Project object at 0xffff940f9a50>\ndevice = <golioth.golioth.Device object at 0xffff9416ab10>\nfw_info = {'package': 'main', 'version': '255.8.9'}\nrelease = Release <673fba7cbb6157cf6cdf5992, release_tags=[], device_tags=['673fba7bbb6157cf6cdf5990'], artifact_ids=['673e08dbbb6157cf6cdf21c8'], rollout=False>\n\n    async def test_fw_update(board, project, device, fw_info, release):\n    \n        # Wait for app to start running or 10 seconds to pass so runtime settings are ready.\n    \n        try:\n            await board.wait_for_regex_in_line('.*Start FW Update sample.', timeout_s=10.0)\n        except:\n            pass\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for first manifest to arrive (no update expected)\n    \n        await board.wait_for_regex_in_line('.*Nothing to do.', timeout_s=90.0)\n    \n        # Rollout the release\n    \n        await project.releases.rollout_set(release.id, True)\n    \n        # Monitor block download and watch for reboot after update\n    \n>       await board.wait_for_regex_in_line('.*Received block.', timeout_s=90.0)\n\nexamples/esp_idf/fw_update/pytest/test_sample.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 130086.27785998397\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732229727590,"stop":1732229727590,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info","time":{"start":1732229727591,"stop":1732229727620,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732229727621,"stop":1732229727621,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732229727622,"stop":1732229727622,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732229727622,"stop":1732229727622,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732229727623,"stop":1732229727623,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732229727623,"stop":1732229727623,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732229727624,"stop":1732229727625,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732229727624,"stop":1732229727624,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732229727625,"stop":1732229727625,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732229727634,"stop":1732229727634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732229727635,"stop":1732229727635,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732229727635,"stop":1732229727635,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732229727636,"stop":1732229752565,"duration":24929},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_name","time":{"start":1732229727636,"stop":1732229727636,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732229752566,"stop":1732229753095,"duration":529},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732229753096,"stop":1732229753997,"duration":901},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_id","time":{"start":1732229753998,"stop":1732229754405,"duration":407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifact","time":{"start":1732229754405,"stop":1732229754812,"duration":407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1732229754813,"stop":1732229756090,"duration":1277},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"release","time":{"start":1732229756090,"stop":1732229756518,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 130086.27785998397\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff94145c90>\nproject = <golioth.golioth.Project object at 0xffff940f9a50>\ndevice = <golioth.golioth.Device object at 0xffff9416ab10>\nfw_info = {'package': 'main', 'version': '255.8.9'}\nrelease = Release <673fba7cbb6157cf6cdf5992, release_tags=[], device_tags=['673fba7bbb6157cf6cdf5990'], artifact_ids=['673e08dbbb6157cf6cdf21c8'], rollout=False>\n\n    async def test_fw_update(board, project, device, fw_info, release):\n    \n        # Wait for app to start running or 10 seconds to pass so runtime settings are ready.\n    \n        try:\n            await board.wait_for_regex_in_line('.*Start FW Update sample.', timeout_s=10.0)\n        except:\n            pass\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for first manifest to arrive (no update expected)\n    \n        await board.wait_for_regex_in_line('.*Nothing to do.', timeout_s=90.0)\n    \n        # Rollout the release\n    \n        await project.releases.rollout_set(release.id, True)\n    \n        # Monitor block download and watch for reboot after update\n    \n>       await board.wait_for_regex_in_line('.*Received block.', timeout_s=90.0)\n\nexamples/esp_idf/fw_update/pytest/test_sample.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 130086.27785998397\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"b04961feb0fcf8e5","name":"stdout","source":"b04961feb0fcf8e5.txt","type":"text/plain","size":9199}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"release::0","time":{"start":1732229861513,"stop":1732229861936,"duration":423},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1732229861938,"stop":1732229862793,"duration":855},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifact::0","time":{"start":1732229862795,"stop":1732229862795,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_id::0","time":{"start":1732229862798,"stop":1732229862798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732229862800,"stop":1732229863214,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732229863217,"stop":1732229863217,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732229863218,"stop":1732229863220,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info::0","time":{"start":1732229863238,"stop":1732229863240,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"23edc8024684"},{"name":"thread","value":"279-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.fw_update.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"40708e2a8eca9c32","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732226621843,"stop":1732226728147,"duration":106304}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":78,"unknown":0,"total":81},"items":[{"uid":"993eebe41c5fe827","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/993eebe41c5fe827","status":"passed","time":{"start":1732292432084,"stop":1732292733287,"duration":301203}},{"uid":"d7aa849250934eeb","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/d7aa849250934eeb","status":"passed","time":{"start":1732228317448,"stop":1732228621525,"duration":304077}},{"uid":"86a615ac0ef4a692","reportUrl":"https://golioth.github.io/allure-reports/branch/1827//#testresult/86a615ac0ef4a692","status":"passed","time":{"start":1732289665398,"stop":1732289966496,"duration":301098}},{"uid":"c4c5d242b1c1a092","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/c4c5d242b1c1a092","status":"passed","time":{"start":1732195094433,"stop":1732195357141,"duration":262708}},{"uid":"13758722a8b018b1","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/13758722a8b018b1","status":"passed","time":{"start":1732287328659,"stop":1732287462614,"duration":133955}},{"uid":"19511b0bd1316be","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/19511b0bd1316be","status":"passed","time":{"start":1732195094433,"stop":1732195357141,"duration":262708}},{"uid":"6429fae42830e18b","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/6429fae42830e18b","status":"passed","time":{"start":1732280311078,"stop":1732280603300,"duration":292222}},{"uid":"381db3f08039b3b8","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/381db3f08039b3b8","status":"passed","time":{"start":1732206879442,"stop":1732207026930,"duration":147488}},{"uid":"6a33c9624088e66f","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/6a33c9624088e66f","status":"passed","time":{"start":1732209086096,"stop":1732209446914,"duration":360818}},{"uid":"5fccf11db34170f7","reportUrl":"https://golioth.github.io/allure-reports/branch/1819//#testresult/5fccf11db34170f7","status":"passed","time":{"start":1732231996435,"stop":1732232360184,"duration":363749}},{"uid":"7bfa75f3d02acf90","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/7bfa75f3d02acf90","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732229756521,"stop":1732229860911,"duration":104390}},{"uid":"76519e8457a3bf5","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/76519e8457a3bf5","status":"passed","time":{"start":1732228317448,"stop":1732228621525,"duration":304077}},{"uid":"15842272c4c95e87","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/15842272c4c95e87","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732226621843,"stop":1732226728147,"duration":106304}},{"uid":"ff5cd6388cdaa9ae","reportUrl":"https://golioth.github.io/allure-reports/branch/1816//#testresult/ff5cd6388cdaa9ae","status":"passed","time":{"start":1732222204997,"stop":1732222330703,"duration":125706}},{"uid":"3886e1dd5473573a","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/3886e1dd5473573a","status":"passed","time":{"start":1732216038808,"stop":1732216398383,"duration":359575}},{"uid":"2b3e3359db5c21e5","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/2b3e3359db5c21e5","status":"passed","time":{"start":1732195094433,"stop":1732195357141,"duration":262708}},{"uid":"d12bcaca64ba58f3","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/d12bcaca64ba58f3","status":"passed","time":{"start":1732209086096,"stop":1732209446914,"duration":360818}},{"uid":"677abe1285bce748","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/677abe1285bce748","status":"passed","time":{"start":1732206879442,"stop":1732207026930,"duration":147488}},{"uid":"11984e9f39c7cec7","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/11984e9f39c7cec7","status":"passed","time":{"start":1732148950211,"stop":1732149111471,"duration":161260}},{"uid":"1699f73c55e9e848","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/1699f73c55e9e848","status":"passed","time":{"start":1732195094433,"stop":1732195357141,"duration":262708}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"ec8dbc0e9f3c6fd4.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}