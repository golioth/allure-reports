{"uid":"fac49aaba3e1859b","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"80cd057eba57a7e68ecc18ee8923db54","time":{"start":1732230493188,"stop":1732230498580,"duration":5392},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa86511d0>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffffa865fed0>\ndevice = <golioth.golioth.Device object at 0xffffa8651610>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa86511d0>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1732230370528,"stop":1732230370528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732230370529,"stop":1732230370529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732230370530,"stop":1732230370530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732230370531,"stop":1732230370532,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732230370531,"stop":1732230370531,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732230370532,"stop":1732230370533,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732230370533,"stop":1732230370533,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732230370534,"stop":1732230370534,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732230370535,"stop":1732230370536,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732230370535,"stop":1732230370535,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732230370536,"stop":1732230370536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732230370536,"stop":1732230370536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732230370537,"stop":1732230370968,"duration":431},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732230370969,"stop":1732230412344,"duration":41375},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732230412346,"stop":1732230413378,"duration":1032},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732230413379,"stop":1732230443638,"duration":30259},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732230499608,"stop":1732230499608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732230499610,"stop":1732230500133,"duration":523},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732230500135,"stop":1732230500137,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732230500139,"stop":1732230500141,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"eca0fcac3761"},{"name":"thread","value":"266-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3b87a3ed2c5233b9","status":"passed","time":{"start":1732224594045,"stop":1732224613900,"duration":19855}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":30,"skipped":0,"passed":47,"unknown":0,"total":77},"items":[{"uid":"f6d0956df21bd2fa","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/f6d0956df21bd2fa","status":"passed","time":{"start":1732291726929,"stop":1732291746625,"duration":19696}},{"uid":"971fec41ff0990ad","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/971fec41ff0990ad","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732226918899,"stop":1732226918899,"duration":0}},{"uid":"23a9098dceb00079","reportUrl":"https://golioth.github.io/allure-reports/branch/1827//#testresult/23a9098dceb00079","status":"passed","time":{"start":1732288530551,"stop":1732288550298,"duration":19747}},{"uid":"29fc2beb934ea9dc","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/29fc2beb934ea9dc","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732289166755,"stop":1732289166755,"duration":0}},{"uid":"7307ce59aa4e5d96","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/7307ce59aa4e5d96","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732286303360,"stop":1732286303360,"duration":0}},{"uid":"2fc677901e6caf8f","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/2fc677901e6caf8f","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1732283750015,"stop":1732283755357,"duration":5342}},{"uid":"338b6f2b0afed59c","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/338b6f2b0afed59c","status":"passed","time":{"start":1732279492601,"stop":1732279512503,"duration":19902}},{"uid":"70ebb4a28b2bc1b8","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/70ebb4a28b2bc1b8","status":"passed","time":{"start":1732276010224,"stop":1732276030040,"duration":19816}},{"uid":"6d3dd24264f28a2f","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/6d3dd24264f28a2f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732274322928,"stop":1732274322928,"duration":0}},{"uid":"f27eff4d17f9d8b0","reportUrl":"https://golioth.github.io/allure-reports/branch/1819//#testresult/f27eff4d17f9d8b0","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1732231448311,"stop":1732231471985,"duration":23674}},{"uid":"e21ab340812bdc3d","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/e21ab340812bdc3d","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1732230493188,"stop":1732230498580,"duration":5392}},{"uid":"e9076f9c2ceee8cb","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/e9076f9c2ceee8cb","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732226918899,"stop":1732226918899,"duration":0}},{"uid":"f1ca54526419aedc","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/f1ca54526419aedc","status":"passed","time":{"start":1732224594045,"stop":1732224613900,"duration":19855}},{"uid":"4401668e1c5ad086","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/4401668e1c5ad086","status":"passed","time":{"start":1732212997574,"stop":1732213019079,"duration":21505}},{"uid":"d35c82e9323a91b5","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/d35c82e9323a91b5","status":"passed","time":{"start":1732207120734,"stop":1732207143658,"duration":22924}},{"uid":"3572ff43b54dc7e6","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/3572ff43b54dc7e6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732206950882,"stop":1732206950882,"duration":0}},{"uid":"ed04da9499d54b51","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/ed04da9499d54b51","status":"passed","time":{"start":1732204914892,"stop":1732204936080,"duration":21188}},{"uid":"66de6b2b670f69e1","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/66de6b2b670f69e1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732204315546,"stop":1732204315546,"duration":0}},{"uid":"2f95e9123f385ee5","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/2f95e9123f385ee5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732202019048,"stop":1732202019048,"duration":0}},{"uid":"c822d1bb13496dcd","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/c822d1bb13496dcd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732199694185,"stop":1732199694185,"duration":0}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"fac49aaba3e1859b.json","parameterValues":["'rak5010'","'zephyr'"]}