{"uid":"6426da57ef20ba68","name":"test_bool_return","fullName":"tests.hil.tests.rpc.test_rpc#test_bool_return","historyId":"50db862bc4248984919783f22a8fc56e","time":{"start":1732223707827,"stop":1732223713189,"duration":5362},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff86d3e450>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff86d921d0>\ndevice = <golioth.golioth.Device object at 0xffff86e14b90>\n\n    async def test_bool_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"bool\")\n\ntests/hil/tests/rpc/test_rpc.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff86d3e450>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732223669681,"stop":1732223669681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732223669682,"stop":1732223669683,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732223669684,"stop":1732223669684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732223669685,"stop":1732223669685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732223669686,"stop":1732223669686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732223669686,"stop":1732223669686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732223669687,"stop":1732223669687,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732223669687,"stop":1732223669688,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732223669688,"stop":1732223669688,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732223669688,"stop":1732223669689,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732223669689,"stop":1732223669689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732223669689,"stop":1732223669689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732223669690,"stop":1732223670100,"duration":410},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732223670100,"stop":1732223695020,"duration":24920},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732223695021,"stop":1732223695977,"duration":956},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732223695978,"stop":1732223699273,"duration":3295},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732223765078,"stop":1732223765078,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732223765080,"stop":1732223765487,"duration":407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732223765489,"stop":1732223765491,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732223765493,"stop":1732223765495,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"93de92f5586d"},{"name":"thread","value":"243-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":64,"unknown":0,"total":68},"items":[{"uid":"7bdb50295bddc9d3","reportUrl":"https://golioth.github.io/allure-reports/branch/1816//#testresult/7bdb50295bddc9d3","status":"passed","time":{"start":1732220772697,"stop":1732220773961,"duration":1264}},{"uid":"7ceb1515da2ade68","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/7ceb1515da2ade68","status":"passed","time":{"start":1732214162773,"stop":1732214164208,"duration":1435}},{"uid":"9cb547756afbd0c8","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/9cb547756afbd0c8","status":"passed","time":{"start":1732193293150,"stop":1732193294649,"duration":1499}},{"uid":"1575cd014ac56066","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/1575cd014ac56066","status":"passed","time":{"start":1732205852817,"stop":1732205854305,"duration":1488}},{"uid":"c0921bf1294ea345","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/c0921bf1294ea345","status":"passed","time":{"start":1732205180408,"stop":1732205182320,"duration":1912}},{"uid":"edd3fb497b1c815d","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/edd3fb497b1c815d","status":"passed","time":{"start":1732142144525,"stop":1732142147037,"duration":2512}},{"uid":"a2745b86c370ff7","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/a2745b86c370ff7","status":"passed","time":{"start":1732193293150,"stop":1732193294649,"duration":1499}},{"uid":"b99a89536b65deb4","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/b99a89536b65deb4","status":"passed","time":{"start":1732143696857,"stop":1732143698400,"duration":1543}},{"uid":"ea3ed6733c1664ca","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/ea3ed6733c1664ca","status":"passed","time":{"start":1732142144525,"stop":1732142147037,"duration":2512}},{"uid":"8062e6c1a0f6ddf3","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/8062e6c1a0f6ddf3","status":"passed","time":{"start":1732193293150,"stop":1732193294649,"duration":1499}},{"uid":"f98b40a56c6936d5","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/f98b40a56c6936d5","status":"passed","time":{"start":1732143696857,"stop":1732143698400,"duration":1543}},{"uid":"a46b195f2a2469aa","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/a46b195f2a2469aa","status":"passed","time":{"start":1732142144525,"stop":1732142147037,"duration":2512}},{"uid":"314190065c20b3af","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/314190065c20b3af","status":"passed","time":{"start":1732143696857,"stop":1732143698400,"duration":1543}},{"uid":"e69d10670ce233e","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/e69d10670ce233e","status":"passed","time":{"start":1732142144525,"stop":1732142147037,"duration":2512}},{"uid":"f84b3906d4b1d28f","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/f84b3906d4b1d28f","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1732152716246,"stop":1732152716246,"duration":0}},{"uid":"8557f3520b6a462d","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/8557f3520b6a462d","status":"passed","time":{"start":1732143696857,"stop":1732143698400,"duration":1543}},{"uid":"ad9ebfc88a7dacda","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/ad9ebfc88a7dacda","status":"passed","time":{"start":1732142144525,"stop":1732142147037,"duration":2512}},{"uid":"73de32e37f443e6b","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/73de32e37f443e6b","status":"passed","time":{"start":1732141287469,"stop":1732141288588,"duration":1119}},{"uid":"69f9267913df1b5d","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/69f9267913df1b5d","status":"passed","time":{"start":1732139695014,"stop":1732139696857,"duration":1843}},{"uid":"4be731a1e153b897","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/4be731a1e153b897","status":"passed","time":{"start":1732133246662,"stop":1732133247682,"duration":1020}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"6426da57ef20ba68.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}