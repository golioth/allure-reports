{"uid":"77a4bbd3db84a5b9","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1731546318338,"stop":1731546335474,"duration":17136},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff80995e50>\ndevice = <golioth.golioth.Device object at 0xffff8090a910>\nproject = <golioth.golioth.Project object at 0xffff808c16d0>\nreleases = {'test_blocks': Release <67354cbe8590529831ce50fc, release_tags=[], device_tags=['67354cbc8590529831ce50f9'], artifact..., release_tags=[], device_tags=['67354cbc8590529831ce50f9'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731546244479,"stop":1731546244479,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731546244480,"stop":1731546244480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731546244481,"stop":1731546244482,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731546244481,"stop":1731546244481,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731546244482,"stop":1731546244483,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731546244483,"stop":1731546244484,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731546244484,"stop":1731546244484,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731546244485,"stop":1731546244485,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731546244486,"stop":1731546244486,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731546244486,"stop":1731546244486,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731546244487,"stop":1731546244487,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731546244487,"stop":1731546244488,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731546244488,"stop":1731546294248,"duration":49760},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731546294250,"stop":1731546294778,"duration":528},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731546294779,"stop":1731546295758,"duration":979},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731546295759,"stop":1731546299166,"duration":3407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1731546299167,"stop":1731546299664,"duration":497},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1731546299665,"stop":1731546300633,"duration":968},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1731546300634,"stop":1731546302658,"duration":2024},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1731546318335,"stop":1731546318335,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff80995e50>\ndevice = <golioth.golioth.Device object at 0xffff8090a910>\nproject = <golioth.golioth.Project object at 0xffff808c16d0>\nreleases = {'test_blocks': Release <67354cbe8590529831ce50fc, release_tags=[], device_tags=['67354cbc8590529831ce50f9'], artifact..., release_tags=[], device_tags=['67354cbc8590529831ce50f9'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"18fbdb831e7f546e","name":"stdout","source":"18fbdb831e7f546e.txt","type":"text/plain","size":1429}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1731546335630,"stop":1731546336973,"duration":1343},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1731546336975,"stop":1731546338836,"duration":1861},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1731546338838,"stop":1731546339830,"duration":992},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1731546339833,"stop":1731546339833,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1731546339835,"stop":1731546339835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731546339837,"stop":1731546340393,"duration":556},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731546340396,"stop":1731546340396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731546340398,"stop":1731546340405,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"7d3addccc4c7"},{"name":"thread","value":"243-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":13},"items":[{"uid":"9eaef8f394a18e0d","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/9eaef8f394a18e0d","status":"passed","time":{"start":1731533331597,"stop":1731533409647,"duration":78050}},{"uid":"7018266915b6dcf5","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/7018266915b6dcf5","status":"passed","time":{"start":1731540157874,"stop":1731540238966,"duration":81092}},{"uid":"5ca3b47a89daa229","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/5ca3b47a89daa229","status":"failed","statusDetails":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","time":{"start":1731534340371,"stop":1731534369179,"duration":28808}},{"uid":"6cabee91e4bb16b4","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/6cabee91e4bb16b4","status":"passed","time":{"start":1731533466151,"stop":1731533546896,"duration":80745}},{"uid":"4a7550da21271049","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/4a7550da21271049","status":"passed","time":{"start":1731533331597,"stop":1731533409647,"duration":78050}},{"uid":"9c84fcd46abd08e1","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/9c84fcd46abd08e1","status":"passed","time":{"start":1731518226488,"stop":1731518304169,"duration":77681}},{"uid":"6dedca21c5fd38e1","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/6dedca21c5fd38e1","status":"passed","time":{"start":1731518226488,"stop":1731518304169,"duration":77681}},{"uid":"bb237d4b43f14f2","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/bb237d4b43f14f2","status":"passed","time":{"start":1731518226488,"stop":1731518304169,"duration":77681}},{"uid":"5b6390f29a4a14cd","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/5b6390f29a4a14cd","status":"passed","time":{"start":1731518226488,"stop":1731518304169,"duration":77681}},{"uid":"84b3bf30c05bc6a6","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/84b3bf30c05bc6a6","status":"passed","time":{"start":1731425844191,"stop":1731425921937,"duration":77746}},{"uid":"8e4a77e77de657c1","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/8e4a77e77de657c1","status":"passed","time":{"start":1731102195316,"stop":1731102273301,"duration":77985}},{"uid":"f9a56256b47df10c","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/f9a56256b47df10c","status":"passed","time":{"start":1731096820819,"stop":1731096898645,"duration":77826}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"77a4bbd3db84a5b9.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}