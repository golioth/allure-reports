{"uid":"953f057178be4b5c","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"2f204ffe20d9a076758a1035d6c7af62","time":{"start":1731547113137,"stop":1731547135050,"duration":21913},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffffacf83f90>\ndevice = <golioth.golioth.Device object at 0xffffab8b8510>\nproject = <golioth.golioth.Project object at 0xffffab807490>\nreleases = {'test_blocks': Release <67354fdd8590529831ce5168, release_tags=[], device_tags=['67354fdb8590529831ce5165'], artifact..., release_tags=[], device_tags=['67354fdb8590529831ce5165'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731547076843,"stop":1731547076843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731547076844,"stop":1731547076844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731547076845,"stop":1731547076845,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731547076846,"stop":1731547076846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731547076846,"stop":1731547076846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731547076847,"stop":1731547076847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731547076847,"stop":1731547076848,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731547076848,"stop":1731547076849,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731547076848,"stop":1731547076848,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731547076849,"stop":1731547076849,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731547076849,"stop":1731547076849,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731547076850,"stop":1731547089366,"duration":12516},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731547076850,"stop":1731547076850,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731547089368,"stop":1731547089849,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731547089849,"stop":1731547090673,"duration":824},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731547090674,"stop":1731547098876,"duration":8202},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1731547098878,"stop":1731547099393,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1731547099394,"stop":1731547100164,"duration":770},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1731547100164,"stop":1731547102181,"duration":2017},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1731547113134,"stop":1731547113134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffffacf83f90>\ndevice = <golioth.golioth.Device object at 0xffffab8b8510>\nproject = <golioth.golioth.Project object at 0xffffab807490>\nreleases = {'test_blocks': Release <67354fdd8590529831ce5168, release_tags=[], device_tags=['67354fdb8590529831ce5165'], artifact..., release_tags=[], device_tags=['67354fdb8590529831ce5165'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"205fba85e082801d","name":"stdout","source":"205fba85e082801d.txt","type":"text/plain","size":1561}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1731547135102,"stop":1731547136052,"duration":950},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1731547136055,"stop":1731547137565,"duration":1510},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1731547137567,"stop":1731547138382,"duration":815},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1731547138384,"stop":1731547138384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1731547138386,"stop":1731547138386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731547138388,"stop":1731547138826,"duration":438},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731547138829,"stop":1731547138829,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731547138831,"stop":1731547138834,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"5044b1b795bb"},{"name":"thread","value":"265-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":3,"skipped":0,"passed":9,"unknown":0,"total":13},"items":[{"uid":"d6df2752b4bef6a9","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/d6df2752b4bef6a9","status":"passed","time":{"start":1731564001657,"stop":1731564079879,"duration":78222}},{"uid":"bc47aaa45009afe8","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/bc47aaa45009afe8","status":"passed","time":{"start":1731541030489,"stop":1731541108381,"duration":77892}},{"uid":"eed6622f7a965588","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/eed6622f7a965588","status":"passed","time":{"start":1731537770135,"stop":1731537847957,"duration":77822}},{"uid":"d08fb2e39c2440da","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/d08fb2e39c2440da","status":"passed","time":{"start":1731534386650,"stop":1731534465432,"duration":78782}},{"uid":"dfe46c6b0b6de1b8","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/dfe46c6b0b6de1b8","status":"passed","time":{"start":1731534048381,"stop":1731534126214,"duration":77833}},{"uid":"2f189619d6427a4c","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/2f189619d6427a4c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731523737320,"stop":1731523737320,"duration":0}},{"uid":"915028f042b276ea","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/915028f042b276ea","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731523737320,"stop":1731523737320,"duration":0}},{"uid":"a2fee4632ac82f85","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/a2fee4632ac82f85","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731523737320,"stop":1731523737320,"duration":0}},{"uid":"f46c2c0da7f0050a","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/f46c2c0da7f0050a","status":"passed","time":{"start":1731518236052,"stop":1731518313894,"duration":77842}},{"uid":"bf33fcb8daee1f86","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/bf33fcb8daee1f86","status":"passed","time":{"start":1731425880641,"stop":1731425958446,"duration":77805}},{"uid":"c78a9a1d580ba082","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/c78a9a1d580ba082","status":"passed","time":{"start":1731102894209,"stop":1731102972191,"duration":77982}},{"uid":"e9bac81f0c74963","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/e9bac81f0c74963","status":"passed","time":{"start":1731096967200,"stop":1731097045523,"duration":78323}}]},"tags":["nrf52840dk","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"953f057178be4b5c.json","parameterValues":["'nrf52840dk'","'zephyr'"]}