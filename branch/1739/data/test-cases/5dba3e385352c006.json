{"uid":"5dba3e385352c006","name":"test_settings","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.settings.pytest.test_sample#test_settings","historyId":"5fc23244204a698f8f9c242dda654c6a","time":{"start":1731546250667,"stop":1731546256665,"duration":5998},"status":"broken","statusMessage":"twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f5b6ab76350>\nproject = <golioth.golioth.Project object at 0x7f5b6acbae50>\ndevice = <golioth.golioth.Device object at 0x7f5b6ab52e90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_settings(shell, project, device, wifi_ssid, wifi_psk):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level setting exists\n    \n        await project.settings.set('LOOP_DELAY_S', 1)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        shell._device.readlines_until(regex=\".*Setting loop delay to 1 s\", timeout=90.0)\n    \n        # Set device-level setting\n    \n        await device.settings.set('LOOP_DELAY_S', 5)\n    \n>       shell._device.readlines_until(regex=\".*Setting loop delay to 5 s\", timeout=5.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/settings/pytest/test_sample.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"device_name","time":{"start":1731546249514,"stop":1731546249514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731546249514,"stop":1731546249514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731546249514,"stop":1731546249514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731546249514,"stop":1731546249514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731546249514,"stop":1731546249514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731546249514,"stop":1731546249514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1731546249514,"stop":1731546249514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731546249515,"stop":1731546249516,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731546249516,"stop":1731546249834,"duration":318},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731546249834,"stop":1731546250640,"duration":806},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731546250641,"stop":1731546250653,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731546250653,"stop":1731546250666,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f5b6ab76350>\nproject = <golioth.golioth.Project object at 0x7f5b6acbae50>\ndevice = <golioth.golioth.Device object at 0x7f5b6ab52e90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_settings(shell, project, device, wifi_ssid, wifi_psk):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level setting exists\n    \n        await project.settings.set('LOOP_DELAY_S', 1)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        shell._device.readlines_until(regex=\".*Setting loop delay to 1 s\", timeout=90.0)\n    \n        # Set device-level setting\n    \n        await device.settings.set('LOOP_DELAY_S', 5)\n    \n>       shell._device.readlines_until(regex=\".*Setting loop delay to 5 s\", timeout=5.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/settings/pytest/test_sample.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException","steps":[],"attachments":[{"uid":"997b0933f1104f21","name":"log","source":"997b0933f1104f21.txt","type":"text/plain","size":26667}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731546256703,"stop":1731546256703,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731546256704,"stop":1731546256983,"duration":279},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731546256983,"stop":1731546256984,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731546256984,"stop":1731546256984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 56"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"69b085053e8c"},{"name":"thread","value":"84229-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.settings.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":12,"unknown":0,"total":13},"items":[{"uid":"15a01ada96bd5c7c","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/15a01ada96bd5c7c","status":"passed","time":{"start":1731533321921,"stop":1731533328081,"duration":6160}},{"uid":"241f7f7e90075180","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/241f7f7e90075180","status":"passed","time":{"start":1731538588058,"stop":1731538594185,"duration":6127}},{"uid":"611c7c764869cae7","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/611c7c764869cae7","status":"passed","time":{"start":1731533708684,"stop":1731533715243,"duration":6559}},{"uid":"c9d719701dd9d0dc","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/c9d719701dd9d0dc","status":"passed","time":{"start":1731533334541,"stop":1731533340593,"duration":6052}},{"uid":"a4658e7407f704bc","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/a4658e7407f704bc","status":"passed","time":{"start":1731533321921,"stop":1731533328081,"duration":6160}},{"uid":"aaa9e8d72d5f9972","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/aaa9e8d72d5f9972","status":"passed","time":{"start":1731518180066,"stop":1731518185661,"duration":5595}},{"uid":"a1daba015eb92b95","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/a1daba015eb92b95","status":"passed","time":{"start":1731518180066,"stop":1731518185661,"duration":5595}},{"uid":"47cfaceb3b99c538","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/47cfaceb3b99c538","status":"passed","time":{"start":1731518180066,"stop":1731518185661,"duration":5595}},{"uid":"6995926aed71f0e7","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/6995926aed71f0e7","status":"passed","time":{"start":1731518180066,"stop":1731518185661,"duration":5595}},{"uid":"6793b7c0e48c3e0c","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/6793b7c0e48c3e0c","status":"passed","time":{"start":1731425804217,"stop":1731425810646,"duration":6429}},{"uid":"cfecc05334fac94e","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/cfecc05334fac94e","status":"passed","time":{"start":1731102152168,"stop":1731102158265,"duration":6097}},{"uid":"42bfed82716faf5e","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/42bfed82716faf5e","status":"passed","time":{"start":1731096763354,"stop":1731096769833,"duration":6479}}]},"tags":["GitHub Actions 56","native_sim_64","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"5dba3e385352c006.json","parameterValues":["'native_sim_64'","'zephyr'"]}