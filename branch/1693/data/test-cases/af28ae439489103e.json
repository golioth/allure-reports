{"uid":"af28ae439489103e","name":"test_many_args","fullName":"tests.hil.tests.rpc.test_rpc#test_many_args","historyId":"b16b878450b332b60ff5f4528b53d266","time":{"start":1729719385501,"stop":1729719390855,"duration":5354},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7f41ead0>\ndevice = <golioth.golioth.Device object at 0xffff7f41fe50>\n\n    async def test_many_args(board, device):\n>       await device.rpc.no_response(1,2,3,4,5,6,7,8,9)\n\ntests/hil/tests/rpc/test_rpc.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: in call\n    response = await c.post('rpc', json={\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729719336767,"stop":1729719336767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729719336768,"stop":1729719336768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729719336769,"stop":1729719336769,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729719336770,"stop":1729719336770,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729719336771,"stop":1729719336771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729719336772,"stop":1729719336772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729719336773,"stop":1729719336773,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729719336774,"stop":1729719336775,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729719336775,"stop":1729719336776,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729719336776,"stop":1729719336777,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729719336777,"stop":1729719336777,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729719336778,"stop":1729719336778,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729719336778,"stop":1729719337235,"duration":457},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729719337236,"stop":1729719376796,"duration":39560},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729719376798,"stop":1729719378232,"duration":1434},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729719378233,"stop":1729719382178,"duration":3945},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1729719446418,"stop":1729719446418,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729719446420,"stop":1729719447013,"duration":593},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729719447015,"stop":1729719447023,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729719447025,"stop":1729719447028,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"b589b9b35e01"},{"name":"thread","value":"259-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":16,"unknown":0,"total":19},"items":[{"uid":"c62e6fa76371ae89","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/c62e6fa76371ae89","status":"passed","time":{"start":1729717401069,"stop":1729717402060,"duration":991}},{"uid":"66c4de04bde2b6e5","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/66c4de04bde2b6e5","status":"passed","time":{"start":1729526959521,"stop":1729526960773,"duration":1252}},{"uid":"e30487d6989ad2b2","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/e30487d6989ad2b2","status":"passed","time":{"start":1729526959521,"stop":1729526960773,"duration":1252}},{"uid":"165927b81ccbe20e","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/165927b81ccbe20e","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729525867699,"stop":1729525873012,"duration":5313}},{"uid":"158f47bde81d5904","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/158f47bde81d5904","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729446525654,"stop":1729446530960,"duration":5306}},{"uid":"e44c7013f90e61b6","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/e44c7013f90e61b6","status":"passed","time":{"start":1729444725633,"stop":1729444727892,"duration":2259}},{"uid":"6f58d46ef65a5303","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/6f58d46ef65a5303","status":"passed","time":{"start":1729377902781,"stop":1729377904037,"duration":1256}},{"uid":"a59c92c9c8f4774b","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/a59c92c9c8f4774b","status":"passed","time":{"start":1729377902781,"stop":1729377904037,"duration":1256}},{"uid":"b5de7f48d70e82e0","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/b5de7f48d70e82e0","status":"passed","time":{"start":1729196708420,"stop":1729196710901,"duration":2481}},{"uid":"12f49442c0a168a8","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/12f49442c0a168a8","status":"passed","time":{"start":1729114512901,"stop":1729114513901,"duration":1000}},{"uid":"68ffc56e311deb27","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/68ffc56e311deb27","status":"passed","time":{"start":1729111857298,"stop":1729111858316,"duration":1018}},{"uid":"3efa51944c8486ab","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/3efa51944c8486ab","status":"passed","time":{"start":1729106682843,"stop":1729106683844,"duration":1001}},{"uid":"af2e2b00ee916e3e","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/af2e2b00ee916e3e","status":"passed","time":{"start":1729032902775,"stop":1729032904998,"duration":2223}},{"uid":"ec8ddd008c8fb778","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/ec8ddd008c8fb778","status":"passed","time":{"start":1729029631780,"stop":1729029633624,"duration":1844}},{"uid":"dca389a67124abe","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/dca389a67124abe","status":"passed","time":{"start":1729019466942,"stop":1729019467954,"duration":1012}},{"uid":"ad0477179126011d","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/ad0477179126011d","status":"passed","time":{"start":1729022189297,"stop":1729022190310,"duration":1013}},{"uid":"b4a7c6468162ea0b","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/b4a7c6468162ea0b","status":"passed","time":{"start":1729019466942,"stop":1729019467954,"duration":1012}},{"uid":"90a599e644666282","reportUrl":"https://golioth.github.io/allure-reports/branch/1638//#testresult/90a599e644666282","status":"passed","time":{"start":1729004653654,"stop":1729004654564,"duration":910}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"af28ae439489103e.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}