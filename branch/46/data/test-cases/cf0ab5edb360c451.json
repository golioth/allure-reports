{"uid":"cf0ab5edb360c451","name":"test_no_args","fullName":"tests.hil.tests.rpc.test_rpc#test_no_args","historyId":"8550db7a61e240971014d0cb2b88a59c","time":{"start":1736525438156,"stop":1736525443477,"duration":5321},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa62d9110>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffffa630f810>\ndevice = <golioth.golioth.Device object at 0xffffa62d8bd0>\n\n    async def test_no_args(board, device):\n>       await device.rpc.no_response()\n\ntests/hil/tests/rpc/test_rpc.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa62d9110>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1736525386079,"stop":1736525386080,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1736525386080,"stop":1736525386080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1736525386081,"stop":1736525386081,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1736525386082,"stop":1736525386082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736525386082,"stop":1736525386083,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736525386083,"stop":1736525386083,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1736525386084,"stop":1736525386084,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1736525386084,"stop":1736525386084,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736525386085,"stop":1736525386086,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736525386085,"stop":1736525386085,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1736525386085,"stop":1736525386085,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736525386086,"stop":1736525386086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736525386086,"stop":1736525386747,"duration":661},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1736525386748,"stop":1736525428302,"duration":41554},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736525428303,"stop":1736525429217,"duration":914},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736525429217,"stop":1736525437146,"duration":7929},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1736525517535,"stop":1736525517535,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1736525517538,"stop":1736525517938,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1736525517940,"stop":1736525517942,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736525517944,"stop":1736525517947,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"baaede5bf681"},{"name":"thread","value":"235-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":36,"unknown":0,"total":39},"items":[{"uid":"d7be274aa55eb2b","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/d7be274aa55eb2b","status":"passed","time":{"start":1736443241520,"stop":1736443242489,"duration":969}},{"uid":"da32989fcd3c66e9","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/da32989fcd3c66e9","status":"passed","time":{"start":1736439042166,"stop":1736439043121,"duration":955}},{"uid":"8c501e625458e09e","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/8c501e625458e09e","status":"passed","time":{"start":1736443241520,"stop":1736443242489,"duration":969}},{"uid":"730dd7f7355b1e35","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/730dd7f7355b1e35","status":"passed","time":{"start":1736439042166,"stop":1736439043121,"duration":955}},{"uid":"bdfc79b33507dce1","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/bdfc79b33507dce1","status":"passed","time":{"start":1736437383167,"stop":1736437384121,"duration":954}},{"uid":"450f7e39bbb2bb84","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/450f7e39bbb2bb84","status":"passed","time":{"start":1736431583465,"stop":1736431584429,"duration":964}},{"uid":"7941193206ea3372","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/7941193206ea3372","status":"passed","time":{"start":1736379818722,"stop":1736379819678,"duration":956}},{"uid":"4de21cf4487e7c85","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/4de21cf4487e7c85","status":"passed","time":{"start":1736376391435,"stop":1736376392372,"duration":937}},{"uid":"3b3347e4f837299","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/3b3347e4f837299","status":"passed","time":{"start":1736376084004,"stop":1736376085526,"duration":1522}},{"uid":"9aadd2c7ba01efc3","reportUrl":"https://golioth.github.io/allure-reports/branch/5/#testresult/9aadd2c7ba01efc3","status":"passed","time":{"start":1736352312022,"stop":1736352313576,"duration":1554}},{"uid":"982c91c51232c8cd","reportUrl":"https://golioth.github.io/allure-reports/branch/4/#testresult/982c91c51232c8cd","status":"passed","time":{"start":1736350320106,"stop":1736350321919,"duration":1813}},{"uid":"1a91107071b642c2","reportUrl":"https://golioth.github.io/allure-reports/branch/29/#testresult/1a91107071b642c2","status":"passed","time":{"start":1736358123059,"stop":1736358124656,"duration":1597}},{"uid":"842075cc25219e1c","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/842075cc25219e1c","status":"passed","time":{"start":1736281801746,"stop":1736281802714,"duration":968}},{"uid":"4880406fa4e70689","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/4880406fa4e70689","status":"passed","time":{"start":1736280757210,"stop":1736280758161,"duration":951}},{"uid":"51b8838cc7daa5fd","reportUrl":"https://golioth.github.io/allure-reports/branch/25//#testresult/51b8838cc7daa5fd","status":"passed","time":{"start":1736275190927,"stop":1736275192881,"duration":1954}},{"uid":"a8c793e9dc00d2ae","reportUrl":"https://golioth.github.io/allure-reports/branch/24/#testresult/a8c793e9dc00d2ae","status":"passed","time":{"start":1736268910750,"stop":1736268911684,"duration":934}},{"uid":"bd8104aa81a8f140","reportUrl":"https://golioth.github.io/allure-reports/branch/1/#testresult/bd8104aa81a8f140","status":"passed","time":{"start":1736222124280,"stop":1736222125232,"duration":952}},{"uid":"be1f525f50018952","reportUrl":"https://golioth.github.io/allure-reports/branch/20/#testresult/be1f525f50018952","status":"passed","time":{"start":1736218326027,"stop":1736218326983,"duration":956}},{"uid":"581139d44debe22e","reportUrl":"https://golioth.github.io/allure-reports/branch/20/#testresult/581139d44debe22e","status":"passed","time":{"start":1736205105811,"stop":1736205107452,"duration":1641}},{"uid":"94bce664f1c39a38","reportUrl":"https://golioth.github.io/allure-reports/branch/13/#testresult/94bce664f1c39a38","status":"passed","time":{"start":1735944604688,"stop":1735944606205,"duration":1517}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"cf0ab5edb360c451.json","parameterValues":["'rak5010'","'zephyr'"]}