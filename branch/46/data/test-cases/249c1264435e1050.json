{"uid":"249c1264435e1050","name":"test_observation_repeat_restart","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_repeat_restart","historyId":"c96172a93787f73c6d68c1d665ffe297","time":{"start":1736524807143,"stop":1736524812459,"duration":5316},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffaa375f50>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffaa39a4d0>\ndevice = <golioth.golioth.Device object at 0xffffaa376150>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n>           rsp = await device.rpc.disconnect()\n\ntests/hil/tests/rpc/test_rpc.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffaa375f50>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1736524693553,"stop":1736524693553,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1736524693554,"stop":1736524693554,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1736524693555,"stop":1736524693555,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736524693556,"stop":1736524693557,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1736524693556,"stop":1736524693556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736524693557,"stop":1736524693557,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1736524693558,"stop":1736524693558,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1736524693558,"stop":1736524693558,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1736524693558,"stop":1736524693559,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736524693559,"stop":1736524693559,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736524693560,"stop":1736524693560,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736524693560,"stop":1736524694263,"duration":703},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736524693560,"stop":1736524693560,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1736524694263,"stop":1736524709265,"duration":15002},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736524709268,"stop":1736524710358,"duration":1090},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736524710358,"stop":1736524785091,"duration":74733},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1736524840466,"stop":1736524840466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1736524840471,"stop":1736524841031,"duration":560},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1736524841033,"stop":1736524841035,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736524841037,"stop":1736524841040,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"055849151b83"},{"name":"thread","value":"233-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":35,"unknown":0,"total":39},"items":[{"uid":"5b664631cb46cfc2","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/5b664631cb46cfc2","status":"passed","time":{"start":1736454059336,"stop":1736454088218,"duration":28882}},{"uid":"f5375a98da202697","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/f5375a98da202697","status":"passed","time":{"start":1736439633919,"stop":1736439665211,"duration":31292}},{"uid":"bf7727d15516b7f0","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/bf7727d15516b7f0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736445245764,"stop":1736445245764,"duration":0}},{"uid":"b840eb9f316554fd","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/b840eb9f316554fd","status":"passed","time":{"start":1736439633919,"stop":1736439665211,"duration":31292}},{"uid":"30b57926dfc532ca","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/30b57926dfc532ca","status":"passed","time":{"start":1736432188173,"stop":1736432217593,"duration":29420}},{"uid":"73657c6aee1fc806","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/73657c6aee1fc806","status":"passed","time":{"start":1736432188173,"stop":1736432217593,"duration":29420}},{"uid":"c62055858dd58892","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/c62055858dd58892","status":"passed","time":{"start":1736279155153,"stop":1736279183804,"duration":28651}},{"uid":"24b2dcc43a7fc0d2","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/24b2dcc43a7fc0d2","status":"passed","time":{"start":1736279155153,"stop":1736279183804,"duration":28651}},{"uid":"b750b1681a7f780a","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/b750b1681a7f780a","status":"passed","time":{"start":1736282957711,"stop":1736282986670,"duration":28959}},{"uid":"44d00798e25d438e","reportUrl":"https://golioth.github.io/allure-reports/branch/5/#testresult/44d00798e25d438e","status":"passed","time":{"start":1736355226850,"stop":1736355258502,"duration":31652}},{"uid":"968295e959dc32ed","reportUrl":"https://golioth.github.io/allure-reports/branch/4/#testresult/968295e959dc32ed","status":"passed","time":{"start":1736351560836,"stop":1736351590389,"duration":29553}},{"uid":"625a3bb661cc590","reportUrl":"https://golioth.github.io/allure-reports/branch/29/#testresult/625a3bb661cc590","status":"passed","time":{"start":1736359302378,"stop":1736359334347,"duration":31969}},{"uid":"ba511618219fcd79","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/ba511618219fcd79","status":"passed","time":{"start":1736282957711,"stop":1736282986670,"duration":28959}},{"uid":"35d4c04efbcb829e","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/35d4c04efbcb829e","status":"passed","time":{"start":1736279155153,"stop":1736279183804,"duration":28651}},{"uid":"35abaac4116cc80a","reportUrl":"https://golioth.github.io/allure-reports/branch/25//#testresult/35abaac4116cc80a","status":"passed","time":{"start":1736273286374,"stop":1736273315244,"duration":28870}},{"uid":"2b3139c13681698a","reportUrl":"https://golioth.github.io/allure-reports/branch/24/#testresult/2b3139c13681698a","status":"passed","time":{"start":1736268500452,"stop":1736268530165,"duration":29713}},{"uid":"fb1ada762ab240a3","reportUrl":"https://golioth.github.io/allure-reports/branch/1/#testresult/fb1ada762ab240a3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736223367224,"stop":1736223367224,"duration":0}},{"uid":"3a0eeb2ec08371d9","reportUrl":"https://golioth.github.io/allure-reports/branch/20/#testresult/3a0eeb2ec08371d9","status":"passed","time":{"start":1736205849380,"stop":1736205878998,"duration":29618}},{"uid":"3ac289217468226c","reportUrl":"https://golioth.github.io/allure-reports/branch/20/#testresult/3ac289217468226c","status":"passed","time":{"start":1736205849380,"stop":1736205878998,"duration":29618}},{"uid":"8c5a1210720cf99","reportUrl":"https://golioth.github.io/allure-reports/branch/13/#testresult/8c5a1210720cf99","status":"passed","time":{"start":1735945955786,"stop":1735945988205,"duration":32419}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"249c1264435e1050.json","parameterValues":["'nrf9160dk'","'zephyr'"]}