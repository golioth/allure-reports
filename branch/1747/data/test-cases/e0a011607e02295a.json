{"uid":"e0a011607e02295a","name":"test_block_operations","fullName":"tests.hil.tests.ota.test_ota#test_block_operations","historyId":"28fcaa5003fcf8df7e04c1409aa64846","time":{"start":1731689336168,"stop":1731689336168,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 186299.1507393287\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff9b7c79d0>\ndevice = <golioth.golioth.Device object at 0xffff9b7a8190>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/ota/test_ota.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 186299.1507393287\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731689194837,"stop":1731689194838,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731689194839,"stop":1731689194839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731689194840,"stop":1731689194840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731689194841,"stop":1731689194841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731689194842,"stop":1731689194843,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731689194843,"stop":1731689194844,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731689194845,"stop":1731689194845,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731689194846,"stop":1731689194846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731689194847,"stop":1731689194847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731689194848,"stop":1731689194848,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731689194849,"stop":1731689194849,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731689194850,"stop":1731689194850,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731689194851,"stop":1731689213292,"duration":18441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731689213293,"stop":1731689213804,"duration":511},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731689213804,"stop":1731689214737,"duration":933},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731689214738,"stop":1731689335204,"duration":120466},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/ota/test_ota.py\", line 47, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1731689336923,"stop":1731689337451,"duration":528},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731689337453,"stop":1731689337454,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731689337455,"stop":1731689337459,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"b2c7d283182a"},{"name":"thread","value":"265-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6f73bb512b692095","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731624091720,"stop":1731624091720,"duration":0}},{"uid":"7066ba6e7a1a9198","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731621545749,"stop":1731621545749,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":13,"unknown":0,"total":20},"items":[{"uid":"e60a5dfa1e3b6234","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/e60a5dfa1e3b6234","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731624091720,"stop":1731624091720,"duration":0}},{"uid":"271540fbce03f107","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/271540fbce03f107","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731621545749,"stop":1731621545749,"duration":0}},{"uid":"fc1d7516f56ed66c","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/fc1d7516f56ed66c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731615380317,"stop":1731615380317,"duration":0}},{"uid":"dfd0034b719d920a","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/dfd0034b719d920a","status":"passed","time":{"start":1731612614963,"stop":1731612617676,"duration":2713}},{"uid":"2954f8b89ff4e78d","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/2954f8b89ff4e78d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731610087949,"stop":1731610087949,"duration":0}},{"uid":"645e022903fac1de","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/645e022903fac1de","status":"passed","time":{"start":1731541777555,"stop":1731541780157,"duration":2602}},{"uid":"5ff088ffd8dc74f4","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/5ff088ffd8dc74f4","status":"passed","time":{"start":1731547607382,"stop":1731547608720,"duration":1338}},{"uid":"896ce67a991cfb7c","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/896ce67a991cfb7c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731563940032,"stop":1731563940032,"duration":0}},{"uid":"8798840ec814f353","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/8798840ec814f353","status":"passed","time":{"start":1731541777555,"stop":1731541780157,"duration":2602}},{"uid":"dea6efde80de018e","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/dea6efde80de018e","status":"passed","time":{"start":1731537006305,"stop":1731537010194,"duration":3889}},{"uid":"68a4c3bca14cc56c","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/68a4c3bca14cc56c","status":"passed","time":{"start":1731535134686,"stop":1731535137856,"duration":3170}},{"uid":"7faaf8bc7c7b62e0","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/7faaf8bc7c7b62e0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731534373272,"stop":1731534373272,"duration":0}},{"uid":"14a57cd74cfc6974","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/14a57cd74cfc6974","status":"passed","time":{"start":1731518860876,"stop":1731518862447,"duration":1571}},{"uid":"f23e5ed8476e4277","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/f23e5ed8476e4277","status":"passed","time":{"start":1731518860876,"stop":1731518862447,"duration":1571}},{"uid":"a850cc1fcb6a7c34","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/a850cc1fcb6a7c34","status":"passed","time":{"start":1731518860876,"stop":1731518862447,"duration":1571}},{"uid":"98582ed79718a01b","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/98582ed79718a01b","status":"passed","time":{"start":1731518860876,"stop":1731518862447,"duration":1571}},{"uid":"c9a92e7f0ab9d50c","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/c9a92e7f0ab9d50c","status":"passed","time":{"start":1731426494818,"stop":1731426496892,"duration":2074}},{"uid":"6a09df6085ee233d","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/6a09df6085ee233d","status":"passed","time":{"start":1731103067493,"stop":1731103069873,"duration":2380}},{"uid":"ae4aebf931ef444b","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/ae4aebf931ef444b","status":"passed","time":{"start":1731097678489,"stop":1731097682045,"duration":3556}}]},"tags":["anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"e0a011607e02295a.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}