{"uid":"ca56e5ecc9aaeeaf","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1732312555970,"stop":1732312579382,"duration":23412},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff958d79d0>\ndevice = <golioth.golioth.Device object at 0xffff95a43e90>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732312517557,"stop":1732312517558,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732312517558,"stop":1732312517558,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732312517559,"stop":1732312517559,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732312517559,"stop":1732312517559,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732312517560,"stop":1732312517562,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732312517560,"stop":1732312517560,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732312517563,"stop":1732312517563,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732312517564,"stop":1732312517564,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732312517565,"stop":1732312518118,"duration":553},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732312518119,"stop":1732312519150,"duration":1031},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732312519151,"stop":1732312555334,"duration":36183},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732312555335,"stop":1732312555967,"duration":632},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff958d79d0>\ndevice = <golioth.golioth.Device object at 0xffff95a43e90>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"acc6440ce8bc1fa6","name":"log","source":"acc6440ce8bc1fa6.txt","type":"text/plain","size":31817}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732312579681,"stop":1732312579728,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732312579730,"stop":1732312580338,"duration":608},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732312580340,"stop":1732312580342,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732312580347,"stop":1732312580347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"5bbb751438c3"},{"name":"thread","value":"340-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":31,"skipped":0,"passed":55,"unknown":0,"total":86},"items":[{"uid":"ca1ea82b1b24e90b","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/ca1ea82b1b24e90b","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1732301841213,"stop":1732301863514,"duration":22301}},{"uid":"a58b263c5ba64d44","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/a58b263c5ba64d44","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1732301841213,"stop":1732301863514,"duration":22301}},{"uid":"5d06436998fb89ce","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/5d06436998fb89ce","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1732301841213,"stop":1732301863514,"duration":22301}},{"uid":"e7cf9125f9ec14d1","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/e7cf9125f9ec14d1","status":"passed","time":{"start":1732292324396,"stop":1732292343370,"duration":18974}},{"uid":"b82eeb53d60faa29","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/b82eeb53d60faa29","status":"passed","time":{"start":1732225201029,"stop":1732225221605,"duration":20576}},{"uid":"576a0a04f7fd7961","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/576a0a04f7fd7961","status":"passed","time":{"start":1732292324396,"stop":1732292343370,"duration":18974}},{"uid":"76ce3a89503a1be4","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/76ce3a89503a1be4","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1732227509571,"stop":1732227533553,"duration":23982}},{"uid":"e9ddbe968e378c93","reportUrl":"https://golioth.github.io/allure-reports/branch/1827//#testresult/e9ddbe968e378c93","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732290177241,"stop":1732290269923,"duration":92682}},{"uid":"d0944a1feadccc0b","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/d0944a1feadccc0b","status":"passed","time":{"start":1732289134631,"stop":1732289153495,"duration":18864}},{"uid":"8d1c61cf6513f223","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/8d1c61cf6513f223","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732286843605,"stop":1732286936331,"duration":92726}},{"uid":"2fe33da9b5be5736","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/2fe33da9b5be5736","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732283533279,"stop":1732283625977,"duration":92698}},{"uid":"5f70942d9f606f0f","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/5f70942d9f606f0f","status":"passed","time":{"start":1732280097485,"stop":1732280116955,"duration":19470}},{"uid":"eb9c37aefe2127e9","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/eb9c37aefe2127e9","status":"passed","time":{"start":1732274445000,"stop":1732274464067,"duration":19067}},{"uid":"bb161d5b0da51b80","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/bb161d5b0da51b80","status":"passed","time":{"start":1732273216659,"stop":1732273235857,"duration":19198}},{"uid":"8922e6cb77450c55","reportUrl":"https://golioth.github.io/allure-reports/branch/1819//#testresult/8922e6cb77450c55","status":"passed","time":{"start":1732232061340,"stop":1732232081534,"duration":20194}},{"uid":"4e129d6928cfc1c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/4e129d6928cfc1c9","status":"passed","time":{"start":1732225201029,"stop":1732225221605,"duration":20576}},{"uid":"1530d5a92090db67","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/1530d5a92090db67","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1732227509571,"stop":1732227533553,"duration":23982}},{"uid":"f606e50b5d2c2075","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/f606e50b5d2c2075","status":"passed","time":{"start":1732225201029,"stop":1732225221605,"duration":20576}},{"uid":"e4ddb176fb81c33d","reportUrl":"https://golioth.github.io/allure-reports/branch/1816//#testresult/e4ddb176fb81c33d","status":"broken","statusDetails":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'","time":{"start":1732221224662,"stop":1732221224662,"duration":0}},{"uid":"9d2f2a37b13bcd09","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/9d2f2a37b13bcd09","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732217105594,"stop":1732217198336,"duration":92742}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"ca56e5ecc9aaeeaf.json","parameterValues":["'rak5010'","'zephyr'"]}