{"uid":"c5aa235376966ff5","name":"test_set_int_range_out_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_out_min","historyId":"c2044a44affa44a6054bb6d6ddcfd33a","time":{"start":1761326130918,"stop":1761326142629,"duration":11711},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff80e241a0>\ndevice = <golioth.golioth.Device object at 0xffff80e24440>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff80e24440>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1761326039821,"stop":1761326039822,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1761326039822,"stop":1761326039822,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1761326039823,"stop":1761326039823,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1761326039824,"stop":1761326039825,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1761326039824,"stop":1761326039824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1761326039825,"stop":1761326039826,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1761326039825,"stop":1761326039825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1761326039826,"stop":1761326040141,"duration":315},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1761326040142,"stop":1761326083704,"duration":43562},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1761326083706,"stop":1761326084150,"duration":444},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1761326084151,"stop":1761326096023,"duration":11872},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff80e241a0>\ndevice = <golioth.golioth.Device object at 0xffff80e24440>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff80e24440>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"c31aaafe153c6680","name":"stdout","source":"c31aaafe153c6680.txt","type":"text/plain","size":260}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1761326230267,"stop":1761326230267,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1761326230270,"stop":1761326230474,"duration":204},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1761326230476,"stop":1761326230484,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1761326230486,"stop":1761326230488,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"0af1d7edfb98"},{"name":"thread","value":"236-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":11},"items":[{"uid":"83e1a1284f53e165","reportUrl":"https://golioth.github.io/allure-reports/branch/822//#testresult/83e1a1284f53e165","status":"passed","time":{"start":1761317796357,"stop":1761317808171,"duration":11814}},{"uid":"aa3545f3a0592710","reportUrl":"https://golioth.github.io/allure-reports/branch/813//#testresult/aa3545f3a0592710","status":"passed","time":{"start":1761257463528,"stop":1761257475382,"duration":11854}},{"uid":"296ac401c4b96de","reportUrl":"https://golioth.github.io/allure-reports/branch/809//#testresult/296ac401c4b96de","status":"passed","time":{"start":1761247819892,"stop":1761247831793,"duration":11901}},{"uid":"80678343c1efdcde","reportUrl":"https://golioth.github.io/allure-reports/branch/790//#testresult/80678343c1efdcde","status":"passed","time":{"start":1761073553021,"stop":1761073564713,"duration":11692}},{"uid":"212cd1edbcbba4fb","reportUrl":"https://golioth.github.io/allure-reports/branch/790//#testresult/212cd1edbcbba4fb","status":"passed","time":{"start":1761073553021,"stop":1761073564713,"duration":11692}},{"uid":"2469e7c552c06448","reportUrl":"https://golioth.github.io/allure-reports/branch/788//#testresult/2469e7c552c06448","status":"passed","time":{"start":1761069693500,"stop":1761069705326,"duration":11826}},{"uid":"bbc56a858a74463e","reportUrl":"https://golioth.github.io/allure-reports/branch/788//#testresult/bbc56a858a74463e","status":"passed","time":{"start":1761065181827,"stop":1761065193790,"duration":11963}},{"uid":"1b69000edfbbcb8c","reportUrl":"https://golioth.github.io/allure-reports/branch/787//#testresult/1b69000edfbbcb8c","status":"passed","time":{"start":1761055455732,"stop":1761055467541,"duration":11809}},{"uid":"57ccc12f43f00c25","reportUrl":"https://golioth.github.io/allure-reports/branch/784//#testresult/57ccc12f43f00c25","status":"passed","time":{"start":1760993599838,"stop":1760993611967,"duration":12129}},{"uid":"54b4009bc456aceb","reportUrl":"https://golioth.github.io/allure-reports/branch/783//#testresult/54b4009bc456aceb","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1760990862648,"stop":1760990874863,"duration":12215}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi"]},"source":"c5aa235376966ff5.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}