{
  "uid" : "92293740b0940572",
  "name" : "test_int_too_large",
  "fullName" : "tests.hil.tests.settings.test_settings#test_int_too_large",
  "historyId" : "904917f16e15151e1ed741401de93920",
  "time" : {
    "start" : 1733449453898,
    "stop" : 1733449466537,
    "duration" : 12639
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert (False or 4 is None)",
  "statusTrace" : "board = <espidfboard.ESPIDFBoard object at 0xffffb3f33650>\ndevice = <golioth.golioth.Device object at 0xffffb3f9f050>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffb3f9f050>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "board",
    "time" : {
      "start" : 1733449386283,
      "stop" : 1733449434517,
      "duration" : 48234
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733449385841,
      "stop" : 1733449385842,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733449385846,
      "stop" : 1733449385846,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733449385849,
      "stop" : 1733449385849,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733449385844,
      "stop" : 1733449385845,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733449385845,
      "stop" : 1733449385845,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733449434519,
      "stop" : 1733449436088,
      "duration" : 1569
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733449385848,
      "stop" : 1733449385848,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1733449436089,
      "stop" : 1733449450464,
      "duration" : 14375
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733449385843,
      "stop" : 1733449385843,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733449385850,
      "stop" : 1733449386282,
      "duration" : 432
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733449385847,
      "stop" : 1733449385847,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733449385844,
      "stop" : 1733449385844,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733449385849,
      "stop" : 1733449385849,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733449385848,
      "stop" : 1733449385848,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733449385850,
      "stop" : 1733449385850,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert (False or 4 is None)",
    "statusTrace" : "board = <espidfboard.ESPIDFBoard object at 0xffffb3f33650>\ndevice = <golioth.golioth.Device object at 0xffffb3f9f050>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffb3f9f050>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a4c5d99b4fd8f5b3",
      "name" : "stdout",
      "source" : "a4c5d99b4fd8f5b3.txt",
      "type" : "text/plain",
      "size" : 3143
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1733449593504,
      "stop" : 1733449593505,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733449592769,
      "stop" : 1733449593501,
      "duration" : 732
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup::0",
    "time" : {
      "start" : 1733449592766,
      "stop" : 1733449592766,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733449593507,
      "stop" : 1733449593509,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "hil.esp-idf.esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_settings"
  }, {
    "name" : "host",
    "value" : "366d3f52994b"
  }, {
    "name" : "thread",
    "value" : "262-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.settings.test_settings"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32c3_devkitm_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 104,
        "unknown" : 0,
        "total" : 107
      },
      "items" : [ {
        "uid" : "21280fa6a853c4ca",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1870/#testresult/21280fa6a853c4ca",
        "status" : "passed",
        "time" : {
          "start" : 1733439972376,
          "stop" : 1733439984778,
          "duration" : 12402
        }
      }, {
        "uid" : "f0a72065f9c53066",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1868/#testresult/f0a72065f9c53066",
        "status" : "passed",
        "time" : {
          "start" : 1733412540002,
          "stop" : 1733412552448,
          "duration" : 12446
        }
      }, {
        "uid" : "8aa1a45345e19140",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1865/#testresult/8aa1a45345e19140",
        "status" : "passed",
        "time" : {
          "start" : 1733351009063,
          "stop" : 1733351021490,
          "duration" : 12427
        }
      }, {
        "uid" : "57d3d1b4c27cdcdf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1864/#testresult/57d3d1b4c27cdcdf",
        "status" : "broken",
        "statusDetails" : "httpx.ReadTimeout",
        "time" : {
          "start" : 1733327188840,
          "stop" : 1733327188840,
          "duration" : 0
        }
      }, {
        "uid" : "6836b74a3dce55e9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/6836b74a3dce55e9",
        "status" : "passed",
        "time" : {
          "start" : 1733252751311,
          "stop" : 1733252763583,
          "duration" : 12272
        }
      }, {
        "uid" : "8719647ac2f542db",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/8719647ac2f542db",
        "status" : "passed",
        "time" : {
          "start" : 1733189179840,
          "stop" : 1733189192193,
          "duration" : 12353
        }
      }, {
        "uid" : "f77392a7443925e0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/f77392a7443925e0",
        "status" : "passed",
        "time" : {
          "start" : 1732727697590,
          "stop" : 1732727709933,
          "duration" : 12343
        }
      }, {
        "uid" : "60c6ac54ac7f2216",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/60c6ac54ac7f2216",
        "status" : "passed",
        "time" : {
          "start" : 1732748202028,
          "stop" : 1732748214413,
          "duration" : 12385
        }
      }, {
        "uid" : "e64c49b999065e32",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/e64c49b999065e32",
        "status" : "passed",
        "time" : {
          "start" : 1732727697590,
          "stop" : 1732727709933,
          "duration" : 12343
        }
      }, {
        "uid" : "127488afa9718d15",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/127488afa9718d15",
        "status" : "passed",
        "time" : {
          "start" : 1732722513649,
          "stop" : 1732722525885,
          "duration" : 12236
        }
      }, {
        "uid" : "ac28c233ef660664",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/ac28c233ef660664",
        "status" : "passed",
        "time" : {
          "start" : 1732629790328,
          "stop" : 1732629802621,
          "duration" : 12293
        }
      }, {
        "uid" : "ec33e78c96478381",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/ec33e78c96478381",
        "status" : "passed",
        "time" : {
          "start" : 1732629790328,
          "stop" : 1732629802621,
          "duration" : 12293
        }
      }, {
        "uid" : "f393f9555440e55b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/f393f9555440e55b",
        "status" : "passed",
        "time" : {
          "start" : 1732558589842,
          "stop" : 1732558602159,
          "duration" : 12317
        }
      }, {
        "uid" : "4eab7f5eb8cde6c7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/4eab7f5eb8cde6c7",
        "status" : "passed",
        "time" : {
          "start" : 1732558589842,
          "stop" : 1732558602159,
          "duration" : 12317
        }
      }, {
        "uid" : "2be97b09f520303f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/2be97b09f520303f",
        "status" : "passed",
        "time" : {
          "start" : 1732552828615,
          "stop" : 1732552840984,
          "duration" : 12369
        }
      }, {
        "uid" : "c3cfbf2a29d9cb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/c3cfbf2a29d9cb",
        "status" : "passed",
        "time" : {
          "start" : 1732507424695,
          "stop" : 1732507436902,
          "duration" : 12207
        }
      }, {
        "uid" : "e540ab48904b1f98",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/e540ab48904b1f98",
        "status" : "passed",
        "time" : {
          "start" : 1732507424695,
          "stop" : 1732507436902,
          "duration" : 12207
        }
      }, {
        "uid" : "8da20224b7283398",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/8da20224b7283398",
        "status" : "passed",
        "time" : {
          "start" : 1732310563888,
          "stop" : 1732310576235,
          "duration" : 12347
        }
      }, {
        "uid" : "b3fc49502547a85f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/b3fc49502547a85f",
        "status" : "passed",
        "time" : {
          "start" : 1732310563888,
          "stop" : 1732310576235,
          "duration" : 12347
        }
      }, {
        "uid" : "881bcf75f930f981",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/881bcf75f930f981",
        "status" : "passed",
        "time" : {
          "start" : 1732310563888,
          "stop" : 1732310576235,
          "duration" : 12347
        }
      } ]
    },
    "tags" : [ "esp-idf", "anyio", "mikes_testbench", "esp32c3_devkitm_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "92293740b0940572.json",
  "parameterValues" : [ "'esp32c3_devkitm_espidf'", "'esp-idf'" ]
}