{
  "uid" : "b9c1201ed1d8dee4",
  "name" : "test_lightdb_observe",
  "fullName" : "examples.esp_idf.lightdb.observe.pytest.test_sample#test_lightdb_observe",
  "historyId" : "16ccb33e847b08621f3ec829cdbac796",
  "time" : {
    "start" : 1733452661413,
    "stop" : 1733452681897,
    "duration" : 20484
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 140560.51973779983\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffaebb6350>\ndevice = <golioth.golioth.Device object at 0xffffaebf9590>\n\n    async def test_lightdb_observe(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        await trio.sleep(2)\n    \n        pattern = re.compile(r'.*6e 75 6c 6c\\s+\\|null')\n        success_pattern = await board.wait_for_regex_in_line(pattern, timeout_s=10.0)\n        if success_pattern:\n            print(\"Success for pattern '6e 75 6c 6c |null'\")\n    \n        await device.lightdb.set(\"counter\", 87)\n    \n        await trio.sleep(2)\n    \n        pattern = re.compile(r'.*38 37\\s+\\|87')\n>       success_pattern = await board.wait_for_regex_in_line(pattern, timeout_s=10.0)\n\nexamples/esp_idf/lightdb/observe/pytest/test_sample.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 140560.51973779983\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "fw_image",
    "time" : {
      "start" : 1733452608427,
      "stop" : 1733452608428,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733452608425,
      "stop" : 1733452608425,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733452608431,
      "stop" : 1733452656537,
      "duration" : 48106
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733452608427,
      "stop" : 1733452608427,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733452608422,
      "stop" : 1733452608423,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733452608428,
      "stop" : 1733452608428,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733452608424,
      "stop" : 1733452608424,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733452608430,
      "stop" : 1733452608430,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733452656538,
      "stop" : 1733452658142,
      "duration" : 1604
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733452608429,
      "stop" : 1733452608429,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733452658143,
      "stop" : 1733452661409,
      "duration" : 3266
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733452608430,
      "stop" : 1733452608430,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733452608429,
      "stop" : 1733452608430,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733452608421,
      "stop" : 1733452608421,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733452608426,
      "stop" : 1733452608426,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 140560.51973779983\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffaebb6350>\ndevice = <golioth.golioth.Device object at 0xffffaebf9590>\n\n    async def test_lightdb_observe(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        await trio.sleep(2)\n    \n        pattern = re.compile(r'.*6e 75 6c 6c\\s+\\|null')\n        success_pattern = await board.wait_for_regex_in_line(pattern, timeout_s=10.0)\n        if success_pattern:\n            print(\"Success for pattern '6e 75 6c 6c |null'\")\n    \n        await device.lightdb.set(\"counter\", 87)\n    \n        await trio.sleep(2)\n    \n        pattern = re.compile(r'.*38 37\\s+\\|87')\n>       success_pattern = await board.wait_for_regex_in_line(pattern, timeout_s=10.0)\n\nexamples/esp_idf/lightdb/observe/pytest/test_sample.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 140560.51973779983\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ef2e84b055d852f4",
      "name" : "stdout",
      "source" : "ef2e84b055d852f4.txt",
      "type" : "text/plain",
      "size" : 8073
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1733452682772,
      "stop" : 1733452682776,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733452682770,
      "stop" : 1733452682771,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733452682359,
      "stop" : 1733452682768,
      "duration" : 409
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "e9cbd9a14881"
  }, {
    "name" : "thread",
    "value" : "258-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.lightdb.observe.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32c3_devkitm_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 105,
        "unknown" : 0,
        "total" : 107
      },
      "items" : [ {
        "uid" : "3bc7c63ed34ae15",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1870/#testresult/3bc7c63ed34ae15",
        "status" : "passed",
        "time" : {
          "start" : 1733442019277,
          "stop" : 1733442029210,
          "duration" : 9933
        }
      }, {
        "uid" : "80a0437df7a4ffe",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1868/#testresult/80a0437df7a4ffe",
        "status" : "passed",
        "time" : {
          "start" : 1733413080622,
          "stop" : 1733413091287,
          "duration" : 10665
        }
      }, {
        "uid" : "e172ca2d440a5cb5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1865/#testresult/e172ca2d440a5cb5",
        "status" : "passed",
        "time" : {
          "start" : 1733351531743,
          "stop" : 1733351541732,
          "duration" : 9989
        }
      }, {
        "uid" : "1182161da8dfc91a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1864/#testresult/1182161da8dfc91a",
        "status" : "passed",
        "time" : {
          "start" : 1733327598138,
          "stop" : 1733327608266,
          "duration" : 10128
        }
      }, {
        "uid" : "a91bf5cd88ab2eb9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/a91bf5cd88ab2eb9",
        "status" : "passed",
        "time" : {
          "start" : 1733253281770,
          "stop" : 1733253292080,
          "duration" : 10310
        }
      }, {
        "uid" : "52abe2917b2ef378",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/52abe2917b2ef378",
        "status" : "passed",
        "time" : {
          "start" : 1733189698638,
          "stop" : 1733189708858,
          "duration" : 10220
        }
      }, {
        "uid" : "4e7c1e510f9a7601",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/4e7c1e510f9a7601",
        "status" : "passed",
        "time" : {
          "start" : 1732728214575,
          "stop" : 1732728224604,
          "duration" : 10029
        }
      }, {
        "uid" : "5ac01a5966b50d03",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/5ac01a5966b50d03",
        "status" : "passed",
        "time" : {
          "start" : 1732748719970,
          "stop" : 1732748729925,
          "duration" : 9955
        }
      }, {
        "uid" : "4519e4aba17890c2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/4519e4aba17890c2",
        "status" : "passed",
        "time" : {
          "start" : 1732728214575,
          "stop" : 1732728224604,
          "duration" : 10029
        }
      }, {
        "uid" : "121edc2cd2544547",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/121edc2cd2544547",
        "status" : "passed",
        "time" : {
          "start" : 1732723034334,
          "stop" : 1732723044679,
          "duration" : 10345
        }
      }, {
        "uid" : "111a9975bc32afbe",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/111a9975bc32afbe",
        "status" : "passed",
        "time" : {
          "start" : 1732630309694,
          "stop" : 1732630319934,
          "duration" : 10240
        }
      }, {
        "uid" : "80c737e3bc138156",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/80c737e3bc138156",
        "status" : "passed",
        "time" : {
          "start" : 1732630309694,
          "stop" : 1732630319934,
          "duration" : 10240
        }
      }, {
        "uid" : "936375086701851c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/936375086701851c",
        "status" : "passed",
        "time" : {
          "start" : 1732559113001,
          "stop" : 1732559123507,
          "duration" : 10506
        }
      }, {
        "uid" : "bf82f7cf07b5ddb3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/bf82f7cf07b5ddb3",
        "status" : "passed",
        "time" : {
          "start" : 1732559113001,
          "stop" : 1732559123507,
          "duration" : 10506
        }
      }, {
        "uid" : "f18ff4556bda9f53",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/f18ff4556bda9f53",
        "status" : "passed",
        "time" : {
          "start" : 1732553354248,
          "stop" : 1732553364774,
          "duration" : 10526
        }
      }, {
        "uid" : "912e73a930b555d3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/912e73a930b555d3",
        "status" : "passed",
        "time" : {
          "start" : 1732507718564,
          "stop" : 1732507729143,
          "duration" : 10579
        }
      }, {
        "uid" : "7b8fde3ca008695a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/7b8fde3ca008695a",
        "status" : "passed",
        "time" : {
          "start" : 1732507718564,
          "stop" : 1732507729143,
          "duration" : 10579
        }
      }, {
        "uid" : "5f3f83b355595b0f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/5f3f83b355595b0f",
        "status" : "passed",
        "time" : {
          "start" : 1732311084312,
          "stop" : 1732311094124,
          "duration" : 9812
        }
      }, {
        "uid" : "b0b80ec1c3fa20e0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/b0b80ec1c3fa20e0",
        "status" : "passed",
        "time" : {
          "start" : 1732311084312,
          "stop" : 1732311094124,
          "duration" : 9812
        }
      }, {
        "uid" : "f25e97989e65ea22",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/f25e97989e65ea22",
        "status" : "passed",
        "time" : {
          "start" : 1732311084312,
          "stop" : 1732311094124,
          "duration" : 9812
        }
      } ]
    },
    "tags" : [ "esp-idf", "anyio", "mikes_testbench", "esp32c3_devkitm_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "b9c1201ed1d8dee4.json",
  "parameterValues" : [ "'esp32c3_devkitm_espidf'", "'esp-idf'" ]
}