{"uid":"abcccf3dddccd710","name":"test_cancel_all","fullName":"tests.hil.tests.settings.test_settings#test_cancel_all","historyId":"e7b2d12a916ae38fec31072e5dc2acfb","time":{"start":1732143423034,"stop":1732143431090,"duration":8056},"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:257: in __aiter__\n    async for part in self._httpcore_stream:\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:367: in __aiter__\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:363: in __aiter__\n    async for part in self._stream:\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:349: in __aiter__\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:341: in __aiter__\n    async for chunk in self._connection._receive_response_body(**kwargs):\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:210: in _receive_response_body\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff7d1c8e90>\ndevice = <golioth.golioth.Device object at 0xffff7d1b3dd0>\n\n    async def test_cancel_all(board, device):\n        # Cancel all settings\n>       await device.settings.set('TEST_CANCEL', True)\n\ntests/hil/tests/settings/test_settings.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:713: in set\n    setting = await self.device.project.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:986: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:982: in get_all\n    response = await self.project.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1688: in send\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1682: in send\n    await response.aread()\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:913: in aread\n    self._content = b\"\".join([part async for part in self.aiter_bytes()])\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:913: in <listcomp>\n    self._content = b\"\".join([part async for part in self.aiter_bytes()])\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:931: in aiter_bytes\n    async for raw_bytes in self.aiter_raw():\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:989: in aiter_raw\n    async for raw_stream_bytes in self.stream:\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:150: in __aiter__\n    async for chunk in self._stream:\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:256: in __aiter__\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732143291058,"stop":1732143291059,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732143291059,"stop":1732143291060,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732143291060,"stop":1732143291060,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732143291061,"stop":1732143291061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732143291062,"stop":1732143291063,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732143291062,"stop":1732143291062,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732143291063,"stop":1732143291063,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732143291064,"stop":1732143291064,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732143291064,"stop":1732143291064,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732143291065,"stop":1732143291066,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732143291065,"stop":1732143291065,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732143291065,"stop":1732143291065,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732143291066,"stop":1732143291708,"duration":642},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732143291708,"stop":1732143312018,"duration":20310},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732143312020,"stop":1732143313251,"duration":1231},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732143313251,"stop":1732143326884,"duration":13633},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732143461771,"stop":1732143461771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732143461776,"stop":1732143462474,"duration":698},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732143462476,"stop":1732143462531,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732143462534,"stop":1732143462536,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"858643d88f28"},{"name":"thread","value":"311-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":8,"skipped":0,"passed":42,"unknown":0,"total":51},"items":[{"uid":"9aa01ae7406f1fc6","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/9aa01ae7406f1fc6","status":"passed","time":{"start":1732141618885,"stop":1732141649312,"duration":30427}},{"uid":"799c6fd49ed33532","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/799c6fd49ed33532","status":"passed","time":{"start":1732140610900,"stop":1732140641896,"duration":30996}},{"uid":"cfaceb06feb9a66","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/cfaceb06feb9a66","status":"passed","time":{"start":1732133983591,"stop":1732134013863,"duration":30272}},{"uid":"1d96e7365dbe9b7a","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/1d96e7365dbe9b7a","status":"passed","time":{"start":1732043029116,"stop":1732043060141,"duration":31025}},{"uid":"697c2235dabf312","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/697c2235dabf312","status":"passed","time":{"start":1732043029116,"stop":1732043060141,"duration":31025}},{"uid":"e3b94a79e3f2a547","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/e3b94a79e3f2a547","status":"passed","time":{"start":1732124868245,"stop":1732124901941,"duration":33696}},{"uid":"64d3c008ac7a875e","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/64d3c008ac7a875e","status":"passed","time":{"start":1732123369124,"stop":1732123399400,"duration":30276}},{"uid":"b0649a01fc813990","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/b0649a01fc813990","status":"passed","time":{"start":1732043029116,"stop":1732043060141,"duration":31025}},{"uid":"2037c2f6f8734494","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/2037c2f6f8734494","status":"passed","time":{"start":1732052931680,"stop":1732052961213,"duration":29533}},{"uid":"a7d3db5d91e7b4d0","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/a7d3db5d91e7b4d0","status":"passed","time":{"start":1732052931680,"stop":1732052961213,"duration":29533}},{"uid":"8c208dce51281a40","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/8c208dce51281a40","status":"passed","time":{"start":1732046991058,"stop":1732047021431,"duration":30373}},{"uid":"be0b0b94c3e1af4","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/be0b0b94c3e1af4","status":"passed","time":{"start":1732043029116,"stop":1732043060141,"duration":31025}},{"uid":"68523c7237343837","reportUrl":"https://golioth.github.io/allure-reports/branch/1780//#testresult/68523c7237343837","status":"passed","time":{"start":1732031040243,"stop":1732031070574,"duration":30331}},{"uid":"93c8022d537348bd","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/93c8022d537348bd","status":"passed","time":{"start":1732027498728,"stop":1732027529152,"duration":30424}},{"uid":"af48e5fd0224778f","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/af48e5fd0224778f","status":"passed","time":{"start":1732027498728,"stop":1732027529152,"duration":30424}},{"uid":"310d5473e358be3c","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/310d5473e358be3c","status":"passed","time":{"start":1732013721536,"stop":1732013752908,"duration":31372}},{"uid":"2e168789874fd98a","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/2e168789874fd98a","status":"passed","time":{"start":1732000231599,"stop":1732000261751,"duration":30152}},{"uid":"1afc85b7dbcb10d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/1afc85b7dbcb10d6","status":"passed","time":{"start":1731969686055,"stop":1731969716748,"duration":30693}},{"uid":"1eec1dd2d3a41fc9","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/1eec1dd2d3a41fc9","status":"passed","time":{"start":1731961653977,"stop":1731961685434,"duration":31457}},{"uid":"3157887afdf428e1","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/3157887afdf428e1","status":"passed","time":{"start":1731959895538,"stop":1731959926839,"duration":31301}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"abcccf3dddccd710.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}