{"uid":"274e12fe204ade97","name":"test_set_int_range_max","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_max","historyId":"4a3037e9d1aa0a1ff7ca01b7d992c603","time":{"start":1732193033740,"stop":1732193046503,"duration":12763},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 187912.123357957\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffff8914f550>\ndevice = <golioth.golioth.Device object at 0xffff891400d0>\n\n    async def test_set_int_range_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 100)\n    \n>       assert None != await board.wait_for_regex_in_line('Received test_int_range: 100', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 187912.123357957\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1732192962655,"stop":1732192962655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732192962656,"stop":1732192962657,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732192962658,"stop":1732192962658,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732192962659,"stop":1732192962659,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732192962660,"stop":1732192962660,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732192962661,"stop":1732192962661,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732192962662,"stop":1732192962662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732192962663,"stop":1732192962663,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732192962664,"stop":1732192962664,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732192962664,"stop":1732192962664,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732192962665,"stop":1732192962665,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732192962665,"stop":1732192962665,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732192962666,"stop":1732192963260,"duration":594},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732192963260,"stop":1732192976186,"duration":12926},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732192976188,"stop":1732192977860,"duration":1672},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732192977861,"stop":1732192994529,"duration":16668},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 187912.123357957\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffff8914f550>\ndevice = <golioth.golioth.Device object at 0xffff891400d0>\n\n    async def test_set_int_range_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 100)\n    \n>       assert None != await board.wait_for_regex_in_line('Received test_int_range: 100', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 187912.123357957\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"be066057fe292f4","name":"stdout","source":"be066057fe292f4.txt","type":"text/plain","size":547}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1732193158560,"stop":1732193158561,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732193158565,"stop":1732193159231,"duration":666},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732193159234,"stop":1732193159286,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732193159288,"stop":1732193159290,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"6d3bef2fc1cd"},{"name":"thread","value":"309-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eb507e9ca655c960","status":"passed","time":{"start":1732186381330,"stop":1732186385135,"duration":3805}},{"uid":"75c21d9475eaf5ac","status":"passed","time":{"start":1732143081685,"stop":1732143085207,"duration":3522}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":45,"unknown":0,"total":55},"items":[{"uid":"49eec5c28f3ffa98","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/49eec5c28f3ffa98","status":"passed","time":{"start":1732187697483,"stop":1732187700920,"duration":3437}},{"uid":"8010f49599e16ee9","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/8010f49599e16ee9","status":"passed","time":{"start":1732186381330,"stop":1732186385135,"duration":3805}},{"uid":"62607eb1b49e0e54","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/62607eb1b49e0e54","status":"passed","time":{"start":1732153364950,"stop":1732153368540,"duration":3590}},{"uid":"c65b4c46cfefcfc0","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/c65b4c46cfefcfc0","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1732144090238,"stop":1732144090238,"duration":0}},{"uid":"c9a890e1947ef9f5","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/c9a890e1947ef9f5","status":"passed","time":{"start":1732143081685,"stop":1732143085207,"duration":3522}},{"uid":"68f8edcf9f06db27","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/68f8edcf9f06db27","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1732141932590,"stop":1732141932590,"duration":0}},{"uid":"e9f553297a1fc9f7","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/e9f553297a1fc9f7","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1732141932590,"stop":1732141932590,"duration":0}},{"uid":"2a54e470ea8c2d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/2a54e470ea8c2d6","status":"passed","time":{"start":1732133393681,"stop":1732133397173,"duration":3492}},{"uid":"bdf5878156467b55","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/bdf5878156467b55","status":"passed","time":{"start":1732042372878,"stop":1732042376554,"duration":3676}},{"uid":"d46bdaed3e620dda","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/d46bdaed3e620dda","status":"passed","time":{"start":1732042372878,"stop":1732042376554,"duration":3676}},{"uid":"5f5ac44fb74db3d5","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/5f5ac44fb74db3d5","status":"passed","time":{"start":1732124717482,"stop":1732124720938,"duration":3456}},{"uid":"1e56f41a426c147f","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/1e56f41a426c147f","status":"passed","time":{"start":1732122714960,"stop":1732122718690,"duration":3730}},{"uid":"e13dbfa1ba03225b","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/e13dbfa1ba03225b","status":"passed","time":{"start":1732042372878,"stop":1732042376554,"duration":3676}},{"uid":"774df3c54ad59fe0","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/774df3c54ad59fe0","status":"passed","time":{"start":1732046734916,"stop":1732046738295,"duration":3379}},{"uid":"5e9f122a9c270cf6","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/5e9f122a9c270cf6","status":"passed","time":{"start":1732046734916,"stop":1732046738295,"duration":3379}},{"uid":"6aaacc24a2438f81","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/6aaacc24a2438f81","status":"passed","time":{"start":1732046734916,"stop":1732046738295,"duration":3379}},{"uid":"6c726d49167db6aa","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/6c726d49167db6aa","status":"passed","time":{"start":1732042372878,"stop":1732042376554,"duration":3676}},{"uid":"a6bf77080021cf33","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/a6bf77080021cf33","status":"passed","time":{"start":1732013394672,"stop":1732013397916,"duration":3244}},{"uid":"d2f65436f91be6da","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/d2f65436f91be6da","status":"passed","time":{"start":1732013394672,"stop":1732013397916,"duration":3244}},{"uid":"f1e13b0589e88af","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/f1e13b0589e88af","status":"passed","time":{"start":1732013394672,"stop":1732013397916,"duration":3244}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"274e12fe204ade97.json","parameterValues":["'nrf52840dk'","'zephyr'"]}