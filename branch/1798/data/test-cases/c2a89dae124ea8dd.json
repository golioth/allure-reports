{"uid":"c2a89dae124ea8dd","name":"test_block_operations","fullName":"tests.hil.tests.ota.test_ota#test_block_operations","historyId":"e800c23d93bf28917e10200715ff1397","time":{"start":1732200555471,"stop":1732200555471,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 40001.79603866658\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffff9d155650>\ndevice = <golioth.golioth.Device object at 0xffff9d14a850>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/ota/test_ota.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 40001.79603866658\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1732200418014,"stop":1732200418014,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732200418015,"stop":1732200418016,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732200418016,"stop":1732200418016,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732200418017,"stop":1732200418017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732200418018,"stop":1732200418019,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732200418018,"stop":1732200418018,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732200418019,"stop":1732200418020,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732200418020,"stop":1732200418020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732200418021,"stop":1732200418021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732200418021,"stop":1732200418021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732200418022,"stop":1732200418023,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732200418022,"stop":1732200418022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732200418023,"stop":1732200432620,"duration":14597},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732200432623,"stop":1732200433113,"duration":490},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732200433114,"stop":1732200434026,"duration":912},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732200434027,"stop":1732200554518,"duration":120491},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/ota/test_ota.py\", line 47, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1732200556230,"stop":1732200556627,"duration":397},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732200556629,"stop":1732200556629,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732200556631,"stop":1732200556635,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"b877a08a3de8"},{"name":"thread","value":"262-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"448b002ea5d16dc3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732192236942,"stop":1732192236942,"duration":0}},{"uid":"8d15ebb82abf565c","status":"passed","time":{"start":1732186601342,"stop":1732186612787,"duration":11445}},{"uid":"c2d44bff1d69e230","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732145942205,"stop":1732145942205,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":38,"unknown":0,"total":48},"items":[{"uid":"a35effa3b780007","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/a35effa3b780007","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732196693062,"stop":1732196693062,"duration":0}},{"uid":"63a307bffca999c1","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/63a307bffca999c1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732195482526,"stop":1732195482526,"duration":0}},{"uid":"993dfa606a1f8375","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/993dfa606a1f8375","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732192236942,"stop":1732192236942,"duration":0}},{"uid":"6711644a2b3f644e","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/6711644a2b3f644e","status":"passed","time":{"start":1732189123066,"stop":1732189131929,"duration":8863}},{"uid":"ce29736c0cab10a6","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/ce29736c0cab10a6","status":"passed","time":{"start":1732186601342,"stop":1732186612787,"duration":11445}},{"uid":"8ee8cd15c9631ac5","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/8ee8cd15c9631ac5","status":"passed","time":{"start":1732153764236,"stop":1732153773379,"duration":9143}},{"uid":"bb6f6f43fbadb7f6","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/bb6f6f43fbadb7f6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732146765209,"stop":1732146765209,"duration":0}},{"uid":"3a9ffe2b8123b4b7","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/3a9ffe2b8123b4b7","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732145942205,"stop":1732145942205,"duration":0}},{"uid":"18fa651e507205ae","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/18fa651e507205ae","status":"passed","time":{"start":1732142730435,"stop":1732142741142,"duration":10707}},{"uid":"c3191d9b9cb218c6","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/c3191d9b9cb218c6","status":"passed","time":{"start":1732140091253,"stop":1732140102795,"duration":11542}},{"uid":"d4efb3fa5c57c4d5","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/d4efb3fa5c57c4d5","status":"passed","time":{"start":1732134439558,"stop":1732134449717,"duration":10159}},{"uid":"2f8667715c8a99a6","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/2f8667715c8a99a6","status":"passed","time":{"start":1732043688025,"stop":1732043695477,"duration":7452}},{"uid":"e260297614165dab","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/e260297614165dab","status":"passed","time":{"start":1732043688025,"stop":1732043695477,"duration":7452}},{"uid":"da73d67d95c898ad","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/da73d67d95c898ad","status":"passed","time":{"start":1732125806527,"stop":1732125818169,"duration":11642}},{"uid":"f19ccd83603aad7d","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/f19ccd83603aad7d","status":"passed","time":{"start":1732123854654,"stop":1732123863413,"duration":8759}},{"uid":"31e5e8430a63e6bc","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/31e5e8430a63e6bc","status":"passed","time":{"start":1732043688025,"stop":1732043695477,"duration":7452}},{"uid":"6b48361b1f560a15","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/6b48361b1f560a15","status":"passed","time":{"start":1732052634549,"stop":1732052644659,"duration":10110}},{"uid":"239e05b20c736317","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/239e05b20c736317","status":"passed","time":{"start":1732052634549,"stop":1732052644659,"duration":10110}},{"uid":"8ef922204c3eecfc","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/8ef922204c3eecfc","status":"passed","time":{"start":1732048117781,"stop":1732048128191,"duration":10410}},{"uid":"a80655f3a19782e7","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/a80655f3a19782e7","status":"passed","time":{"start":1732043688025,"stop":1732043695477,"duration":7452}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"c2a89dae124ea8dd.json","parameterValues":["'nrf9160dk'","'zephyr'"]}