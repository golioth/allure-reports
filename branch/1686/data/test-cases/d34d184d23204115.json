{"uid":"d34d184d23204115","name":"test_set_int_range_out_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_out_min","historyId":"c2044a44affa44a6054bb6d6ddcfd33a","time":{"start":1729526048457,"stop":1729526060679,"duration":12222},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff98e3fb50>\ndevice = <golioth.golioth.Device object at 0xffff98e03c50>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff98e03c50>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729525932191,"stop":1729525932191,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729525932192,"stop":1729525932192,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729525932193,"stop":1729525932193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729525932193,"stop":1729525932193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729525932194,"stop":1729525932194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729525932195,"stop":1729525932195,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729525932196,"stop":1729525932196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729525932196,"stop":1729525932197,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729525932197,"stop":1729525932197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729525932198,"stop":1729525932198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729525932199,"stop":1729525932199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729525932199,"stop":1729525932199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729525932200,"stop":1729525932596,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729525932597,"stop":1729525984086,"duration":51489},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729525984088,"stop":1729525985105,"duration":1017},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729525985105,"stop":1729526006393,"duration":21288},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff98e3fb50>\ndevice = <golioth.golioth.Device object at 0xffff98e03c50>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff98e03c50>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"228b8d975b443cab","name":"stdout","source":"228b8d975b443cab.txt","type":"text/plain","size":943}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1729526149929,"stop":1729526149929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729526149934,"stop":1729526150482,"duration":548},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729526150484,"stop":1729526150486,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729526150488,"stop":1729526150490,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"b6f598c62701"},{"name":"thread","value":"255-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":15},"items":[{"uid":"a5f99e2c0680136d","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/a5f99e2c0680136d","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1729446711047,"stop":1729446723295,"duration":12248}},{"uid":"c5062b289004b8e7","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/c5062b289004b8e7","status":"passed","time":{"start":1729444889292,"stop":1729444901445,"duration":12153}},{"uid":"577ba3bf93abb86f","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/577ba3bf93abb86f","status":"passed","time":{"start":1729378045199,"stop":1729378057748,"duration":12549}},{"uid":"b26d33bb964379ed","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/b26d33bb964379ed","status":"passed","time":{"start":1729378045199,"stop":1729378057748,"duration":12549}},{"uid":"1a66bfac7438a0bd","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/1a66bfac7438a0bd","status":"passed","time":{"start":1729196899870,"stop":1729196912190,"duration":12320}},{"uid":"3b914d14f70366fd","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/3b914d14f70366fd","status":"passed","time":{"start":1729114666680,"stop":1729114679254,"duration":12574}},{"uid":"ec21f16baa431213","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/ec21f16baa431213","status":"passed","time":{"start":1729112009003,"stop":1729112021772,"duration":12769}},{"uid":"b5ebbc5972059fc6","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/b5ebbc5972059fc6","status":"passed","time":{"start":1729106847766,"stop":1729106861466,"duration":13700}},{"uid":"c65ccbc67dd798cf","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/c65ccbc67dd798cf","status":"passed","time":{"start":1729033122708,"stop":1729033136417,"duration":13709}},{"uid":"bb4ac1c0d689aff0","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/bb4ac1c0d689aff0","status":"passed","time":{"start":1729029799412,"stop":1729029814248,"duration":14836}},{"uid":"cf52992d1fbe2575","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/cf52992d1fbe2575","status":"passed","time":{"start":1729019637336,"stop":1729019651253,"duration":13917}},{"uid":"dabc137232c9c53b","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/dabc137232c9c53b","status":"passed","time":{"start":1729022358554,"stop":1729022372994,"duration":14440}},{"uid":"5679dad85899c74f","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/5679dad85899c74f","status":"passed","time":{"start":1729019637336,"stop":1729019651253,"duration":13917}},{"uid":"6762cc8cfec3cf4c","reportUrl":"https://golioth.github.io/allure-reports/branch/1638//#testresult/6762cc8cfec3cf4c","status":"passed","time":{"start":1729004794878,"stop":1729004808679,"duration":13801}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"d34d184d23204115.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}