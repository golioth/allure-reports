{"uid":"10954b8d0b98ccd2","name":"test_wrong_type","fullName":"tests.hil.tests.settings.test_settings#test_wrong_type","historyId":"e14c6d163a087575777337be59bc13e1","time":{"start":1759859190872,"stop":1759859195035,"duration":4163},"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:394: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:256: in handle_async_request\n    raise exc from None\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:236: in handle_async_request\n    response = await connection.handle_async_request(\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:101: in handle_async_request\n    raise exc\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:78: in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:124: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_backends/auto.py:31: in connect_tcp\n    return await self._backend.connect_tcp(\n/root/venv/lib/python3.13/site-packages/httpcore/_backends/trio.py:128: in connect_tcp\n    with map_exceptions(exc_map):\n         ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/root/venv/lib/python3.13/site-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\ndevice = <golioth.golioth.Device object at 0xffff98987770>\n\n    async def test_wrong_type(device):\n>       await assert_settings_error(device, 'TEST_WRONG_TYPE', VALUE_FORMAT_NOT_VALID)\n\ntests/hil/tests/settings/test_settings.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/hil/tests/settings/test_settings.py:45: in assert_settings_error\n    await device.refresh()\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:423: in refresh\n    resp = await c.get(self.base_url)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1768: in get\n    return await self.request(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1540: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1629: in send\n    response = await self._send_handling_auth(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1657: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1694: in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1730: in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:393: in handle_async_request\n    with map_httpcore_exceptions():\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:118: ConnectError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1759859068547,"stop":1759859068548,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1759859068549,"stop":1759859068549,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759859068549,"stop":1759859068550,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759859068550,"stop":1759859068550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759859068551,"stop":1759859068551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759859068552,"stop":1759859068552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759859068553,"stop":1759859069468,"duration":915},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759859068553,"stop":1759859068553,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1759859069469,"stop":1759859091346,"duration":21877},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759859091348,"stop":1759859096164,"duration":4816},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1759859096165,"stop":1759859109901,"duration":13736},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1759859255533,"stop":1759859255534,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759859255538,"stop":1759859255900,"duration":362},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1759859255902,"stop":1759859255907,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759859255909,"stop":1759859255912,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"ddba8092126d"},{"name":"thread","value":"212-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"13c05f1bb05a1ddb","status":"passed","time":{"start":1759789165127,"stop":1759789165437,"duration":310}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":16,"unknown":0,"total":19},"items":[{"uid":"96915d171dd75c0b","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/96915d171dd75c0b","status":"passed","time":{"start":1759790347574,"stop":1759790347883,"duration":309}},{"uid":"4a884d8e08e76637","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/4a884d8e08e76637","status":"passed","time":{"start":1759790347574,"stop":1759790347883,"duration":309}},{"uid":"25bef42cea8172c5","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/25bef42cea8172c5","status":"passed","time":{"start":1759789165127,"stop":1759789165437,"duration":310}},{"uid":"256904091c0e5bc4","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/256904091c0e5bc4","status":"passed","time":{"start":1759771995116,"stop":1759771995521,"duration":405}},{"uid":"20e1df9890586666","reportUrl":"https://golioth.github.io/allure-reports/branch/744//#testresult/20e1df9890586666","status":"passed","time":{"start":1759770035935,"stop":1759770036281,"duration":346}},{"uid":"c85ceebd6546b019","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/c85ceebd6546b019","status":"passed","time":{"start":1759771995116,"stop":1759771995521,"duration":405}},{"uid":"bdef9312c716feb8","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/bdef9312c716feb8","status":"passed","time":{"start":1759518522137,"stop":1759518522469,"duration":332}},{"uid":"1b02a83d4070adc","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/1b02a83d4070adc","status":"passed","time":{"start":1759376466858,"stop":1759376467180,"duration":322}},{"uid":"37400a8a2f3be380","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/37400a8a2f3be380","status":"passed","time":{"start":1759518522137,"stop":1759518522469,"duration":332}},{"uid":"609f22e335036df7","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/609f22e335036df7","status":"passed","time":{"start":1759518522137,"stop":1759518522469,"duration":332}},{"uid":"f2228ab47e9c9a5c","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/f2228ab47e9c9a5c","status":"passed","time":{"start":1759429508218,"stop":1759429508572,"duration":354}},{"uid":"a19a222cfdcfae9","reportUrl":"https://golioth.github.io/allure-reports/branch/737//#testresult/a19a222cfdcfae9","status":"passed","time":{"start":1759379911629,"stop":1759379911946,"duration":317}},{"uid":"96d702b44b4e3b13","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/96d702b44b4e3b13","status":"passed","time":{"start":1759376466858,"stop":1759376467180,"duration":322}},{"uid":"c3edc2f03b43aeec","reportUrl":"https://golioth.github.io/allure-reports/branch/732//#testresult/c3edc2f03b43aeec","status":"passed","time":{"start":1759272302976,"stop":1759272303304,"duration":328}},{"uid":"6dd8515e9d5a06e1","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/6dd8515e9d5a06e1","status":"passed","time":{"start":1759246314918,"stop":1759246315233,"duration":315}},{"uid":"5ffa71d4d6468402","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/5ffa71d4d6468402","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759179883219,"stop":1759179887422,"duration":4203}},{"uid":"b3504e0630d72ae","reportUrl":"https://golioth.github.io/allure-reports/branch/728//#testresult/b3504e0630d72ae","status":"passed","time":{"start":1759162676606,"stop":1759162676979,"duration":373}},{"uid":"be337d893de4f240","reportUrl":"https://golioth.github.io/allure-reports/branch/726//#testresult/be337d893de4f240","status":"broken","statusDetails":"ValueError: Unknown board","time":{"start":1759122890666,"stop":1759122890666,"duration":0}}]},"tags":["anyio","sams_orange_pi","esp32_devkitc_wrover","zephyr"]},"source":"10954b8d0b98ccd2.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}