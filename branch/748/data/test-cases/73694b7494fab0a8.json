{"uid":"73694b7494fab0a8","name":"test_set_int_range_out_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_out_min","historyId":"c2044a44affa44a6054bb6d6ddcfd33a","time":{"start":1759857439207,"stop":1759857451468,"duration":12261},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff999942f0>\ndevice = <golioth.golioth.Device object at 0xffff99ac30e0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff99ac30e0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1759857358642,"stop":1759857358643,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1759857358644,"stop":1759857358644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759857358645,"stop":1759857358645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759857358646,"stop":1759857358647,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759857358647,"stop":1759857358648,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759857358648,"stop":1759857358649,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759857358649,"stop":1759857358650,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759857358650,"stop":1759857359156,"duration":506},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1759857359156,"stop":1759857384266,"duration":25110},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759857384267,"stop":1759857385071,"duration":804},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1759857385072,"stop":1759857401315,"duration":16243},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff999942f0>\ndevice = <golioth.golioth.Device object at 0xffff99ac30e0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff99ac30e0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"f0a4009130abb3","name":"stdout","source":"f0a4009130abb3.txt","type":"text/plain","size":2750}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1759857536018,"stop":1759857536018,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759857536021,"stop":1759857536425,"duration":404},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1759857536428,"stop":1759857536433,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759857536437,"stop":1759857536441,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"f354138f0e77"},{"name":"thread","value":"251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"7be9eedf6ed8173f","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759776549520,"stop":1759776549520,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":17,"unknown":0,"total":20},"items":[{"uid":"fe5f28df8290b778","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/fe5f28df8290b778","status":"passed","time":{"start":1759797070196,"stop":1759797082485,"duration":12289}},{"uid":"92e17545499f7f50","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/92e17545499f7f50","status":"passed","time":{"start":1759781341184,"stop":1759781353577,"duration":12393}},{"uid":"1cb313ffcfa63d67","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/1cb313ffcfa63d67","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759776549520,"stop":1759776549520,"duration":0}},{"uid":"4ab7dc16c2879352","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/4ab7dc16c2879352","status":"passed","time":{"start":1759763980501,"stop":1759763992795,"duration":12294}},{"uid":"7c01ca88da34b439","reportUrl":"https://golioth.github.io/allure-reports/branch/744//#testresult/7c01ca88da34b439","status":"passed","time":{"start":1759765778973,"stop":1759765791235,"duration":12262}},{"uid":"f664dce2f46ad7e9","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/f664dce2f46ad7e9","status":"passed","time":{"start":1759763980501,"stop":1759763992795,"duration":12294}},{"uid":"2a86e11300edd60a","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/2a86e11300edd60a","status":"passed","time":{"start":1759515915682,"stop":1759515928107,"duration":12425}},{"uid":"b70ff54a02833fd0","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/b70ff54a02833fd0","status":"passed","time":{"start":1759369224821,"stop":1759369237099,"duration":12278}},{"uid":"8235066fff3457ab","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/8235066fff3457ab","status":"passed","time":{"start":1759515915682,"stop":1759515928107,"duration":12425}},{"uid":"d36bbfea009d165b","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/d36bbfea009d165b","status":"passed","time":{"start":1759515915682,"stop":1759515928107,"duration":12425}},{"uid":"eb50fcd034044b9f","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/eb50fcd034044b9f","status":"passed","time":{"start":1759244956377,"stop":1759244968620,"duration":12243}},{"uid":"f54738a6cc0351ff","reportUrl":"https://golioth.github.io/allure-reports/branch/737//#testresult/f54738a6cc0351ff","status":"passed","time":{"start":1759373528888,"stop":1759373541042,"duration":12154}},{"uid":"9b06203b0e1eb31b","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/9b06203b0e1eb31b","status":"passed","time":{"start":1759369224821,"stop":1759369237099,"duration":12278}},{"uid":"3d80929481697642","reportUrl":"https://golioth.github.io/allure-reports/branch/732//#testresult/3d80929481697642","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759268555306,"stop":1759268555306,"duration":0}},{"uid":"b206c8f9815f9556","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/b206c8f9815f9556","status":"passed","time":{"start":1759244956377,"stop":1759244968620,"duration":12243}},{"uid":"b5f48a52e677b05f","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/b5f48a52e677b05f","status":"passed","time":{"start":1759175951017,"stop":1759175963092,"duration":12075}},{"uid":"d73867dd5b661a9","reportUrl":"https://golioth.github.io/allure-reports/branch/728//#testresult/d73867dd5b661a9","status":"passed","time":{"start":1759160018025,"stop":1759160030002,"duration":11977}},{"uid":"e74162a2d1b72231","reportUrl":"https://golioth.github.io/allure-reports/branch/726//#testresult/e74162a2d1b72231","status":"passed","time":{"start":1759104675018,"stop":1759104687303,"duration":12285}},{"uid":"5922e1f64c9fbd99","reportUrl":"https://golioth.github.io/allure-reports/branch/723//#testresult/5922e1f64c9fbd99","status":"passed","time":{"start":1758913930176,"stop":1758913942395,"duration":12219}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","jons_orange_pi","anyio"]},"source":"73694b7494fab0a8.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}