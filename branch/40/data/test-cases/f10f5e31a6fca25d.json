{
  "uid" : "f10f5e31a6fca25d",
  "name" : "test_logging",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.logging.pytest.test_sample#test_logging",
  "historyId" : "a3454c74416fe64989185d5a90a344cf",
  "time" : {
    "start" : 1734238010712,
    "stop" : 1734238010712,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: Could not flash device None",
  "statusTrace" : "item = <Function test_logging>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:62: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:90: in launch\n    self._flash_and_run()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = HardwareAdapter()\n\n    def _flash_and_run(self) -> None:\n        \"\"\"Flash application on a device.\"\"\"\n        if not self.command:\n            msg = 'Flash command is empty, please verify if it was generated properly.'\n            logger.error(msg)\n            raise TwisterHarnessException(msg)\n    \n        if self.device_config.pre_script:\n            self._run_custom_script(self.device_config.pre_script, self.base_timeout)\n    \n        if self.device_config.id:\n            logger.debug('Flashing device %s', self.device_config.id)\n        log_command(logger, 'Flashing command', self.command, level=logging.DEBUG)\n    \n        process = stdout = None\n        try:\n            process = subprocess.Popen(self.command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, env=self.env)\n            stdout, _ = process.communicate(timeout=self._flashing_timeout)\n        except subprocess.TimeoutExpired as exc:\n            process.kill()\n            msg = f'Timeout occurred ({self._flashing_timeout}s) during flashing.'\n            logger.error(msg)\n            raise TwisterHarnessTimeoutException(msg) from exc\n        except subprocess.SubprocessError as exc:\n            msg = f'Flashing subprocess failed due to SubprocessError {exc}'\n            logger.error(msg)\n            raise TwisterHarnessTimeoutException(msg) from exc\n        finally:\n            if stdout is not None:\n                stdout_decoded = stdout.decode(errors='ignore')\n                with open(self.device_log_path, 'a+') as log_file:\n                    log_file.write(stdout_decoded)\n            if self.device_config.post_flash_script:\n                self._run_custom_script(self.device_config.post_flash_script, self.base_timeout)\n            if process is not None and process.returncode == 0:\n                logger.debug('Flashing finished')\n            else:\n                msg = f'Could not flash device {self.device_config.id}'\n                logger.error(msg)\n>               raise TwisterHarnessException(msg)\nE               twister_harness.exceptions.TwisterHarnessException: Could not flash device None\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:136: TwisterHarnessException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "device_name",
    "time" : {
      "start" : 1734238010717,
      "stop" : 1734238010717,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734238010716,
      "stop" : 1734238010716,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1734238012014,
      "stop" : 1734238014525,
      "duration" : 2511
    },
    "status" : "broken",
    "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: Could not flash device None\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 62, in dut\n    device_object.launch()\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py\", line 90, in launch\n    self._flash_and_run()\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py\", line 136, in _flash_and_run\n    raise TwisterHarnessException(msg)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734238010716,
      "stop" : 1734238010716,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734238011145,
      "stop" : 1734238012013,
      "duration" : 868
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734238010722,
      "stop" : 1734238011144,
      "duration" : 422
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1734238010717,
      "stop" : 1734238010717,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734238010721,
      "stop" : 1734238010721,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734238010715,
      "stop" : 1734238010715,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734238010721,
      "stop" : 1734238010721,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1734238010718,
      "stop" : 1734238010720,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: Could not flash device None",
    "statusTrace" : "item = <Function test_logging>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:62: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:90: in launch\n    self._flash_and_run()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = HardwareAdapter()\n\n    def _flash_and_run(self) -> None:\n        \"\"\"Flash application on a device.\"\"\"\n        if not self.command:\n            msg = 'Flash command is empty, please verify if it was generated properly.'\n            logger.error(msg)\n            raise TwisterHarnessException(msg)\n    \n        if self.device_config.pre_script:\n            self._run_custom_script(self.device_config.pre_script, self.base_timeout)\n    \n        if self.device_config.id:\n            logger.debug('Flashing device %s', self.device_config.id)\n        log_command(logger, 'Flashing command', self.command, level=logging.DEBUG)\n    \n        process = stdout = None\n        try:\n            process = subprocess.Popen(self.command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, env=self.env)\n            stdout, _ = process.communicate(timeout=self._flashing_timeout)\n        except subprocess.TimeoutExpired as exc:\n            process.kill()\n            msg = f'Timeout occurred ({self._flashing_timeout}s) during flashing.'\n            logger.error(msg)\n            raise TwisterHarnessTimeoutException(msg) from exc\n        except subprocess.SubprocessError as exc:\n            msg = f'Flashing subprocess failed due to SubprocessError {exc}'\n            logger.error(msg)\n            raise TwisterHarnessTimeoutException(msg) from exc\n        finally:\n            if stdout is not None:\n                stdout_decoded = stdout.decode(errors='ignore')\n                with open(self.device_log_path, 'a+') as log_file:\n                    log_file.write(stdout_decoded)\n            if self.device_config.post_flash_script:\n                self._run_custom_script(self.device_config.post_flash_script, self.base_timeout)\n            if process is not None and process.returncode == 0:\n                logger.debug('Flashing finished')\n            else:\n                msg = f'Could not flash device {self.device_config.id}'\n                logger.error(msg)\n>               raise TwisterHarnessException(msg)\nE               twister_harness.exceptions.TwisterHarnessException: Could not flash device None\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:136: TwisterHarnessException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "58c66ac8b0af756b",
      "name" : "log",
      "source" : "58c66ac8b0af756b.txt",
      "type" : "text/plain",
      "size" : 9417
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1734238014797,
      "stop" : 1734238015193,
      "duration" : 396
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1734238015195,
      "stop" : 1734238015197,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1734238015202,
      "stop" : 1734238015202,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "42b2fe79e2af"
  }, {
    "name" : "thread",
    "value" : "536-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.logging.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf9160dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 4,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 14,
        "unknown" : 0,
        "total" : 25
      },
      "items" : [ {
        "uid" : "7ab9e763cdda0fac",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1931/#testresult/7ab9e763cdda0fac",
        "status" : "passed",
        "time" : {
          "start" : 1734129816917,
          "stop" : 1734129836401,
          "duration" : 19484
        }
      }, {
        "uid" : "6cfb19358da3366",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1928/#testresult/6cfb19358da3366",
        "status" : "passed",
        "time" : {
          "start" : 1734050037620,
          "stop" : 1734050074555,
          "duration" : 36935
        }
      }, {
        "uid" : "76a234e0144f4ca0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1927/#testresult/76a234e0144f4ca0",
        "status" : "passed",
        "time" : {
          "start" : 1734046259107,
          "stop" : 1734046288142,
          "duration" : 29035
        }
      }, {
        "uid" : "5676f26bd7398a04",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1926/#testresult/5676f26bd7398a04",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessException: Could not flash device None",
        "time" : {
          "start" : 1734035158714,
          "stop" : 1734035158714,
          "duration" : 0
        }
      }, {
        "uid" : "e926ecb63ca57d7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1921/#testresult/e926ecb63ca57d7",
        "status" : "failed",
        "statusDetails" : "Failed: Prompt not found",
        "time" : {
          "start" : 1734031009629,
          "stop" : 1734031009629,
          "duration" : 0
        }
      }, {
        "uid" : "932e9536af1f5a1a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/932e9536af1f5a1a",
        "status" : "passed",
        "time" : {
          "start" : 1734027150431,
          "stop" : 1734027186421,
          "duration" : 35990
        }
      }, {
        "uid" : "faa9b3157196a734",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/faa9b3157196a734",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1734026218170,
          "stop" : 1734026311382,
          "duration" : 93212
        }
      }, {
        "uid" : "e981be4b1ee3b521",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/e981be4b1ee3b521",
        "status" : "passed",
        "time" : {
          "start" : 1733947747268,
          "stop" : 1733947766676,
          "duration" : 19408
        }
      }, {
        "uid" : "2e7136eb0fb04462",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/2e7136eb0fb04462",
        "status" : "passed",
        "time" : {
          "start" : 1733962816933,
          "stop" : 1733962845705,
          "duration" : 28772
        }
      }, {
        "uid" : "f4d73d9a652497ab",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/f4d73d9a652497ab",
        "status" : "passed",
        "time" : {
          "start" : 1733959422340,
          "stop" : 1733959441651,
          "duration" : 19311
        }
      }, {
        "uid" : "88aacb2a731fcbfa",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1903/#testresult/88aacb2a731fcbfa",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessException: Could not flash device None",
        "time" : {
          "start" : 1733954885500,
          "stop" : 1733954885500,
          "duration" : 0
        }
      }, {
        "uid" : "68c40a77f0a69cd3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1900/#testresult/68c40a77f0a69cd3",
        "status" : "failed",
        "statusDetails" : "Failed: Prompt not found",
        "time" : {
          "start" : 1733951219862,
          "stop" : 1733951219862,
          "duration" : 0
        }
      }, {
        "uid" : "ed191ab6a35cd455",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1899/#testresult/ed191ab6a35cd455",
        "status" : "passed",
        "time" : {
          "start" : 1733950984449,
          "stop" : 1733951021604,
          "duration" : 37155
        }
      }, {
        "uid" : "e632a05c5f6cfb07",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1898/#testresult/e632a05c5f6cfb07",
        "status" : "passed",
        "time" : {
          "start" : 1733948676832,
          "stop" : 1733948717139,
          "duration" : 40307
        }
      }, {
        "uid" : "81a2b2a9b691789e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/81a2b2a9b691789e",
        "status" : "passed",
        "time" : {
          "start" : 1733947747268,
          "stop" : 1733947766676,
          "duration" : 19408
        }
      }, {
        "uid" : "b3199524c0b7218e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/b3199524c0b7218e",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733931908841,
          "stop" : 1733932001607,
          "duration" : 92766
        }
      }, {
        "uid" : "77af23f4262a5097",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/77af23f4262a5097",
        "status" : "failed",
        "statusDetails" : "Failed: Prompt not found",
        "time" : {
          "start" : 1733930405050,
          "stop" : 1733930405050,
          "duration" : 0
        }
      }, {
        "uid" : "de5048f741bb9a67",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/de5048f741bb9a67",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733892310409,
          "stop" : 1733892403108,
          "duration" : 92699
        }
      }, {
        "uid" : "c583e4d6ea6732f2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/c583e4d6ea6732f2",
        "status" : "failed",
        "statusDetails" : "Failed: Prompt not found",
        "time" : {
          "start" : 1733891283042,
          "stop" : 1733891283042,
          "duration" : 0
        }
      }, {
        "uid" : "38a94e927c3303b1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1892/#testresult/38a94e927c3303b1",
        "status" : "passed",
        "time" : {
          "start" : 1733879223968,
          "stop" : 1733879261363,
          "duration" : 37395
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "nrf9160dk", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "f10f5e31a6fca25d.json",
  "parameterValues" : [ "'nrf9160dk'", "'zephyr'" ]
}