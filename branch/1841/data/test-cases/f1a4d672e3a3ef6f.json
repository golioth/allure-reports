{"uid":"f1a4d672e3a3ef6f","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"ee936b7d181ae9cc4057b23c9f7088a4","time":{"start":1732559238851,"stop":1732559244219,"duration":5368},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff8edb10d0>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff8edbfc10>\ndevice = <golioth.golioth.Device object at 0xffff8edb0fd0>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff8edb10d0>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732559164669,"stop":1732559164669,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732559164670,"stop":1732559164670,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732559164671,"stop":1732559164671,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732559164672,"stop":1732559164672,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732559164673,"stop":1732559164674,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732559164673,"stop":1732559164673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732559164674,"stop":1732559164674,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732559164675,"stop":1732559164675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732559164676,"stop":1732559164676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732559164676,"stop":1732559164676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732559164677,"stop":1732559164677,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732559164677,"stop":1732559164678,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732559164678,"stop":1732559165127,"duration":449},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732559165128,"stop":1732559206564,"duration":41436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732559206566,"stop":1732559207641,"duration":1075},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732559207641,"stop":1732559236812,"duration":29171},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732559310688,"stop":1732559310688,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732559310690,"stop":1732559311107,"duration":417},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732559311109,"stop":1732559311111,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732559311113,"stop":1732559311115,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"8319db518efd"},{"name":"thread","value":"264-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":67,"unknown":0,"total":89},"items":[{"uid":"4802e07298947159","reportUrl":"https://golioth.github.io/allure-reports/branch/1840//#testresult/4802e07298947159","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732553016298,"stop":1732553016298,"duration":0}},{"uid":"9b46de46ec809a44","reportUrl":"https://golioth.github.io/allure-reports/branch/1839//#testresult/9b46de46ec809a44","status":"passed","time":{"start":1732550977441,"stop":1732550979000,"duration":1559}},{"uid":"d5967ec2973b7594","reportUrl":"https://golioth.github.io/allure-reports/branch/1839//#testresult/d5967ec2973b7594","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732508331172,"stop":1732508331172,"duration":0}},{"uid":"c865a8fc036af61d","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/c865a8fc036af61d","status":"passed","time":{"start":1732311902307,"stop":1732311903846,"duration":1539}},{"uid":"10305945a8a7cace","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/10305945a8a7cace","status":"passed","time":{"start":1732311902307,"stop":1732311903846,"duration":1539}},{"uid":"4e5e7b83d0eae963","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/4e5e7b83d0eae963","status":"passed","time":{"start":1732311902307,"stop":1732311903846,"duration":1539}},{"uid":"eb980d773374dc75","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/eb980d773374dc75","status":"passed","time":{"start":1732311902307,"stop":1732311903846,"duration":1539}},{"uid":"25b3325be7079f8","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/25b3325be7079f8","status":"passed","time":{"start":1732301144365,"stop":1732301146094,"duration":1729}},{"uid":"9f0f6c9846bc7535","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/9f0f6c9846bc7535","status":"passed","time":{"start":1732301144365,"stop":1732301146094,"duration":1729}},{"uid":"69ca194aaa2ed9e3","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/69ca194aaa2ed9e3","status":"passed","time":{"start":1732301144365,"stop":1732301146094,"duration":1729}},{"uid":"41fb97d1ba75009d","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/41fb97d1ba75009d","status":"passed","time":{"start":1732291680356,"stop":1732291681900,"duration":1544}},{"uid":"200b52c4a3445bc9","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/200b52c4a3445bc9","status":"passed","time":{"start":1732230445639,"stop":1732230447260,"duration":1621}},{"uid":"ae61dc50c7cd3c83","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/ae61dc50c7cd3c83","status":"passed","time":{"start":1732291680356,"stop":1732291681900,"duration":1544}},{"uid":"be7caf8fe6cda4db","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/be7caf8fe6cda4db","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732226915373,"stop":1732226915373,"duration":0}},{"uid":"fcc57f62aa8a5a8d","reportUrl":"https://golioth.github.io/allure-reports/branch/1827//#testresult/fcc57f62aa8a5a8d","status":"passed","time":{"start":1732288483722,"stop":1732288485373,"duration":1651}},{"uid":"77372256d5dd5224","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/77372256d5dd5224","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732289163211,"stop":1732289163211,"duration":0}},{"uid":"123d66a4097f34bc","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/123d66a4097f34bc","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732286299827,"stop":1732286299827,"duration":0}},{"uid":"5e43602f076fea39","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/5e43602f076fea39","status":"passed","time":{"start":1732283713049,"stop":1732283716572,"duration":3523}},{"uid":"c1db68723a451e66","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/c1db68723a451e66","status":"passed","time":{"start":1732279447517,"stop":1732279449115,"duration":1598}},{"uid":"13338bfe33b5df2c","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/13338bfe33b5df2c","status":"passed","time":{"start":1732275963889,"stop":1732275965455,"duration":1566}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"f1a4d672e3a3ef6f.json","parameterValues":["'rak5010'","'zephyr'"]}