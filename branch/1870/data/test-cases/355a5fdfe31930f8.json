{
  "uid" : "355a5fdfe31930f8",
  "name" : "test_lightdb_delete",
  "fullName" : "examples.esp_idf.lightdb.delete.pytest.test_sample#test_lightdb_delete",
  "historyId" : "163976e819da0993506eed1ee840a8c8",
  "time" : {
    "start" : 1733441848142,
    "stop" : 1733441865080,
    "duration" : 16938
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 76978.50342921846\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa0663750>\ndevice = <golioth.golioth.Device object at 0xffffa06a3390>\n\n    async def test_lightdb_delete(board, device):\n        # Set counter in lightdb state\n    \n        await counter_set_and_verify(device, 34)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line(r'.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb delete (async)\n    \n>       await board.wait_for_regex_in_line(r'.*Counter deleted successfully', timeout_s=10.0)\n\nexamples/esp_idf/lightdb/delete/pytest/test_sample.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 76978.50342921846\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "device_name",
    "time" : {
      "start" : 1733441804677,
      "stop" : 1733441804677,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733441804674,
      "stop" : 1733441804674,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733441804675,
      "stop" : 1733441804675,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733441804677,
      "stop" : 1733441804677,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733441804676,
      "stop" : 1733441804676,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733441804671,
      "stop" : 1733441804671,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733441804674,
      "stop" : 1733441804674,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733441844976,
      "stop" : 1733441845583,
      "duration" : 607
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733441845584,
      "stop" : 1733441848139,
      "duration" : 2555
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733441804673,
      "stop" : 1733441804673,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733441804675,
      "stop" : 1733441804675,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733441804678,
      "stop" : 1733441804678,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733441804672,
      "stop" : 1733441804672,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733441804678,
      "stop" : 1733441844974,
      "duration" : 40296
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733441804676,
      "stop" : 1733441804676,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 76978.50342921846\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa0663750>\ndevice = <golioth.golioth.Device object at 0xffffa06a3390>\n\n    async def test_lightdb_delete(board, device):\n        # Set counter in lightdb state\n    \n        await counter_set_and_verify(device, 34)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line(r'.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb delete (async)\n    \n>       await board.wait_for_regex_in_line(r'.*Counter deleted successfully', timeout_s=10.0)\n\nexamples/esp_idf/lightdb/delete/pytest/test_sample.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 76978.50342921846\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f2b7e70646bfa98a",
      "name" : "stdout",
      "source" : "f2b7e70646bfa98a.txt",
      "type" : "text/plain",
      "size" : 8346
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1733441866116,
      "stop" : 1733441866116,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733441865628,
      "stop" : 1733441866114,
      "duration" : 486
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1733441866118,
      "stop" : 1733441866128,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "sams_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "0bd7e7f57955"
  }, {
    "name" : "thread",
    "value" : "280-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.lightdb.delete.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32s3_devkitc_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 104,
        "unknown" : 0,
        "total" : 105
      },
      "items" : [ {
        "uid" : "9739df839aee0945",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1868/#testresult/9739df839aee0945",
        "status" : "passed",
        "time" : {
          "start" : 1733414135669,
          "stop" : 1733414148121,
          "duration" : 12452
        }
      }, {
        "uid" : "6ba5568a36b4adf0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1865/#testresult/6ba5568a36b4adf0",
        "status" : "passed",
        "time" : {
          "start" : 1733352759467,
          "stop" : 1733352771125,
          "duration" : 11658
        }
      }, {
        "uid" : "1dd72aa0426772ec",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1864/#testresult/1dd72aa0426772ec",
        "status" : "passed",
        "time" : {
          "start" : 1733328754271,
          "stop" : 1733328767086,
          "duration" : 12815
        }
      }, {
        "uid" : "96550a26a890f41a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/96550a26a890f41a",
        "status" : "passed",
        "time" : {
          "start" : 1733254441572,
          "stop" : 1733254454510,
          "duration" : 12938
        }
      }, {
        "uid" : "8ddf8e495302fe4b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/8ddf8e495302fe4b",
        "status" : "passed",
        "time" : {
          "start" : 1733190840062,
          "stop" : 1733190852826,
          "duration" : 12764
        }
      }, {
        "uid" : "abdc06eeace8f0a0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/abdc06eeace8f0a0",
        "status" : "passed",
        "time" : {
          "start" : 1732802027527,
          "stop" : 1732802047843,
          "duration" : 20316
        }
      }, {
        "uid" : "832b62abb80a7016",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/832b62abb80a7016",
        "status" : "passed",
        "time" : {
          "start" : 1732749553259,
          "stop" : 1732749565687,
          "duration" : 12428
        }
      }, {
        "uid" : "807fa9ae52744c3a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/807fa9ae52744c3a",
        "status" : "passed",
        "time" : {
          "start" : 1732729028033,
          "stop" : 1732729039923,
          "duration" : 11890
        }
      }, {
        "uid" : "ad101d5c1fc3db4b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/ad101d5c1fc3db4b",
        "status" : "passed",
        "time" : {
          "start" : 1732723754543,
          "stop" : 1732723766728,
          "duration" : 12185
        }
      }, {
        "uid" : "a98f210a1199679b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/a98f210a1199679b",
        "status" : "passed",
        "time" : {
          "start" : 1732639513006,
          "stop" : 1732639524472,
          "duration" : 11466
        }
      }, {
        "uid" : "95025bc69e2ae910",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/95025bc69e2ae910",
        "status" : "passed",
        "time" : {
          "start" : 1732563473608,
          "stop" : 1732563485676,
          "duration" : 12068
        }
      }, {
        "uid" : "26d2ad3c307f3d10",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/26d2ad3c307f3d10",
        "status" : "passed",
        "time" : {
          "start" : 1732559901524,
          "stop" : 1732559917938,
          "duration" : 16414
        }
      }, {
        "uid" : "4134f41d911dcd4c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/4134f41d911dcd4c",
        "status" : "passed",
        "time" : {
          "start" : 1732554252977,
          "stop" : 1732554265174,
          "duration" : 12197
        }
      }, {
        "uid" : "a25b3ed15cb40d66",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/a25b3ed15cb40d66",
        "status" : "passed",
        "time" : {
          "start" : 1732508770282,
          "stop" : 1732508785166,
          "duration" : 14884
        }
      }, {
        "uid" : "792b7aa983cef447",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/792b7aa983cef447",
        "status" : "passed",
        "time" : {
          "start" : 1732508770282,
          "stop" : 1732508785166,
          "duration" : 14884
        }
      }, {
        "uid" : "83f15dd105fe9675",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/83f15dd105fe9675",
        "status" : "passed",
        "time" : {
          "start" : 1732316874284,
          "stop" : 1732316886327,
          "duration" : 12043
        }
      }, {
        "uid" : "259ab1e470d326bf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/259ab1e470d326bf",
        "status" : "passed",
        "time" : {
          "start" : 1732316874284,
          "stop" : 1732316886327,
          "duration" : 12043
        }
      }, {
        "uid" : "dd91badb9c9e2cef",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/dd91badb9c9e2cef",
        "status" : "passed",
        "time" : {
          "start" : 1732316874284,
          "stop" : 1732316886327,
          "duration" : 12043
        }
      }, {
        "uid" : "f2ad19316dfb2309",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/f2ad19316dfb2309",
        "status" : "passed",
        "time" : {
          "start" : 1732312243206,
          "stop" : 1732312255114,
          "duration" : 11908
        }
      }, {
        "uid" : "f8ac799632ffbf5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/f8ac799632ffbf5",
        "status" : "passed",
        "time" : {
          "start" : 1732301773613,
          "stop" : 1732301785661,
          "duration" : 12048
        }
      } ]
    },
    "tags" : [ "esp32s3_devkitc_espidf", "esp-idf", "anyio", "sams_orange_pi", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "355a5fdfe31930f8.json",
  "parameterValues" : [ "'esp32s3_devkitc_espidf'", "'esp-idf'" ]
}