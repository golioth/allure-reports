{
  "uid" : "872058d90e4eb3b5",
  "name" : "test_connect",
  "fullName" : "tests.hil.tests.connection.test_connection#test_connect",
  "historyId" : "8dfe3099e9f008f0052c5c38f8dcf94a",
  "time" : {
    "start" : 1733439608956,
    "stop" : 1733439766065,
    "duration" : 157109
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 78832.95724542461\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffffb83642d0>\ndevice = <golioth.golioth.Device object at 0xffffb8279550>\n\n    async def test_connect(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Wait for reconnection after golioth_client_stop();\n        assert None != await board.wait_for_regex_in_line('Stopping client', timeout_s=15)\n        assert None != await board.wait_for_regex_in_line('Starting client', timeout_s=120)\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Wait for reconnection after golioth_client_destroy();\n        assert None != await board.wait_for_regex_in_line('Destroying client', timeout_s=15)\n>       assert None != await board.wait_for_regex_in_line('Starting client', timeout_s=120)\n\ntests/hil/tests/connection/test_connection.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 78832.95724542461\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "board",
    "time" : {
      "start" : 1733439594907,
      "stop" : 1733439607709,
      "duration" : 12802
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733439594902,
      "stop" : 1733439594902,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733439608161,
      "stop" : 1733439608952,
      "duration" : 791
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733439594905,
      "stop" : 1733439594905,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733439594902,
      "stop" : 1733439594902,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733439594906,
      "stop" : 1733439594906,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733439594899,
      "stop" : 1733439594899,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733439594901,
      "stop" : 1733439594901,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733439594900,
      "stop" : 1733439594900,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733439594904,
      "stop" : 1733439594904,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733439594906,
      "stop" : 1733439594906,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733439607711,
      "stop" : 1733439608161,
      "duration" : 450
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733439594903,
      "stop" : 1733439594904,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733439594904,
      "stop" : 1733439594904,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733439594903,
      "stop" : 1733439594903,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 78832.95724542461\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffffb83642d0>\ndevice = <golioth.golioth.Device object at 0xffffb8279550>\n\n    async def test_connect(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Wait for reconnection after golioth_client_stop();\n        assert None != await board.wait_for_regex_in_line('Stopping client', timeout_s=15)\n        assert None != await board.wait_for_regex_in_line('Starting client', timeout_s=120)\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Wait for reconnection after golioth_client_destroy();\n        assert None != await board.wait_for_regex_in_line('Destroying client', timeout_s=15)\n>       assert None != await board.wait_for_regex_in_line('Starting client', timeout_s=120)\n\ntests/hil/tests/connection/test_connection.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 78832.95724542461\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8eafcd600d064a7f",
      "name" : "stdout",
      "source" : "8eafcd600d064a7f.txt",
      "type" : "text/plain",
      "size" : 6808
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1733439767224,
      "stop" : 1733439767228,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733439766807,
      "stop" : 1733439767220,
      "duration" : 413
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733439767222,
      "stop" : 1733439767222,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_connection"
  }, {
    "name" : "host",
    "value" : "910cc4df645c"
  }, {
    "name" : "thread",
    "value" : "240-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.connection.test_connection"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf52840dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 99,
        "unknown" : 0,
        "total" : 104
      },
      "items" : [ {
        "uid" : "22d3db4da7dbb7f0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1868/#testresult/22d3db4da7dbb7f0",
        "status" : "passed",
        "time" : {
          "start" : 1733412147195,
          "stop" : 1733412179843,
          "duration" : 32648
        }
      }, {
        "uid" : "7f3210b0a5b87277",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1865/#testresult/7f3210b0a5b87277",
        "status" : "passed",
        "time" : {
          "start" : 1733350616556,
          "stop" : 1733350648978,
          "duration" : 32422
        }
      }, {
        "uid" : "87141fd44a871c83",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1864/#testresult/87141fd44a871c83",
        "status" : "passed",
        "time" : {
          "start" : 1733326933649,
          "stop" : 1733326985052,
          "duration" : 51403
        }
      }, {
        "uid" : "243791c2a336a3e0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/243791c2a336a3e0",
        "status" : "passed",
        "time" : {
          "start" : 1733252341460,
          "stop" : 1733252374512,
          "duration" : 33052
        }
      }, {
        "uid" : "1ea7a7af04582b94",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/1ea7a7af04582b94",
        "status" : "passed",
        "time" : {
          "start" : 1733189453630,
          "stop" : 1733189485817,
          "duration" : 32187
        }
      }, {
        "uid" : "daf060a66705c709",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/daf060a66705c709",
        "status" : "passed",
        "time" : {
          "start" : 1732727305208,
          "stop" : 1732727353231,
          "duration" : 48023
        }
      }, {
        "uid" : "630c729ad9ff2153",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/630c729ad9ff2153",
        "status" : "passed",
        "time" : {
          "start" : 1732747810006,
          "stop" : 1732747857997,
          "duration" : 47991
        }
      }, {
        "uid" : "6fe9a8a8412e14e1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/6fe9a8a8412e14e1",
        "status" : "passed",
        "time" : {
          "start" : 1732727305208,
          "stop" : 1732727353231,
          "duration" : 48023
        }
      }, {
        "uid" : "bc9a56a2e8a0f35c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/bc9a56a2e8a0f35c",
        "status" : "passed",
        "time" : {
          "start" : 1732722122192,
          "stop" : 1732722159052,
          "duration" : 36860
        }
      }, {
        "uid" : "46bcec02c7f76cf3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/46bcec02c7f76cf3",
        "status" : "passed",
        "time" : {
          "start" : 1732629426496,
          "stop" : 1732629462666,
          "duration" : 36170
        }
      }, {
        "uid" : "2bc70f9be79eba59",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/2bc70f9be79eba59",
        "status" : "passed",
        "time" : {
          "start" : 1732629426496,
          "stop" : 1732629462666,
          "duration" : 36170
        }
      }, {
        "uid" : "8ec2616ef17279d6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/8ec2616ef17279d6",
        "status" : "passed",
        "time" : {
          "start" : 1732558185732,
          "stop" : 1732558217636,
          "duration" : 31904
        }
      }, {
        "uid" : "1a6f23e31e7ee02f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/1a6f23e31e7ee02f",
        "status" : "passed",
        "time" : {
          "start" : 1732558185732,
          "stop" : 1732558217636,
          "duration" : 31904
        }
      }, {
        "uid" : "3bbda5ec1ac146bd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/3bbda5ec1ac146bd",
        "status" : "passed",
        "time" : {
          "start" : 1732553095455,
          "stop" : 1732553128148,
          "duration" : 32693
        }
      }, {
        "uid" : "e2689acdd482d0e0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/e2689acdd482d0e0",
        "status" : "passed",
        "time" : {
          "start" : 1732550003315,
          "stop" : 1732550054478,
          "duration" : 51163
        }
      }, {
        "uid" : "8ab21b39e3c3607e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/8ab21b39e3c3607e",
        "status" : "broken",
        "statusDetails" : "httpx.ConnectTimeout",
        "time" : {
          "start" : 1732507806247,
          "stop" : 1732507811767,
          "duration" : 5520
        }
      }, {
        "uid" : "51da9627922618a3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/51da9627922618a3",
        "status" : "passed",
        "time" : {
          "start" : 1732310939544,
          "stop" : 1732310969203,
          "duration" : 29659
        }
      }, {
        "uid" : "2fcb43b358668fa1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/2fcb43b358668fa1",
        "status" : "passed",
        "time" : {
          "start" : 1732310939544,
          "stop" : 1732310969203,
          "duration" : 29659
        }
      }, {
        "uid" : "eb0c8e110ec340d1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/eb0c8e110ec340d1",
        "status" : "passed",
        "time" : {
          "start" : 1732310939544,
          "stop" : 1732310969203,
          "duration" : 29659
        }
      }, {
        "uid" : "a2d14f93f270f44f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/a2d14f93f270f44f",
        "status" : "passed",
        "time" : {
          "start" : 1732310939544,
          "stop" : 1732310969203,
          "duration" : 29659
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "nrf52840dk", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "872058d90e4eb3b5.json",
  "parameterValues" : [ "'nrf52840dk'", "'zephyr'" ]
}