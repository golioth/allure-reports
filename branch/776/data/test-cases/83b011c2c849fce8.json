{"uid":"83b011c2c849fce8","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6ece6f03e91be687a9089212ed56dba8","time":{"start":1760715718388,"stop":1760715749574,"duration":31186},"status":"failed","statusMessage":"AssertionError: assert 5 == 2\n +  where 5 = int('5')","statusTrace":"board = <pytest_hil.linuxboard.LinuxBoard object at 0x7f1dc428e6c0>\ndevice = <golioth.golioth.Device object at 0x7f1dc428eea0>\nproject = <golioth.golioth.Project object at 0x7f1dc428eb10>\nreleases = {'test_blocks': Release <68f263ba9d227679c2eeb97d, release_tags=[], device_tags=['68f263ba9d227679c2eeb97a'], artifact...ease_tags=[], device_tags=['68f263ba9d227679c2eeb97a'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 5 == 2\nE                    +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_ssid","time":{"start":1760715704454,"stop":1760715704454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760715704454,"stop":1760715704454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760715704454,"stop":1760715704454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760715704454,"stop":1760715704454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760715704454,"stop":1760715704454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760715704454,"stop":1760715704454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1760715704454,"stop":1760715704454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760715704454,"stop":1760715704477,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760715704477,"stop":1760715704738,"duration":261},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760715704738,"stop":1760715705041,"duration":303},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760715705041,"stop":1760715705798,"duration":757},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1760715705798,"stop":1760715706000,"duration":202},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1760715706000,"stop":1760715706261,"duration":261},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1760715706262,"stop":1760715706977,"duration":715},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1760715718388,"stop":1760715718388,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 5 == 2\n +  where 5 = int('5')","statusTrace":"board = <pytest_hil.linuxboard.LinuxBoard object at 0x7f1dc428e6c0>\ndevice = <golioth.golioth.Device object at 0x7f1dc428eea0>\nproject = <golioth.golioth.Project object at 0x7f1dc428eb10>\nreleases = {'test_blocks': Release <68f263ba9d227679c2eeb97d, release_tags=[], device_tags=['68f263ba9d227679c2eeb97a'], artifact...ease_tags=[], device_tags=['68f263ba9d227679c2eeb97a'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 5 == 2\nE                    +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","steps":[],"attachments":[{"uid":"629631c1b6fd303b","name":"stdout","source":"629631c1b6fd303b.txt","type":"text/plain","size":315}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1760715749617,"stop":1760715749891,"duration":274},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1760715749892,"stop":1760715750590,"duration":698},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1760715750591,"stop":1760715750874,"duration":283},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1760715750875,"stop":1760715750875,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760715750875,"stop":1760715751025,"duration":150},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1760715750875,"stop":1760715750875,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760715751026,"stop":1760715751026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760715751026,"stop":1760715751029,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"linux"},{"name":"tag","value":"linux"},{"name":"parentSuite","value":"hil.linux.linux"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"4066-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'linux'"},{"name":"platform_name","value":"'linux'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":25,"unknown":0,"total":27},"items":[{"uid":"89b02e8deb5248ac","reportUrl":"https://golioth.github.io/allure-reports/branch/774//#testresult/89b02e8deb5248ac","status":"passed","time":{"start":1760715089487,"stop":1760715135748,"duration":46261}},{"uid":"8908d15b544949b6","reportUrl":"https://golioth.github.io/allure-reports/branch/771//#testresult/8908d15b544949b6","status":"passed","time":{"start":1760646720264,"stop":1760646766344,"duration":46080}},{"uid":"dc25d492b1ac7684","reportUrl":"https://golioth.github.io/allure-reports/branch/760//#testresult/dc25d492b1ac7684","status":"passed","time":{"start":1760025245578,"stop":1760025294763,"duration":49185}},{"uid":"20d8c5fd8513489f","reportUrl":"https://golioth.github.io/allure-reports/branch/760//#testresult/20d8c5fd8513489f","status":"passed","time":{"start":1760025245578,"stop":1760025294763,"duration":49185}},{"uid":"e712653bfcd151bc","reportUrl":"https://golioth.github.io/allure-reports/branch/756//#testresult/e712653bfcd151bc","status":"passed","time":{"start":1759958488598,"stop":1759958539190,"duration":50592}},{"uid":"b56061cc31b81336","reportUrl":"https://golioth.github.io/allure-reports/branch/756//#testresult/b56061cc31b81336","status":"failed","statusDetails":"AssertionError: assert 7 == 4\n +  where 7 = int('7')","time":{"start":1759951646488,"stop":1759951687140,"duration":40652}},{"uid":"299411243b9fa501","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/299411243b9fa501","status":"passed","time":{"start":1759775493908,"stop":1759775543230,"duration":49322}},{"uid":"aa13d3127ec77ad7","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/aa13d3127ec77ad7","status":"passed","time":{"start":1759780599248,"stop":1759780646546,"duration":47298}},{"uid":"348e79973c9eaa3a","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/348e79973c9eaa3a","status":"passed","time":{"start":1759780599248,"stop":1759780646546,"duration":47298}},{"uid":"fc906b8a55c73998","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/fc906b8a55c73998","status":"passed","time":{"start":1759775493908,"stop":1759775543230,"duration":49322}},{"uid":"a9622c3573899d07","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/a9622c3573899d07","status":"passed","time":{"start":1759762791251,"stop":1759762842015,"duration":50764}},{"uid":"59bbf2c68d11d6c9","reportUrl":"https://golioth.github.io/allure-reports/branch/744//#testresult/59bbf2c68d11d6c9","status":"passed","time":{"start":1759764731546,"stop":1759764780118,"duration":48572}},{"uid":"11856b456bce0188","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/11856b456bce0188","status":"passed","time":{"start":1759762791251,"stop":1759762842015,"duration":50764}},{"uid":"a922b9dfa8a0e5ac","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/a922b9dfa8a0e5ac","status":"passed","time":{"start":1759514215035,"stop":1759514260533,"duration":45498}},{"uid":"a584651f0b7e7aad","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/a584651f0b7e7aad","status":"passed","time":{"start":1759367600203,"stop":1759367649104,"duration":48901}},{"uid":"96a155bd471b619a","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/96a155bd471b619a","status":"passed","time":{"start":1759514215035,"stop":1759514260533,"duration":45498}},{"uid":"a241a10af1fe30b3","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/a241a10af1fe30b3","status":"passed","time":{"start":1759514215035,"stop":1759514260533,"duration":45498}},{"uid":"b21593bb336ce48e","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/b21593bb336ce48e","status":"passed","time":{"start":1759175085187,"stop":1759175130551,"duration":45364}},{"uid":"e2bed76be0b98ea5","reportUrl":"https://golioth.github.io/allure-reports/branch/737//#testresult/e2bed76be0b98ea5","status":"passed","time":{"start":1759372118706,"stop":1759372168892,"duration":50186}},{"uid":"34220a0858cdbb28","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/34220a0858cdbb28","status":"passed","time":{"start":1759367600203,"stop":1759367649104,"duration":48901}}]},"tags":["linux","anyio"]},"source":"83b011c2c849fce8.json","parameterValues":["'linux'","'linux'"]}