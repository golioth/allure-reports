{"uid":"88b427314f1756c","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"971ce698793d8bade5e5481d115988c7","time":{"start":1731963758186,"stop":1731963781541,"duration":23355},"status":"failed","statusMessage":"AssertionError: assert 21.5 == 21.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f18c4506250>\ndevice = <golioth.golioth.Device object at 0x7f18c44f8390>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 21.5 == 21.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"device_object","time":{"start":1731963757438,"stop":1731963757439,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731963757438,"stop":1731963757438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1731963757438,"stop":1731963757438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731963757438,"stop":1731963757438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731963757438,"stop":1731963757438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731963757438,"stop":1731963757438,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731963757439,"stop":1731963757666,"duration":227},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731963757439,"stop":1731963757439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731963757439,"stop":1731963757439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731963757666,"stop":1731963758180,"duration":514},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731963758180,"stop":1731963758181,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731963758181,"stop":1731963758185,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 21.5 == 21.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f18c4506250>\ndevice = <golioth.golioth.Device object at 0x7f18c44f8390>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 21.5 == 21.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","steps":[],"attachments":[{"uid":"aa9a1b418f10413f","name":"log","source":"aa9a1b418f10413f.txt","type":"text/plain","size":14150}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731963781574,"stop":1731963782075,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731963782075,"stop":1731963782283,"duration":208},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731963782284,"stop":1731963782284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731963782285,"stop":1731963782285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_32"},{"name":"tag","value":"GitHub Actions 58"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"d0088439ce6b"},{"name":"thread","value":"84936-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":30,"unknown":0,"total":32},"items":[{"uid":"5771ae03d2fbfb6d","reportUrl":"https://golioth.github.io/allure-reports/branch/16//#testresult/5771ae03d2fbfb6d","status":"passed","time":{"start":1731962434252,"stop":1731962455328,"duration":21076}},{"uid":"fbeab8a6933153d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/fbeab8a6933153d2","status":"passed","time":{"start":1731954178235,"stop":1731954198758,"duration":20523}},{"uid":"2dbcda0aca1d5ed6","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/2dbcda0aca1d5ed6","status":"passed","time":{"start":1731953554486,"stop":1731953576237,"duration":21751}},{"uid":"d5d70042a0fca849","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/d5d70042a0fca849","status":"passed","time":{"start":1731921526731,"stop":1731921547564,"duration":20833}},{"uid":"c9cde165d4a58d85","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/c9cde165d4a58d85","status":"passed","time":{"start":1731921526731,"stop":1731921547564,"duration":20833}},{"uid":"49537a6f56c8505b","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/49537a6f56c8505b","status":"passed","time":{"start":1731904359514,"stop":1731904380395,"duration":20881}},{"uid":"e86da396df912263","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/e86da396df912263","status":"passed","time":{"start":1731710175724,"stop":1731710196611,"duration":20887}},{"uid":"1c3664510fed32b","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/1c3664510fed32b","status":"passed","time":{"start":1731707779469,"stop":1731707800597,"duration":21128}},{"uid":"cd769b9033bb7b22","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/cd769b9033bb7b22","status":"passed","time":{"start":1731704145742,"stop":1731704166520,"duration":20778}},{"uid":"efadf33d7b19731d","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/efadf33d7b19731d","status":"passed","time":{"start":1731704152287,"stop":1731704174820,"duration":22533}},{"uid":"edc443905f88f8e2","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/edc443905f88f8e2","status":"passed","time":{"start":1731693377808,"stop":1731693398232,"duration":20424}},{"uid":"d6864cbd01293787","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/d6864cbd01293787","status":"passed","time":{"start":1731620413608,"stop":1731620434600,"duration":20992}},{"uid":"761f5af0e2de3568","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/761f5af0e2de3568","status":"passed","time":{"start":1731620413608,"stop":1731620434600,"duration":20992}},{"uid":"9f1745fbbbdc62ab","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/9f1745fbbbdc62ab","status":"passed","time":{"start":1731620413608,"stop":1731620434600,"duration":20992}},{"uid":"40c89fd2c8b1eaae","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/40c89fd2c8b1eaae","status":"passed","time":{"start":1731612506522,"stop":1731612527491,"duration":20969}},{"uid":"b89d0518fb5cc1c7","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/b89d0518fb5cc1c7","status":"passed","time":{"start":1731608273534,"stop":1731608296245,"duration":22711}},{"uid":"2ff4523721ef3ef2","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/2ff4523721ef3ef2","status":"passed","time":{"start":1731606995988,"stop":1731607016873,"duration":20885}},{"uid":"e91c2a312257f94e","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/e91c2a312257f94e","status":"passed","time":{"start":1731596968773,"stop":1731596989740,"duration":20967}},{"uid":"12d24d0edc831b67","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/12d24d0edc831b67","status":"passed","time":{"start":1731546245744,"stop":1731546268052,"duration":22308}},{"uid":"38dd2d01bf8597d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/38dd2d01bf8597d6","status":"passed","time":{"start":1731533314893,"stop":1731533335721,"duration":20828}}]},"tags":["GitHub Actions 58","anyio","native_sim_32","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"88b427314f1756c.json","parameterValues":["'native_sim_32'","'zephyr'"]}