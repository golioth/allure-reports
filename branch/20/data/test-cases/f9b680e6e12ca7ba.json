{"uid":"f9b680e6e12ca7ba","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"d6f328dc7a80cab5561e8020f444a4be","time":{"start":1731963759817,"stop":1731963777770,"duration":17953},"status":"failed","statusMessage":"AssertionError: assert 21 == 20.5","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fec8dc1e310>\ndevice = <golioth.golioth.Device object at 0x7fec8dc0c590>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 21 == 20.5\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_psk","time":{"start":1731963758900,"stop":1731963758900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731963758900,"stop":1731963758900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731963758900,"stop":1731963758900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1731963758900,"stop":1731963758900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731963758900,"stop":1731963758901,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731963758900,"stop":1731963758900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731963758901,"stop":1731963758901,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731963758901,"stop":1731963758901,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731963758901,"stop":1731963759153,"duration":252},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731963759153,"stop":1731963759811,"duration":658},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731963759811,"stop":1731963759812,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731963759812,"stop":1731963759817,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 21 == 20.5","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fec8dc1e310>\ndevice = <golioth.golioth.Device object at 0x7fec8dc0c590>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 21 == 20.5\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","steps":[],"attachments":[{"uid":"cb31ae0d0dac35d2","name":"log","source":"cb31ae0d0dac35d2.txt","type":"text/plain","size":14004}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731963777803,"stop":1731963778304,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731963778305,"stop":1731963778567,"duration":262},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731963778567,"stop":1731963778568,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731963778568,"stop":1731963778568,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 25"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"04d26d793250"},{"name":"thread","value":"84890-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":30,"unknown":0,"total":32},"items":[{"uid":"8eaa267a84bf6003","reportUrl":"https://golioth.github.io/allure-reports/branch/16//#testresult/8eaa267a84bf6003","status":"passed","time":{"start":1731962434578,"stop":1731962456903,"duration":22325}},{"uid":"5c1a323092c06225","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/5c1a323092c06225","status":"passed","time":{"start":1731954180387,"stop":1731954201360,"duration":20973}},{"uid":"be618c4f9bc5ad5e","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/be618c4f9bc5ad5e","status":"passed","time":{"start":1731953552138,"stop":1731953572997,"duration":20859}},{"uid":"dfd95e1ee82074df","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/dfd95e1ee82074df","status":"passed","time":{"start":1731921530874,"stop":1731921551716,"duration":20842}},{"uid":"be6e92ef21d7dc9","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/be6e92ef21d7dc9","status":"passed","time":{"start":1731921530874,"stop":1731921551716,"duration":20842}},{"uid":"3d5241f5438096b1","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/3d5241f5438096b1","status":"passed","time":{"start":1731904358275,"stop":1731904379171,"duration":20896}},{"uid":"bde0ec2f257c696f","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/bde0ec2f257c696f","status":"passed","time":{"start":1731710178460,"stop":1731710199334,"duration":20874}},{"uid":"73311d55975b841d","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/73311d55975b841d","status":"passed","time":{"start":1731707771225,"stop":1731707791863,"duration":20638}},{"uid":"da91a7bb7c8d3fae","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/da91a7bb7c8d3fae","status":"passed","time":{"start":1731704138499,"stop":1731704159066,"duration":20567}},{"uid":"4195b3e1070523aa","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/4195b3e1070523aa","status":"passed","time":{"start":1731704153878,"stop":1731704175069,"duration":21191}},{"uid":"4fad54effe603836","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/4fad54effe603836","status":"passed","time":{"start":1731693386602,"stop":1731693407460,"duration":20858}},{"uid":"b92556c81b7ceee4","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/b92556c81b7ceee4","status":"passed","time":{"start":1731620411746,"stop":1731620432450,"duration":20704}},{"uid":"60b8e8bf8e88259a","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/60b8e8bf8e88259a","status":"passed","time":{"start":1731620411746,"stop":1731620432450,"duration":20704}},{"uid":"fcfedbaa4fd3bf06","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/fcfedbaa4fd3bf06","status":"passed","time":{"start":1731620411746,"stop":1731620432450,"duration":20704}},{"uid":"602cef2fc977c472","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/602cef2fc977c472","status":"passed","time":{"start":1731612513411,"stop":1731612534117,"duration":20706}},{"uid":"ce6d1e9836fc18b1","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/ce6d1e9836fc18b1","status":"failed","statusDetails":"AssertionError: assert 20.5 == 20.0","time":{"start":1731608281663,"stop":1731608294123,"duration":12460}},{"uid":"89672e1fcba0775d","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/89672e1fcba0775d","status":"passed","time":{"start":1731606991773,"stop":1731607012499,"duration":20726}},{"uid":"bf4847e855565cdf","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/bf4847e855565cdf","status":"passed","time":{"start":1731538601826,"stop":1731538623526,"duration":21700}},{"uid":"e1fba90217464d04","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/e1fba90217464d04","status":"passed","time":{"start":1731546255609,"stop":1731546277406,"duration":21797}},{"uid":"1705da20efd420b1","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/1705da20efd420b1","status":"passed","time":{"start":1731533326223,"stop":1731533347222,"duration":20999}}]},"tags":["GitHub Actions 25","native_sim_64","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"f9b680e6e12ca7ba.json","parameterValues":["'native_sim_64'","'zephyr'"]}