{
  "uid" : "c57632c46e7ace0c",
  "name" : "test_lightdb_set",
  "fullName" : "examples.esp_idf.lightdb.set.pytest.test_sample#test_lightdb_set",
  "historyId" : "3ee933dc6e207e3b2a3f4bea6c51db72",
  "time" : {
    "start" : 1732728970986,
    "stop" : 1732728982009,
    "duration" : 11023
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 52744.2700818431\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff9595f3d0>\ndevice = <golioth.golioth.Device object at 0xffff959a3590>\n\n    async def test_lightdb_set(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            pattern = re.compile(fr\"Setting counter to {i}\")\n            await board.wait_for_regex_in_line(pattern, timeout_s=30.0)\n>           await board.wait_for_regex_in_line('Counter successfully set', timeout_s=5.0)\n\nexamples/esp_idf/lightdb/set/pytest/test_sample.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 52744.2700818431\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1732728928693,
      "stop" : 1732728928693,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1732728928690,
      "stop" : 1732728928690,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1732728928697,
      "stop" : 1732728928697,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1732728928696,
      "stop" : 1732728928696,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1732728928690,
      "stop" : 1732728928691,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1732728928698,
      "stop" : 1732728968862,
      "duration" : 40164
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1732728928687,
      "stop" : 1732728928688,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1732728928694,
      "stop" : 1732728928695,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1732728928692,
      "stop" : 1732728928692,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1732728928697,
      "stop" : 1732728928697,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1732728928697,
      "stop" : 1732728928698,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1732728928689,
      "stop" : 1732728928689,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1732728969746,
      "stop" : 1732728970983,
      "duration" : 1237
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1732728968864,
      "stop" : 1732728969745,
      "duration" : 881
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1732728928695,
      "stop" : 1732728928696,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 52744.2700818431\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff9595f3d0>\ndevice = <golioth.golioth.Device object at 0xffff959a3590>\n\n    async def test_lightdb_set(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            pattern = re.compile(fr\"Setting counter to {i}\")\n            await board.wait_for_regex_in_line(pattern, timeout_s=30.0)\n>           await board.wait_for_regex_in_line('Counter successfully set', timeout_s=5.0)\n\nexamples/esp_idf/lightdb/set/pytest/test_sample.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 52744.2700818431\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "98af6c136d98cebb",
      "name" : "stdout",
      "source" : "98af6c136d98cebb.txt",
      "type" : "text/plain",
      "size" : 8189
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1732728983092,
      "stop" : 1732728983102,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1732728982595,
      "stop" : 1732728983088,
      "duration" : 493
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1732728983090,
      "stop" : 1732728983090,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "sams_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "8072489bd8d3"
  }, {
    "name" : "thread",
    "value" : "272-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.lightdb.set.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32s3_devkitc_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 6,
        "skipped" : 0,
        "passed" : 91,
        "unknown" : 0,
        "total" : 97
      },
      "items" : [ {
        "uid" : "2c169d1ddc106b8e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/2c169d1ddc106b8e",
        "status" : "passed",
        "time" : {
          "start" : 1732723701170,
          "stop" : 1732723724241,
          "duration" : 23071
        }
      }, {
        "uid" : "5d3211463d5f05bd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/5d3211463d5f05bd",
        "status" : "passed",
        "time" : {
          "start" : 1732639459760,
          "stop" : 1732639482576,
          "duration" : 22816
        }
      }, {
        "uid" : "b30d9e711973e0ce",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/b30d9e711973e0ce",
        "status" : "passed",
        "time" : {
          "start" : 1732563420841,
          "stop" : 1732563443222,
          "duration" : 22381
        }
      }, {
        "uid" : "e5bb06fa077b868b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/e5bb06fa077b868b",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732559845509,
          "stop" : 1732559855669,
          "duration" : 10160
        }
      }, {
        "uid" : "5a63dcf5c5dcd130",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/5a63dcf5c5dcd130",
        "status" : "passed",
        "time" : {
          "start" : 1732554185546,
          "stop" : 1732554207452,
          "duration" : 21906
        }
      }, {
        "uid" : "6685bc8d43a2bb5c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/6685bc8d43a2bb5c",
        "status" : "passed",
        "time" : {
          "start" : 1732508716874,
          "stop" : 1732508739849,
          "duration" : 22975
        }
      }, {
        "uid" : "ba5a66e2fa2a7747",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/ba5a66e2fa2a7747",
        "status" : "passed",
        "time" : {
          "start" : 1732508716874,
          "stop" : 1732508739849,
          "duration" : 22975
        }
      }, {
        "uid" : "5de24a0452e25b58",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/5de24a0452e25b58",
        "status" : "passed",
        "time" : {
          "start" : 1732316803932,
          "stop" : 1732316828766,
          "duration" : 24834
        }
      }, {
        "uid" : "b8854b411e2699f0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/b8854b411e2699f0",
        "status" : "passed",
        "time" : {
          "start" : 1732316803932,
          "stop" : 1732316828766,
          "duration" : 24834
        }
      }, {
        "uid" : "e4c391a71724ae06",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/e4c391a71724ae06",
        "status" : "passed",
        "time" : {
          "start" : 1732316803932,
          "stop" : 1732316828766,
          "duration" : 24834
        }
      }, {
        "uid" : "6c125f1a17034e6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/6c125f1a17034e6",
        "status" : "passed",
        "time" : {
          "start" : 1732312190650,
          "stop" : 1732312212966,
          "duration" : 22316
        }
      }, {
        "uid" : "6e797cb8541c7588",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/6e797cb8541c7588",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732301711573,
          "stop" : 1732301727656,
          "duration" : 16083
        }
      }, {
        "uid" : "30be042dfd4610ba",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/30be042dfd4610ba",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732301711573,
          "stop" : 1732301727656,
          "duration" : 16083
        }
      }, {
        "uid" : "6986073a5d913883",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/6986073a5d913883",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732301711573,
          "stop" : 1732301727656,
          "duration" : 16083
        }
      }, {
        "uid" : "a5fef2467d114a43",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1828//#testresult/a5fef2467d114a43",
        "status" : "passed",
        "time" : {
          "start" : 1732292232831,
          "stop" : 1732292255569,
          "duration" : 22738
        }
      }, {
        "uid" : "43b050b89643d02a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1817//#testresult/43b050b89643d02a",
        "status" : "passed",
        "time" : {
          "start" : 1732229568911,
          "stop" : 1732229590366,
          "duration" : 21455
        }
      }, {
        "uid" : "5047e0fbad68de88",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1828//#testresult/5047e0fbad68de88",
        "status" : "passed",
        "time" : {
          "start" : 1732292232831,
          "stop" : 1732292255569,
          "duration" : 22738
        }
      }, {
        "uid" : "f7b36f9728b6fbbf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1818//#testresult/f7b36f9728b6fbbf",
        "status" : "passed",
        "time" : {
          "start" : 1732228121647,
          "stop" : 1732228144357,
          "duration" : 22710
        }
      }, {
        "uid" : "3dd6324f0a33a5bb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1827//#testresult/3dd6324f0a33a5bb",
        "status" : "passed",
        "time" : {
          "start" : 1732289472045,
          "stop" : 1732289494043,
          "duration" : 21998
        }
      }, {
        "uid" : "edeb2c871115febb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1805//#testresult/edeb2c871115febb",
        "status" : "passed",
        "time" : {
          "start" : 1732194896379,
          "stop" : 1732194920162,
          "duration" : 23783
        }
      } ]
    },
    "tags" : [ "esp32s3_devkitc_espidf", "esp-idf", "anyio", "sams_orange_pi", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "c57632c46e7ace0c.json",
  "parameterValues" : [ "'esp32s3_devkitc_espidf'", "'esp-idf'" ]
}