{
  "uid" : "11f3f46d02a683d3",
  "name" : "test_lightdb_get",
  "fullName" : "examples.esp_idf.lightdb.get.pytest.test_sample#test_lightdb_get",
  "historyId" : "f1665023a29e368653101cf8b6a81eaa",
  "time" : {
    "start" : 1732802078328,
    "stop" : 1732802100217,
    "duration" : 21889
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 200020.31540960565\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffaa2b5ad0>\ndevice = <golioth.golioth.Device object at 0xffffaa2f9c10>\n\n    async def test_lightdb_get(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line(r'.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb reads\n    \n        await board.wait_for_regex_in_line(r'.*Failed to get counter \\(async\\): 0', timeout_s=10.0)\n    \n        await device.lightdb.set(\"counter\", 13)\n    \n>       await board.wait_for_regex_in_line(r'.*Counter \\(sync\\): 13', timeout_s=10.0)\n\nexamples/esp_idf/lightdb/get/pytest/test_sample.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 200020.31540960565\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "port",
    "time" : {
      "start" : 1732802051444,
      "stop" : 1732802051444,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1732802051446,
      "stop" : 1732802051446,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1732802051448,
      "stop" : 1732802051448,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1732802051447,
      "stop" : 1732802051447,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1732802051448,
      "stop" : 1732802051449,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1732802051441,
      "stop" : 1732802051441,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1732802051445,
      "stop" : 1732802051445,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1732802051445,
      "stop" : 1732802051445,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1732802051446,
      "stop" : 1732802051446,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1732802076898,
      "stop" : 1732802077374,
      "duration" : 476
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1732802051449,
      "stop" : 1732802076896,
      "duration" : 25447
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1732802077375,
      "stop" : 1732802078324,
      "duration" : 949
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1732802051442,
      "stop" : 1732802051443,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1732802051448,
      "stop" : 1732802051448,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1732802051447,
      "stop" : 1732802051447,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 200020.31540960565\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffaa2b5ad0>\ndevice = <golioth.golioth.Device object at 0xffffaa2f9c10>\n\n    async def test_lightdb_get(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line(r'.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb reads\n    \n        await board.wait_for_regex_in_line(r'.*Failed to get counter \\(async\\): 0', timeout_s=10.0)\n    \n        await device.lightdb.set(\"counter\", 13)\n    \n>       await board.wait_for_regex_in_line(r'.*Counter \\(sync\\): 13', timeout_s=10.0)\n\nexamples/esp_idf/lightdb/get/pytest/test_sample.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 200020.31540960565\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cc85c43a34ca92d",
      "name" : "stdout",
      "source" : "cc85c43a34ca92d.txt",
      "type" : "text/plain",
      "size" : 8724
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1732802101189,
      "stop" : 1732802101189,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1732802101191,
      "stop" : 1732802101201,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1732802100755,
      "stop" : 1732802101186,
      "duration" : 431
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "jons_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "dfb39a6ab35e"
  }, {
    "name" : "thread",
    "value" : "271-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.lightdb.get.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32s3_devkitc_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "e9f75fe7a4cf2744",
      "status" : "passed",
      "time" : {
        "start" : 1732729085614,
        "stop" : 1732729115360,
        "duration" : 29746
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 92,
        "unknown" : 0,
        "total" : 99
      },
      "items" : [ {
        "uid" : "57571d9920642354",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/57571d9920642354",
        "status" : "passed",
        "time" : {
          "start" : 1732749610882,
          "stop" : 1732749640027,
          "duration" : 29145
        }
      }, {
        "uid" : "83734177c77d73dd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/83734177c77d73dd",
        "status" : "passed",
        "time" : {
          "start" : 1732729085614,
          "stop" : 1732729115360,
          "duration" : 29746
        }
      }, {
        "uid" : "25a45b52d129c275",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/25a45b52d129c275",
        "status" : "passed",
        "time" : {
          "start" : 1732723797210,
          "stop" : 1732723824371,
          "duration" : 27161
        }
      }, {
        "uid" : "cf2d81ad387895f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/cf2d81ad387895f",
        "status" : "passed",
        "time" : {
          "start" : 1732639555144,
          "stop" : 1732639583221,
          "duration" : 28077
        }
      }, {
        "uid" : "d29d0d3063ca5be",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/d29d0d3063ca5be",
        "status" : "passed",
        "time" : {
          "start" : 1732563516179,
          "stop" : 1732563542914,
          "duration" : 26735
        }
      }, {
        "uid" : "62f26fe39de544af",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/62f26fe39de544af",
        "status" : "passed",
        "time" : {
          "start" : 1732559963153,
          "stop" : 1732559991623,
          "duration" : 28470
        }
      }, {
        "uid" : "1847fb72d97aaef",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/1847fb72d97aaef",
        "status" : "passed",
        "time" : {
          "start" : 1732554310507,
          "stop" : 1732554336308,
          "duration" : 25801
        }
      }, {
        "uid" : "34f6e95b0451d2f7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/34f6e95b0451d2f7",
        "status" : "passed",
        "time" : {
          "start" : 1732508815837,
          "stop" : 1732508842851,
          "duration" : 27014
        }
      }, {
        "uid" : "c5c22eb2df587ea6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/c5c22eb2df587ea6",
        "status" : "passed",
        "time" : {
          "start" : 1732508815837,
          "stop" : 1732508842851,
          "duration" : 27014
        }
      }, {
        "uid" : "ef48e72f3e5162f0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/ef48e72f3e5162f0",
        "status" : "passed",
        "time" : {
          "start" : 1732316931525,
          "stop" : 1732316957166,
          "duration" : 25641
        }
      }, {
        "uid" : "6d3df34d3fa5ea4d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/6d3df34d3fa5ea4d",
        "status" : "passed",
        "time" : {
          "start" : 1732316931525,
          "stop" : 1732316957166,
          "duration" : 25641
        }
      }, {
        "uid" : "79802afdf835f413",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/79802afdf835f413",
        "status" : "passed",
        "time" : {
          "start" : 1732316931525,
          "stop" : 1732316957166,
          "duration" : 25641
        }
      }, {
        "uid" : "339015f4ce785c9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/339015f4ce785c9",
        "status" : "passed",
        "time" : {
          "start" : 1732312285564,
          "stop" : 1732312312873,
          "duration" : 27309
        }
      }, {
        "uid" : "7081e759e5ef163d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/7081e759e5ef163d",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732301831367,
          "stop" : 1732301859383,
          "duration" : 28016
        }
      }, {
        "uid" : "1af95048b78d50e8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/1af95048b78d50e8",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732301831367,
          "stop" : 1732301859383,
          "duration" : 28016
        }
      }, {
        "uid" : "5a2700951a3b536",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/5a2700951a3b536",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732301831367,
          "stop" : 1732301859383,
          "duration" : 28016
        }
      }, {
        "uid" : "b2e8d0baeab5f660",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1828//#testresult/b2e8d0baeab5f660",
        "status" : "passed",
        "time" : {
          "start" : 1732292331818,
          "stop" : 1732292359331,
          "duration" : 27513
        }
      }, {
        "uid" : "e077324a8acdb044",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1817//#testresult/e077324a8acdb044",
        "status" : "passed",
        "time" : {
          "start" : 1732229661344,
          "stop" : 1732229687395,
          "duration" : 26051
        }
      }, {
        "uid" : "3e10095b3464bca8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1828//#testresult/3e10095b3464bca8",
        "status" : "passed",
        "time" : {
          "start" : 1732292331818,
          "stop" : 1732292359331,
          "duration" : 27513
        }
      }, {
        "uid" : "7698724b022ddc51",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1818//#testresult/7698724b022ddc51",
        "status" : "passed",
        "time" : {
          "start" : 1732228217294,
          "stop" : 1732228244588,
          "duration" : 27294
        }
      } ]
    },
    "tags" : [ "esp32s3_devkitc_espidf", "esp-idf", "jons_orange_pi", "anyio", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "11f3f46d02a683d3.json",
  "parameterValues" : [ "'esp32s3_devkitc_espidf'", "'esp-idf'" ]
}