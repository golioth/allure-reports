{"uid":"c602d9bd7a83f6c9","name":"test_lightdb_get","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample#test_lightdb_get","historyId":"a7312cf31d6314ecf7ffd5a0a0af0ddc","time":{"start":1730561874103,"stop":1730561874103,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_get>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730561874106,"stop":1730561874106,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730561874107,"stop":1730561874107,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730561874107,"stop":1730561874108,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730561874108,"stop":1730561874108,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1730561874109,"stop":1730561874109,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1730561874109,"stop":1730561874111,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730561874112,"stop":1730561874112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730561874113,"stop":1730561874113,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730561874113,"stop":1730561874569,"duration":456},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730561874569,"stop":1730561875469,"duration":900},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1730561875470,"stop":1730561894126,"duration":18656},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1730561894126,"stop":1730561914156,"duration":20030},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_get>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"69808a1ee7d86b8e","name":"log","source":"69808a1ee7d86b8e.txt","type":"text/plain","size":9875}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1730561914490,"stop":1730561914504,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730561914506,"stop":1730561914878,"duration":372},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730561914881,"stop":1730561914883,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1730561914888,"stop":1730561914888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"3a496da7bfe7"},{"name":"thread","value":"411-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":1,"skipped":0,"passed":20,"unknown":0,"total":25},"items":[{"uid":"af5e6d13519377f9","reportUrl":"https://golioth.github.io/allure-reports/branch/1710//#testresult/af5e6d13519377f9","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1730472458752,"stop":1730472458752,"duration":0}},{"uid":"bf2cc5b6b10174e4","reportUrl":"https://golioth.github.io/allure-reports/branch/1710//#testresult/bf2cc5b6b10174e4","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1730462491200,"stop":1730462491200,"duration":0}},{"uid":"a6ec83dae4c18ea0","reportUrl":"https://golioth.github.io/allure-reports/branch/1708//#testresult/a6ec83dae4c18ea0","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1730409781221,"stop":1730409781221,"duration":0}},{"uid":"e8484e1918b593a5","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/e8484e1918b593a5","status":"passed","time":{"start":1730236432543,"stop":1730236460922,"duration":28379}},{"uid":"59e7f688b652981c","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/59e7f688b652981c","status":"passed","time":{"start":1729789591199,"stop":1729789618329,"duration":27130}},{"uid":"c4b68eb77b638b64","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/c4b68eb77b638b64","status":"passed","time":{"start":1729781371797,"stop":1729781400631,"duration":28834}},{"uid":"6b5c0919b2f601e1","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/6b5c0919b2f601e1","status":"passed","time":{"start":1729725376168,"stop":1729725404052,"duration":27884}},{"uid":"2658d108d808fc4c","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/2658d108d808fc4c","status":"passed","time":{"start":1729722951589,"stop":1729722981471,"duration":29882}},{"uid":"f45572bcf7f204c2","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/f45572bcf7f204c2","status":"passed","time":{"start":1729719581735,"stop":1729719611673,"duration":29938}},{"uid":"905c78acada2d081","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/905c78acada2d081","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729625214891,"stop":1729625237915,"duration":23024}},{"uid":"49795d1e106525","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/49795d1e106525","status":"passed","time":{"start":1729530059419,"stop":1729530089362,"duration":29943}},{"uid":"930110bc742278d7","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/930110bc742278d7","status":"passed","time":{"start":1729527624739,"stop":1729527653633,"duration":28894}},{"uid":"e5ba273f856ed8f4","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/e5ba273f856ed8f4","status":"passed","time":{"start":1729388562615,"stop":1729388591094,"duration":28479}},{"uid":"6c1ea3382fe44aad","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/6c1ea3382fe44aad","status":"passed","time":{"start":1729379885813,"stop":1729379912997,"duration":27184}},{"uid":"162788cd6fc9e65b","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/162788cd6fc9e65b","status":"passed","time":{"start":1729198353890,"stop":1729198384218,"duration":30328}},{"uid":"51ddc98f066f4a1c","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/51ddc98f066f4a1c","status":"passed","time":{"start":1729116991665,"stop":1729117019956,"duration":28291}},{"uid":"b6df0f6b4ecaf0b6","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/b6df0f6b4ecaf0b6","status":"passed","time":{"start":1729114135802,"stop":1729114164980,"duration":29178}},{"uid":"dcd1e97aa6a6adb7","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/dcd1e97aa6a6adb7","status":"passed","time":{"start":1729108588235,"stop":1729108615262,"duration":27027}},{"uid":"c301da0e267d4f90","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/c301da0e267d4f90","status":"passed","time":{"start":1729034945148,"stop":1729034975127,"duration":29979}},{"uid":"1c0b36bdb284a3b3","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/1c0b36bdb284a3b3","status":"passed","time":{"start":1729032475077,"stop":1729032504168,"duration":29091}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"c602d9bd7a83f6c9.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}