{"uid":"4a3a05dac8b77dfe","name":"test_restart","fullName":"tests.hil.tests.settings.test_settings#test_restart","historyId":"4f8434923d992d91d812f32452b194f1","time":{"start":1730999468829,"stop":1730999479974,"duration":11145},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 166738.24782838183\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffff970ff350>\ndevice = <golioth.golioth.Device object at 0xffff970f1390>\n\n    async def test_restart(board, device):\n        await device.settings.set('TEST_RESTART', True)\n>       assert None != await board.wait_for_regex_in_line('Received test_restart: true', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:213: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 166738.24782838183\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730999321381,"stop":1730999321381,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730999321381,"stop":1730999321382,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730999321382,"stop":1730999321382,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730999321383,"stop":1730999321383,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730999321384,"stop":1730999321385,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730999321385,"stop":1730999321386,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730999321386,"stop":1730999321386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730999321387,"stop":1730999321387,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730999321388,"stop":1730999321388,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730999321389,"stop":1730999321389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730999321390,"stop":1730999321390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730999321390,"stop":1730999321390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730999321391,"stop":1730999321804,"duration":413},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730999321805,"stop":1730999334442,"duration":12637},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730999334445,"stop":1730999335394,"duration":949},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730999335395,"stop":1730999348137,"duration":12742},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730999480586,"stop":1730999480586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730999480588,"stop":1730999480966,"duration":378},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730999480969,"stop":1730999480970,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730999480973,"stop":1730999480975,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"e7045ed27118"},{"name":"thread","value":"299-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d4c0d4b7914b97ff","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730560400234,"stop":1730560411593,"duration":11359}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":19,"unknown":0,"total":28},"items":[{"uid":"db5b99618e2661cb","reportUrl":"https://golioth.github.io/allure-reports/branch/1712//#testresult/db5b99618e2661cb","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730560400234,"stop":1730560411593,"duration":11359}},{"uid":"2ca4901e2744c4aa","reportUrl":"https://golioth.github.io/allure-reports/branch/1710//#testresult/2ca4901e2744c4aa","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730472226815,"stop":1730472238009,"duration":11194}},{"uid":"4f1ea762eafa3f81","reportUrl":"https://golioth.github.io/allure-reports/branch/1710//#testresult/4f1ea762eafa3f81","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730461365613,"stop":1730461377428,"duration":11815}},{"uid":"9093263d3e0e0c37","reportUrl":"https://golioth.github.io/allure-reports/branch/1708//#testresult/9093263d3e0e0c37","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1730408294915,"stop":1730408324166,"duration":29251}},{"uid":"ecc3a38e62ce6783","reportUrl":"https://golioth.github.io/allure-reports/branch/1707//#testresult/ecc3a38e62ce6783","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730382605753,"stop":1730382654048,"duration":48295}},{"uid":"b05cf8983d2b602f","reportUrl":"https://golioth.github.io/allure-reports/branch/1706//#testresult/b05cf8983d2b602f","status":"passed","time":{"start":1730361017130,"stop":1730361046744,"duration":29614}},{"uid":"8ce80bf8b001857c","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/8ce80bf8b001857c","status":"passed","time":{"start":1730234825768,"stop":1730234855471,"duration":29703}},{"uid":"b50aecc68d3cb35d","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/b50aecc68d3cb35d","status":"passed","time":{"start":1729787954677,"stop":1729787984346,"duration":29669}},{"uid":"aa08732b985e0bf","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/aa08732b985e0bf","status":"passed","time":{"start":1729780846885,"stop":1729780876806,"duration":29921}},{"uid":"c2bd6f388a14893b","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/c2bd6f388a14893b","status":"passed","time":{"start":1729723595707,"stop":1729723625373,"duration":29666}},{"uid":"1d2a0932d5c3a98a","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/1d2a0932d5c3a98a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729720309725,"stop":1729720359442,"duration":49717}},{"uid":"bf22cd22b6d6d580","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/bf22cd22b6d6d580","status":"passed","time":{"start":1729717726962,"stop":1729717756594,"duration":29632}},{"uid":"a7b75e89300c8a80","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/a7b75e89300c8a80","status":"passed","time":{"start":1729624099017,"stop":1729624129037,"duration":30020}},{"uid":"9174e86cb4801625","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/9174e86cb4801625","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729526052480,"stop":1729526101978,"duration":49498}},{"uid":"44c81a4f2012a41f","reportUrl":"https://golioth.github.io/allure-reports/branch/2//#testresult/44c81a4f2012a41f","status":"passed","time":{"start":1729388766966,"stop":1729388796177,"duration":29211}},{"uid":"30b0e306c05912c2","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/30b0e306c05912c2","status":"passed","time":{"start":1729388027632,"stop":1729388056714,"duration":29082}},{"uid":"890fc50b62cfd9b7","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/890fc50b62cfd9b7","status":"passed","time":{"start":1729378220570,"stop":1729378249663,"duration":29093}},{"uid":"7d61bae19f512fd","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/7d61bae19f512fd","status":"passed","time":{"start":1729196941236,"stop":1729196970104,"duration":28868}},{"uid":"a8f1b508a297f215","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/a8f1b508a297f215","status":"passed","time":{"start":1729115495513,"stop":1729115524962,"duration":29449}},{"uid":"fe11852c5e5ac04b","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/fe11852c5e5ac04b","status":"passed","time":{"start":1729112443768,"stop":1729112472764,"duration":28996}}]},"tags":["nrf52840dk","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"4a3a05dac8b77dfe.json","parameterValues":["'nrf52840dk'","'zephyr'"]}