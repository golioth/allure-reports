{
  "uid" : "fb27b5ddfd100bce",
  "name" : "test_fw_update",
  "fullName" : "examples.esp_idf.fw_update.pytest.test_sample#test_fw_update",
  "historyId" : "bfea7ee151c214e37fa31ad7f88138aa",
  "time" : {
    "start" : 1733789140179,
    "stop" : 1733789533946,
    "duration" : 393767
  },
  "status" : "broken",
  "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects/firmware_ci/devices?deviceName=generated-QtTycuJdfAwVmZVL'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503",
  "statusTrace" : "board = <espidfboard.ESPIDFBoard object at 0xffff7d2c07d0>\nproject = <golioth.golioth.Project object at 0xffff7d343dd0>\ndevice = <golioth.golioth.Device object at 0xffff7d352150>\nfw_info = {'package': 'main', 'version': '255.8.9'}\nrelease = Release <675785d48ab3217ea07d7436, release_tags=[], device_tags=['675785d28ab3217ea07d7435'], artifact_ids=['674e1bc0509873c6f744523a'], rollout=False>\n\n    async def test_fw_update(board, project, device, fw_info, release):\n    \n        # Wait for app to start running or 10 seconds to pass so runtime settings are ready.\n    \n        try:\n            await board.wait_for_regex_in_line('.*Start FW Update sample.', timeout_s=10.0)\n        except:\n            pass\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for first manifest to arrive (no update expected)\n    \n        await board.wait_for_regex_in_line('.*Nothing to do.', timeout_s=90.0)\n    \n        # Rollout the release\n    \n        await project.releases.rollout_set(release.id, True)\n    \n        # Monitor block download and watch for reboot after update\n    \n        await board.wait_for_regex_in_line('.*Received block.', timeout_s=90.0)\n        LOGGER.info(\"Block download has begun!\")\n    \n        await board.wait_for_regex_in_line('.*Rebooting into new image.', timeout_s=600.0)\n        LOGGER.info(\"Download complete, restarting to perform update.\")\n    \n        # Test for board to run new firmware and report to Golioth\n    \n        await board.wait_for_regex_in_line('.*Current firmware version: main - 255.8.9.',\n                                      timeout_s=120.0)\n        LOGGER.info(\"Device reported expected update version\")\n    \n        await board.wait_for_regex_in_line('.*Nothing to do.', timeout_s=30.0)\n        LOGGER.info(\"Device received manifest confirming successful upgrade.\")\n    \n        # Check cloud for reported firmware version\n    \n>       device_check = await project.device_by_name(device.name)\n\nexamples/esp_idf/fw_update/pytest/test_sample.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:234: in device_by_name\n    devices = await self.get_devices({'deviceName': name})\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:230: in get_devices\n    resp = await self.get('devices', params=params)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [503 Service Unavailable]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects/firmware_ci/devices?deviceName=generated-QtTycuJdfAwVmZVL'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "blueprint_name",
    "time" : {
      "start" : 1733789085658,
      "stop" : 1733789085658,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "tag",
    "time" : {
      "start" : 1733789138505,
      "stop" : 1733789139744,
      "duration" : 1239
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733789085647,
      "stop" : 1733789085647,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733789085646,
      "stop" : 1733789085646,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733789085647,
      "stop" : 1733789085656,
      "duration" : 9
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "blueprint_id",
    "time" : {
      "start" : 1733789137712,
      "stop" : 1733789138109,
      "duration" : 397
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733789085657,
      "stop" : 1733789085657,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733789136264,
      "stop" : 1733789136826,
      "duration" : 562
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733789085657,
      "stop" : 1733789085657,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733789085646,
      "stop" : 1733789085646,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733789085613,
      "stop" : 1733789085614,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733789085644,
      "stop" : 1733789085644,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733789085643,
      "stop" : 1733789085644,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733789085645,
      "stop" : 1733789085645,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733789085645,
      "stop" : 1733789085645,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_info",
    "time" : {
      "start" : 1733789085614,
      "stop" : 1733789085643,
      "duration" : 29
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733789085656,
      "stop" : 1733789085656,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "artifact",
    "time" : {
      "start" : 1733789138110,
      "stop" : 1733789138504,
      "duration" : 394
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "release",
    "time" : {
      "start" : 1733789139745,
      "stop" : 1733789140175,
      "duration" : 430
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733789085658,
      "stop" : 1733789136263,
      "duration" : 50605
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733789136827,
      "stop" : 1733789137712,
      "duration" : 885
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects/firmware_ci/devices?deviceName=generated-QtTycuJdfAwVmZVL'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503",
    "statusTrace" : "board = <espidfboard.ESPIDFBoard object at 0xffff7d2c07d0>\nproject = <golioth.golioth.Project object at 0xffff7d343dd0>\ndevice = <golioth.golioth.Device object at 0xffff7d352150>\nfw_info = {'package': 'main', 'version': '255.8.9'}\nrelease = Release <675785d48ab3217ea07d7436, release_tags=[], device_tags=['675785d28ab3217ea07d7435'], artifact_ids=['674e1bc0509873c6f744523a'], rollout=False>\n\n    async def test_fw_update(board, project, device, fw_info, release):\n    \n        # Wait for app to start running or 10 seconds to pass so runtime settings are ready.\n    \n        try:\n            await board.wait_for_regex_in_line('.*Start FW Update sample.', timeout_s=10.0)\n        except:\n            pass\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for first manifest to arrive (no update expected)\n    \n        await board.wait_for_regex_in_line('.*Nothing to do.', timeout_s=90.0)\n    \n        # Rollout the release\n    \n        await project.releases.rollout_set(release.id, True)\n    \n        # Monitor block download and watch for reboot after update\n    \n        await board.wait_for_regex_in_line('.*Received block.', timeout_s=90.0)\n        LOGGER.info(\"Block download has begun!\")\n    \n        await board.wait_for_regex_in_line('.*Rebooting into new image.', timeout_s=600.0)\n        LOGGER.info(\"Download complete, restarting to perform update.\")\n    \n        # Test for board to run new firmware and report to Golioth\n    \n        await board.wait_for_regex_in_line('.*Current firmware version: main - 255.8.9.',\n                                      timeout_s=120.0)\n        LOGGER.info(\"Device reported expected update version\")\n    \n        await board.wait_for_regex_in_line('.*Nothing to do.', timeout_s=30.0)\n        LOGGER.info(\"Device received manifest confirming successful upgrade.\")\n    \n        # Check cloud for reported firmware version\n    \n>       device_check = await project.device_by_name(device.name)\n\nexamples/esp_idf/fw_update/pytest/test_sample.py:55: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:234: in device_by_name\n    devices = await self.get_devices({'deviceName': name})\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:230: in get_devices\n    resp = await self.get('devices', params=params)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [503 Service Unavailable]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects/firmware_ci/devices?deviceName=generated-QtTycuJdfAwVmZVL'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4840c93372dfc8ae",
      "name" : "stdout",
      "source" : "4840c93372dfc8ae.txt",
      "type" : "text/plain",
      "size" : 78440
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "tag::0",
    "time" : {
      "start" : 1733789534784,
      "stop" : 1733789535543,
      "duration" : 759
    },
    "status" : "broken",
    "statusMessage" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 934, in run_asyncgen_fixture\n    self._call_in_runner_task(asyncgen.asend, None)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/examples/esp_idf/fw_update/pytest/conftest.py\", line 49, in tag\n    await project.tags.delete(tag.id)\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 1198, in delete\n    msg = err.response.json()['message']\n          ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_models.py\", line 766, in json\n    return jsonlib.loads(self.content, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "blueprint_id::0",
    "time" : {
      "start" : 1733789535548,
      "stop" : 1733789535548,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733789535923,
      "stop" : 1733789535923,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_info::0",
    "time" : {
      "start" : 1733789535961,
      "stop" : 1733789535963,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "artifact::0",
    "time" : {
      "start" : 1733789535546,
      "stop" : 1733789535546,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "release::0",
    "time" : {
      "start" : 1733789534388,
      "stop" : 1733789534781,
      "duration" : 393
    },
    "status" : "broken",
    "statusMessage" : "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 934, in run_asyncgen_fixture\n    self._call_in_runner_task(asyncgen.asend, None)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/examples/esp_idf/fw_update/pytest/conftest.py\", line 74, in release\n    await project.releases.delete(release.id)\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 907, in delete\n    msg = err.response.json()['message']\n          ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_models.py\", line 766, in json\n    return jsonlib.loads(self.content, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.11/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.11/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.11/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1733789535925,
      "stop" : 1733789535933,
      "duration" : 8
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733789535550,
      "stop" : 1733789535920,
      "duration" : 370
    },
    "status" : "broken",
    "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects/firmware_ci/devices/675785d18ab3217ea07d7433'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 934, in run_asyncgen_fixture\n    self._call_in_runner_task(asyncgen.asend, None)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py\", line 68, in device\n    await project.delete_device(device)\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 257, in delete_device\n    await self.delete_device_by_id(dev.id)\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 254, in delete_device_by_id\n    await self.delete(f'devices/{id}')\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 83, in wrapper\n    resp.raise_for_status()\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_models.py\", line 763, in raise_for_status\n    raise HTTPStatusError(message, request=request, response=self)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "jons_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "aaa1ca10c9f6"
  }, {
    "name" : "thread",
    "value" : "279-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.fw_update.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32c3_devkitm_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 5,
        "skipped" : 0,
        "passed" : 107,
        "unknown" : 0,
        "total" : 112
      },
      "items" : [ {
        "uid" : "bb7f8464886f87d8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1880/#testresult/bb7f8464886f87d8",
        "status" : "passed",
        "time" : {
          "start" : 1733786722810,
          "stop" : 1733787037748,
          "duration" : 314938
        }
      }, {
        "uid" : "fe7e28416b8b3912",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1880/#testresult/fe7e28416b8b3912",
        "status" : "passed",
        "time" : {
          "start" : 1733778753707,
          "stop" : 1733779112724,
          "duration" : 359017
        }
      }, {
        "uid" : "806dc97d2afd1095",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1878/#testresult/806dc97d2afd1095",
        "status" : "passed",
        "time" : {
          "start" : 1733764508046,
          "stop" : 1733764896511,
          "duration" : 388465
        }
      }, {
        "uid" : "a97f8315bafe3fe7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/35/#testresult/a97f8315bafe3fe7",
        "status" : "passed",
        "time" : {
          "start" : 1733554827441,
          "stop" : 1733555135294,
          "duration" : 307853
        }
      }, {
        "uid" : "ae200f4e20bcee83",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1873/#testresult/ae200f4e20bcee83",
        "status" : "passed",
        "time" : {
          "start" : 1733522250714,
          "stop" : 1733522644609,
          "duration" : 393895
        }
      }, {
        "uid" : "bdbdd169ed22a4fb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1870/#testresult/bdbdd169ed22a4fb",
        "status" : "passed",
        "time" : {
          "start" : 1733442312420,
          "stop" : 1733442474284,
          "duration" : 161864
        }
      }, {
        "uid" : "97d13ccf32463c55",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1868/#testresult/97d13ccf32463c55",
        "status" : "passed",
        "time" : {
          "start" : 1733413438864,
          "stop" : 1733413735794,
          "duration" : 296930
        }
      }, {
        "uid" : "461ce5cb3b4bae6d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1865/#testresult/461ce5cb3b4bae6d",
        "status" : "passed",
        "time" : {
          "start" : 1733351894736,
          "stop" : 1733352329840,
          "duration" : 435104
        }
      }, {
        "uid" : "7d5f9bfb3043a21f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1864/#testresult/7d5f9bfb3043a21f",
        "status" : "passed",
        "time" : {
          "start" : 1733327955842,
          "stop" : 1733328294340,
          "duration" : 338498
        }
      }, {
        "uid" : "1ec4827494e78d05",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/1ec4827494e78d05",
        "status" : "passed",
        "time" : {
          "start" : 1733253639731,
          "stop" : 1733254036799,
          "duration" : 397068
        }
      }, {
        "uid" : "6c749a8768e2fcfa",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/6c749a8768e2fcfa",
        "status" : "passed",
        "time" : {
          "start" : 1733190057099,
          "stop" : 1733190422967,
          "duration" : 365868
        }
      }, {
        "uid" : "e7c7a3412b344efb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/e7c7a3412b344efb",
        "status" : "passed",
        "time" : {
          "start" : 1732728575005,
          "stop" : 1732728917754,
          "duration" : 342749
        }
      }, {
        "uid" : "6d1b8c2445e13e13",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/6d1b8c2445e13e13",
        "status" : "passed",
        "time" : {
          "start" : 1732749078872,
          "stop" : 1732749395572,
          "duration" : 316700
        }
      }, {
        "uid" : "97b44be7d12209c7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/97b44be7d12209c7",
        "status" : "passed",
        "time" : {
          "start" : 1732728575005,
          "stop" : 1732728917754,
          "duration" : 342749
        }
      }, {
        "uid" : "2781f7300081eb90",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/2781f7300081eb90",
        "status" : "broken",
        "statusDetails" : "SystemExit: 2",
        "time" : {
          "start" : 1732723336707,
          "stop" : 1732723336707,
          "duration" : 0
        }
      }, {
        "uid" : "52393e8f1943941d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/52393e8f1943941d",
        "status" : "passed",
        "time" : {
          "start" : 1732630671169,
          "stop" : 1732631066772,
          "duration" : 395603
        }
      }, {
        "uid" : "cc8be8b7d3d05331",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/cc8be8b7d3d05331",
        "status" : "passed",
        "time" : {
          "start" : 1732630671169,
          "stop" : 1732631066772,
          "duration" : 395603
        }
      }, {
        "uid" : "67df2e4ebbb58cfb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/67df2e4ebbb58cfb",
        "status" : "passed",
        "time" : {
          "start" : 1732559471183,
          "stop" : 1732559893588,
          "duration" : 422405
        }
      }, {
        "uid" : "56d5714f2ef879d0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/56d5714f2ef879d0",
        "status" : "passed",
        "time" : {
          "start" : 1732559471183,
          "stop" : 1732559893588,
          "duration" : 422405
        }
      }, {
        "uid" : "d7f7b8c6ea16454d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/d7f7b8c6ea16454d",
        "status" : "passed",
        "time" : {
          "start" : 1732553722940,
          "stop" : 1732554080352,
          "duration" : 357412
        }
      } ]
    },
    "tags" : [ "esp-idf", "jons_orange_pi", "anyio", "esp32c3_devkitm_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "fb27b5ddfd100bce.json",
  "parameterValues" : [ "'esp32c3_devkitm_espidf'", "'esp-idf'" ]
}