{
  "uid" : "91d37eacb040b8b1",
  "name" : "test_stream",
  "fullName" : "examples.esp_idf.stream.pytest.test_sample#test_stream",
  "historyId" : "270f0f9dd7cd7f9966895a2398a09f6f",
  "time" : {
    "start" : 1733789539339,
    "stop" : 1733789539339,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503",
  "statusTrace" : "item = <Function test_stream>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:83: in wrapper\n    yield runner.run_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:946: in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py:50: in project\n    project = (await client.get_projects())[0]\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:137: in get_projects\n    resp = await self.get('projects')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [503 Service Unavailable]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733789539343,
      "stop" : 1733789539343,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733789539351,
      "stop" : 1733789539351,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733789539349,
      "stop" : 1733789539349,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733789590106,
      "stop" : 1733789590623,
      "duration" : 517
    },
    "status" : "broken",
    "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py\", line 50, in project\n    project = (await client.get_projects())[0]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 137, in get_projects\n    resp = await self.get('projects')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 83, in wrapper\n    resp.raise_for_status()\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_models.py\", line 763, in raise_for_status\n    raise HTTPStatusError(message, request=request, response=self)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733789539348,
      "stop" : 1733789539348,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733789539345,
      "stop" : 1733789539345,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733789539346,
      "stop" : 1733789539346,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733789539351,
      "stop" : 1733789590104,
      "duration" : 50753
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733789539350,
      "stop" : 1733789539350,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733789539347,
      "stop" : 1733789539347,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733789539349,
      "stop" : 1733789539349,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733789539344,
      "stop" : 1733789539344,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733789539347,
      "stop" : 1733789539347,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733789539350,
      "stop" : 1733789539350,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503",
    "statusTrace" : "item = <Function test_stream>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:83: in wrapper\n    yield runner.run_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:946: in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py:50: in project\n    project = (await client.get_projects())[0]\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:137: in get_projects\n    resp = await self.get('projects')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [503 Service Unavailable]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "86c70791e6b0a066",
      "name" : "stdout",
      "source" : "86c70791e6b0a066.txt",
      "type" : "text/plain",
      "size" : 5825
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1733789591234,
      "stop" : 1733789591244,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "jons_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "aaa1ca10c9f6"
  }, {
    "name" : "thread",
    "value" : "286-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.stream.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32c3_devkitm_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 111,
        "unknown" : 0,
        "total" : 112
      },
      "items" : [ {
        "uid" : "2a6a5601b547ef22",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1880/#testresult/2a6a5601b547ef22",
        "status" : "passed",
        "time" : {
          "start" : 1733787095211,
          "stop" : 1733787117975,
          "duration" : 22764
        }
      }, {
        "uid" : "663c133b9f4bf38",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1880/#testresult/663c133b9f4bf38",
        "status" : "passed",
        "time" : {
          "start" : 1733779169910,
          "stop" : 1733779192947,
          "duration" : 23037
        }
      }, {
        "uid" : "a32c9924cc3957a7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1878/#testresult/a32c9924cc3957a7",
        "status" : "passed",
        "time" : {
          "start" : 1733764953478,
          "stop" : 1733764975767,
          "duration" : 22289
        }
      }, {
        "uid" : "91711298400faa03",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/35/#testresult/91711298400faa03",
        "status" : "passed",
        "time" : {
          "start" : 1733555191972,
          "stop" : 1733555213701,
          "duration" : 21729
        }
      }, {
        "uid" : "4ee05afd9139e214",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1873/#testresult/4ee05afd9139e214",
        "status" : "passed",
        "time" : {
          "start" : 1733522701540,
          "stop" : 1733522730204,
          "duration" : 28664
        }
      }, {
        "uid" : "dfa1bce0570b1049",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1870/#testresult/dfa1bce0570b1049",
        "status" : "passed",
        "time" : {
          "start" : 1733442519752,
          "stop" : 1733442540747,
          "duration" : 20995
        }
      }, {
        "uid" : "5cae4e57e93a52bb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1868/#testresult/5cae4e57e93a52bb",
        "status" : "passed",
        "time" : {
          "start" : 1733413792838,
          "stop" : 1733413814438,
          "duration" : 21600
        }
      }, {
        "uid" : "7967a6fdd311edd0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1865/#testresult/7967a6fdd311edd0",
        "status" : "passed",
        "time" : {
          "start" : 1733352386782,
          "stop" : 1733352408968,
          "duration" : 22186
        }
      }, {
        "uid" : "890840159e8e2277",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1864/#testresult/890840159e8e2277",
        "status" : "passed",
        "time" : {
          "start" : 1733328351333,
          "stop" : 1733328374164,
          "duration" : 22831
        }
      }, {
        "uid" : "d6c5153c3468a323",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/d6c5153c3468a323",
        "status" : "passed",
        "time" : {
          "start" : 1733254093808,
          "stop" : 1733254116744,
          "duration" : 22936
        }
      }, {
        "uid" : "84d12c65f07c5af4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/84d12c65f07c5af4",
        "status" : "passed",
        "time" : {
          "start" : 1733190479747,
          "stop" : 1733190502219,
          "duration" : 22472
        }
      }, {
        "uid" : "55eda260083ceff7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/55eda260083ceff7",
        "status" : "passed",
        "time" : {
          "start" : 1732728974535,
          "stop" : 1732728996393,
          "duration" : 21858
        }
      }, {
        "uid" : "edc728180b26fc27",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/edc728180b26fc27",
        "status" : "passed",
        "time" : {
          "start" : 1732749452571,
          "stop" : 1732749474577,
          "duration" : 22006
        }
      }, {
        "uid" : "32cfc26289cfd519",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/32cfc26289cfd519",
        "status" : "passed",
        "time" : {
          "start" : 1732728974535,
          "stop" : 1732728996393,
          "duration" : 21858
        }
      }, {
        "uid" : "80fee92ec355b251",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/80fee92ec355b251",
        "status" : "passed",
        "time" : {
          "start" : 1732723393246,
          "stop" : 1732723416407,
          "duration" : 23161
        }
      }, {
        "uid" : "a0ce46ca5dfbda79",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/a0ce46ca5dfbda79",
        "status" : "passed",
        "time" : {
          "start" : 1732631123707,
          "stop" : 1732631147158,
          "duration" : 23451
        }
      }, {
        "uid" : "b7cc2dc999d61233",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/b7cc2dc999d61233",
        "status" : "passed",
        "time" : {
          "start" : 1732631123707,
          "stop" : 1732631147158,
          "duration" : 23451
        }
      }, {
        "uid" : "5aca17b9861b12e8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/5aca17b9861b12e8",
        "status" : "passed",
        "time" : {
          "start" : 1732559950450,
          "stop" : 1732559973409,
          "duration" : 22959
        }
      }, {
        "uid" : "44de1e691e45d42d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/44de1e691e45d42d",
        "status" : "passed",
        "time" : {
          "start" : 1732559950450,
          "stop" : 1732559973409,
          "duration" : 22959
        }
      }, {
        "uid" : "18ba6b903f830dce",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/18ba6b903f830dce",
        "status" : "passed",
        "time" : {
          "start" : 1732554137197,
          "stop" : 1732554160708,
          "duration" : 23511
        }
      } ]
    },
    "tags" : [ "esp-idf", "jons_orange_pi", "anyio", "esp32c3_devkitm_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "91d37eacb040b8b1.json",
  "parameterValues" : [ "'esp32c3_devkitm_espidf'", "'esp-idf'" ]
}