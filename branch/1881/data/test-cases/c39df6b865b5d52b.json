{
  "uid" : "c39df6b865b5d52b",
  "name" : "test_cert_provisioning",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.certificate_provisioning.pytest.test_sample#test_cert_provisioning",
  "historyId" : "87984bc9163d6711ba648493e48c08bd",
  "time" : {
    "start" : 1733789529690,
    "stop" : 1733789529690,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503",
  "statusTrace" : "item = <Function test_cert_provisioning>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:83: in wrapper\n    yield runner.run_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:946: in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py:50: in project\n    project = (await client.get_projects())[0]\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:137: in get_projects\n    resp = await self.get('projects')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [503 Service Unavailable]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733789529694,
      "stop" : 1733789529694,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733789529699,
      "stop" : 1733789530106,
      "duration" : 407
    },
    "status" : "broken",
    "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py\", line 50, in project\n    project = (await client.get_projects())[0]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 137, in get_projects\n    resp = await self.get('projects')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 83, in wrapper\n    resp.raise_for_status()\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_models.py\", line 763, in raise_for_status\n    raise HTTPStatusError(message, request=request, response=self)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733789529693,
      "stop" : 1733789529694,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1733789529696,
      "stop" : 1733789529696,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733789529696,
      "stop" : 1733789529696,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733789529695,
      "stop" : 1733789529695,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733789529695,
      "stop" : 1733789529695,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1733789529697,
      "stop" : 1733789529699,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503",
    "statusTrace" : "item = <Function test_cert_provisioning>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:83: in wrapper\n    yield runner.run_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:946: in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py:50: in project\n    project = (await client.get_projects())[0]\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:137: in get_projects\n    resp = await self.get('projects')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [503 Service Unavailable]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "86966f0e0d1d02a9",
      "name" : "log",
      "source" : "86966f0e0d1d02a9.txt",
      "type" : "text/plain",
      "size" : 2061
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device_object::0",
    "time" : {
      "start" : 1733789530751,
      "stop" : 1733789530751,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "6348b914e778"
  }, {
    "name" : "thread",
    "value" : "386-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.certificate_provisioning.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 8,
        "skipped" : 0,
        "passed" : 57,
        "unknown" : 0,
        "total" : 65
      },
      "items" : [ {
        "uid" : "c52827888ea688ab",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1880/#testresult/c52827888ea688ab",
        "status" : "passed",
        "time" : {
          "start" : 1733779913955,
          "stop" : 1733779988372,
          "duration" : 74417
        }
      }, {
        "uid" : "225b27bb283287d5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1880/#testresult/225b27bb283287d5",
        "status" : "passed",
        "time" : {
          "start" : 1733779913955,
          "stop" : 1733779988372,
          "duration" : 74417
        }
      }, {
        "uid" : "a89d429265ef6728",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/35/#testresult/a89d429265ef6728",
        "status" : "passed",
        "time" : {
          "start" : 1733556042444,
          "stop" : 1733556117196,
          "duration" : 74752
        }
      }, {
        "uid" : "c0e3386b6711c219",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1873/#testresult/c0e3386b6711c219",
        "status" : "passed",
        "time" : {
          "start" : 1733523581715,
          "stop" : 1733523657907,
          "duration" : 76192
        }
      }, {
        "uid" : "c35d9bf30399e89a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1870/#testresult/c35d9bf30399e89a",
        "status" : "passed",
        "time" : {
          "start" : 1733442316719,
          "stop" : 1733442392817,
          "duration" : 76098
        }
      }, {
        "uid" : "a7c858b56f715d5b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/a7c858b56f715d5b",
        "status" : "passed",
        "time" : {
          "start" : 1733191578010,
          "stop" : 1733191653269,
          "duration" : 75259
        }
      }, {
        "uid" : "97112c7df65b7f3b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/97112c7df65b7f3b",
        "status" : "passed",
        "time" : {
          "start" : 1732729654235,
          "stop" : 1732729729518,
          "duration" : 75283
        }
      }, {
        "uid" : "8bbecd9171d7952d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/8bbecd9171d7952d",
        "status" : "passed",
        "time" : {
          "start" : 1732750329272,
          "stop" : 1732750406162,
          "duration" : 76890
        }
      }, {
        "uid" : "73e8d03468d11fbc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/73e8d03468d11fbc",
        "status" : "passed",
        "time" : {
          "start" : 1732729654235,
          "stop" : 1732729729518,
          "duration" : 75283
        }
      }, {
        "uid" : "bca99c1ea41a5b6a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/bca99c1ea41a5b6a",
        "status" : "passed",
        "time" : {
          "start" : 1732724121911,
          "stop" : 1732724197640,
          "duration" : 75729
        }
      }, {
        "uid" : "31c56e8699677256",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/31c56e8699677256",
        "status" : "passed",
        "time" : {
          "start" : 1732641058877,
          "stop" : 1732641134139,
          "duration" : 75262
        }
      }, {
        "uid" : "225cf00df4307b4b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/225cf00df4307b4b",
        "status" : "passed",
        "time" : {
          "start" : 1732631992318,
          "stop" : 1732632066903,
          "duration" : 74585
        }
      }, {
        "uid" : "f4ef91cac7ea3d55",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/f4ef91cac7ea3d55",
        "status" : "passed",
        "time" : {
          "start" : 1732560694118,
          "stop" : 1732560769274,
          "duration" : 75156
        }
      }, {
        "uid" : "d5cdb53dffb29209",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/d5cdb53dffb29209",
        "status" : "passed",
        "time" : {
          "start" : 1732560694118,
          "stop" : 1732560769274,
          "duration" : 75156
        }
      }, {
        "uid" : "a530b435fb0f31b0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/a530b435fb0f31b0",
        "status" : "passed",
        "time" : {
          "start" : 1732554829137,
          "stop" : 1732554910445,
          "duration" : 81308
        }
      }, {
        "uid" : "f76c6f580a4cbf03",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/f76c6f580a4cbf03",
        "status" : "passed",
        "time" : {
          "start" : 1732509522445,
          "stop" : 1732509597493,
          "duration" : 75048
        }
      }, {
        "uid" : "def4c1eabba39866",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/def4c1eabba39866",
        "status" : "passed",
        "time" : {
          "start" : 1732509522445,
          "stop" : 1732509597493,
          "duration" : 75048
        }
      }, {
        "uid" : "767c088fdbf25e77",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/767c088fdbf25e77",
        "status" : "passed",
        "time" : {
          "start" : 1732408914384,
          "stop" : 1732408989681,
          "duration" : 75297
        }
      }, {
        "uid" : "7e1dac6b30924246",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/7e1dac6b30924246",
        "status" : "passed",
        "time" : {
          "start" : 1732408914384,
          "stop" : 1732408989681,
          "duration" : 75297
        }
      }, {
        "uid" : "a904008d0a027a0a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/a904008d0a027a0a",
        "status" : "passed",
        "time" : {
          "start" : 1732317577385,
          "stop" : 1732317651836,
          "duration" : 74451
        }
      } ]
    },
    "tags" : [ "anyio", "mikes_testbench", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "c39df6b865b5d52b.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}