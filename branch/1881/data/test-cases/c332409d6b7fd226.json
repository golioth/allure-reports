{
  "uid" : "c332409d6b7fd226",
  "name" : "test_lightdb_observe",
  "fullName" : "examples.esp_idf.lightdb.observe.pytest.test_sample#test_lightdb_observe",
  "historyId" : "1c331a6e940d6b0260adbd1d7f0f445d",
  "time" : {
    "start" : 1733789760980,
    "stop" : 1733789760980,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503",
  "statusTrace" : "item = <Function test_lightdb_observe>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:83: in wrapper\n    yield runner.run_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:946: in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py:50: in project\n    project = (await client.get_projects())[0]\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:137: in get_projects\n    resp = await self.get('projects')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [503 Service Unavailable]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "board",
    "time" : {
      "start" : 1733789760993,
      "stop" : 1733789786368,
      "duration" : 25375
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733789760988,
      "stop" : 1733789760988,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733789786370,
      "stop" : 1733789786879,
      "duration" : 509
    },
    "status" : "broken",
    "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py\", line 50, in project\n    project = (await client.get_projects())[0]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 137, in get_projects\n    resp = await self.get('projects')\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 83, in wrapper\n    resp.raise_for_status()\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_models.py\", line 763, in raise_for_status\n    raise HTTPStatusError(message, request=request, response=self)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733789760992,
      "stop" : 1733789760992,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733789760990,
      "stop" : 1733789760990,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733789760991,
      "stop" : 1733789760991,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733789760983,
      "stop" : 1733789760984,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733789760992,
      "stop" : 1733789760992,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733789760986,
      "stop" : 1733789760987,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733789760987,
      "stop" : 1733789760988,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733789760990,
      "stop" : 1733789760990,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733789760989,
      "stop" : 1733789760989,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733789760991,
      "stop" : 1733789760991,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733789760984,
      "stop" : 1733789760985,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503",
    "statusTrace" : "item = <Function test_lightdb_observe>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:83: in wrapper\n    yield runner.run_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:946: in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py:50: in project\n    project = (await client.get_projects())[0]\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:137: in get_projects\n    resp = await self.get('projects')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [503 Service Unavailable]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '503 Service Unavailable' for url 'https://api.golioth.io/v1/projects'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6d4b29382583b9d8",
      "name" : "stdout",
      "source" : "6d4b29382583b9d8.txt",
      "type" : "text/plain",
      "size" : 5861
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1733789787488,
      "stop" : 1733789787495,
      "duration" : 7
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "jons_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "72531edf2cc0"
  }, {
    "name" : "thread",
    "value" : "253-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.lightdb.observe.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32s3_devkitc_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 109,
        "unknown" : 0,
        "total" : 112
      },
      "items" : [ {
        "uid" : "d8d6dcf9570523fe",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1880/#testresult/d8d6dcf9570523fe",
        "status" : "passed",
        "time" : {
          "start" : 1733779435741,
          "stop" : 1733779446213,
          "duration" : 10472
        }
      }, {
        "uid" : "ea43f2e30f712a59",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1880/#testresult/ea43f2e30f712a59",
        "status" : "passed",
        "time" : {
          "start" : 1733779435741,
          "stop" : 1733779446213,
          "duration" : 10472
        }
      }, {
        "uid" : "1d229b02ffa8b649",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1878/#testresult/1d229b02ffa8b649",
        "status" : "passed",
        "time" : {
          "start" : 1733765199402,
          "stop" : 1733765209881,
          "duration" : 10479
        }
      }, {
        "uid" : "e27df8680bceaaa2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/35/#testresult/e27df8680bceaaa2",
        "status" : "passed",
        "time" : {
          "start" : 1733555438459,
          "stop" : 1733555449355,
          "duration" : 10896
        }
      }, {
        "uid" : "34a61160a7a6eb4c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1873/#testresult/34a61160a7a6eb4c",
        "status" : "passed",
        "time" : {
          "start" : 1733522958753,
          "stop" : 1733522969509,
          "duration" : 10756
        }
      }, {
        "uid" : "73ff4951a71698a8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1872/#testresult/73ff4951a71698a8",
        "status" : "passed",
        "time" : {
          "start" : 1733454411237,
          "stop" : 1733454421796,
          "duration" : 10559
        }
      }, {
        "uid" : "42cd7dbf0d3e75c9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1870/#testresult/42cd7dbf0d3e75c9",
        "status" : "passed",
        "time" : {
          "start" : 1733441723410,
          "stop" : 1733441734202,
          "duration" : 10792
        }
      }, {
        "uid" : "68acd2a43c3d3fb6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1868/#testresult/68acd2a43c3d3fb6",
        "status" : "passed",
        "time" : {
          "start" : 1733414041822,
          "stop" : 1733414051865,
          "duration" : 10043
        }
      }, {
        "uid" : "3d1f2638b7fbf0e4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1865/#testresult/3d1f2638b7fbf0e4",
        "status" : "passed",
        "time" : {
          "start" : 1733352634952,
          "stop" : 1733352645853,
          "duration" : 10901
        }
      }, {
        "uid" : "707d5c06e8397cbd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1864/#testresult/707d5c06e8397cbd",
        "status" : "passed",
        "time" : {
          "start" : 1733328659822,
          "stop" : 1733328670575,
          "duration" : 10753
        }
      }, {
        "uid" : "e289eaf950eefe68",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/e289eaf950eefe68",
        "status" : "passed",
        "time" : {
          "start" : 1733254346938,
          "stop" : 1733254357555,
          "duration" : 10617
        }
      }, {
        "uid" : "d1b5064ac539d9e8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/d1b5064ac539d9e8",
        "status" : "passed",
        "time" : {
          "start" : 1733190731046,
          "stop" : 1733190741740,
          "duration" : 10694
        }
      }, {
        "uid" : "24295433370134d5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/24295433370134d5",
        "status" : "passed",
        "time" : {
          "start" : 1732801942527,
          "stop" : 1732801955346,
          "duration" : 12819
        }
      }, {
        "uid" : "1ed47157f7b7a03c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/1ed47157f7b7a03c",
        "status" : "passed",
        "time" : {
          "start" : 1732749430226,
          "stop" : 1732749440401,
          "duration" : 10175
        }
      }, {
        "uid" : "90cb7f943c2f0ffd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/90cb7f943c2f0ffd",
        "status" : "passed",
        "time" : {
          "start" : 1732728914005,
          "stop" : 1732728924602,
          "duration" : 10597
        }
      }, {
        "uid" : "36d691d941729d1a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/36d691d941729d1a",
        "status" : "passed",
        "time" : {
          "start" : 1732723648111,
          "stop" : 1732723670650,
          "duration" : 22539
        }
      }, {
        "uid" : "c257851e2cf43376",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/c257851e2cf43376",
        "status" : "passed",
        "time" : {
          "start" : 1732639407597,
          "stop" : 1732639429223,
          "duration" : 21626
        }
      }, {
        "uid" : "1d27ab82dabf22b7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/1d27ab82dabf22b7",
        "status" : "passed",
        "time" : {
          "start" : 1732563380153,
          "stop" : 1732563390381,
          "duration" : 10228
        }
      }, {
        "uid" : "dee62dd20b6cad13",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/dee62dd20b6cad13",
        "status" : "passed",
        "time" : {
          "start" : 1732559789759,
          "stop" : 1732559799721,
          "duration" : 9962
        }
      }, {
        "uid" : "688c7670d8c1acbf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/688c7670d8c1acbf",
        "status" : "passed",
        "time" : {
          "start" : 1732554129226,
          "stop" : 1732554139800,
          "duration" : 10574
        }
      } ]
    },
    "tags" : [ "esp32s3_devkitc_espidf", "esp-idf", "jons_orange_pi", "anyio", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "c332409d6b7fd226.json",
  "parameterValues" : [ "'esp32s3_devkitc_espidf'", "'esp-idf'" ]
}