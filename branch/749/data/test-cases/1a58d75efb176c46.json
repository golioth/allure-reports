{"uid":"1a58d75efb176c46","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"c4178e273bd3962d06b411c6f8e74f6b","time":{"start":1759787105184,"stop":1759787119059,"duration":13875},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffaae23380>\ndevice = <golioth.golioth.Device object at 0xffffaad296a0>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\n                                                             ^^^^^^^^^^^^^^^^^^^^^^\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1759787076626,"stop":1759787076626,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759787076627,"stop":1759787076627,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759787076627,"stop":1759787076627,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759787076628,"stop":1759787076628,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1759787076628,"stop":1759787076629,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1759787076629,"stop":1759787076631,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759787076631,"stop":1759787076632,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759787076632,"stop":1759787076632,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759787076633,"stop":1759787077105,"duration":472},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759787077106,"stop":1759787077779,"duration":673},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1759787077780,"stop":1759787104581,"duration":26801},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1759787104581,"stop":1759787105179,"duration":598},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffaae23380>\ndevice = <golioth.golioth.Device object at 0xffffaad296a0>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\n                                                             ^^^^^^^^^^^^^^^^^^^^^^\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"b3d62c2d4a0c4a58","name":"log","source":"b3d62c2d4a0c4a58.txt","type":"text/plain","size":19736}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1759787119326,"stop":1759787119371,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759787119374,"stop":1759787119796,"duration":422},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759787119798,"stop":1759787119800,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1759787119805,"stop":1759787119805,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"ef0c67deb71e"},{"name":"thread","value":"921-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":14,"unknown":0,"total":16},"items":[{"uid":"533658931507a355","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/533658931507a355","status":"passed","time":{"start":1759778803305,"stop":1759778812582,"duration":9277}},{"uid":"f92c01d4a7c30fab","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/f92c01d4a7c30fab","status":"passed","time":{"start":1759768518977,"stop":1759768532098,"duration":13121}},{"uid":"24e50d2416fdc350","reportUrl":"https://golioth.github.io/allure-reports/branch/744//#testresult/24e50d2416fdc350","status":"passed","time":{"start":1759769774512,"stop":1759769782904,"duration":8392}},{"uid":"5d6ed4dd9f4aa69d","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/5d6ed4dd9f4aa69d","status":"passed","time":{"start":1759768518977,"stop":1759768532098,"duration":13121}},{"uid":"817f78405dbb5fa","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/817f78405dbb5fa","status":"passed","time":{"start":1759523598316,"stop":1759523635054,"duration":36738}},{"uid":"93bbc4fafe1e500d","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/93bbc4fafe1e500d","status":"passed","time":{"start":1759523598316,"stop":1759523635054,"duration":36738}},{"uid":"6120c01790319ca1","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/6120c01790319ca1","status":"passed","time":{"start":1759518130669,"stop":1759518145561,"duration":14892}},{"uid":"c3b9fc6637d6991c","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/c3b9fc6637d6991c","status":"passed","time":{"start":1759245415579,"stop":1759245426079,"duration":10500}},{"uid":"ee8cd13c3f9b1b3a","reportUrl":"https://golioth.github.io/allure-reports/branch/737//#testresult/ee8cd13c3f9b1b3a","status":"passed","time":{"start":1759374054066,"stop":1759374063987,"duration":9921}},{"uid":"1f2bfd68ea17a6cd","reportUrl":"https://golioth.github.io/allure-reports/branch/732//#testresult/1f2bfd68ea17a6cd","status":"passed","time":{"start":1759271976032,"stop":1759271986308,"duration":10276}},{"uid":"cc2ce036f09899cf","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/cc2ce036f09899cf","status":"passed","time":{"start":1759245415579,"stop":1759245426079,"duration":10500}},{"uid":"4439cb0eecd5d464","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/4439cb0eecd5d464","status":"passed","time":{"start":1759179227549,"stop":1759179241721,"duration":14172}},{"uid":"f20133da291d8b43","reportUrl":"https://golioth.github.io/allure-reports/branch/728//#testresult/f20133da291d8b43","status":"passed","time":{"start":1759161903364,"stop":1759161911883,"duration":8519}},{"uid":"c7280646fc87de68","reportUrl":"https://golioth.github.io/allure-reports/branch/726//#testresult/c7280646fc87de68","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1759111756074,"stop":1759111781084,"duration":25010}},{"uid":"fb317160035572bb","reportUrl":"https://golioth.github.io/allure-reports/branch/723//#testresult/fb317160035572bb","status":"passed","time":{"start":1758916205097,"stop":1758916216056,"duration":10959}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","zephyr"]},"source":"1a58d75efb176c46.json","parameterValues":["'nrf9160dk'","'zephyr'"]}