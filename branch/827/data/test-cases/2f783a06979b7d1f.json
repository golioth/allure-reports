{"uid":"2f783a06979b7d1f","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"efe21cbbb5934f0489b65e4b580675bb","time":{"start":1761333710445,"stop":1761333736961,"duration":26516},"status":"failed","statusMessage":"AssertionError: assert 5 == 1\n +  where 5 = int('5')","statusTrace":"board = <pytest_hil.rak5010.RAK5010 object at 0xffff87fa3cb0>\ndevice = <golioth.golioth.Device object at 0xffff87ee0980>\nproject = <golioth.golioth.Project object at 0xffff880246e0>\nreleases = {'test_blocks': Release <68fbd1ad2f1b02da85abdcaf, release_tags=[], device_tags=['68fbd1ac2f1b02da85abdcac'], artifact...ease_tags=[], device_tags=['68fbd1ac2f1b02da85abdcac'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 5 == 1\nE                    +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1761333614428,"stop":1761333614428,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1761333614429,"stop":1761333614429,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1761333614430,"stop":1761333614430,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1761333614431,"stop":1761333614431,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1761333614432,"stop":1761333614432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1761333614432,"stop":1761333614433,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1761333614433,"stop":1761333614433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1761333614434,"stop":1761333636080,"duration":21646},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1761333636080,"stop":1761333636671,"duration":591},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1761333636672,"stop":1761333637133,"duration":461},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1761333637133,"stop":1761333676289,"duration":39156},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1761333676291,"stop":1761333676564,"duration":273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1761333676565,"stop":1761333676982,"duration":417},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1761333676983,"stop":1761333678171,"duration":1188},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1761333710442,"stop":1761333710443,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 5 == 1\n +  where 5 = int('5')","statusTrace":"board = <pytest_hil.rak5010.RAK5010 object at 0xffff87fa3cb0>\ndevice = <golioth.golioth.Device object at 0xffff87ee0980>\nproject = <golioth.golioth.Project object at 0xffff880246e0>\nreleases = {'test_blocks': Release <68fbd1ad2f1b02da85abdcaf, release_tags=[], device_tags=['68fbd1ac2f1b02da85abdcac'], artifact...ease_tags=[], device_tags=['68fbd1ac2f1b02da85abdcac'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 5 == 1\nE                    +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","steps":[],"attachments":[{"uid":"828c16ade1628cc5","name":"stdout","source":"828c16ade1628cc5.txt","type":"text/plain","size":207}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1761333737235,"stop":1761333737661,"duration":426},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1761333737664,"stop":1761333738720,"duration":1056},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1761333738722,"stop":1761333739157,"duration":435},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1761333739159,"stop":1761333739159,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1761333739161,"stop":1761333739161,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1761333739163,"stop":1761333739383,"duration":220},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1761333739385,"stop":1761333739386,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1761333739387,"stop":1761333739429,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"4daf2e344c55"},{"name":"thread","value":"221-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":12},"items":[{"uid":"f8a54d3598e18358","reportUrl":"https://golioth.github.io/allure-reports/branch/823//#testresult/f8a54d3598e18358","status":"passed","time":{"start":1761325749462,"stop":1761325805259,"duration":55797}},{"uid":"e619f5c20d4369d8","reportUrl":"https://golioth.github.io/allure-reports/branch/822//#testresult/e619f5c20d4369d8","status":"passed","time":{"start":1761319861879,"stop":1761319918099,"duration":56220}},{"uid":"ef4b3b8ebdba4c55","reportUrl":"https://golioth.github.io/allure-reports/branch/813//#testresult/ef4b3b8ebdba4c55","status":"passed","time":{"start":1761257606095,"stop":1761257671700,"duration":65605}},{"uid":"d3acab3dcb499395","reportUrl":"https://golioth.github.io/allure-reports/branch/809//#testresult/d3acab3dcb499395","status":"passed","time":{"start":1761247592681,"stop":1761247646155,"duration":53474}},{"uid":"586f0d31f21aa218","reportUrl":"https://golioth.github.io/allure-reports/branch/790//#testresult/586f0d31f21aa218","status":"passed","time":{"start":1761077662496,"stop":1761077728708,"duration":66212}},{"uid":"7f041bbcd6ab2c15","reportUrl":"https://golioth.github.io/allure-reports/branch/790//#testresult/7f041bbcd6ab2c15","status":"passed","time":{"start":1761077662496,"stop":1761077728708,"duration":66212}},{"uid":"d0554741694f6bdf","reportUrl":"https://golioth.github.io/allure-reports/branch/788//#testresult/d0554741694f6bdf","status":"passed","time":{"start":1761066682897,"stop":1761066742299,"duration":59402}},{"uid":"d38bc692ad5f6c3e","reportUrl":"https://golioth.github.io/allure-reports/branch/788//#testresult/d38bc692ad5f6c3e","status":"passed","time":{"start":1761066682897,"stop":1761066742299,"duration":59402}},{"uid":"ad7cb13ed5f402ed","reportUrl":"https://golioth.github.io/allure-reports/branch/787//#testresult/ad7cb13ed5f402ed","status":"passed","time":{"start":1761062704758,"stop":1761062768982,"duration":64224}},{"uid":"ed352655327e46cf","reportUrl":"https://golioth.github.io/allure-reports/branch/784//#testresult/ed352655327e46cf","status":"passed","time":{"start":1760998120385,"stop":1760998180793,"duration":60408}},{"uid":"e24021f920c3753","reportUrl":"https://golioth.github.io/allure-reports/branch/783//#testresult/e24021f920c3753","status":"passed","time":{"start":1760991360630,"stop":1760991419801,"duration":59171}}]},"tags":["mikes_orange_pi","anyio","rak5010","zephyr"]},"source":"2f783a06979b7d1f.json","parameterValues":["'rak5010'","'zephyr'"]}