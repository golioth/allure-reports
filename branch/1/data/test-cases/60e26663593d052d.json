{
  "uid" : "60e26663593d052d",
  "name" : "test_lightdb_get",
  "fullName" : "examples.esp_idf.lightdb.get.pytest.test_sample#test_lightdb_get",
  "historyId" : "b507eca62cc912fa6194cda02ac4487d",
  "time" : {
    "start" : 1736223572917,
    "stop" : 1736223588262,
    "duration" : 15345
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 250450.11857655263\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff95b3bf50>\ndevice = <golioth.golioth.Device object at 0xffff95ae0c90>\n\n    async def test_lightdb_get(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line(r'.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb reads\n    \n>       await board.wait_for_regex_in_line(r'.*Failed to get counter \\(async\\): 0', timeout_s=10.0)\n\nexamples/esp_idf/lightdb/get/pytest/test_sample.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 250450.11857655263\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_url",
    "time" : {
      "start" : 1736223520577,
      "stop" : 1736223520577,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736223571897,
      "stop" : 1736223572913,
      "duration" : 1016
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1736223520572,
      "stop" : 1736223520573,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736223520576,
      "stop" : 1736223520577,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736223520576,
      "stop" : 1736223520576,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736223520570,
      "stop" : 1736223520570,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736223520573,
      "stop" : 1736223520573,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1736223520575,
      "stop" : 1736223520575,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736223571343,
      "stop" : 1736223571897,
      "duration" : 554
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1736223520574,
      "stop" : 1736223520574,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1736223520577,
      "stop" : 1736223571341,
      "duration" : 50764
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1736223520575,
      "stop" : 1736223520576,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1736223520571,
      "stop" : 1736223520571,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1736223520572,
      "stop" : 1736223520572,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736223520574,
      "stop" : 1736223520574,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 250450.11857655263\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff95b3bf50>\ndevice = <golioth.golioth.Device object at 0xffff95ae0c90>\n\n    async def test_lightdb_get(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line(r'.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb reads\n    \n>       await board.wait_for_regex_in_line(r'.*Failed to get counter \\(async\\): 0', timeout_s=10.0)\n\nexamples/esp_idf/lightdb/get/pytest/test_sample.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 250450.11857655263\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "4fdfeca14dab50e6",
      "name" : "stdout",
      "source" : "4fdfeca14dab50e6.txt",
      "type" : "text/plain",
      "size" : 8327
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1736223588853,
      "stop" : 1736223589260,
      "duration" : 407
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1736223589262,
      "stop" : 1736223589262,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1736223589264,
      "stop" : 1736223589274,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "jons_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "09fc3ffc52f8"
  }, {
    "name" : "thread",
    "value" : "270-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.lightdb.get.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32c3_devkitm_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 21,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "88d31194cf8b8c1a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/88d31194cf8b8c1a",
        "status" : "passed",
        "time" : {
          "start" : 1736206615958,
          "stop" : 1736206643097,
          "duration" : 27139
        }
      }, {
        "uid" : "5ee15b182bf676f1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/5ee15b182bf676f1",
        "status" : "passed",
        "time" : {
          "start" : 1736206615958,
          "stop" : 1736206643097,
          "duration" : 27139
        }
      }, {
        "uid" : "606cdc71b831f137",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/606cdc71b831f137",
        "status" : "passed",
        "time" : {
          "start" : 1735944946867,
          "stop" : 1735944972460,
          "duration" : 25593
        }
      }, {
        "uid" : "d27dff2d068569bc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/d27dff2d068569bc",
        "status" : "passed",
        "time" : {
          "start" : 1735925233726,
          "stop" : 1735925261079,
          "duration" : 27353
        }
      }, {
        "uid" : "42cb0ce063c5b512",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/42cb0ce063c5b512",
        "status" : "passed",
        "time" : {
          "start" : 1735930590565,
          "stop" : 1735930617646,
          "duration" : 27081
        }
      }, {
        "uid" : "63db3ff53bb33a69",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/63db3ff53bb33a69",
        "status" : "passed",
        "time" : {
          "start" : 1735925233726,
          "stop" : 1735925261079,
          "duration" : 27353
        }
      }, {
        "uid" : "6374779a2ba05f4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/6374779a2ba05f4",
        "status" : "passed",
        "time" : {
          "start" : 1735921861330,
          "stop" : 1735921888011,
          "duration" : 26681
        }
      }, {
        "uid" : "bea3206c3b7ed818",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/bea3206c3b7ed818",
        "status" : "passed",
        "time" : {
          "start" : 1735859284965,
          "stop" : 1735859311935,
          "duration" : 26970
        }
      }, {
        "uid" : "74e2442b5e6b13d9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/74e2442b5e6b13d9",
        "status" : "passed",
        "time" : {
          "start" : 1735857421251,
          "stop" : 1735857448244,
          "duration" : 26993
        }
      }, {
        "uid" : "22685e91a356e071",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/22685e91a356e071",
        "status" : "passed",
        "time" : {
          "start" : 1735849691479,
          "stop" : 1735849718037,
          "duration" : 26558
        }
      }, {
        "uid" : "cbc4be127d73092a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/cbc4be127d73092a",
        "status" : "passed",
        "time" : {
          "start" : 1735846125449,
          "stop" : 1735846152049,
          "duration" : 26600
        }
      }, {
        "uid" : "d794b220c6fb5ba8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/d794b220c6fb5ba8",
        "status" : "passed",
        "time" : {
          "start" : 1735844241092,
          "stop" : 1735844267672,
          "duration" : 26580
        }
      }, {
        "uid" : "da2c157572449ddf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/da2c157572449ddf",
        "status" : "passed",
        "time" : {
          "start" : 1735835533472,
          "stop" : 1735835561237,
          "duration" : 27765
        }
      }, {
        "uid" : "7850b870e1850774",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1993/#testresult/7850b870e1850774",
        "status" : "passed",
        "time" : {
          "start" : 1735832216972,
          "stop" : 1735832243817,
          "duration" : 26845
        }
      }, {
        "uid" : "e28211bdb9d81113",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1992/#testresult/e28211bdb9d81113",
        "status" : "passed",
        "time" : {
          "start" : 1735826678244,
          "stop" : 1735826706004,
          "duration" : 27760
        }
      }, {
        "uid" : "290a91736eeb12f1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1989/#testresult/290a91736eeb12f1",
        "status" : "passed",
        "time" : {
          "start" : 1735674073893,
          "stop" : 1735674100518,
          "duration" : 26625
        }
      }, {
        "uid" : "845f53cb1597bc9f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2/#testresult/845f53cb1597bc9f",
        "status" : "passed",
        "time" : {
          "start" : 1735675177783,
          "stop" : 1735675204190,
          "duration" : 26407
        }
      }, {
        "uid" : "bfba453f1f1ed437",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1987/#testresult/bfba453f1f1ed437",
        "status" : "passed",
        "time" : {
          "start" : 1735667227073,
          "stop" : 1735667253414,
          "duration" : 26341
        }
      }, {
        "uid" : "73d09114acead4cd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1986/#testresult/73d09114acead4cd",
        "status" : "passed",
        "time" : {
          "start" : 1735663830206,
          "stop" : 1735663856793,
          "duration" : 26587
        }
      }, {
        "uid" : "89e0ebbc5bb64abc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1982/#testresult/89e0ebbc5bb64abc",
        "status" : "passed",
        "time" : {
          "start" : 1735573338650,
          "stop" : 1735573365132,
          "duration" : 26482
        }
      } ]
    },
    "tags" : [ "esp-idf", "jons_orange_pi", "anyio", "esp32c3_devkitm_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "60e26663593d052d.json",
  "parameterValues" : [ "'esp32c3_devkitm_espidf'", "'esp-idf'" ]
}