{
  "uid" : "1766fdf8423e52d1",
  "name" : "test_lightdb_get",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample#test_lightdb_get",
  "historyId" : "1248e936e6823218f43c51a0258045c3",
  "time" : {
    "start" : 1736221498438,
    "stop" : 1736221507975,
    "duration" : 9537
  },
  "status" : "broken",
  "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7fbae42b0cd0>\ndevice = <golioth.golioth.Device object at 0x7fbae429dd10>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_lightdb_get(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb reads\n    \n>       shell._device.readlines_until(regex=\".*Failed to get counter \\(async\\): 0\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/get/pytest/test_sample.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1736221497582,
      "stop" : 1736221497582,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736221497582,
      "stop" : 1736221497582,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1736221497582,
      "stop" : 1736221497583,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736221497583,
      "stop" : 1736221497583,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1736221498424,
      "stop" : 1736221498438,
      "duration" : 14
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736221497581,
      "stop" : 1736221497582,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736221497583,
      "stop" : 1736221497583,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736221497966,
      "stop" : 1736221498410,
      "duration" : 444
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1736221498410,
      "stop" : 1736221498424,
      "duration" : 14
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736221497581,
      "stop" : 1736221497581,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736221497583,
      "stop" : 1736221497966,
      "duration" : 383
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736221497582,
      "stop" : 1736221497582,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7fbae42b0cd0>\ndevice = <golioth.golioth.Device object at 0x7fbae429dd10>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_lightdb_get(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb reads\n    \n>       shell._device.readlines_until(regex=\".*Failed to get counter \\(async\\): 0\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/get/pytest/test_sample.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8aa089247f82948c",
      "name" : "log",
      "source" : "8aa089247f82948c.txt",
      "type" : "text/plain",
      "size" : 14883
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device_object::0",
    "time" : {
      "start" : 1736221508225,
      "stop" : 1736221508225,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1736221508043,
      "stop" : 1736221508223,
      "duration" : 180
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1736221508043,
      "stop" : 1736221508043,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1736221508223,
      "stop" : 1736221508224,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "native_sim_32"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.native_sim_32"
  }, {
    "name" : "tag",
    "value" : "GitHub Actions 38"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "7474928aa89f"
  }, {
    "name" : "thread",
    "value" : "69554-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'native_sim_32'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 22,
        "unknown" : 0,
        "total" : 23
      },
      "items" : [ {
        "uid" : "da41e6e482b09f9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/da41e6e482b09f9",
        "status" : "passed",
        "time" : {
          "start" : 1736204776894,
          "stop" : 1736204802079,
          "duration" : 25185
        }
      }, {
        "uid" : "b296b38f3bfa1837",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/b296b38f3bfa1837",
        "status" : "passed",
        "time" : {
          "start" : 1736204776894,
          "stop" : 1736204802079,
          "duration" : 25185
        }
      }, {
        "uid" : "fb7dcc2653171135",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/fb7dcc2653171135",
        "status" : "passed",
        "time" : {
          "start" : 1735944103869,
          "stop" : 1735944129125,
          "duration" : 25256
        }
      }, {
        "uid" : "8d1db8f50b3141ff",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/8d1db8f50b3141ff",
        "status" : "passed",
        "time" : {
          "start" : 1735922031348,
          "stop" : 1735922056721,
          "duration" : 25373
        }
      }, {
        "uid" : "d107369f03683b04",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/d107369f03683b04",
        "status" : "passed",
        "time" : {
          "start" : 1735928700994,
          "stop" : 1735928726296,
          "duration" : 25302
        }
      }, {
        "uid" : "795dae5b854605e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/795dae5b854605e",
        "status" : "passed",
        "time" : {
          "start" : 1735922031348,
          "stop" : 1735922056721,
          "duration" : 25373
        }
      }, {
        "uid" : "9588c932c5d994d1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/9588c932c5d994d1",
        "status" : "passed",
        "time" : {
          "start" : 1735919960429,
          "stop" : 1735919985717,
          "duration" : 25288
        }
      }, {
        "uid" : "5687877b58578f5d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/5687877b58578f5d",
        "status" : "passed",
        "time" : {
          "start" : 1735854062962,
          "stop" : 1735854088405,
          "duration" : 25443
        }
      }, {
        "uid" : "61f1f535a39c54fc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/61f1f535a39c54fc",
        "status" : "passed",
        "time" : {
          "start" : 1735853893727,
          "stop" : 1735853919116,
          "duration" : 25389
        }
      }, {
        "uid" : "ea7a604c7fe2900a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/ea7a604c7fe2900a",
        "status" : "passed",
        "time" : {
          "start" : 1735847898208,
          "stop" : 1735847923419,
          "duration" : 25211
        }
      }, {
        "uid" : "6e82b3cf4a1ac933",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/6e82b3cf4a1ac933",
        "status" : "passed",
        "time" : {
          "start" : 1735841065521,
          "stop" : 1735841090742,
          "duration" : 25221
        }
      }, {
        "uid" : "5777a82c1016c109",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/5777a82c1016c109",
        "status" : "passed",
        "time" : {
          "start" : 1735840927352,
          "stop" : 1735840952580,
          "duration" : 25228
        }
      }, {
        "uid" : "f85e49212c3753cb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/f85e49212c3753cb",
        "status" : "passed",
        "time" : {
          "start" : 1735831948106,
          "stop" : 1735831973443,
          "duration" : 25337
        }
      }, {
        "uid" : "4d49cd2585cb952f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1993/#testresult/4d49cd2585cb952f",
        "status" : "passed",
        "time" : {
          "start" : 1735830431927,
          "stop" : 1735830457210,
          "duration" : 25283
        }
      }, {
        "uid" : "25f589fa9022e1a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1992/#testresult/25f589fa9022e1a",
        "status" : "passed",
        "time" : {
          "start" : 1735824878513,
          "stop" : 1735824903842,
          "duration" : 25329
        }
      }, {
        "uid" : "e553203d4ab28e83",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1989/#testresult/e553203d4ab28e83",
        "status" : "passed",
        "time" : {
          "start" : 1735671426426,
          "stop" : 1735671451686,
          "duration" : 25260
        }
      }, {
        "uid" : "5eb766419256a432",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2/#testresult/5eb766419256a432",
        "status" : "passed",
        "time" : {
          "start" : 1735671440616,
          "stop" : 1735671466001,
          "duration" : 25385
        }
      }, {
        "uid" : "ebc8a667ce5eafa7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1987/#testresult/ebc8a667ce5eafa7",
        "status" : "passed",
        "time" : {
          "start" : 1735665232800,
          "stop" : 1735665258284,
          "duration" : 25484
        }
      }, {
        "uid" : "7c1a256213cf2a3e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1986/#testresult/7c1a256213cf2a3e",
        "status" : "passed",
        "time" : {
          "start" : 1735661734392,
          "stop" : 1735661759699,
          "duration" : 25307
        }
      }, {
        "uid" : "d437b4502bd3ef0e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1982/#testresult/d437b4502bd3ef0e",
        "status" : "passed",
        "time" : {
          "start" : 1735572218456,
          "stop" : 1735572243842,
          "duration" : 25386
        }
      } ]
    },
    "tags" : [ "GitHub Actions 38", "anyio", "native_sim_32", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "1766fdf8423e52d1.json",
  "parameterValues" : [ "'native_sim_32'", "'zephyr'" ]
}