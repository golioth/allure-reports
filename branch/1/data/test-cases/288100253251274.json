{
  "uid" : "288100253251274",
  "name" : "test_lightdb_get",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample#test_lightdb_get",
  "historyId" : "934caf5f97c3bf444d136e05890d35c9",
  "time" : {
    "start" : 1736224104094,
    "stop" : 1736224122481,
    "duration" : 18387
  },
  "status" : "broken",
  "statusMessage" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffa18af910>\ndevice = <golioth.golioth.Device object at 0xffffa18ca7d0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_lightdb_get(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb reads\n    \n>       shell._device.readlines_until(regex=\".*Failed to get counter \\(async\\): 0\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/get/pytest/test_sample.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = HardwareAdapter(), regex = '.*Failed to get counter \\\\(async\\\\): 0'\nnum_of_lines = None, timeout = 10.0, print_output = True\n\n    def readlines_until(\n            self,\n            regex: str | None = None,\n            num_of_lines: int | None = None,\n            timeout: float | None = None,\n            print_output: bool = True,\n    ) -> list[str]:\n        \"\"\"\n        Read available output lines produced by device from internal buffer\n        until following conditions:\n    \n        1. If regex is provided - read until regex regex is found in read\n           line (or until timeout).\n        2. If num_of_lines is provided - read until number of read lines is\n           equal to num_of_lines (or until timeout).\n        3. If none of above is provided - return immediately lines collected so\n           far in internal buffer.\n    \n        If timeout is not provided, then use base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if regex:\n            regex_compiled = re.compile(regex)\n        lines: list[str] = []\n        if regex or num_of_lines:\n            timeout_time: float = time.time() + timeout\n            while time.time() < timeout_time:\n                try:\n                    line = self.readline(0.1, print_output)\n                except TwisterHarnessTimeoutException:\n                    continue\n                lines.append(line)\n                if regex and regex_compiled.search(line):\n                    break\n                if num_of_lines and len(lines) == num_of_lines:\n                    break\n            else:\n                msg = 'Read from device timeout occurred'\n                logger.error(msg)\n>               raise TwisterHarnessTimeoutException(msg)\nE               twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:190: TwisterHarnessTimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736224075387,
      "stop" : 1736224075387,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736224075392,
      "stop" : 1736224075392,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736224075385,
      "stop" : 1736224075386,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1736224100938,
      "stop" : 1736224104087,
      "duration" : 3149
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1736224075388,
      "stop" : 1736224075390,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736224075387,
      "stop" : 1736224075387,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736224075391,
      "stop" : 1736224075391,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1736224075388,
      "stop" : 1736224075388,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736224075386,
      "stop" : 1736224075386,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736224075392,
      "stop" : 1736224075821,
      "duration" : 429
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1736224076798,
      "stop" : 1736224100937,
      "duration" : 24139
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736224075822,
      "stop" : 1736224076798,
      "duration" : 976
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffa18af910>\ndevice = <golioth.golioth.Device object at 0xffffa18ca7d0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_lightdb_get(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb reads\n    \n>       shell._device.readlines_until(regex=\".*Failed to get counter \\(async\\): 0\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/get/pytest/test_sample.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = HardwareAdapter(), regex = '.*Failed to get counter \\\\(async\\\\): 0'\nnum_of_lines = None, timeout = 10.0, print_output = True\n\n    def readlines_until(\n            self,\n            regex: str | None = None,\n            num_of_lines: int | None = None,\n            timeout: float | None = None,\n            print_output: bool = True,\n    ) -> list[str]:\n        \"\"\"\n        Read available output lines produced by device from internal buffer\n        until following conditions:\n    \n        1. If regex is provided - read until regex regex is found in read\n           line (or until timeout).\n        2. If num_of_lines is provided - read until number of read lines is\n           equal to num_of_lines (or until timeout).\n        3. If none of above is provided - return immediately lines collected so\n           far in internal buffer.\n    \n        If timeout is not provided, then use base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if regex:\n            regex_compiled = re.compile(regex)\n        lines: list[str] = []\n        if regex or num_of_lines:\n            timeout_time: float = time.time() + timeout\n            while time.time() < timeout_time:\n                try:\n                    line = self.readline(0.1, print_output)\n                except TwisterHarnessTimeoutException:\n                    continue\n                lines.append(line)\n                if regex and regex_compiled.search(line):\n                    break\n                if num_of_lines and len(lines) == num_of_lines:\n                    break\n            else:\n                msg = 'Read from device timeout occurred'\n                logger.error(msg)\n>               raise TwisterHarnessTimeoutException(msg)\nE               twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:190: TwisterHarnessTimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "9cb5fca298ef8a58",
      "name" : "log",
      "source" : "9cb5fca298ef8a58.txt",
      "type" : "text/plain",
      "size" : 18103
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device_object::0",
    "time" : {
      "start" : 1736224123312,
      "stop" : 1736224123312,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1736224123305,
      "stop" : 1736224123307,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1736224122803,
      "stop" : 1736224122850,
      "duration" : 47
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1736224122852,
      "stop" : 1736224123303,
      "duration" : 451
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "3ee1feb4a34c"
  }, {
    "name" : "thread",
    "value" : "537-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf52840dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 21,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "3bcee2c688a37152",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/3bcee2c688a37152",
        "status" : "passed",
        "time" : {
          "start" : 1736206995529,
          "stop" : 1736207023874,
          "duration" : 28345
        }
      }, {
        "uid" : "eb99cfc4f1b0e8bc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/eb99cfc4f1b0e8bc",
        "status" : "passed",
        "time" : {
          "start" : 1736206995529,
          "stop" : 1736207023874,
          "duration" : 28345
        }
      }, {
        "uid" : "7ef83a3b14dbd2f3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/7ef83a3b14dbd2f3",
        "status" : "passed",
        "time" : {
          "start" : 1735946582356,
          "stop" : 1735946614913,
          "duration" : 32557
        }
      }, {
        "uid" : "43100c8d2977f665",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/43100c8d2977f665",
        "status" : "passed",
        "time" : {
          "start" : 1735926338933,
          "stop" : 1735926367425,
          "duration" : 28492
        }
      }, {
        "uid" : "27f8598294fab30b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/27f8598294fab30b",
        "status" : "passed",
        "time" : {
          "start" : 1735931600637,
          "stop" : 1735931628920,
          "duration" : 28283
        }
      }, {
        "uid" : "d7a25179c8a5d374",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/d7a25179c8a5d374",
        "status" : "passed",
        "time" : {
          "start" : 1735926338933,
          "stop" : 1735926367425,
          "duration" : 28492
        }
      }, {
        "uid" : "93520c7078b906e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/93520c7078b906e",
        "status" : "passed",
        "time" : {
          "start" : 1735921756390,
          "stop" : 1735921784674,
          "duration" : 28284
        }
      }, {
        "uid" : "753dbb73341df4a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/753dbb73341df4a",
        "status" : "passed",
        "time" : {
          "start" : 1735861271483,
          "stop" : 1735861299827,
          "duration" : 28344
        }
      }, {
        "uid" : "4e36b58c506070c0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/4e36b58c506070c0",
        "status" : "passed",
        "time" : {
          "start" : 1735859340588,
          "stop" : 1735859368980,
          "duration" : 28392
        }
      }, {
        "uid" : "7e2acaf3a991d107",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/7e2acaf3a991d107",
        "status" : "passed",
        "time" : {
          "start" : 1735851564409,
          "stop" : 1735851592644,
          "duration" : 28235
        }
      }, {
        "uid" : "7def577d887a7430",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/7def577d887a7430",
        "status" : "passed",
        "time" : {
          "start" : 1735846638713,
          "stop" : 1735846667157,
          "duration" : 28444
        }
      }, {
        "uid" : "19439b413adbb6c9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/19439b413adbb6c9",
        "status" : "passed",
        "time" : {
          "start" : 1735845215568,
          "stop" : 1735845243960,
          "duration" : 28392
        }
      }, {
        "uid" : "d0ddddca0d364d8a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/d0ddddca0d364d8a",
        "status" : "passed",
        "time" : {
          "start" : 1735836521360,
          "stop" : 1735836549699,
          "duration" : 28339
        }
      }, {
        "uid" : "e8581a2a8766096b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1993/#testresult/e8581a2a8766096b",
        "status" : "passed",
        "time" : {
          "start" : 1735832551443,
          "stop" : 1735832579683,
          "duration" : 28240
        }
      }, {
        "uid" : "748ebab9ddf04c30",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1992/#testresult/748ebab9ddf04c30",
        "status" : "passed",
        "time" : {
          "start" : 1735827292995,
          "stop" : 1735827321272,
          "duration" : 28277
        }
      }, {
        "uid" : "da84c85de9b32820",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1989/#testresult/da84c85de9b32820",
        "status" : "passed",
        "time" : {
          "start" : 1735676457697,
          "stop" : 1735676486040,
          "duration" : 28343
        }
      }, {
        "uid" : "6d689e501c370cd7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2/#testresult/6d689e501c370cd7",
        "status" : "passed",
        "time" : {
          "start" : 1735676064869,
          "stop" : 1735676093155,
          "duration" : 28286
        }
      }, {
        "uid" : "e156db7a4c93f33f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1987/#testresult/e156db7a4c93f33f",
        "status" : "passed",
        "time" : {
          "start" : 1735668671246,
          "stop" : 1735668699482,
          "duration" : 28236
        }
      }, {
        "uid" : "d60be4d36f0eac3d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1986/#testresult/d60be4d36f0eac3d",
        "status" : "passed",
        "time" : {
          "start" : 1735664082676,
          "stop" : 1735664111076,
          "duration" : 28400
        }
      }, {
        "uid" : "3612282fe59a8c0c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1982/#testresult/3612282fe59a8c0c",
        "status" : "passed",
        "time" : {
          "start" : 1735574828329,
          "stop" : 1735574856563,
          "duration" : 28234
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "nrf52840dk", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "288100253251274.json",
  "parameterValues" : [ "'nrf52840dk'", "'zephyr'" ]
}