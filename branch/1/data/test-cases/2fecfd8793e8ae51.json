{
  "uid" : "2fecfd8793e8ae51",
  "name" : "test_set_int",
  "fullName" : "tests.hil.tests.settings.test_settings#test_set_int",
  "historyId" : "6a5313bd6ad586dcd78f5c7fbfb5c06f",
  "time" : {
    "start" : 1736221186794,
    "stop" : 1736221186794,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert None != None",
  "statusTrace" : "project = <golioth.golioth.Project object at 0x7f50d06547a0>\nboard = <linuxboard.LinuxBoard object at 0x7f50d05ecd70>\ndevice = <golioth.golioth.Device object at 0x7f50d04e3da0>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\nE       assert None != None\n\ntests/hil/tests/settings/test_settings.py:42: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1736221187970,
      "stop" : 1736221192621,
      "duration" : 4651
    },
    "status" : "failed",
    "statusMessage" : "AssertionError: assert None != None\n",
    "statusTrace" : "  File \"/home/runner/.local/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/.local/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/pytest_plugin.py\", line 100, in wrapper\n    yield runner.run_fixture(local_func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 965, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 940, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 910, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/home/runner/work/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert None != None",
    "statusTrace" : "project = <golioth.golioth.Project object at 0x7f50d06547a0>\nboard = <linuxboard.LinuxBoard object at 0x7f50d05ecd70>\ndevice = <golioth.golioth.Device object at 0x7f50d04e3da0>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\nE       assert None != None\n\ntests/hil/tests/settings/test_settings.py:42: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "70d243e45c0c8922",
      "name" : "stdout",
      "source" : "70d243e45c0c8922.txt",
      "type" : "text/plain",
      "size" : 332
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "linux"
  }, {
    "name" : "tag",
    "value" : "linux"
  }, {
    "name" : "parentSuite",
    "value" : "hil.linux.linux"
  }, {
    "name" : "tag"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_settings"
  }, {
    "name" : "host",
    "value" : "fv-az1921-478"
  }, {
    "name" : "thread",
    "value" : "3778-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.settings.test_settings"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'linux'"
  }, {
    "name" : "platform_name",
    "value" : "'linux'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 21,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "e0dd4f42661c8590",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/e0dd4f42661c8590",
        "status" : "passed",
        "time" : {
          "start" : 1736204472783,
          "stop" : 1736204474223,
          "duration" : 1440
        }
      }, {
        "uid" : "68188b8720b7af69",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/68188b8720b7af69",
        "status" : "passed",
        "time" : {
          "start" : 1736204472783,
          "stop" : 1736204474223,
          "duration" : 1440
        }
      }, {
        "uid" : "393a47e85729f59",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/393a47e85729f59",
        "status" : "passed",
        "time" : {
          "start" : 1735943832659,
          "stop" : 1735943834531,
          "duration" : 1872
        }
      }, {
        "uid" : "a3bfaba885676340",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/a3bfaba885676340",
        "status" : "passed",
        "time" : {
          "start" : 1735921723778,
          "stop" : 1735921725920,
          "duration" : 2142
        }
      }, {
        "uid" : "706dd81f8b9a93c3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/706dd81f8b9a93c3",
        "status" : "passed",
        "time" : {
          "start" : 1735928433185,
          "stop" : 1735928434755,
          "duration" : 1570
        }
      }, {
        "uid" : "3e55179db739f1dc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/3e55179db739f1dc",
        "status" : "passed",
        "time" : {
          "start" : 1735921723778,
          "stop" : 1735921725920,
          "duration" : 2142
        }
      }, {
        "uid" : "96acd1d3cfdd4d2a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/96acd1d3cfdd4d2a",
        "status" : "passed",
        "time" : {
          "start" : 1735919752023,
          "stop" : 1735919753968,
          "duration" : 1945
        }
      }, {
        "uid" : "85893c27338d7201",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/85893c27338d7201",
        "status" : "passed",
        "time" : {
          "start" : 1735853982281,
          "stop" : 1735853984247,
          "duration" : 1966
        }
      }, {
        "uid" : "4f792a0f1ea98fa4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/4f792a0f1ea98fa4",
        "status" : "passed",
        "time" : {
          "start" : 1735853636460,
          "stop" : 1735853638229,
          "duration" : 1769
        }
      }, {
        "uid" : "a96755edd2da0566",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/a96755edd2da0566",
        "status" : "passed",
        "time" : {
          "start" : 1735847628518,
          "stop" : 1735847630277,
          "duration" : 1759
        }
      }, {
        "uid" : "6d6a7fd0c491a614",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/6d6a7fd0c491a614",
        "status" : "passed",
        "time" : {
          "start" : 1735840819892,
          "stop" : 1735840822835,
          "duration" : 2943
        }
      }, {
        "uid" : "91f99fca1cea4627",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/91f99fca1cea4627",
        "status" : "passed",
        "time" : {
          "start" : 1735840661311,
          "stop" : 1735840663194,
          "duration" : 1883
        }
      }, {
        "uid" : "a0529a18c6c238ed",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/a0529a18c6c238ed",
        "status" : "passed",
        "time" : {
          "start" : 1735831683914,
          "stop" : 1735831685615,
          "duration" : 1701
        }
      }, {
        "uid" : "20f34cceffaf68b0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1993/#testresult/20f34cceffaf68b0",
        "status" : "passed",
        "time" : {
          "start" : 1735830171157,
          "stop" : 1735830173016,
          "duration" : 1859
        }
      }, {
        "uid" : "79f77136f5ac13f7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1992/#testresult/79f77136f5ac13f7",
        "status" : "passed",
        "time" : {
          "start" : 1735824748617,
          "stop" : 1735824750322,
          "duration" : 1705
        }
      }, {
        "uid" : "f85cf436d925ceab",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1989/#testresult/f85cf436d925ceab",
        "status" : "passed",
        "time" : {
          "start" : 1735671299825,
          "stop" : 1735671301552,
          "duration" : 1727
        }
      }, {
        "uid" : "4e01e43fd1240839",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2/#testresult/4e01e43fd1240839",
        "status" : "passed",
        "time" : {
          "start" : 1735671373930,
          "stop" : 1735671375896,
          "duration" : 1966
        }
      }, {
        "uid" : "53e6cc5fd22e4cd1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1987/#testresult/53e6cc5fd22e4cd1",
        "status" : "passed",
        "time" : {
          "start" : 1735664979338,
          "stop" : 1735664981090,
          "duration" : 1752
        }
      }, {
        "uid" : "ba7db5338eb5fc49",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1986/#testresult/ba7db5338eb5fc49",
        "status" : "passed",
        "time" : {
          "start" : 1735661475497,
          "stop" : 1735661477458,
          "duration" : 1961
        }
      }, {
        "uid" : "3b234f88971f738f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1982/#testresult/3b234f88971f738f",
        "status" : "passed",
        "time" : {
          "start" : 1735571981341,
          "stop" : 1735571982943,
          "duration" : 1602
        }
      } ]
    },
    "tags" : [ null, "linux", "anyio", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "2fecfd8793e8ae51.json",
  "parameterValues" : [ "'linux'", "'linux'" ]
}