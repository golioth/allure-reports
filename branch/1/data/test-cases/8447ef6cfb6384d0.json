{
  "uid" : "8447ef6cfb6384d0",
  "name" : "test_lightdb_reported",
  "fullName" : "tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported",
  "historyId" : "fb40d663b2c57d305bec2ccb217b93bf",
  "time" : {
    "start" : 1736221177765,
    "stop" : 1736221177765,
    "duration" : 0
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert None != None",
  "statusTrace" : "project = <golioth.golioth.Project object at 0x7f767b735310>\nboard = <linuxboard.LinuxBoard object at 0x7f767b6cbd40>\ndevice = <golioth.golioth.Device object at 0x7f767b5a4c20>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Setup data for replication\n        await device.lightdb.delete('hil/lightdb')\n    \n        await device.lightdb.set('hil/lightdb/desired/true', True)\n        await device.lightdb.set('hil/lightdb/desired/false', False)\n        await device.lightdb.set('hil/lightdb/desired/int', 13)\n        await device.lightdb.set('hil/lightdb/desired/float', -234.25)\n        await device.lightdb.set('hil/lightdb/desired/str', '15')\n        await device.lightdb.set('hil/lightdb/desired/obj', {'c': '26', 'd': -12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/sync/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/sync/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/async/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/async/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/async/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/async/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/async/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/observed/int', 0)\n        await device.lightdb.set('hil/lightdb/observed/cbor/int', 0)\n    \n        # Mark test data ready\n        await device.lightdb.set('hil/lightdb/desired/ready', True)\n    \n        # Confirm connection to Golioth\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Give some time to replicate desired state\n>       assert None != await board.wait_for_regex_in_line('LightDB State reported data is ready', timeout_s=30)\nE       assert None != None\n\ntests/hil/tests/lightdb/test_lightdb.py:45: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1736221178741,
      "stop" : 1736221188876,
      "duration" : 10135
    },
    "status" : "failed",
    "statusMessage" : "AssertionError: assert None != None\n",
    "statusTrace" : "  File \"/home/runner/.local/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/.local/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/pytest_plugin.py\", line 98, in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 948, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 940, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 910, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/home/runner/work/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py\", line 45, in setup\n    assert None != await board.wait_for_regex_in_line('LightDB State reported data is ready', timeout_s=30)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736221178131,
      "stop" : 1736221178741,
      "duration" : 610
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert None != None",
    "statusTrace" : "project = <golioth.golioth.Project object at 0x7f767b735310>\nboard = <linuxboard.LinuxBoard object at 0x7f767b6cbd40>\ndevice = <golioth.golioth.Device object at 0x7f767b5a4c20>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Setup data for replication\n        await device.lightdb.delete('hil/lightdb')\n    \n        await device.lightdb.set('hil/lightdb/desired/true', True)\n        await device.lightdb.set('hil/lightdb/desired/false', False)\n        await device.lightdb.set('hil/lightdb/desired/int', 13)\n        await device.lightdb.set('hil/lightdb/desired/float', -234.25)\n        await device.lightdb.set('hil/lightdb/desired/str', '15')\n        await device.lightdb.set('hil/lightdb/desired/obj', {'c': '26', 'd': -12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/sync/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/sync/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/async/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/async/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/async/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/async/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/async/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/observed/int', 0)\n        await device.lightdb.set('hil/lightdb/observed/cbor/int', 0)\n    \n        # Mark test data ready\n        await device.lightdb.set('hil/lightdb/desired/ready', True)\n    \n        # Confirm connection to Golioth\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Give some time to replicate desired state\n>       assert None != await board.wait_for_regex_in_line('LightDB State reported data is ready', timeout_s=30)\nE       assert None != None\n\ntests/hil/tests/lightdb/test_lightdb.py:45: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "6753696d098e59df",
      "name" : "stdout",
      "source" : "6753696d098e59df.txt",
      "type" : "text/plain",
      "size" : 606
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1736221188932,
      "stop" : 1736221188958,
      "duration" : 26
    },
    "status" : "broken",
    "statusMessage" : "trio.Cancelled: Cancelled\n",
    "statusTrace" : "  File \"/home/runner/.local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/pytest_plugin.py\", line 98, in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 953, in run_asyncgen_fixture\n    self._call_in_runner_task(asyncgen.asend, None)\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 940, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 910, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/pytest_plugin.py\", line 68, in device\n    await project.delete_device(device)\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/golioth.py\", line 257, in delete_device\n    await self.delete_device_by_id(dev.id)\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/golioth.py\", line 254, in delete_device_by_id\n    await self.delete(f'devices/{id}')\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/golioth.py\", line 80, in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/golioth.py\", line 118, in delete\n    return await c.delete(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1966, in delete\n    return await self.request(\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1540, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1629, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1657, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1694, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1730, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_transports/default.py\", line 394, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpcore/_async/connection_pool.py\", line 256, in handle_async_request\n    raise exc from None\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpcore/_async/connection_pool.py\", line 236, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpcore/_async/connection.py\", line 101, in handle_async_request\n    raise exc\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpcore/_async/connection.py\", line 78, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpcore/_async/connection.py\", line 124, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpcore/_backends/auto.py\", line 31, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpcore/_backends/trio.py\", line 130, in connect_tcp\n    stream: trio.abc.Stream = await trio.open_tcp_stream(\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/trio/_highlevel_open_tcp_stream.py\", line 278, in open_tcp_stream\n    targets = await getaddrinfo(host, port, type=SOCK_STREAM)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/trio/_socket.py\", line 211, in getaddrinfo\n    async with _try_sync(numeric_only_failure):\n  File \"/home/runner/.local/lib/python3.12/site-packages/trio/_socket.py\", line 76, in __aenter__\n    await trio.lowlevel.checkpoint_if_cancelled()\n  File \"/home/runner/.local/lib/python3.12/site-packages/trio/_core/_run.py\", line 2773, in checkpoint_if_cancelled\n    await _core.checkpoint()\n  File \"/home/runner/.local/lib/python3.12/site-packages/trio/_core/_run.py\", line 2751, in checkpoint\n    await _core.wait_task_rescheduled(lambda _: _core.Abort.SUCCEEDED)\n  File \"/home/runner/.local/lib/python3.12/site-packages/trio/_core/_traps.py\", line 178, in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/home/runner/.local/lib/python3.12/site-packages/trio/_core/_run.py\", line 1437, in raise_cancel\n    raise Cancelled._create()\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "linux"
  }, {
    "name" : "tag",
    "value" : "linux"
  }, {
    "name" : "parentSuite",
    "value" : "hil.linux.linux"
  }, {
    "name" : "tag"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_lightdb"
  }, {
    "name" : "host",
    "value" : "fv-az1392-636"
  }, {
    "name" : "thread",
    "value" : "3774-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.lightdb.test_lightdb"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'linux'"
  }, {
    "name" : "platform_name",
    "value" : "'linux'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 21,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "8d99866fc65c7824",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/8d99866fc65c7824",
        "status" : "passed",
        "time" : {
          "start" : 1736204488847,
          "stop" : 1736204491826,
          "duration" : 2979
        }
      }, {
        "uid" : "3b0a504771d19215",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/3b0a504771d19215",
        "status" : "passed",
        "time" : {
          "start" : 1736204488847,
          "stop" : 1736204491826,
          "duration" : 2979
        }
      }, {
        "uid" : "621a86ced4f540ed",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/621a86ced4f540ed",
        "status" : "passed",
        "time" : {
          "start" : 1735943842695,
          "stop" : 1735943845053,
          "duration" : 2358
        }
      }, {
        "uid" : "9183978fe166cc54",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/9183978fe166cc54",
        "status" : "passed",
        "time" : {
          "start" : 1735921729750,
          "stop" : 1735921732222,
          "duration" : 2472
        }
      }, {
        "uid" : "f6f280ae0b40602e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/f6f280ae0b40602e",
        "status" : "passed",
        "time" : {
          "start" : 1735928474045,
          "stop" : 1735928476566,
          "duration" : 2521
        }
      }, {
        "uid" : "6c22610bffe482b7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/6c22610bffe482b7",
        "status" : "passed",
        "time" : {
          "start" : 1735921729750,
          "stop" : 1735921732222,
          "duration" : 2472
        }
      }, {
        "uid" : "d19e3a5e9c862220",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/d19e3a5e9c862220",
        "status" : "passed",
        "time" : {
          "start" : 1735919720434,
          "stop" : 1735919721768,
          "duration" : 1334
        }
      }, {
        "uid" : "17c017a24a40db3e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/17c017a24a40db3e",
        "status" : "passed",
        "time" : {
          "start" : 1735853972442,
          "stop" : 1735853974769,
          "duration" : 2327
        }
      }, {
        "uid" : "bf9dac586aa543b0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/bf9dac586aa543b0",
        "status" : "passed",
        "time" : {
          "start" : 1735853645278,
          "stop" : 1735853647789,
          "duration" : 2511
        }
      }, {
        "uid" : "c897231c559ef963",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/c897231c559ef963",
        "status" : "passed",
        "time" : {
          "start" : 1735847639974,
          "stop" : 1735847642318,
          "duration" : 2344
        }
      }, {
        "uid" : "2875a2944d23aa6c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/2875a2944d23aa6c",
        "status" : "passed",
        "time" : {
          "start" : 1735840836780,
          "stop" : 1735840839798,
          "duration" : 3018
        }
      }, {
        "uid" : "b13ba596b60e8c74",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/b13ba596b60e8c74",
        "status" : "passed",
        "time" : {
          "start" : 1735840677287,
          "stop" : 1735840680498,
          "duration" : 3211
        }
      }, {
        "uid" : "325e3e2d276b5ab3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/325e3e2d276b5ab3",
        "status" : "passed",
        "time" : {
          "start" : 1735831693948,
          "stop" : 1735831696160,
          "duration" : 2212
        }
      }, {
        "uid" : "fef892b7c5ea7646",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1993/#testresult/fef892b7c5ea7646",
        "status" : "passed",
        "time" : {
          "start" : 1735830210522,
          "stop" : 1735830213698,
          "duration" : 3176
        }
      }, {
        "uid" : "6a230a5601d51dae",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1992/#testresult/6a230a5601d51dae",
        "status" : "passed",
        "time" : {
          "start" : 1735824743309,
          "stop" : 1735824744619,
          "duration" : 1310
        }
      }, {
        "uid" : "547fa05d54b933d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1989/#testresult/547fa05d54b933d",
        "status" : "passed",
        "time" : {
          "start" : 1735671296616,
          "stop" : 1735671298994,
          "duration" : 2378
        }
      }, {
        "uid" : "c46639988790eaa0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2/#testresult/c46639988790eaa0",
        "status" : "passed",
        "time" : {
          "start" : 1735671358363,
          "stop" : 1735671360871,
          "duration" : 2508
        }
      }, {
        "uid" : "c0160066760e33bb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1987/#testresult/c0160066760e33bb",
        "status" : "passed",
        "time" : {
          "start" : 1735664979196,
          "stop" : 1735664982409,
          "duration" : 3213
        }
      }, {
        "uid" : "3efaa9403179790e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1986/#testresult/3efaa9403179790e",
        "status" : "passed",
        "time" : {
          "start" : 1735661467499,
          "stop" : 1735661470324,
          "duration" : 2825
        }
      }, {
        "uid" : "398abe54035d37a6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1982/#testresult/398abe54035d37a6",
        "status" : "passed",
        "time" : {
          "start" : 1735571963365,
          "stop" : 1735571964673,
          "duration" : 1308
        }
      } ]
    },
    "tags" : [ null, "linux", "anyio", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "8447ef6cfb6384d0.json",
  "parameterValues" : [ "'linux'", "'linux'" ]
}