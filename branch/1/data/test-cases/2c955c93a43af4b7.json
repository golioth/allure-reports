{
  "uid" : "2c955c93a43af4b7",
  "name" : "test_lightdb_get",
  "fullName" : "examples.esp_idf.lightdb.get.pytest.test_sample#test_lightdb_get",
  "historyId" : "def3e110cd8a6471c20c40d949fbdd5c",
  "time" : {
    "start" : 1736224952512,
    "stop" : 1736224968239,
    "duration" : 15727
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 261939.09069465156\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff947804d0>\ndevice = <golioth.golioth.Device object at 0xffff947a7d10>\n\n    async def test_lightdb_get(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line(r'.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb reads\n    \n>       await board.wait_for_regex_in_line(r'.*Failed to get counter \\(async\\): 0', timeout_s=10.0)\n\nexamples/esp_idf/lightdb/get/pytest/test_sample.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 261939.09069465156\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736224923952,
      "stop" : 1736224923952,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1736224923950,
      "stop" : 1736224923951,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1736224923951,
      "stop" : 1736224923952,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1736224923954,
      "stop" : 1736224923954,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1736224923953,
      "stop" : 1736224923953,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736224923953,
      "stop" : 1736224923953,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736224923956,
      "stop" : 1736224923956,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736224951611,
      "stop" : 1736224952509,
      "duration" : 898
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1736224923956,
      "stop" : 1736224951130,
      "duration" : 27174
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736224923955,
      "stop" : 1736224923955,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1736224923954,
      "stop" : 1736224923954,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736224951132,
      "stop" : 1736224951610,
      "duration" : 478
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736224923949,
      "stop" : 1736224923949,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1736224923950,
      "stop" : 1736224923950,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736224923955,
      "stop" : 1736224923955,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 261939.09069465156\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff947804d0>\ndevice = <golioth.golioth.Device object at 0xffff947a7d10>\n\n    async def test_lightdb_get(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line(r'.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb reads\n    \n>       await board.wait_for_regex_in_line(r'.*Failed to get counter \\(async\\): 0', timeout_s=10.0)\n\nexamples/esp_idf/lightdb/get/pytest/test_sample.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 261939.09069465156\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8bd004a2148eb4c5",
      "name" : "stdout",
      "source" : "8bd004a2148eb4c5.txt",
      "type" : "text/plain",
      "size" : 8500
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1736224968848,
      "stop" : 1736224969232,
      "duration" : 384
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1736224969236,
      "stop" : 1736224969240,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1736224969234,
      "stop" : 1736224969235,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32_devkitc_wrover_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32_devkitc_wrover_espidf"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "740da745787d"
  }, {
    "name" : "thread",
    "value" : "275-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.lightdb.get.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32_devkitc_wrover_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 21,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "8c06829bf12d4b19",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/8c06829bf12d4b19",
        "status" : "passed",
        "time" : {
          "start" : 1736207898826,
          "stop" : 1736207924722,
          "duration" : 25896
        }
      }, {
        "uid" : "530f749bfa53dbc6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/530f749bfa53dbc6",
        "status" : "passed",
        "time" : {
          "start" : 1736207898826,
          "stop" : 1736207924722,
          "duration" : 25896
        }
      }, {
        "uid" : "ce4d6830ddc221c6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/ce4d6830ddc221c6",
        "status" : "passed",
        "time" : {
          "start" : 1735947894176,
          "stop" : 1735947919920,
          "duration" : 25744
        }
      }, {
        "uid" : "b699f8f687170d1a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/b699f8f687170d1a",
        "status" : "passed",
        "time" : {
          "start" : 1735927491159,
          "stop" : 1735927516536,
          "duration" : 25377
        }
      }, {
        "uid" : "54638a0b26b53024",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/54638a0b26b53024",
        "status" : "passed",
        "time" : {
          "start" : 1735932270979,
          "stop" : 1735932296996,
          "duration" : 26017
        }
      }, {
        "uid" : "19b6d8bceb13296e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/19b6d8bceb13296e",
        "status" : "passed",
        "time" : {
          "start" : 1735927491159,
          "stop" : 1735927516536,
          "duration" : 25377
        }
      }, {
        "uid" : "664687253fbea89c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/664687253fbea89c",
        "status" : "passed",
        "time" : {
          "start" : 1735923384331,
          "stop" : 1735923410413,
          "duration" : 26082
        }
      }, {
        "uid" : "9b5036ef960077b7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/9b5036ef960077b7",
        "status" : "passed",
        "time" : {
          "start" : 1735863606778,
          "stop" : 1735863632318,
          "duration" : 25540
        }
      }, {
        "uid" : "e42aca706cfe83b2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/e42aca706cfe83b2",
        "status" : "passed",
        "time" : {
          "start" : 1735862988244,
          "stop" : 1735863014262,
          "duration" : 26018
        }
      }, {
        "uid" : "5d9b02c0b8ca9a7d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/5d9b02c0b8ca9a7d",
        "status" : "passed",
        "time" : {
          "start" : 1735852400669,
          "stop" : 1735852426606,
          "duration" : 25937
        }
      }, {
        "uid" : "8c76b779b68df545",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/8c76b779b68df545",
        "status" : "passed",
        "time" : {
          "start" : 1735848166518,
          "stop" : 1735848192897,
          "duration" : 26379
        }
      }, {
        "uid" : "8aa7387b6f51fc2b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/8aa7387b6f51fc2b",
        "status" : "passed",
        "time" : {
          "start" : 1735847680060,
          "stop" : 1735847706225,
          "duration" : 26165
        }
      }, {
        "uid" : "904911b55fb1fe87",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/904911b55fb1fe87",
        "status" : "passed",
        "time" : {
          "start" : 1735837439026,
          "stop" : 1735837465012,
          "duration" : 25986
        }
      }, {
        "uid" : "9e59107014653d8f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1993/#testresult/9e59107014653d8f",
        "status" : "passed",
        "time" : {
          "start" : 1735833387389,
          "stop" : 1735833413301,
          "duration" : 25912
        }
      }, {
        "uid" : "8d7b5fd7ba6e2bd0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1992/#testresult/8d7b5fd7ba6e2bd0",
        "status" : "passed",
        "time" : {
          "start" : 1735828137126,
          "stop" : 1735828163125,
          "duration" : 25999
        }
      }, {
        "uid" : "a57ec50ce7b04464",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1989/#testresult/a57ec50ce7b04464",
        "status" : "passed",
        "time" : {
          "start" : 1735678527012,
          "stop" : 1735678552198,
          "duration" : 25186
        }
      }, {
        "uid" : "92ff97a5106fa0c4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2/#testresult/92ff97a5106fa0c4",
        "status" : "passed",
        "time" : {
          "start" : 1735678598658,
          "stop" : 1735678623784,
          "duration" : 25126
        }
      }, {
        "uid" : "9d620fa1ca7c0ea2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1987/#testresult/9d620fa1ca7c0ea2",
        "status" : "passed",
        "time" : {
          "start" : 1735669396061,
          "stop" : 1735669422119,
          "duration" : 26058
        }
      }, {
        "uid" : "7517d6c8bad7b6d2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1986/#testresult/7517d6c8bad7b6d2",
        "status" : "passed",
        "time" : {
          "start" : 1735665150535,
          "stop" : 1735665176678,
          "duration" : 26143
        }
      }, {
        "uid" : "8fff94cbd3ccca2c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1982/#testresult/8fff94cbd3ccca2c",
        "status" : "passed",
        "time" : {
          "start" : 1735575766194,
          "stop" : 1735575792097,
          "duration" : 25903
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "esp-idf", "anyio", "esp32_devkitc_wrover_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "2c955c93a43af4b7.json",
  "parameterValues" : [ "'esp32_devkitc_wrover_espidf'", "'esp-idf'" ]
}