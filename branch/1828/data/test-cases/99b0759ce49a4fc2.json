{"uid":"99b0759ce49a4fc2","name":"test_no_args","fullName":"tests.hil.tests.rpc.test_rpc#test_no_args","historyId":"b06072b860f97d36e4a27dc6d0646478","time":{"start":1732290819276,"stop":1732290825334,"duration":6058},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa35e2390>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffffa35ebf10>\ndevice = <golioth.golioth.Device object at 0xffffa35e1350>\n\n    async def test_no_args(board, device):\n>       await device.rpc.no_response()\n\ntests/hil/tests/rpc/test_rpc.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa35e2390>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732290786819,"stop":1732290786819,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732290786820,"stop":1732290786820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732290786821,"stop":1732290786822,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732290786821,"stop":1732290786821,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732290786822,"stop":1732290786823,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732290786823,"stop":1732290786823,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732290786824,"stop":1732290786824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732290786825,"stop":1732290786825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732290786825,"stop":1732290786826,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732290786826,"stop":1732290786826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732290786826,"stop":1732290786826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732290786827,"stop":1732290787663,"duration":836},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732290786827,"stop":1732290786827,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732290787664,"stop":1732290800415,"duration":12751},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732290800418,"stop":1732290801580,"duration":1162},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732290801580,"stop":1732290815919,"duration":14339},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732290903435,"stop":1732290903435,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732290903438,"stop":1732290903938,"duration":500},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732290903942,"stop":1732290903959,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732290903963,"stop":1732290903967,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"81042549ca07"},{"name":"thread","value":"294-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":75,"unknown":0,"total":78},"items":[{"uid":"2c1b3dd3b0869d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/2c1b3dd3b0869d6","status":"passed","time":{"start":1732225520405,"stop":1732225521281,"duration":876}},{"uid":"ffb559711cd554d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1827//#testresult/ffb559711cd554d6","status":"passed","time":{"start":1732287955314,"stop":1732287956003,"duration":689}},{"uid":"2a99284ccaee9ec6","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/2a99284ccaee9ec6","status":"passed","time":{"start":1732194183365,"stop":1732194185140,"duration":1775}},{"uid":"fab2597f052f0ebd","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/fab2597f052f0ebd","status":"passed","time":{"start":1732285281096,"stop":1732285281881,"duration":785}},{"uid":"1b6e3f13b85b789c","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/1b6e3f13b85b789c","status":"passed","time":{"start":1732194183365,"stop":1732194185140,"duration":1775}},{"uid":"46e5b858ac2b3de6","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/46e5b858ac2b3de6","status":"passed","time":{"start":1732279173633,"stop":1732279174413,"duration":780}},{"uid":"5214bacb09fa711","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/5214bacb09fa711","status":"passed","time":{"start":1732274970507,"stop":1732274971339,"duration":832}},{"uid":"a5423762fd17a3cc","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/a5423762fd17a3cc","status":"passed","time":{"start":1732207102327,"stop":1732207104964,"duration":2637}},{"uid":"74a62bd7186c295b","reportUrl":"https://golioth.github.io/allure-reports/branch/1819//#testresult/74a62bd7186c295b","status":"passed","time":{"start":1732230450192,"stop":1732230450987,"duration":795}},{"uid":"9a4f09c5af270004","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/9a4f09c5af270004","status":"passed","time":{"start":1732229844230,"stop":1732229844977,"duration":747}},{"uid":"37f825411e673926","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/37f825411e673926","status":"passed","time":{"start":1732225520405,"stop":1732225521281,"duration":876}},{"uid":"6f19d3630a381d50","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/6f19d3630a381d50","status":"passed","time":{"start":1732223839186,"stop":1732223839954,"duration":768}},{"uid":"bc529b88e9570dcc","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/bc529b88e9570dcc","status":"passed","time":{"start":1732214897035,"stop":1732214898114,"duration":1079}},{"uid":"3a44b376d59c123a","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/3a44b376d59c123a","status":"passed","time":{"start":1732194183365,"stop":1732194185140,"duration":1775}},{"uid":"536411f28224320c","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/536411f28224320c","status":"passed","time":{"start":1732207102327,"stop":1732207104964,"duration":2637}},{"uid":"93cef5dc75ebb86f","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/93cef5dc75ebb86f","status":"passed","time":{"start":1732205926009,"stop":1732205926892,"duration":883}},{"uid":"e6df85cd3f9c1971","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/e6df85cd3f9c1971","status":"passed","time":{"start":1732204364791,"stop":1732204365784,"duration":993}},{"uid":"86b057c239631f6a","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/86b057c239631f6a","status":"passed","time":{"start":1732194183365,"stop":1732194185140,"duration":1775}},{"uid":"2a5444030c8c0760","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/2a5444030c8c0760","status":"passed","time":{"start":1732187560142,"stop":1732187561023,"duration":881}},{"uid":"62dd40f29106dc78","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/62dd40f29106dc78","status":"passed","time":{"start":1732192911896,"stop":1732192913488,"duration":1592}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"99b0759ce49a4fc2.json","parameterValues":["'nrf52840dk'","'zephyr'"]}