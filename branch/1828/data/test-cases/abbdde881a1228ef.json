{"uid":"abbdde881a1228ef","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1732289933386,"stop":1732289966902,"duration":33516},"status":"failed","statusMessage":"AssertionError: assert 7 == 1\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff99fc5090>\ndevice = <golioth.golioth.Device object at 0xffff99f53a50>\nproject = <golioth.golioth.Project object at 0xffff99fe1a50>\nreleases = {'test_blocks': Release <6740a582bb6157cf6cdf6ef7, release_tags=[], device_tags=['6740a580bb6157cf6cdf6ef2'], artifact..., release_tags=[], device_tags=['6740a580bb6157cf6cdf6ef2'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 7 == 1\nE                    +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732289870491,"stop":1732289870491,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732289870492,"stop":1732289870492,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732289870493,"stop":1732289870494,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732289870493,"stop":1732289870493,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732289870494,"stop":1732289870495,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732289870494,"stop":1732289870494,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732289870495,"stop":1732289870495,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732289870496,"stop":1732289870496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732289870496,"stop":1732289870496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732289870497,"stop":1732289870497,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732289870497,"stop":1732289870498,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732289870498,"stop":1732289870498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732289870499,"stop":1732289910488,"duration":39989},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732289910490,"stop":1732289912062,"duration":1572},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732289912062,"stop":1732289915012,"duration":2950},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732289915012,"stop":1732289918615,"duration":3603},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1732289918616,"stop":1732289919694,"duration":1078},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1732289919695,"stop":1732289921021,"duration":1326},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1732289921022,"stop":1732289923261,"duration":2239},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1732289933383,"stop":1732289933383,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 7 == 1\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff99fc5090>\ndevice = <golioth.golioth.Device object at 0xffff99f53a50>\nproject = <golioth.golioth.Project object at 0xffff99fe1a50>\nreleases = {'test_blocks': Release <6740a582bb6157cf6cdf6ef7, release_tags=[], device_tags=['6740a580bb6157cf6cdf6ef2'], artifact..., release_tags=[], device_tags=['6740a580bb6157cf6cdf6ef2'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 7 == 1\nE                    +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","steps":[],"attachments":[{"uid":"e3a2c99505acd61","name":"stdout","source":"e3a2c99505acd61.txt","type":"text/plain","size":168}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1732289967097,"stop":1732289968228,"duration":1131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1732289968230,"stop":1732289970156,"duration":1926},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1732289970158,"stop":1732289971314,"duration":1156},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1732289971318,"stop":1732289971318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1732289971321,"stop":1732289971321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732289971325,"stop":1732289971882,"duration":557},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732289971885,"stop":1732289971885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732289971887,"stop":1732289971894,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"a629249b4ff5"},{"name":"thread","value":"255-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":2,"skipped":0,"passed":76,"unknown":0,"total":80},"items":[{"uid":"26f718ec36edea54","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/26f718ec36edea54","status":"passed","time":{"start":1732224929681,"stop":1732224979639,"duration":49958}},{"uid":"711656a2c9a1a445","reportUrl":"https://golioth.github.io/allure-reports/branch/1827//#testresult/711656a2c9a1a445","status":"passed","time":{"start":1732286975195,"stop":1732287024261,"duration":49066}},{"uid":"8fa47fd4e89e28f1","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/8fa47fd4e89e28f1","status":"passed","time":{"start":1732193196486,"stop":1732193245953,"duration":49467}},{"uid":"a3452f3c54591b1f","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/a3452f3c54591b1f","status":"passed","time":{"start":1732283401639,"stop":1732283450894,"duration":49255}},{"uid":"49136b4f7a6d0066","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/49136b4f7a6d0066","status":"passed","time":{"start":1732193196486,"stop":1732193245953,"duration":49467}},{"uid":"66bb6c1c0c6008f1","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/66bb6c1c0c6008f1","status":"passed","time":{"start":1732278395533,"stop":1732278443268,"duration":47735}},{"uid":"b11a3d89e40d92bf","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/b11a3d89e40d92bf","status":"passed","time":{"start":1732205069902,"stop":1732205117012,"duration":47110}},{"uid":"2e89f1896fd22527","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/2e89f1896fd22527","status":"passed","time":{"start":1732205754948,"stop":1732205804136,"duration":49188}},{"uid":"18d06fa8008f4d63","reportUrl":"https://golioth.github.io/allure-reports/branch/1819//#testresult/18d06fa8008f4d63","status":"passed","time":{"start":1732230002910,"stop":1732230049961,"duration":47051}},{"uid":"126e7b18e83b39f6","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/126e7b18e83b39f6","status":"passed","time":{"start":1732229149850,"stop":1732229197031,"duration":47181}},{"uid":"3f1025127f0da8bc","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/3f1025127f0da8bc","status":"passed","time":{"start":1732224929681,"stop":1732224979639,"duration":49958}},{"uid":"6a0f9395ad56ed03","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/6a0f9395ad56ed03","status":"passed","time":{"start":1732223614596,"stop":1732223662556,"duration":47960}},{"uid":"461dd52432d70b24","reportUrl":"https://golioth.github.io/allure-reports/branch/1816//#testresult/461dd52432d70b24","status":"passed","time":{"start":1732220680471,"stop":1732220727906,"duration":47435}},{"uid":"ab057975cdf8381e","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/ab057975cdf8381e","status":"passed","time":{"start":1732214050174,"stop":1732214097908,"duration":47734}},{"uid":"3d3e2fae337c9c74","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/3d3e2fae337c9c74","status":"passed","time":{"start":1732193196486,"stop":1732193245953,"duration":49467}},{"uid":"45b618f4a1e34269","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/45b618f4a1e34269","status":"passed","time":{"start":1732205754948,"stop":1732205804136,"duration":49188}},{"uid":"8cc4cb1e10e400bb","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/8cc4cb1e10e400bb","status":"passed","time":{"start":1732205069902,"stop":1732205117012,"duration":47110}},{"uid":"abda1d9378eb6dd9","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/abda1d9378eb6dd9","status":"passed","time":{"start":1732142044245,"stop":1732142095082,"duration":50837}},{"uid":"60785343da0230bb","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/60785343da0230bb","status":"passed","time":{"start":1732193196486,"stop":1732193245953,"duration":49467}},{"uid":"f9cada9df89eda2e","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/f9cada9df89eda2e","status":"passed","time":{"start":1732143595125,"stop":1732143647682,"duration":52557}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"abbdde881a1228ef.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}