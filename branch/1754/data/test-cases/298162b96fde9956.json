{"uid":"298162b96fde9956","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1731707247542,"stop":1731707270810,"duration":23268},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff9e66df50>\ndevice = <golioth.golioth.Device object at 0xffff9e6c8f10>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_ssid","time":{"start":1731707225302,"stop":1731707225303,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1731707225302,"stop":1731707225302,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731707225303,"stop":1731707225303,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731707225304,"stop":1731707225304,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731707225304,"stop":1731707225304,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731707225305,"stop":1731707225307,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731707225307,"stop":1731707225308,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731707225308,"stop":1731707225308,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731707225309,"stop":1731707225845,"duration":536},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731707225845,"stop":1731707226743,"duration":898},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731707226743,"stop":1731707246904,"duration":20161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731707246905,"stop":1731707247539,"duration":634},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff9e66df50>\ndevice = <golioth.golioth.Device object at 0xffff9e6c8f10>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"19dcc793d6a4d2cf","name":"log","source":"19dcc793d6a4d2cf.txt","type":"text/plain","size":28194}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731707271110,"stop":1731707271396,"duration":286},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731707271398,"stop":1731707271900,"duration":502},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731707271902,"stop":1731707271904,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731707271909,"stop":1731707271909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"7404d65a8d4f"},{"name":"thread","value":"350-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":15,"unknown":0,"total":22},"items":[{"uid":"6406e913dab610a4","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/6406e913dab610a4","status":"passed","time":{"start":1731695012355,"stop":1731695031991,"duration":19636}},{"uid":"1468154881fcdaad","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/1468154881fcdaad","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731689066187,"stop":1731689088189,"duration":22002}},{"uid":"fca1f3db96484674","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/fca1f3db96484674","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731624807155,"stop":1731624830669,"duration":23514}},{"uid":"c47f01799adbac61","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/c47f01799adbac61","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731622071889,"stop":1731622095391,"duration":23502}},{"uid":"3000eba297d35ef8","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/3000eba297d35ef8","status":"passed","time":{"start":1731616553542,"stop":1731616572249,"duration":18707}},{"uid":"80f2f7b5f079b5e5","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/80f2f7b5f079b5e5","status":"passed","time":{"start":1731613052174,"stop":1731613073286,"duration":21112}},{"uid":"1599727a6005eb6e","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/1599727a6005eb6e","status":"passed","time":{"start":1731610613290,"stop":1731610632033,"duration":18743}},{"uid":"84fee2f9681b04ba","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/84fee2f9681b04ba","status":"passed","time":{"start":1731543206394,"stop":1731543225301,"duration":18907}},{"uid":"31da3b2d425063ae","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/31da3b2d425063ae","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731548314488,"stop":1731548336897,"duration":22409}},{"uid":"6446966e833c6b31","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/6446966e833c6b31","status":"passed","time":{"start":1731536314844,"stop":1731536336005,"duration":21161}},{"uid":"af0b72942507d89d","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/af0b72942507d89d","status":"passed","time":{"start":1731543206394,"stop":1731543225301,"duration":18907}},{"uid":"33ff1bc353e87e8d","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/33ff1bc353e87e8d","status":"passed","time":{"start":1731540221409,"stop":1731540241662,"duration":20253}},{"uid":"d02df3ad6a6f5262","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/d02df3ad6a6f5262","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731537528570,"stop":1731537562949,"duration":34379}},{"uid":"edbcb7155f785ff8","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/edbcb7155f785ff8","status":"passed","time":{"start":1731536314844,"stop":1731536336005,"duration":21161}},{"uid":"d89cf09d0f12d57","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/d89cf09d0f12d57","status":"passed","time":{"start":1731519755808,"stop":1731519774562,"duration":18754}},{"uid":"162f29fa5bd95de1","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/162f29fa5bd95de1","status":"passed","time":{"start":1731519755808,"stop":1731519774562,"duration":18754}},{"uid":"7f0a63ca5d5750e5","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/7f0a63ca5d5750e5","status":"passed","time":{"start":1731519755808,"stop":1731519774562,"duration":18754}},{"uid":"579ab3b1c0335e4a","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/579ab3b1c0335e4a","status":"passed","time":{"start":1731519755808,"stop":1731519774562,"duration":18754}},{"uid":"de89c94a03d5f993","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/de89c94a03d5f993","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731427369874,"stop":1731427394560,"duration":24686}},{"uid":"c86934a726297782","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/c86934a726297782","status":"passed","time":{"start":1731103890942,"stop":1731103917093,"duration":26151}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"298162b96fde9956.json","parameterValues":["'rak5010'","'zephyr'"]}