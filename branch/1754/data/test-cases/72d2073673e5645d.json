{"uid":"72d2073673e5645d","name":"test_set_int_range","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range","historyId":"fd3dd4d2ad6d50e828e93ca2955623b4","time":{"start":1731705300762,"stop":1731705306480,"duration":5718},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffff8e55d6d0>\ndevice = <golioth.golioth.Device object at 0xffff8e533e90>\n\n    async def test_set_int_range(board, device):\n>       await device.settings.set('TEST_INT_RANGE', 5)\n\ntests/hil/tests/settings/test_settings.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:713: in set\n    setting = await self.device.project.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:986: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:982: in get_all\n    response = await self.project.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731705239966,"stop":1731705239966,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731705239967,"stop":1731705239967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731705239968,"stop":1731705239968,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731705239969,"stop":1731705239969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731705239970,"stop":1731705239970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731705239970,"stop":1731705239971,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731705239971,"stop":1731705239971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731705239972,"stop":1731705239972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731705239973,"stop":1731705239973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731705239974,"stop":1731705239974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731705239974,"stop":1731705239974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731705239975,"stop":1731705239975,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731705239975,"stop":1731705240438,"duration":463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731705240439,"stop":1731705253242,"duration":12803},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731705253245,"stop":1731705254863,"duration":1618},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731705254863,"stop":1731705266770,"duration":11907},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1731705420968,"stop":1731705420968,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731705420973,"stop":1731705421508,"duration":535},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731705421510,"stop":1731705421517,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731705421519,"stop":1731705421522,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"df360c0d0235"},{"name":"thread","value":"311-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":16,"unknown":0,"total":22},"items":[{"uid":"23fb73b9c92a5205","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/23fb73b9c92a5205","status":"passed","time":{"start":1731693733050,"stop":1731693737301,"duration":4251}},{"uid":"bfa7bafc8462299e","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/bfa7bafc8462299e","status":"passed","time":{"start":1731624090909,"stop":1731624095022,"duration":4113}},{"uid":"c1ea93acd3944951","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/c1ea93acd3944951","status":"passed","time":{"start":1731624090909,"stop":1731624095022,"duration":4113}},{"uid":"839ccc0d5f240db0","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/839ccc0d5f240db0","status":"passed","time":{"start":1731620749439,"stop":1731620753511,"duration":4072}},{"uid":"9bae1dfdaac3faa2","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/9bae1dfdaac3faa2","status":"passed","time":{"start":1731615302654,"stop":1731615306473,"duration":3819}},{"uid":"f63bbfed421c6397","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/f63bbfed421c6397","status":"passed","time":{"start":1731612293471,"stop":1731612297336,"duration":3865}},{"uid":"e520aa6aff14a7e7","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/e520aa6aff14a7e7","status":"passed","time":{"start":1731609395986,"stop":1731609400722,"duration":4736}},{"uid":"533804b4f4780e43","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/533804b4f4780e43","status":"passed","time":{"start":1731541269473,"stop":1731541276471,"duration":6998}},{"uid":"f22ffc043eab1d17","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/f22ffc043eab1d17","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731547310811,"stop":1731547322242,"duration":11431}},{"uid":"51bd174697c1e14b","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/51bd174697c1e14b","status":"passed","time":{"start":1731564228640,"stop":1731564232325,"duration":3685}},{"uid":"399efc8ab038d4a3","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/399efc8ab038d4a3","status":"passed","time":{"start":1731541269473,"stop":1731541276471,"duration":6998}},{"uid":"c4d9e991a559db98","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/c4d9e991a559db98","status":"passed","time":{"start":1731538003760,"stop":1731538008024,"duration":4264}},{"uid":"e3b4c69aa2654fd2","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/e3b4c69aa2654fd2","status":"passed","time":{"start":1731534625858,"stop":1731534630131,"duration":4273}},{"uid":"236274194ee064b9","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/236274194ee064b9","status":"passed","time":{"start":1731534274434,"stop":1731534279024,"duration":4590}},{"uid":"48344f2e183ccda","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/48344f2e183ccda","status":"passed","time":{"start":1731523882361,"stop":1731523886456,"duration":4095}},{"uid":"a8f31bf416d8d08a","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/a8f31bf416d8d08a","status":"passed","time":{"start":1731523882361,"stop":1731523886456,"duration":4095}},{"uid":"cb7f94a7e42939e8","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/cb7f94a7e42939e8","status":"passed","time":{"start":1731523882361,"stop":1731523886456,"duration":4095}},{"uid":"4d1b5e066c96596e","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/4d1b5e066c96596e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731518549867,"stop":1731518549867,"duration":0}},{"uid":"f4210ff9b47baaed","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/f4210ff9b47baaed","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731426193157,"stop":1731426193157,"duration":0}},{"uid":"aadf64896f8c7c86","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/aadf64896f8c7c86","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731103208501,"stop":1731103208501,"duration":0}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"72d2073673e5645d.json","parameterValues":["'nrf52840dk'","'zephyr'"]}