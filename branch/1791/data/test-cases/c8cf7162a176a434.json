{"uid":"c8cf7162a176a434","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"904917f16e15151e1ed741401de93920","time":{"start":1732123806748,"stop":1732123819371,"duration":12623},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffab2d3750>\ndevice = <golioth.golioth.Device object at 0xffffa9bbce90>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa9bbce90>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732123738282,"stop":1732123738282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732123738283,"stop":1732123738283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732123738284,"stop":1732123738284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732123738284,"stop":1732123738285,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732123738285,"stop":1732123738285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732123738286,"stop":1732123738286,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732123738287,"stop":1732123738287,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732123738288,"stop":1732123738288,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732123738289,"stop":1732123738289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732123738289,"stop":1732123738289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732123738290,"stop":1732123738290,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732123738290,"stop":1732123738290,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732123738291,"stop":1732123738738,"duration":447},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732123738738,"stop":1732123788613,"duration":49875},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732123788615,"stop":1732123789594,"duration":979},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732123789595,"stop":1732123802905,"duration":13310},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffab2d3750>\ndevice = <golioth.golioth.Device object at 0xffffa9bbce90>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa9bbce90>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"3909001415430524","name":"stdout","source":"3909001415430524.txt","type":"text/plain","size":2216}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1732123942325,"stop":1732123942325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732123942327,"stop":1732123942747,"duration":420},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732123942749,"stop":1732123942757,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732123942759,"stop":1732123942762,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"291273f5a81a"},{"name":"thread","value":"252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":44,"unknown":0,"total":45},"items":[{"uid":"336da2c59f81b782","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/336da2c59f81b782","status":"passed","time":{"start":1732122765631,"stop":1732122777892,"duration":12261}},{"uid":"c0c8b4378775ad21","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/c0c8b4378775ad21","status":"passed","time":{"start":1732042341692,"stop":1732042353979,"duration":12287}},{"uid":"6e0741d1cc8761eb","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/6e0741d1cc8761eb","status":"passed","time":{"start":1732046756042,"stop":1732046768386,"duration":12344}},{"uid":"d441e9cffdf84b29","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/d441e9cffdf84b29","status":"passed","time":{"start":1732046756042,"stop":1732046768386,"duration":12344}},{"uid":"d7106bec17a9a35f","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/d7106bec17a9a35f","status":"passed","time":{"start":1732046756042,"stop":1732046768386,"duration":12344}},{"uid":"441446b8ada0e1d5","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/441446b8ada0e1d5","status":"passed","time":{"start":1732042341692,"stop":1732042353979,"duration":12287}},{"uid":"e32faef3c67acf2e","reportUrl":"https://golioth.github.io/allure-reports/branch/1780//#testresult/e32faef3c67acf2e","status":"passed","time":{"start":1732030343003,"stop":1732030355249,"duration":12246}},{"uid":"14c05bc5c0b269b2","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/14c05bc5c0b269b2","status":"passed","time":{"start":1732013404139,"stop":1732013416547,"duration":12408}},{"uid":"7ad0791fbc5c63a3","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/7ad0791fbc5c63a3","status":"passed","time":{"start":1732013404139,"stop":1732013416547,"duration":12408}},{"uid":"cfb1fcb64b141ebe","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/cfb1fcb64b141ebe","status":"passed","time":{"start":1732013404139,"stop":1732013416547,"duration":12408}},{"uid":"b66a89d0b8f8bdee","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/b66a89d0b8f8bdee","status":"passed","time":{"start":1731999709786,"stop":1731999722000,"duration":12214}},{"uid":"1d7e3b7ce6094b9e","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/1d7e3b7ce6094b9e","status":"passed","time":{"start":1731967548998,"stop":1731967561453,"duration":12455}},{"uid":"5c89497e94fb66b7","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/5c89497e94fb66b7","status":"passed","time":{"start":1731959839724,"stop":1731959852107,"duration":12383}},{"uid":"12dbb652bccc9919","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/12dbb652bccc9919","status":"passed","time":{"start":1731958962922,"stop":1731958975336,"duration":12414}},{"uid":"18525d36c5688b43","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/18525d36c5688b43","status":"passed","time":{"start":1731956074927,"stop":1731956087281,"duration":12354}},{"uid":"4d3224a29e1cf62","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/4d3224a29e1cf62","status":"passed","time":{"start":1731953820781,"stop":1731953833059,"duration":12278}},{"uid":"7ebae3f72e5dbbb7","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/7ebae3f72e5dbbb7","status":"passed","time":{"start":1731921800025,"stop":1731921812324,"duration":12299}},{"uid":"7b835555ff60c9f7","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/7b835555ff60c9f7","status":"passed","time":{"start":1731921800025,"stop":1731921812324,"duration":12299}},{"uid":"af4cff180a00cba","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/af4cff180a00cba","status":"passed","time":{"start":1731904594447,"stop":1731904606697,"duration":12250}},{"uid":"bd1042d13ab45d96","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/bd1042d13ab45d96","status":"passed","time":{"start":1731711284148,"stop":1731711296491,"duration":12343}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"c8cf7162a176a434.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}