{"uid":"1fcfab8d1f359e2d","name":"test_logging","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.logging.pytest.test_sample#test_logging","historyId":"a3454c74416fe64989185d5a90a344cf","time":{"start":1732128063124,"stop":1732128063124,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_logging>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:63: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732128063126,"stop":1732128063127,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732128063127,"stop":1732128063127,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732128063128,"stop":1732128063129,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732128063128,"stop":1732128063128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732128063129,"stop":1732128063131,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732128063129,"stop":1732128063129,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732128063132,"stop":1732128063132,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732128063133,"stop":1732128063565,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732128063133,"stop":1732128063133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732128063566,"stop":1732128064561,"duration":995},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732128064562,"stop":1732128091258,"duration":26696},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732128091258,"stop":1732128111377,"duration":20119},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 63, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_logging>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:63: Failed","steps":[],"attachments":[{"uid":"500ba499774cadcd","name":"log","source":"500ba499774cadcd.txt","type":"text/plain","size":9473}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732128111699,"stop":1732128111711,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732128111713,"stop":1732128112100,"duration":387},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732128112102,"stop":1732128112104,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732128112109,"stop":1732128112109,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"bd396f05f591"},{"name":"thread","value":"509-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.logging.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":1,"skipped":0,"passed":22,"unknown":0,"total":29},"items":[{"uid":"a0cd6bc06e26b0b8","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/a0cd6bc06e26b0b8","status":"passed","time":{"start":1732126734336,"stop":1732126780509,"duration":46173}},{"uid":"ea3aa485a9e27639","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/ea3aa485a9e27639","status":"passed","time":{"start":1732049905007,"stop":1732049941176,"duration":36169}},{"uid":"312b27e2fb4c8fb8","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/312b27e2fb4c8fb8","status":"passed","time":{"start":1732049905007,"stop":1732049941176,"duration":36169}},{"uid":"cab4f8e78a6e0277","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/cab4f8e78a6e0277","status":"passed","time":{"start":1732049905007,"stop":1732049941176,"duration":36169}},{"uid":"50d53dcec6825638","reportUrl":"https://golioth.github.io/allure-reports/branch/1780//#testresult/50d53dcec6825638","status":"passed","time":{"start":1732033641801,"stop":1732033678834,"duration":37033}},{"uid":"5d08401596dffe33","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/5d08401596dffe33","status":"passed","time":{"start":1731972255946,"stop":1731972276372,"duration":20426}},{"uid":"9e13635c572c574a","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/9e13635c572c574a","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731964486798,"stop":1731964486798,"duration":0}},{"uid":"fe58fab1750d66ac","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/fe58fab1750d66ac","status":"passed","time":{"start":1731959455561,"stop":1731959500364,"duration":44803}},{"uid":"b5f0a3b57a1bffdc","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/b5f0a3b57a1bffdc","status":"passed","time":{"start":1731956454269,"stop":1731956489533,"duration":35264}},{"uid":"4a68af99ed6777db","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/4a68af99ed6777db","status":"passed","time":{"start":1731907783062,"stop":1731907822330,"duration":39268}},{"uid":"6b446cefd971373c","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/6b446cefd971373c","status":"passed","time":{"start":1731716408302,"stop":1731716447298,"duration":38996}},{"uid":"21da2a3dde052a16","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/21da2a3dde052a16","status":"passed","time":{"start":1731712516588,"stop":1731712556090,"duration":39502}},{"uid":"f980ada89a7a7e06","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/f980ada89a7a7e06","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731710045317,"stop":1731710138115,"duration":92798}},{"uid":"dbca66e3c245b75","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/dbca66e3c245b75","status":"passed","time":{"start":1731709509500,"stop":1731709529206,"duration":19706}},{"uid":"ddec3ca811ae21f1","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/ddec3ca811ae21f1","status":"passed","time":{"start":1731697489348,"stop":1731697530067,"duration":40719}},{"uid":"e4da2978a49265e0","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/e4da2978a49265e0","status":"passed","time":{"start":1731614804398,"stop":1731614824646,"duration":20248}},{"uid":"6aaf3c566088295","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/6aaf3c566088295","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731597222869,"stop":1731597222869,"duration":0}},{"uid":"c150a15a1c561275","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/c150a15a1c561275","status":"passed","time":{"start":1731549606261,"stop":1731549676731,"duration":70470}},{"uid":"b026a20c153e2323","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/b026a20c153e2323","status":"passed","time":{"start":1731544535650,"stop":1731544555251,"duration":19601}},{"uid":"75ea335a16b80db1","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/75ea335a16b80db1","status":"passed","time":{"start":1731541848526,"stop":1731541868574,"duration":20048}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"1fcfab8d1f359e2d.json","parameterValues":["'nrf9160dk'","'zephyr'"]}