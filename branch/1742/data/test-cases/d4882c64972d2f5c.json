{"uid":"d4882c64972d2f5c","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"86f2dfc420102ec387e85f21c8ed6fdf","time":{"start":1731611416794,"stop":1731611416794,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_stream>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731611416797,"stop":1731611416797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731611416798,"stop":1731611416798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731611416798,"stop":1731611416798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731611416799,"stop":1731611416800,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731611416799,"stop":1731611416799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731611416800,"stop":1731611416802,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731611416803,"stop":1731611416803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731611416803,"stop":1731611416803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731611416804,"stop":1731611417224,"duration":420},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731611417225,"stop":1731611418161,"duration":936},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731611418162,"stop":1731611435271,"duration":17109},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731611435272,"stop":1731611455300,"duration":20028},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_stream>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"a4c13937542dfd97","name":"log","source":"a4c13937542dfd97.txt","type":"text/plain","size":9865}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731611455643,"stop":1731611455646,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731611455648,"stop":1731611456088,"duration":440},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731611456091,"stop":1731611456093,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731611456098,"stop":1731611456098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"638fce049572"},{"name":"thread","value":"476-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":12,"unknown":0,"total":15},"items":[{"uid":"b9081d3ef8e830f4","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/b9081d3ef8e830f4","status":"passed","time":{"start":1731598688319,"stop":1731598713006,"duration":24687}},{"uid":"9c70f84e12e16124","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/9c70f84e12e16124","status":"passed","time":{"start":1731549323455,"stop":1731549344528,"duration":21073}},{"uid":"fe233d0df2c39892","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/fe233d0df2c39892","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731567138716,"stop":1731567138716,"duration":0}},{"uid":"884b7cb13b10d0d3","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/884b7cb13b10d0d3","status":"passed","time":{"start":1731543596806,"stop":1731543619651,"duration":22845}},{"uid":"859c74bc1ae47471","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/859c74bc1ae47471","status":"passed","time":{"start":1731540554893,"stop":1731540577720,"duration":22827}},{"uid":"2adbefc078250fff","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/2adbefc078250fff","status":"passed","time":{"start":1731538024594,"stop":1731538046724,"duration":22130}},{"uid":"ac4d1c74f9af950c","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/ac4d1c74f9af950c","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731537901779,"stop":1731537901779,"duration":0}},{"uid":"33eaf2b7a1d47799","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/33eaf2b7a1d47799","status":"passed","time":{"start":1731524013308,"stop":1731524037319,"duration":24011}},{"uid":"a9deb2eb3b4ad775","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/a9deb2eb3b4ad775","status":"passed","time":{"start":1731524013308,"stop":1731524037319,"duration":24011}},{"uid":"3be3fa2671f380bf","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/3be3fa2671f380bf","status":"passed","time":{"start":1731524013308,"stop":1731524037319,"duration":24011}},{"uid":"d5160b47c18c8fe8","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/d5160b47c18c8fe8","status":"passed","time":{"start":1731521259101,"stop":1731521282347,"duration":23246}},{"uid":"2d1ff0a549d21a50","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/2d1ff0a549d21a50","status":"passed","time":{"start":1731428433765,"stop":1731428456614,"duration":22849}},{"uid":"dbdaba33ec7b755","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/dbdaba33ec7b755","status":"passed","time":{"start":1731105146221,"stop":1731105169855,"duration":23634}},{"uid":"1ced70ef7267451f","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/1ced70ef7267451f","status":"passed","time":{"start":1731099167240,"stop":1731099188157,"duration":20917}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"d4882c64972d2f5c.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}