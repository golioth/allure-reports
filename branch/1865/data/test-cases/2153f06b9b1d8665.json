{
  "uid" : "2153f06b9b1d8665",
  "name" : "test_cancel_all",
  "fullName" : "tests.hil.tests.settings.test_settings#test_cancel_all",
  "historyId" : "e8bc3c3fa2678a21c5bea7f07fbc7b40",
  "time" : {
    "start" : 1733351360276,
    "stop" : 1733351401253,
    "duration" : 40977
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 241617.88354091477\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffffb9cef590>\ndevice = <golioth.golioth.Device object at 0xffffb9ce0b50>\n\n    async def test_cancel_all(board, device):\n        # Cancel all settings\n        await device.settings.set('TEST_CANCEL', True)\n    \n        assert None != await board.wait_for_regex_in_line('Cancelling settings', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Settings have been cancelled', timeout_s=10)\n    \n        # Check that we no longer receive this settings change\n        await device.settings.set('TEST_INT', 1337)\n    \n        with pytest.raises(trio.TooSlowError) as e:\n            assert None != await board.wait_for_regex_in_line('Received test_int', timeout_s=10)\n    \n        # Reset to expected value so we don't re-trigger test on settings registration\n        await device.settings.set('TEST_CANCEL', False)\n    \n        # Wait for device to automatically re-register all settings\n        assert None != await board.wait_for_regex_in_line('Settings have been reregistered', timeout_s=10)\n    \n        await device.settings.set('TEST_INT', 72)\n>       assert None != await board.wait_for_regex_in_line('Received test_int: 72', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:208: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 241617.88354091477\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "serial_number",
    "time" : {
      "start" : 1733351192435,
      "stop" : 1733351192435,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733351192438,
      "stop" : 1733351192846,
      "duration" : 408
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733351192430,
      "stop" : 1733351192431,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733351192432,
      "stop" : 1733351192432,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733351192437,
      "stop" : 1733351192437,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733351192436,
      "stop" : 1733351192436,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733351192847,
      "stop" : 1733351234729,
      "duration" : 41882
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733351192433,
      "stop" : 1733351192433,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733351192434,
      "stop" : 1733351192434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733351192435,
      "stop" : 1733351192435,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733351192436,
      "stop" : 1733351192436,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1733351235685,
      "stop" : 1733351265225,
      "duration" : 29540
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733351192437,
      "stop" : 1733351192437,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733351192432,
      "stop" : 1733351192433,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733351234731,
      "stop" : 1733351235684,
      "duration" : 953
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733351192434,
      "stop" : 1733351192434,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 241617.88354091477\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffffb9cef590>\ndevice = <golioth.golioth.Device object at 0xffffb9ce0b50>\n\n    async def test_cancel_all(board, device):\n        # Cancel all settings\n        await device.settings.set('TEST_CANCEL', True)\n    \n        assert None != await board.wait_for_regex_in_line('Cancelling settings', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Settings have been cancelled', timeout_s=10)\n    \n        # Check that we no longer receive this settings change\n        await device.settings.set('TEST_INT', 1337)\n    \n        with pytest.raises(trio.TooSlowError) as e:\n            assert None != await board.wait_for_regex_in_line('Received test_int', timeout_s=10)\n    \n        # Reset to expected value so we don't re-trigger test on settings registration\n        await device.settings.set('TEST_CANCEL', False)\n    \n        # Wait for device to automatically re-register all settings\n        assert None != await board.wait_for_regex_in_line('Settings have been reregistered', timeout_s=10)\n    \n        await device.settings.set('TEST_INT', 72)\n>       assert None != await board.wait_for_regex_in_line('Received test_int: 72', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:208: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 241617.88354091477\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "5671a07b34c48a03",
      "name" : "stdout",
      "source" : "5671a07b34c48a03.txt",
      "type" : "text/plain",
      "size" : 6624
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1733351435442,
      "stop" : 1733351435444,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1733351435438,
      "stop" : 1733351435440,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup::0",
    "time" : {
      "start" : 1733351434961,
      "stop" : 1733351434961,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733351434967,
      "stop" : 1733351435436,
      "duration" : 469
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_settings"
  }, {
    "name" : "host",
    "value" : "08aff9a34f79"
  }, {
    "name" : "thread",
    "value" : "286-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.settings.test_settings"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 18,
        "skipped" : 0,
        "passed" : 82,
        "unknown" : 0,
        "total" : 100
      },
      "items" : [ {
        "uid" : "d577d3e748374790",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1864/#testresult/d577d3e748374790",
        "status" : "broken",
        "statusDetails" : "httpx.ReadTimeout",
        "time" : {
          "start" : 1733327315690,
          "stop" : 1733327315690,
          "duration" : 0
        }
      }, {
        "uid" : "982860fb774cb05",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/982860fb774cb05",
        "status" : "passed",
        "time" : {
          "start" : 1733253056454,
          "stop" : 1733253093186,
          "duration" : 36732
        }
      }, {
        "uid" : "e555ac205ebb404",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/e555ac205ebb404",
        "status" : "passed",
        "time" : {
          "start" : 1733189448910,
          "stop" : 1733189481665,
          "duration" : 32755
        }
      }, {
        "uid" : "e4426273222a8789",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/e4426273222a8789",
        "status" : "passed",
        "time" : {
          "start" : 1732803187601,
          "stop" : 1732803221104,
          "duration" : 33503
        }
      }, {
        "uid" : "b9c8345df218e3e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/b9c8345df218e3e",
        "status" : "passed",
        "time" : {
          "start" : 1732749023226,
          "stop" : 1732749056725,
          "duration" : 33499
        }
      }, {
        "uid" : "7da8dccd764d4cea",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/7da8dccd764d4cea",
        "status" : "passed",
        "time" : {
          "start" : 1732728525310,
          "stop" : 1732728558845,
          "duration" : 33535
        }
      }, {
        "uid" : "a7236018953e860d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/a7236018953e860d",
        "status" : "passed",
        "time" : {
          "start" : 1732722811278,
          "stop" : 1732722846319,
          "duration" : 35041
        }
      }, {
        "uid" : "f4efeb6e78fc68ab",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/f4efeb6e78fc68ab",
        "status" : "passed",
        "time" : {
          "start" : 1732639869860,
          "stop" : 1732639903315,
          "duration" : 33455
        }
      }, {
        "uid" : "a48de65c6a7a869e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/a48de65c6a7a869e",
        "status" : "passed",
        "time" : {
          "start" : 1732630657914,
          "stop" : 1732630691266,
          "duration" : 33352
        }
      }, {
        "uid" : "6e04aa9ccb6b2bea",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/6e04aa9ccb6b2bea",
        "status" : "passed",
        "time" : {
          "start" : 1732565331724,
          "stop" : 1732565365098,
          "duration" : 33374
        }
      }, {
        "uid" : "13f27afebece8018",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/13f27afebece8018",
        "status" : "passed",
        "time" : {
          "start" : 1732559477002,
          "stop" : 1732559510379,
          "duration" : 33377
        }
      }, {
        "uid" : "2562313aff351fda",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/2562313aff351fda",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732553178518,
          "stop" : 1732553178518,
          "duration" : 0
        }
      }, {
        "uid" : "8382d00a3e6c79f2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/8382d00a3e6c79f2",
        "status" : "passed",
        "time" : {
          "start" : 1732551208137,
          "stop" : 1732551241575,
          "duration" : 33438
        }
      }, {
        "uid" : "fdc007f506d4e430",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/fdc007f506d4e430",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732508492727,
          "stop" : 1732508492727,
          "duration" : 0
        }
      }, {
        "uid" : "aacd9b7b56b874e5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/aacd9b7b56b874e5",
        "status" : "passed",
        "time" : {
          "start" : 1732312134827,
          "stop" : 1732312168298,
          "duration" : 33471
        }
      }, {
        "uid" : "fe20e8a0f8d0d9a9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/fe20e8a0f8d0d9a9",
        "status" : "passed",
        "time" : {
          "start" : 1732312134827,
          "stop" : 1732312168298,
          "duration" : 33471
        }
      }, {
        "uid" : "fa829f3170a553ca",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/fa829f3170a553ca",
        "status" : "passed",
        "time" : {
          "start" : 1732312134827,
          "stop" : 1732312168298,
          "duration" : 33471
        }
      }, {
        "uid" : "b70b4bc07aed1eb6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/b70b4bc07aed1eb6",
        "status" : "passed",
        "time" : {
          "start" : 1732312134827,
          "stop" : 1732312168298,
          "duration" : 33471
        }
      }, {
        "uid" : "fba246efda230d6a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/fba246efda230d6a",
        "status" : "passed",
        "time" : {
          "start" : 1732301380425,
          "stop" : 1732301413846,
          "duration" : 33421
        }
      }, {
        "uid" : "c47c06b20452ed73",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/c47c06b20452ed73",
        "status" : "passed",
        "time" : {
          "start" : 1732301380425,
          "stop" : 1732301413846,
          "duration" : 33421
        }
      } ]
    },
    "tags" : [ "anyio", "mikes_testbench", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "2153f06b9b1d8665.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}