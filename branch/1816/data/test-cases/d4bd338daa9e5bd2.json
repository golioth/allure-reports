{"uid":"d4bd338daa9e5bd2","name":"test_lightdb_set","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample#test_lightdb_set","historyId":"c3c56fd394e8a51c6a7b951f90915fb9","time":{"start":1732221283948,"stop":1732221283948,"duration":0},"status":"broken","statusMessage":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'","statusTrace":"self = Serial<id=0xffff82183280, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n>           self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\nE           FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n\n/usr/local/lib/python3.11/dist-packages/serial/serialposix.py:322: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_lightdb_set>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:62: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:85: in launch\n    self.connect(retry_s = 10)\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:116: in connect\n    self._connect_device()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:142: in _connect_device\n    self._serial_connection = serial.Serial(\n/usr/local/lib/python3.11/dist-packages/serial/serialutil.py:244: in __init__\n    self.open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Serial<id=0xffff82183280, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n            self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n        except OSError as msg:\n            self.fd = None\n>           raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\nE           serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n\n/usr/local/lib/python3.11/dist-packages/serial/serialposix.py:325: SerialException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_ssid","time":{"start":1732221283951,"stop":1732221283952,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1732221283951,"stop":1732221283951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732221283952,"stop":1732221283952,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732221283953,"stop":1732221283953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732221283953,"stop":1732221283953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732221283954,"stop":1732221283956,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732221283956,"stop":1732221283957,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732221283957,"stop":1732221283957,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732221283958,"stop":1732221284450,"duration":492},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732221284450,"stop":1732221285327,"duration":877},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732221285328,"stop":1732221299061,"duration":13733},"status":"broken","statusMessage":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 62, in dut\n    device_object.launch()\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py\", line 85, in launch\n    self.connect(retry_s = 10)\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py\", line 116, in connect\n    self._connect_device()\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py\", line 142, in _connect_device\n    self._serial_connection = serial.Serial(\n                              ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/serial/serialutil.py\", line 244, in __init__\n    self.open()\n  File \"/usr/local/lib/python3.11/dist-packages/serial/serialposix.py\", line 325, in open\n    raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'","statusTrace":"self = Serial<id=0xffff82183280, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n>           self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\nE           FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n\n/usr/local/lib/python3.11/dist-packages/serial/serialposix.py:322: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_lightdb_set>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:62: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:85: in launch\n    self.connect(retry_s = 10)\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:116: in connect\n    self._connect_device()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:142: in _connect_device\n    self._serial_connection = serial.Serial(\n/usr/local/lib/python3.11/dist-packages/serial/serialutil.py:244: in __init__\n    self.open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Serial<id=0xffff82183280, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n            self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n        except OSError as msg:\n            self.fd = None\n>           raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\nE           serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n\n/usr/local/lib/python3.11/dist-packages/serial/serialposix.py:325: SerialException","steps":[],"attachments":[{"uid":"37c91745664b7b56","name":"log","source":"37c91745664b7b56.txt","type":"text/plain","size":186220}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1732221299548,"stop":1732221299936,"duration":388},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732221299938,"stop":1732221299940,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732221299945,"stop":1732221299945,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"20fa28f02b76"},{"name":"thread","value":"396-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":55,"unknown":0,"total":67},"items":[{"uid":"e0255a69f49f39ba","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/e0255a69f49f39ba","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732217441242,"stop":1732217534422,"duration":93180}},{"uid":"f9ff3e6967633a93","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/f9ff3e6967633a93","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732211801982,"stop":1732211895077,"duration":93095}},{"uid":"22e9b780d2e6069c","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/22e9b780d2e6069c","status":"passed","time":{"start":1732210408450,"stop":1732210461826,"duration":53376}},{"uid":"3a197215d524e92f","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/3a197215d524e92f","status":"passed","time":{"start":1732209131735,"stop":1732209188779,"duration":57044}},{"uid":"686f958baaf8e2c8","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/686f958baaf8e2c8","status":"passed","time":{"start":1732205774567,"stop":1732205828278,"duration":53711}},{"uid":"de3f5a8c2031d266","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/de3f5a8c2031d266","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732203049117,"stop":1732203142248,"duration":93131}},{"uid":"35878c94b21bb204","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/35878c94b21bb204","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732201195812,"stop":1732201288957,"duration":93145}},{"uid":"7ea75e75f99feccc","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/7ea75e75f99feccc","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732199479514,"stop":1732199572616,"duration":93102}},{"uid":"1148faa80137ed8b","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/1148faa80137ed8b","status":"passed","time":{"start":1732197513403,"stop":1732197567352,"duration":53949}},{"uid":"d51c4f1f8dcef4f0","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/d51c4f1f8dcef4f0","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732193983138,"stop":1732194076239,"duration":93101}},{"uid":"e51bde3dcd7facb3","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/e51bde3dcd7facb3","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732192332515,"stop":1732192425547,"duration":93032}},{"uid":"62407e5e191189a","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/62407e5e191189a","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732187714749,"stop":1732187807792,"duration":93043}},{"uid":"868e286b31591e0d","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/868e286b31591e0d","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732185747253,"stop":1732185840384,"duration":93131}},{"uid":"2b17a744b2b293db","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/2b17a744b2b293db","status":"passed","time":{"start":1732142821116,"stop":1732142877740,"duration":56624}},{"uid":"c62a37f7eb574db8","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/c62a37f7eb574db8","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732149134121,"stop":1732149227256,"duration":93135}},{"uid":"ccbb15846cdea0af","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/ccbb15846cdea0af","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732147056659,"stop":1732147149896,"duration":93237}},{"uid":"6f626b53ce83b1ad","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/6f626b53ce83b1ad","status":"passed","time":{"start":1732144565841,"stop":1732144620424,"duration":54583}},{"uid":"e8b7d22ccd45203f","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/e8b7d22ccd45203f","status":"passed","time":{"start":1732142821116,"stop":1732142877740,"duration":56624}},{"uid":"b568eb86d6cf78c5","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/b568eb86d6cf78c5","status":"passed","time":{"start":1732134771068,"stop":1732134826627,"duration":55559}},{"uid":"a2df7fbe5706ece4","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/a2df7fbe5706ece4","status":"passed","time":{"start":1732044597160,"stop":1732044651704,"duration":54544}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"d4bd338daa9e5bd2.json","parameterValues":["'rak5010'","'zephyr'"]}