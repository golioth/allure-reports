{"uid":"7de255d34da5131a","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1737540423959,"stop":1737540469066,"duration":45107},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff7f8fba10>\ndevice = <golioth.golioth.Device object at 0xffff7f8d1dd0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1737540409290,"stop":1737540409291,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737540409291,"stop":1737540409291,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737540409292,"stop":1737540409292,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737540409292,"stop":1737540409292,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1737540409293,"stop":1737540409295,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1737540409293,"stop":1737540409293,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737540409296,"stop":1737540409296,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737540409297,"stop":1737540409297,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737540409297,"stop":1737540409709,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737540409710,"stop":1737540410533,"duration":823},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1737540410534,"stop":1737540423325,"duration":12791},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1737540423326,"stop":1737540423956,"duration":630},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff7f8fba10>\ndevice = <golioth.golioth.Device object at 0xffff7f8d1dd0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"b9ad3fd184cffb52","name":"log","source":"b9ad3fd184cffb52.txt","type":"text/plain","size":30420}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1737540469366,"stop":1737540469534,"duration":168},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737540469535,"stop":1737540469932,"duration":397},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737540469935,"stop":1737540469937,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1737540469942,"stop":1737540469942,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"3c0273fc1b2c"},{"name":"thread","value":"582-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1831b134f3937b3b","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1737492499529,"stop":1737492542922,"duration":43393}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":47,"unknown":0,"total":55},"items":[{"uid":"6d9c5dbccd08c619","reportUrl":"https://golioth.github.io/allure-reports/branch/84//#testresult/6d9c5dbccd08c619","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1737492499529,"stop":1737492542922,"duration":43393}},{"uid":"27fff3b6491fcf66","reportUrl":"https://golioth.github.io/allure-reports/branch/83//#testresult/27fff3b6491fcf66","status":"passed","time":{"start":1737491261758,"stop":1737491302701,"duration":40943}},{"uid":"da2ed0e2ccf2834f","reportUrl":"https://golioth.github.io/allure-reports/branch/77//#testresult/da2ed0e2ccf2834f","status":"passed","time":{"start":1737060149110,"stop":1737060189560,"duration":40450}},{"uid":"42f58c8de59f9fce","reportUrl":"https://golioth.github.io/allure-reports/branch/77//#testresult/42f58c8de59f9fce","status":"passed","time":{"start":1737060149110,"stop":1737060189560,"duration":40450}},{"uid":"db03450049fa8909","reportUrl":"https://golioth.github.io/allure-reports/branch/66//#testresult/db03450049fa8909","status":"passed","time":{"start":1736981270586,"stop":1736981310731,"duration":40145}},{"uid":"3f756f3e871d6ee1","reportUrl":"https://golioth.github.io/allure-reports/branch/74//#testresult/3f756f3e871d6ee1","status":"passed","time":{"start":1737020797890,"stop":1737020839055,"duration":41165}},{"uid":"71ebb79662c4b590","reportUrl":"https://golioth.github.io/allure-reports/branch/73//#testresult/71ebb79662c4b590","status":"passed","time":{"start":1737019767756,"stop":1737019807558,"duration":39802}},{"uid":"eda1eac3c0ff1e93","reportUrl":"https://golioth.github.io/allure-reports/branch/66//#testresult/eda1eac3c0ff1e93","status":"passed","time":{"start":1736981270586,"stop":1736981310731,"duration":40145}},{"uid":"5710b552d44248c2","reportUrl":"https://golioth.github.io/allure-reports/branch/65//#testresult/5710b552d44248c2","status":"passed","time":{"start":1736980328331,"stop":1736980369488,"duration":41157}},{"uid":"a250ec8f2add0aed","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/a250ec8f2add0aed","status":"passed","time":{"start":1736964101941,"stop":1736964143608,"duration":41667}},{"uid":"f3611fff3dc5e5ce","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/f3611fff3dc5e5ce","status":"passed","time":{"start":1736964101941,"stop":1736964143608,"duration":41667}},{"uid":"c15786cf50f22438","reportUrl":"https://golioth.github.io/allure-reports/branch/63//#testresult/c15786cf50f22438","status":"passed","time":{"start":1736971876498,"stop":1736971916873,"duration":40375}},{"uid":"ba961ebcb4b67617","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/ba961ebcb4b67617","status":"passed","time":{"start":1736964101941,"stop":1736964143608,"duration":41667}},{"uid":"d73f75cf389b5fd2","reportUrl":"https://golioth.github.io/allure-reports/branch/51//#testresult/d73f75cf389b5fd2","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1736583063974,"stop":1736583107560,"duration":43586}},{"uid":"8d123ede184d590b","reportUrl":"https://golioth.github.io/allure-reports/branch/47//#testresult/8d123ede184d590b","status":"passed","time":{"start":1736530727313,"stop":1736530767534,"duration":40221}},{"uid":"2c0cb2845f1b07ef","reportUrl":"https://golioth.github.io/allure-reports/branch/46//#testresult/2c0cb2845f1b07ef","status":"passed","time":{"start":1736526724479,"stop":1736526765696,"duration":41217}},{"uid":"4c7015048e6542a","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/4c7015048e6542a","status":"passed","time":{"start":1736446203915,"stop":1736446243457,"duration":39542}},{"uid":"9a0bc66a89b8121a","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/9a0bc66a89b8121a","status":"passed","time":{"start":1736440944725,"stop":1736440987986,"duration":43261}},{"uid":"6554b7c69d47d167","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/6554b7c69d47d167","status":"passed","time":{"start":1736446203915,"stop":1736446243457,"duration":39542}},{"uid":"cba2a10b0fe15d3e","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/cba2a10b0fe15d3e","status":"passed","time":{"start":1736440944725,"stop":1736440987986,"duration":43261}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"7de255d34da5131a.json","parameterValues":["'rak5010'","'zephyr'"]}