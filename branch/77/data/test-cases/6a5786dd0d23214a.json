{"uid":"6a5786dd0d23214a","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"467e555cbdae75d46aefa9c64cb6440a","time":{"start":1737060325523,"stop":1737060379507,"duration":53984},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff9c197950>\ndevice = <golioth.golioth.Device object at 0xffff9c170c50>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1737060288779,"stop":1737060288779,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737060288780,"stop":1737060288780,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737060288781,"stop":1737060288781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737060288781,"stop":1737060288781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1737060288782,"stop":1737060288784,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1737060288782,"stop":1737060288782,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737060288785,"stop":1737060288785,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737060288786,"stop":1737060289257,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737060288786,"stop":1737060288786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737060289257,"stop":1737060290119,"duration":862},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1737060290120,"stop":1737060324915,"duration":34795},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1737060324915,"stop":1737060325520,"duration":605},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff9c197950>\ndevice = <golioth.golioth.Device object at 0xffff9c170c50>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"b1611d56f3de81d0","name":"log","source":"b1611d56f3de81d0.txt","type":"text/plain","size":30408}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1737060379674,"stop":1737060379681,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737060379685,"stop":1737060380072,"duration":387},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737060380074,"stop":1737060380076,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1737060380081,"stop":1737060380082,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"a691b05d9e26"},{"name":"thread","value":"608-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"32aa0ba7ed0a2513","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1737060230577,"stop":1737060284590,"duration":54013}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":49,"unknown":0,"total":51},"items":[{"uid":"45753d82baa9f3d","reportUrl":"https://golioth.github.io/allure-reports/branch/66//#testresult/45753d82baa9f3d","status":"passed","time":{"start":1736981198485,"stop":1736981251684,"duration":53199}},{"uid":"af7bd1819f0219b5","reportUrl":"https://golioth.github.io/allure-reports/branch/74//#testresult/af7bd1819f0219b5","status":"passed","time":{"start":1737020973997,"stop":1737021027840,"duration":53843}},{"uid":"8405a3191a67c710","reportUrl":"https://golioth.github.io/allure-reports/branch/73//#testresult/8405a3191a67c710","status":"passed","time":{"start":1737019695805,"stop":1737019749011,"duration":53206}},{"uid":"a71406b2985ff78e","reportUrl":"https://golioth.github.io/allure-reports/branch/66//#testresult/a71406b2985ff78e","status":"passed","time":{"start":1736981198485,"stop":1736981251684,"duration":53199}},{"uid":"a752549b2f5b4c1e","reportUrl":"https://golioth.github.io/allure-reports/branch/65//#testresult/a752549b2f5b4c1e","status":"passed","time":{"start":1736980231553,"stop":1736980286567,"duration":55014}},{"uid":"6beae148d8a21bbc","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/6beae148d8a21bbc","status":"passed","time":{"start":1736964006277,"stop":1736964060207,"duration":53930}},{"uid":"cbc33e4d96888b0b","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/cbc33e4d96888b0b","status":"passed","time":{"start":1736964006277,"stop":1736964060207,"duration":53930}},{"uid":"dd0cc1ca1dc52c14","reportUrl":"https://golioth.github.io/allure-reports/branch/63//#testresult/dd0cc1ca1dc52c14","status":"passed","time":{"start":1736971958141,"stop":1736972012126,"duration":53985}},{"uid":"3b22b06628e54651","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/3b22b06628e54651","status":"passed","time":{"start":1736964006277,"stop":1736964060207,"duration":53930}},{"uid":"4cd988a40c31ca6e","reportUrl":"https://golioth.github.io/allure-reports/branch/51//#testresult/4cd988a40c31ca6e","status":"passed","time":{"start":1736583623555,"stop":1736583676914,"duration":53359}},{"uid":"864503f480cb9d23","reportUrl":"https://golioth.github.io/allure-reports/branch/47//#testresult/864503f480cb9d23","status":"passed","time":{"start":1736530630776,"stop":1736530684447,"duration":53671}},{"uid":"18179d35d1b6db2a","reportUrl":"https://golioth.github.io/allure-reports/branch/46//#testresult/18179d35d1b6db2a","status":"passed","time":{"start":1736526629781,"stop":1736526683196,"duration":53415}},{"uid":"64b528e77e8d9bd7","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/64b528e77e8d9bd7","status":"passed","time":{"start":1736446131668,"stop":1736446184787,"duration":53119}},{"uid":"d5ef83b9c891046","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/d5ef83b9c891046","status":"passed","time":{"start":1736441029520,"stop":1736441083433,"duration":53913}},{"uid":"f9c7052e1460db1","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/f9c7052e1460db1","status":"passed","time":{"start":1736446131668,"stop":1736446184787,"duration":53119}},{"uid":"14c76ec27a5c79aa","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/14c76ec27a5c79aa","status":"passed","time":{"start":1736441029520,"stop":1736441083433,"duration":53913}},{"uid":"35e6f1614bbaecd0","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/35e6f1614bbaecd0","status":"passed","time":{"start":1736433257650,"stop":1736433310642,"duration":52992}},{"uid":"ddd013d2239c90e","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/ddd013d2239c90e","status":"passed","time":{"start":1736433257650,"stop":1736433310642,"duration":52992}},{"uid":"3451afb8a36c83e3","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/3451afb8a36c83e3","status":"passed","time":{"start":1736380713969,"stop":1736380766842,"duration":52873}},{"uid":"30a7af8a79821f2a","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/30a7af8a79821f2a","status":"passed","time":{"start":1736377227978,"stop":1736377281866,"duration":53888}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"6a5786dd0d23214a.json","parameterValues":["'rak5010'","'zephyr'"]}