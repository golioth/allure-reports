{
  "uid" : "ab77618e7346e66e",
  "name" : "test_block_upload",
  "fullName" : "tests.hil.tests.stream.test_stream#test_block_upload",
  "historyId" : "d300df617748e634b88d1d031b16a08f",
  "time" : {
    "start" : 1734126914299,
    "stop" : 1734126914299,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 59793.445796765314\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffff8cbed650>\ndevice = <golioth.golioth.Device object at 0xffff8cc64550>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/stream/test_stream.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 59793.445796765314\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "port",
    "time" : {
      "start" : 1734126914304,
      "stop" : 1734126914305,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1734126934903,
      "stop" : 1734127055348,
      "duration" : 120445
    },
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/stream/test_stream.py\", line 18, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1734126914305,
      "stop" : 1734126914305,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734126914309,
      "stop" : 1734126914309,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734126914303,
      "stop" : 1734126914303,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734126914309,
      "stop" : 1734126914309,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1734126914303,
      "stop" : 1734126914304,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1734126914307,
      "stop" : 1734126914307,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1734126914310,
      "stop" : 1734126933379,
      "duration" : 19069
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734126914306,
      "stop" : 1734126914307,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734126933381,
      "stop" : 1734126933917,
      "duration" : 536
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734126914308,
      "stop" : 1734126914308,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734126914306,
      "stop" : 1734126914306,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734126933917,
      "stop" : 1734126934903,
      "duration" : 986
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1734126914308,
      "stop" : 1734126914308,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1734126914307,
      "stop" : 1734126914307,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 59793.445796765314\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffff8cbed650>\ndevice = <golioth.golioth.Device object at 0xffff8cc64550>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/stream/test_stream.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 59793.445796765314\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "75d2806bdf64b10f",
      "name" : "stdout",
      "source" : "75d2806bdf64b10f.txt",
      "type" : "text/plain",
      "size" : 4689
    }, {
      "uid" : "de0cd0a1baec8a26",
      "name" : "stderr",
      "source" : "de0cd0a1baec8a26.txt",
      "type" : "text/plain",
      "size" : 252
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1734127056325,
      "stop" : 1734127056368,
      "duration" : 43
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1734127056323,
      "stop" : 1734127056323,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1734127055892,
      "stop" : 1734127056321,
      "duration" : 429
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_stream"
  }, {
    "name" : "host",
    "value" : "ea22af651408"
  }, {
    "name" : "thread",
    "value" : "303-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.stream.test_stream"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 10,
        "skipped" : 0,
        "passed" : 12,
        "unknown" : 0,
        "total" : 22
      },
      "items" : [ {
        "uid" : "be291d5d06878c7b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1928/#testresult/be291d5d06878c7b",
        "status" : "passed",
        "time" : {
          "start" : 1734047190647,
          "stop" : 1734047200285,
          "duration" : 9638
        }
      }, {
        "uid" : "d7f67a6e6db5e5e9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1927/#testresult/d7f67a6e6db5e5e9",
        "status" : "passed",
        "time" : {
          "start" : 1734044191767,
          "stop" : 1734044201355,
          "duration" : 9588
        }
      }, {
        "uid" : "732157e5b92c89a9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1921/#testresult/732157e5b92c89a9",
        "status" : "passed",
        "time" : {
          "start" : 1734028186838,
          "stop" : 1734028196422,
          "duration" : 9584
        }
      }, {
        "uid" : "c7c3269e99b27a0e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/c7c3269e99b27a0e",
        "status" : "passed",
        "time" : {
          "start" : 1734022164797,
          "stop" : 1734022174404,
          "duration" : 9607
        }
      }, {
        "uid" : "ab419693eab109fa",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/ab419693eab109fa",
        "status" : "passed",
        "time" : {
          "start" : 1734019969551,
          "stop" : 1734019979106,
          "duration" : 9555
        }
      }, {
        "uid" : "89cc131e9235263f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/89cc131e9235263f",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733982874152,
          "stop" : 1733982874152,
          "duration" : 0
        }
      }, {
        "uid" : "adbe6ae0f5c99201",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/adbe6ae0f5c99201",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733960260618,
          "stop" : 1733960260618,
          "duration" : 0
        }
      }, {
        "uid" : "c449963316894cad",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/c449963316894cad",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733956945644,
          "stop" : 1733956945644,
          "duration" : 0
        }
      }, {
        "uid" : "d8b12c3eb4a73",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1900/#testresult/d8b12c3eb4a73",
        "status" : "passed",
        "time" : {
          "start" : 1733945767592,
          "stop" : 1733945777265,
          "duration" : 9673
        }
      }, {
        "uid" : "e553e2c3ab95db8d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1899/#testresult/e553e2c3ab95db8d",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733944882717,
          "stop" : 1733944882717,
          "duration" : 0
        }
      }, {
        "uid" : "5b540b0c5ffbb1b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1898/#testresult/5b540b0c5ffbb1b",
        "status" : "passed",
        "time" : {
          "start" : 1733940323664,
          "stop" : 1733940333311,
          "duration" : 9647
        }
      }, {
        "uid" : "d6cbb19976594823",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/d6cbb19976594823",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733938628190,
          "stop" : 1733938628190,
          "duration" : 0
        }
      }, {
        "uid" : "13211d785d5582bf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/13211d785d5582bf",
        "status" : "passed",
        "time" : {
          "start" : 1733933807143,
          "stop" : 1733933815634,
          "duration" : 8491
        }
      }, {
        "uid" : "1caf0c44595c447d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/1caf0c44595c447d",
        "status" : "broken",
        "statusDetails" : "httpx.ConnectTimeout",
        "time" : {
          "start" : 1733931382351,
          "stop" : 1733931382351,
          "duration" : 0
        }
      }, {
        "uid" : "99536c092f1aa61",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/99536c092f1aa61",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733888230721,
          "stop" : 1733888230721,
          "duration" : 0
        }
      }, {
        "uid" : "63cbd1e34d9efc0a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/63cbd1e34d9efc0a",
        "status" : "passed",
        "time" : {
          "start" : 1733885710705,
          "stop" : 1733885720374,
          "duration" : 9669
        }
      }, {
        "uid" : "98d56c57d16b6038",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1892/#testresult/98d56c57d16b6038",
        "status" : "passed",
        "time" : {
          "start" : 1733874028609,
          "stop" : 1733874038307,
          "duration" : 9698
        }
      }, {
        "uid" : "281db9da4b2eb76b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1893/#testresult/281db9da4b2eb76b",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733873852974,
          "stop" : 1733873852974,
          "duration" : 0
        }
      }, {
        "uid" : "b81fc826abae740e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1887/#testresult/b81fc826abae740e",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733863017129,
          "stop" : 1733863017129,
          "duration" : 0
        }
      }, {
        "uid" : "4db6794ebbbb9f19",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1888/#testresult/4db6794ebbbb9f19",
        "status" : "passed",
        "time" : {
          "start" : 1733863243425,
          "stop" : 1733863252079,
          "duration" : 8654
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "ab77618e7346e66e.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}