{"uid":"3efc532dd939acfc","name":"test_many_args","fullName":"tests.hil.tests.rpc.test_rpc#test_many_args","historyId":"8434800bfcabc04f3e59c72cefb707fd","time":{"start":1736431590875,"stop":1736431596217,"duration":5342},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff8b39c350>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff8b339f50>\ndevice = <golioth.golioth.Device object at 0xffff8b385410>\n\n    async def test_many_args(board, device):\n>       await device.rpc.no_response(1,2,3,4,5,6,7,8,9)\n\ntests/hil/tests/rpc/test_rpc.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff8b39c350>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1736431531804,"stop":1736431531804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1736431531805,"stop":1736431531805,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1736431531806,"stop":1736431531806,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1736431531807,"stop":1736431531807,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736431531808,"stop":1736431531808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736431531809,"stop":1736431531809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1736431531810,"stop":1736431531811,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1736431531810,"stop":1736431531810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1736431531811,"stop":1736431531811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736431531812,"stop":1736431531813,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736431531812,"stop":1736431531812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736431531813,"stop":1736431532463,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736431531813,"stop":1736431531813,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1736431532464,"stop":1736431573958,"duration":41494},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736431573959,"stop":1736431574864,"duration":905},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736431574864,"stop":1736431582497,"duration":7633},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1736431671842,"stop":1736431671842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1736431671847,"stop":1736431672354,"duration":507},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1736431672356,"stop":1736431672358,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736431672360,"stop":1736431672363,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"6eacb74606d9"},{"name":"thread","value":"236-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":32,"unknown":0,"total":33},"items":[{"uid":"139ebf27f2c8c683","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/139ebf27f2c8c683","status":"passed","time":{"start":1736379821268,"stop":1736379822899,"duration":1631}},{"uid":"b9c9b826ae45e668","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/b9c9b826ae45e668","status":"passed","time":{"start":1736376398820,"stop":1736376401176,"duration":2356}},{"uid":"ef7711c3afa0575c","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/ef7711c3afa0575c","status":"passed","time":{"start":1736376087193,"stop":1736376088764,"duration":1571}},{"uid":"1b1d56daa70e4e9f","reportUrl":"https://golioth.github.io/allure-reports/branch/5/#testresult/1b1d56daa70e4e9f","status":"passed","time":{"start":1736352315255,"stop":1736352316859,"duration":1604}},{"uid":"6bead3ba5f67d838","reportUrl":"https://golioth.github.io/allure-reports/branch/4/#testresult/6bead3ba5f67d838","status":"passed","time":{"start":1736350323589,"stop":1736350325153,"duration":1564}},{"uid":"653804eb9e46d420","reportUrl":"https://golioth.github.io/allure-reports/branch/29/#testresult/653804eb9e46d420","status":"passed","time":{"start":1736358131259,"stop":1736358134349,"duration":3090}},{"uid":"1abd7279452dc136","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/1abd7279452dc136","status":"passed","time":{"start":1736281804429,"stop":1736281806045,"duration":1616}},{"uid":"4ab8dbf8c7093fc5","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/4ab8dbf8c7093fc5","status":"passed","time":{"start":1736280759733,"stop":1736280761321,"duration":1588}},{"uid":"3008e0c1d2187ab5","reportUrl":"https://golioth.github.io/allure-reports/branch/25//#testresult/3008e0c1d2187ab5","status":"passed","time":{"start":1736275194460,"stop":1736275196082,"duration":1622}},{"uid":"eb86235b2860a80a","reportUrl":"https://golioth.github.io/allure-reports/branch/24/#testresult/eb86235b2860a80a","status":"passed","time":{"start":1736268913227,"stop":1736268914947,"duration":1720}},{"uid":"df49d80aac8e57c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1/#testresult/df49d80aac8e57c9","status":"passed","time":{"start":1736222126905,"stop":1736222128549,"duration":1644}},{"uid":"f9f39aa3f11b02ba","reportUrl":"https://golioth.github.io/allure-reports/branch/20/#testresult/f9f39aa3f11b02ba","status":"passed","time":{"start":1736218328552,"stop":1736218330242,"duration":1690}},{"uid":"dcfa1f3608a09dbb","reportUrl":"https://golioth.github.io/allure-reports/branch/20/#testresult/dcfa1f3608a09dbb","status":"passed","time":{"start":1736205108999,"stop":1736205110674,"duration":1675}},{"uid":"70e532dc25cc16e8","reportUrl":"https://golioth.github.io/allure-reports/branch/13/#testresult/70e532dc25cc16e8","status":"passed","time":{"start":1735944612814,"stop":1735944614949,"duration":2135}},{"uid":"79627365509d43e","reportUrl":"https://golioth.github.io/allure-reports/branch/10/#testresult/79627365509d43e","status":"passed","time":{"start":1735924206160,"stop":1735924207759,"duration":1599}},{"uid":"67cc1e0c6278accf","reportUrl":"https://golioth.github.io/allure-reports/branch/12/#testresult/67cc1e0c6278accf","status":"passed","time":{"start":1735930395572,"stop":1735930397276,"duration":1704}},{"uid":"3403ce1a33efc3a9","reportUrl":"https://golioth.github.io/allure-reports/branch/10/#testresult/3403ce1a33efc3a9","status":"passed","time":{"start":1735924206160,"stop":1735924207759,"duration":1599}},{"uid":"ad290c24c482c32a","reportUrl":"https://golioth.github.io/allure-reports/branch/9/#testresult/ad290c24c482c32a","status":"passed","time":{"start":1735922017558,"stop":1735922020384,"duration":2826}},{"uid":"6e59a6136b2196e","reportUrl":"https://golioth.github.io/allure-reports/branch/5/#testresult/6e59a6136b2196e","status":"passed","time":{"start":1735858535238,"stop":1735858536916,"duration":1678}},{"uid":"91de23a0936035f7","reportUrl":"https://golioth.github.io/allure-reports/branch/4/#testresult/91de23a0936035f7","status":"passed","time":{"start":1735855909849,"stop":1735855911442,"duration":1593}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"3efc532dd939acfc.json","parameterValues":["'rak5010'","'zephyr'"]}