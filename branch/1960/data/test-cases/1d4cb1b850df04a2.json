{
  "uid" : "1d4cb1b850df04a2",
  "name" : "test_not_registered",
  "fullName" : "tests.hil.tests.rpc.test_rpc#test_not_registered",
  "historyId" : "215a700f2125a96b26a9aa7e0a996f4a",
  "time" : {
    "start" : 1734607154710,
    "stop" : 1734607160139,
    "duration" : 5429
  },
  "status" : "broken",
  "statusMessage" : "golioth.golioth.RPCTimeout: RPC timeout",
  "statusTrace" : "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff9988d090>\nmethod = 'not_registered', params = ([],)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff998c0e10>\ndevice = <golioth.golioth.Device object at 0xffff9988e510>\n\n    async def test_not_registered(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           await device.rpc.not_registered([])\n\ntests/hil/tests/rpc/test_rpc.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff9988d090>\nmethod = 'not_registered', params = ([],)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "device",
    "time" : {
      "start" : 1734607124261,
      "stop" : 1734607125263,
      "duration" : 1002
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1734607104430,
      "stop" : 1734607104430,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734607104429,
      "stop" : 1734607104429,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1734607104426,
      "stop" : 1734607104426,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1734607104429,
      "stop" : 1734607104429,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734607104431,
      "stop" : 1734607104431,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734607104425,
      "stop" : 1734607104425,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "port",
    "time" : {
      "start" : 1734607104427,
      "stop" : 1734607104427,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734607104428,
      "stop" : 1734607104428,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734607104431,
      "stop" : 1734607104431,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1734607104430,
      "stop" : 1734607104430,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734607104432,
      "stop" : 1734607105119,
      "duration" : 687
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "board",
    "time" : {
      "start" : 1734607105119,
      "stop" : 1734607124259,
      "duration" : 19140
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1734607125263,
      "stop" : 1734607154702,
      "duration" : 29439
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734607104430,
      "stop" : 1734607104431,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1734607104427,
      "stop" : 1734607104428,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "golioth.golioth.RPCTimeout: RPC timeout",
    "statusTrace" : "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff9988d090>\nmethod = 'not_registered', params = ([],)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff998c0e10>\ndevice = <golioth.golioth.Device object at 0xffff9988e510>\n\n    async def test_not_registered(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           await device.rpc.not_registered([])\n\ntests/hil/tests/rpc/test_rpc.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff9988d090>\nmethod = 'not_registered', params = ([],)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "43636b117b6731e7",
      "name" : "stdout",
      "source" : "43636b117b6731e7.txt",
      "type" : "text/plain",
      "size" : 3153
    }, {
      "uid" : "4c1d0b57009b6c00",
      "name" : "stderr",
      "source" : "4c1d0b57009b6c00.txt",
      "type" : "text/plain",
      "size" : 252
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 2
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1734607210812,
      "stop" : 1734607211182,
      "duration" : 370
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1734607211196,
      "stop" : 1734607211199,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1734607211184,
      "stop" : 1734607211194,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  }, {
    "name" : "setup::0",
    "time" : {
      "start" : 1734607210810,
      "stop" : 1734607210810,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_rpc"
  }, {
    "name" : "host",
    "value" : "58af4e9e13e2"
  }, {
    "name" : "thread",
    "value" : "238-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.rpc.test_rpc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 14,
        "skipped" : 0,
        "passed" : 20,
        "unknown" : 0,
        "total" : 34
      },
      "items" : [ {
        "uid" : "589c98187e4ecbf4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1958/#testresult/589c98187e4ecbf4",
        "status" : "passed",
        "time" : {
          "start" : 1734587771841,
          "stop" : 1734587772751,
          "duration" : 910
        }
      }, {
        "uid" : "c8dfc24f48ab27d2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1956/#testresult/c8dfc24f48ab27d2",
        "status" : "passed",
        "time" : {
          "start" : 1734555925947,
          "stop" : 1734555927178,
          "duration" : 1231
        }
      }, {
        "uid" : "559481892e239bfc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1954/#testresult/559481892e239bfc",
        "status" : "passed",
        "time" : {
          "start" : 1734551865123,
          "stop" : 1734551866121,
          "duration" : 998
        }
      }, {
        "uid" : "8d900090b86f2396",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1952/#testresult/8d900090b86f2396",
        "status" : "passed",
        "time" : {
          "start" : 1734534995196,
          "stop" : 1734534996162,
          "duration" : 966
        }
      }, {
        "uid" : "76923875c3ac6c75",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1948/#testresult/76923875c3ac6c75",
        "status" : "passed",
        "time" : {
          "start" : 1734466717145,
          "stop" : 1734466718025,
          "duration" : 880
        }
      }, {
        "uid" : "874d2854af259389",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1948/#testresult/874d2854af259389",
        "status" : "broken",
        "statusDetails" : "golioth.golioth.RPCTimeout: RPC timeout",
        "time" : {
          "start" : 1734463893521,
          "stop" : 1734463898900,
          "duration" : 5379
        }
      }, {
        "uid" : "57c46e3efe69d8fb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1948/#testresult/57c46e3efe69d8fb",
        "status" : "passed",
        "time" : {
          "start" : 1734457846471,
          "stop" : 1734457847404,
          "duration" : 933
        }
      }, {
        "uid" : "43ce7da1111888e6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1947/#testresult/43ce7da1111888e6",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1734451282528,
          "stop" : 1734451282528,
          "duration" : 0
        }
      }, {
        "uid" : "b221a3f29e58ebde",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1945/#testresult/b221a3f29e58ebde",
        "status" : "passed",
        "time" : {
          "start" : 1734442620023,
          "stop" : 1734442620990,
          "duration" : 967
        }
      }, {
        "uid" : "35ba0ae25c06fdc1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1943/#testresult/35ba0ae25c06fdc1",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1734413437293,
          "stop" : 1734413437293,
          "duration" : 0
        }
      }, {
        "uid" : "38cd16aa0bdde160",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1943/#testresult/38cd16aa0bdde160",
        "status" : "passed",
        "time" : {
          "start" : 1734377575368,
          "stop" : 1734377576646,
          "duration" : 1278
        }
      }, {
        "uid" : "5aa3d68b55128c8a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1931/#testresult/5aa3d68b55128c8a",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1734126606358,
          "stop" : 1734126606358,
          "duration" : 0
        }
      }, {
        "uid" : "7e8a6f2dac1cf7b9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1928/#testresult/7e8a6f2dac1cf7b9",
        "status" : "passed",
        "time" : {
          "start" : 1734046824790,
          "stop" : 1734046825945,
          "duration" : 1155
        }
      }, {
        "uid" : "1932e9bff99f4c02",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1927/#testresult/1932e9bff99f4c02",
        "status" : "passed",
        "time" : {
          "start" : 1734043810403,
          "stop" : 1734043811354,
          "duration" : 951
        }
      }, {
        "uid" : "aad88ac86f714373",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1921/#testresult/aad88ac86f714373",
        "status" : "passed",
        "time" : {
          "start" : 1734027811547,
          "stop" : 1734027812554,
          "duration" : 1007
        }
      }, {
        "uid" : "85cbb2b2e84c8f06",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/85cbb2b2e84c8f06",
        "status" : "passed",
        "time" : {
          "start" : 1734021792958,
          "stop" : 1734021793867,
          "duration" : 909
        }
      }, {
        "uid" : "5c8e4dea4dda122d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/5c8e4dea4dda122d",
        "status" : "passed",
        "time" : {
          "start" : 1734019620865,
          "stop" : 1734019621898,
          "duration" : 1033
        }
      }, {
        "uid" : "d8d570b20b4867ff",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/d8d570b20b4867ff",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733982566254,
          "stop" : 1733982566254,
          "duration" : 0
        }
      }, {
        "uid" : "f4927e26b3db6f3a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/f4927e26b3db6f3a",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733959952957,
          "stop" : 1733959952957,
          "duration" : 0
        }
      }, {
        "uid" : "a4196e1bb5e04fcd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/a4196e1bb5e04fcd",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733956637592,
          "stop" : 1733956637592,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "1d4cb1b850df04a2.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}