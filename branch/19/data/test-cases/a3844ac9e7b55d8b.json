{"uid":"a3844ac9e7b55d8b","name":"test_lightdb_reported","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"b587a46c1d6b3a703a32ac1a951bd89f","time":{"start":1731963464415,"stop":1731963464641,"duration":226},"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7fd3cd5cb3d0>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"port","time":{"start":1731963449528,"stop":1731963449528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731963449528,"stop":1731963449528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1731963449528,"stop":1731963449528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731963449528,"stop":1731963449528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731963449528,"stop":1731963449529,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731963449528,"stop":1731963449528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731963449528,"stop":1731963449528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731963449529,"stop":1731963449529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731963449529,"stop":1731963449529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731963449529,"stop":1731963449529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731963449529,"stop":1731963449966,"duration":437},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731963449529,"stop":1731963449529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731963449529,"stop":1731963449529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731963449966,"stop":1731963449968,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731963449968,"stop":1731963450767,"duration":799},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731963450768,"stop":1731963464414,"duration":13646},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7fd3cd5cb3d0>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","steps":[],"attachments":[{"uid":"cbf0d3f4c119fa6f","name":"stdout","source":"cbf0d3f4c119fa6f.txt","type":"text/plain","size":2394},{"uid":"7058fb7afcd8ae0a","name":"stderr","source":"7058fb7afcd8ae0a.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1731963473639,"stop":1731963473811,"duration":172},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731963473812,"stop":1731963474043,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731963474043,"stop":1731963474057,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731963474058,"stop":1731963474058,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_64"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"6ad83593e094"},{"name":"thread","value":"7477-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":3,"skipped":0,"passed":29,"unknown":0,"total":36},"items":[{"uid":"c677eaa91434cb4","reportUrl":"https://golioth.github.io/allure-reports/branch/17//#testresult/c677eaa91434cb4","status":"passed","time":{"start":1731962237867,"stop":1731962239619,"duration":1752}},{"uid":"48c7fd8437f66294","reportUrl":"https://golioth.github.io/allure-reports/branch/14//#testresult/48c7fd8437f66294","status":"passed","time":{"start":1731960960009,"stop":1731960964846,"duration":4837}},{"uid":"e7c13c64a931dd1d","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/e7c13c64a931dd1d","status":"passed","time":{"start":1731953910174,"stop":1731953913048,"duration":2874}},{"uid":"7616e11bd9786014","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/7616e11bd9786014","status":"passed","time":{"start":1731953255953,"stop":1731953260172,"duration":4219}},{"uid":"22dcd6990625f19c","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/22dcd6990625f19c","status":"passed","time":{"start":1731921230728,"stop":1731921232962,"duration":2234}},{"uid":"b42a93d6cee13ede","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/b42a93d6cee13ede","status":"passed","time":{"start":1731921230728,"stop":1731921232962,"duration":2234}},{"uid":"a95475a32e65e92f","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/a95475a32e65e92f","status":"passed","time":{"start":1731904065686,"stop":1731904068190,"duration":2504}},{"uid":"ac11fdf5761dea93","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/ac11fdf5761dea93","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1731709890769,"stop":1731709890971,"duration":202}},{"uid":"bf6428bdd5f311c5","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/bf6428bdd5f311c5","status":"passed","time":{"start":1731707493177,"stop":1731707495657,"duration":2480}},{"uid":"7f09c88d4b900863","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/7f09c88d4b900863","status":"passed","time":{"start":1731703865687,"stop":1731703869322,"duration":3635}},{"uid":"caf272df309b13fc","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/caf272df309b13fc","status":"passed","time":{"start":1731704043716,"stop":1731704047325,"duration":3609}},{"uid":"9b1d452ffa5eaaed","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/9b1d452ffa5eaaed","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1731693097529,"stop":1731693097666,"duration":137}},{"uid":"5acd64fe144edb72","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/5acd64fe144edb72","status":"passed","time":{"start":1731620122728,"stop":1731620125891,"duration":3163}},{"uid":"cdf1c5e83eb285ba","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/cdf1c5e83eb285ba","status":"passed","time":{"start":1731620122728,"stop":1731620125891,"duration":3163}},{"uid":"642eb4c2a2c99720","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/642eb4c2a2c99720","status":"passed","time":{"start":1731620122728,"stop":1731620125891,"duration":3163}},{"uid":"ef4aceb9425c36eb","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/ef4aceb9425c36eb","status":"passed","time":{"start":1731612220033,"stop":1731612221344,"duration":1311}},{"uid":"7e41c35e3deb65b2","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/7e41c35e3deb65b2","status":"passed","time":{"start":1731608002097,"stop":1731608005727,"duration":3630}},{"uid":"314f1c9d3a0a4b07","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/314f1c9d3a0a4b07","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731606695551,"stop":1731606695551,"duration":0}},{"uid":"d09a57eb9080820a","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/d09a57eb9080820a","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1731596663122,"stop":1731596663213,"duration":91}},{"uid":"d5a880e2d00764e0","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/d5a880e2d00764e0","status":"passed","time":{"start":1731533015192,"stop":1731533016859,"duration":1667}}]},"tags":["native_sim_64","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"a3844ac9e7b55d8b.json","parameterValues":["'native_sim_64'","'zephyr'"]}