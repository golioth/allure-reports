{"uid":"136ae232cce05257","name":"test_lightdb_observe","fullName":"examples.esp_idf.lightdb.observe.pytest.test_sample#test_lightdb_observe","historyId":"e1c9d677baba5328163350d94f37009c","time":{"start":1730236541219,"stop":1730236546418,"duration":5199},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7fcb5690>\ndevice = <golioth.golioth.Device object at 0xffff7fd01310>\n\n    async def test_lightdb_observe(board, device):\n        # Delete counter in lightdb state\n    \n>       await device.lightdb.delete(\"counter\")\n\nexamples/esp_idf/lightdb/observe/pytest/test_sample.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:529: in delete\n    await c.delete(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:2012: in delete\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730236513092,"stop":1730236513092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"board_name","time":{"start":1730236513093,"stop":1730236513093,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"port","time":{"start":1730236513094,"stop":1730236513095,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730236513096,"stop":1730236513097,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"baud","time":{"start":1730236513096,"stop":1730236513096,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730236513097,"stop":1730236513097,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"fw_image","time":{"start":1730236513098,"stop":1730236513098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"serial_number","time":{"start":1730236513099,"stop":1730236513099,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730236513099,"stop":1730236513099,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"api_url","time":{"start":1730236513100,"stop":1730236513101,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"api_key","time":{"start":1730236513100,"stop":1730236513100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"device_name","time":{"start":1730236513100,"stop":1730236513100,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"board","time":{"start":1730236513101,"stop":1730236538985,"duration":25884},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"project","time":{"start":1730236538986,"stop":1730236539351,"duration":365},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"device","time":{"start":1730236539352,"stop":1730236541215,"duration":1863},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7fcb5690>\ndevice = <golioth.golioth.Device object at 0xffff7fd01310>\n\n    async def test_lightdb_observe(board, device):\n        # Delete counter in lightdb state\n    \n>       await device.lightdb.delete(\"counter\")\n\nexamples/esp_idf/lightdb/observe/pytest/test_sample.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:529: in delete\n    await c.delete(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:2012: in delete\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","steps":[],"attachments":[{"uid":"c100d7957c2008b2","name":"stdout","source":"c100d7957c2008b2.txt","type":"text/plain","size":6092}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1730236547385,"stop":1730236550826,"duration":3441},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"project::0","time":{"start":1730236550830,"stop":1730236550830,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"board::0","time":{"start":1730236550833,"stop":1730236550839,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"efbc1cd67771"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.lightdb.observe.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":20,"unknown":0,"total":21},"items":[{"uid":"ea82d3fbd5bc6f58","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/ea82d3fbd5bc6f58","status":"passed","time":{"start":1729789852334,"stop":1729789862561,"duration":10227}},{"uid":"9153bae304e3fc04","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/9153bae304e3fc04","status":"passed","time":{"start":1729725281566,"stop":1729725291707,"duration":10141}},{"uid":"2cff9a3b02f0341c","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/2cff9a3b02f0341c","status":"passed","time":{"start":1729725281566,"stop":1729725291707,"duration":10141}},{"uid":"6078539fd35efe71","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/6078539fd35efe71","status":"passed","time":{"start":1729722377267,"stop":1729722387613,"duration":10346}},{"uid":"a6df647dfcf9d112","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/a6df647dfcf9d112","status":"passed","time":{"start":1729719628659,"stop":1729719637961,"duration":9302}},{"uid":"5567704614917a5d","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/5567704614917a5d","status":"passed","time":{"start":1729530676665,"stop":1729530686934,"duration":10269}},{"uid":"797ee7f2096ba904","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/797ee7f2096ba904","status":"passed","time":{"start":1729530676665,"stop":1729530686934,"duration":10269}},{"uid":"e95692f42577ef3e","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/e95692f42577ef3e","status":"passed","time":{"start":1729528749892,"stop":1729528760292,"duration":10400}},{"uid":"6c07762dcf563548","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/6c07762dcf563548","status":"passed","time":{"start":1729379950090,"stop":1729379960564,"duration":10474}},{"uid":"f8a7d7220e1c0bca","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/f8a7d7220e1c0bca","status":"passed","time":{"start":1729379950090,"stop":1729379960564,"duration":10474}},{"uid":"51b55e9502d31d1c","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/51b55e9502d31d1c","status":"passed","time":{"start":1729198918180,"stop":1729198928449,"duration":10269}},{"uid":"f459529d2f619e65","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/f459529d2f619e65","status":"passed","time":{"start":1729117406749,"stop":1729117417221,"duration":10472}},{"uid":"2dfabe8ce37178fb","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/2dfabe8ce37178fb","status":"passed","time":{"start":1729114433009,"stop":1729114443215,"duration":10206}},{"uid":"7a9e619d9b0e5f28","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/7a9e619d9b0e5f28","status":"passed","time":{"start":1729108665918,"stop":1729108676183,"duration":10265}},{"uid":"cb39e9d2ecbf9d45","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/cb39e9d2ecbf9d45","status":"passed","time":{"start":1729034958886,"stop":1729034968159,"duration":9273}},{"uid":"e9ca28858034b5ff","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/e9ca28858034b5ff","status":"passed","time":{"start":1729031913798,"stop":1729031923996,"duration":10198}},{"uid":"6ec2d0597ccd39cc","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/6ec2d0597ccd39cc","status":"passed","time":{"start":1729021545147,"stop":1729021554351,"duration":9204}},{"uid":"5604c62eba9c12b3","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/5604c62eba9c12b3","status":"passed","time":{"start":1729024799109,"stop":1729024809181,"duration":10072}},{"uid":"36916e47fff344c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/36916e47fff344c9","status":"passed","time":{"start":1729021545147,"stop":1729021554351,"duration":9204}},{"uid":"4376916a00776b23","reportUrl":"https://golioth.github.io/allure-reports/branch/1638//#testresult/4376916a00776b23","status":"passed","time":{"start":1729006821794,"stop":1729006831918,"duration":10124}}]},"tags":["mikes_orange_pi","esp-idf","anyio","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"136ae232cce05257.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}