{"uid":"6be57c67895d4db7","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"80cd057eba57a7e68ecc18ee8923db54","time":{"start":1730235393292,"stop":1730235398618,"duration":5326},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff872495d0>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff87240750>\ndevice = <golioth.golioth.Device object at 0xffff872498d0>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff872495d0>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730235281487,"stop":1730235281487,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"board_name","time":{"start":1730235281488,"stop":1730235281488,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"port","time":{"start":1730235281489,"stop":1730235281489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"baud","time":{"start":1730235281490,"stop":1730235281491,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730235281491,"stop":1730235281492,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730235281493,"stop":1730235281493,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"fw_image","time":{"start":1730235281494,"stop":1730235281494,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"serial_number","time":{"start":1730235281495,"stop":1730235281495,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730235281496,"stop":1730235281496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"device_name","time":{"start":1730235281496,"stop":1730235281497,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"api_key","time":{"start":1730235281497,"stop":1730235281498,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"api_url","time":{"start":1730235281498,"stop":1730235281498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"project","time":{"start":1730235281499,"stop":1730235281924,"duration":425},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"board","time":{"start":1730235281925,"stop":1730235322966,"duration":41041},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"device","time":{"start":1730235322967,"stop":1730235324007,"duration":1040},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"setup","time":{"start":1730235324008,"stop":1730235354476,"duration":30468},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730235399734,"stop":1730235399734,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"device::0","time":{"start":1730235399736,"stop":1730235400550,"duration":814},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"board::0","time":{"start":1730235400552,"stop":1730235400554,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false},{"name":"project::0","time":{"start":1730235400556,"stop":1730235400558,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"d2d5cdd7fea4"},{"name":"thread","value":"265-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":17,"unknown":0,"total":22},"items":[{"uid":"ecd4945646662bd5","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/ecd4945646662bd5","status":"passed","time":{"start":1729788680447,"stop":1729788702341,"duration":21894}},{"uid":"de2011eb87e99d7a","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/de2011eb87e99d7a","status":"passed","time":{"start":1729781373652,"stop":1729781396826,"duration":23174}},{"uid":"2256252720793b7","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/2256252720793b7","status":"passed","time":{"start":1729723715820,"stop":1729723737145,"duration":21325}},{"uid":"5223f25fefe1365a","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/5223f25fefe1365a","status":"passed","time":{"start":1729720667330,"stop":1729720688612,"duration":21282}},{"uid":"a049ddc64156242e","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/a049ddc64156242e","status":"passed","time":{"start":1729718307080,"stop":1729718328417,"duration":21337}},{"uid":"a9d3356228e113b2","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/a9d3356228e113b2","status":"passed","time":{"start":1729624908035,"stop":1729624927898,"duration":19863}},{"uid":"76ba5dd37ddd4e01","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/76ba5dd37ddd4e01","status":"passed","time":{"start":1729528487954,"stop":1729528511230,"duration":23276}},{"uid":"4f32a892c6d5149f","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/4f32a892c6d5149f","status":"passed","time":{"start":1729526724715,"stop":1729526744735,"duration":20020}},{"uid":"fe5f0797bfeea9ac","reportUrl":"https://golioth.github.io/allure-reports/branch/2//#testresult/fe5f0797bfeea9ac","status":"passed","time":{"start":1729389401851,"stop":1729389424059,"duration":22208}},{"uid":"adb776ab464e015f","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/adb776ab464e015f","status":"passed","time":{"start":1729387985481,"stop":1729388006157,"duration":20676}},{"uid":"9ae7131d99898d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/9ae7131d99898d2","status":"passed","time":{"start":1729378807103,"stop":1729378830342,"duration":23239}},{"uid":"62ff2fd89b64af38","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/62ff2fd89b64af38","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729197582350,"stop":1729197587704,"duration":5354}},{"uid":"f47f864100b27046","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/f47f864100b27046","status":"passed","time":{"start":1729115579970,"stop":1729115601369,"duration":21399}},{"uid":"c6fe4ee2488474f8","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/c6fe4ee2488474f8","status":"passed","time":{"start":1729113552802,"stop":1729113572598,"duration":19796}},{"uid":"5c078b126ba217d0","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/5c078b126ba217d0","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729106794581,"stop":1729106799954,"duration":5373}},{"uid":"17258122fd4283fb","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/17258122fd4283fb","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729033710353,"stop":1729033715744,"duration":5391}},{"uid":"d8fb1b0131cfd67c","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/d8fb1b0131cfd67c","status":"passed","time":{"start":1729030401336,"stop":1729030425759,"duration":24423}},{"uid":"4d734bf681bf36b3","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/4d734bf681bf36b3","status":"passed","time":{"start":1729028279398,"stop":1729028299186,"duration":19788}},{"uid":"a65307089c83494e","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/a65307089c83494e","status":"passed","time":{"start":1729023233553,"stop":1729023253312,"duration":19759}},{"uid":"aaf57a311d4148","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/aaf57a311d4148","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729019606333,"stop":1729019611656,"duration":5323}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"6be57c67895d4db7.json","parameterValues":["'rak5010'","'zephyr'"]}