{"uid":"ba489a79982043a7","name":"test_set_bool","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings#test_set_bool","historyId":"204093baad6bb51c5972bb7dea5f725d","time":{"start":1736265281352,"stop":1736265281352,"duration":0},"status":"broken","statusMessage":"httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/65dcefd26196661b54bbb83e'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500","statusTrace":"project = <golioth.golioth.Project object at 0x7f378e1b06d0>\nboard = <native_sim.NativeSimBoard object at 0x7f378e1b1dd0>\ndevice = <golioth.golioth.Device object at 0x7f378e198210>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n>       await project.settings.set('TEST_STRING', \"foo\")\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:1015: in set\n    response = await self.project.put('settings/' + setting['id'], json=json)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [500 Internal Server Error]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/65dcefd26196661b54bbb83e'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:829: HTTPStatusError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"port","time":{"start":1736265278738,"stop":1736265278738,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736265278738,"stop":1736265278738,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1736265278738,"stop":1736265278738,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1736265278738,"stop":1736265278738,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1736265278738,"stop":1736265278738,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1736265278739,"stop":1736265278739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736265278739,"stop":1736265278739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1736265278739,"stop":1736265278739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736265278739,"stop":1736265279092,"duration":353},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736265278739,"stop":1736265278739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1736265278739,"stop":1736265278739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736265278739,"stop":1736265278739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736265278739,"stop":1736265278739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1736265279092,"stop":1736265279094,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736265279094,"stop":1736265279595,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736265279596,"stop":1736265281034,"duration":1438},"status":"broken","statusMessage":"httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/65dcefd26196661b54bbb83e'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 100, in wrapper\n    yield runner.run_fixture(local_func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 965, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 940, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 910, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/modules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 31, in setup\n    await project.settings.set('TEST_STRING', \"foo\")\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 1015, in set\n    response = await self.project.put('settings/' + setting['id'], json=json)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 83, in wrapper\n    resp.raise_for_status()\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_models.py\", line 829, in raise_for_status\n    raise HTTPStatusError(message, request=request, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1736265281618,"stop":1736265281721,"duration":103},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1736265281721,"stop":1736265281736,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736265281737,"stop":1736265281737,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_32"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"ac44b1aee4f9"},{"name":"thread","value":"7720-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":24,"unknown":0,"total":25},"items":[{"uid":"48da7566a4339921","reportUrl":"https://golioth.github.io/allure-reports/branch/20/#testresult/48da7566a4339921","status":"passed","time":{"start":1736204706849,"stop":1736204709566,"duration":2717}},{"uid":"4a42a3a40e2b4792","reportUrl":"https://golioth.github.io/allure-reports/branch/20/#testresult/4a42a3a40e2b4792","status":"passed","time":{"start":1736204706849,"stop":1736204709566,"duration":2717}},{"uid":"2ded0793ea81e4ca","reportUrl":"https://golioth.github.io/allure-reports/branch/13/#testresult/2ded0793ea81e4ca","status":"passed","time":{"start":1735944053929,"stop":1735944056943,"duration":3014}},{"uid":"2ae9c0ac078a1c39","reportUrl":"https://golioth.github.io/allure-reports/branch/10/#testresult/2ae9c0ac078a1c39","status":"passed","time":{"start":1735921969538,"stop":1735921972481,"duration":2943}},{"uid":"d801d80f49a6115f","reportUrl":"https://golioth.github.io/allure-reports/branch/12/#testresult/d801d80f49a6115f","status":"passed","time":{"start":1735928526720,"stop":1735928529518,"duration":2798}},{"uid":"a481304e1f4d8596","reportUrl":"https://golioth.github.io/allure-reports/branch/10/#testresult/a481304e1f4d8596","status":"passed","time":{"start":1735921969538,"stop":1735921972481,"duration":2943}},{"uid":"c4a04a130eb05614","reportUrl":"https://golioth.github.io/allure-reports/branch/9/#testresult/c4a04a130eb05614","status":"passed","time":{"start":1735919801607,"stop":1735919804653,"duration":3046}},{"uid":"f7d2c90558555e5b","reportUrl":"https://golioth.github.io/allure-reports/branch/5/#testresult/f7d2c90558555e5b","status":"passed","time":{"start":1735854229319,"stop":1735854231933,"duration":2614}},{"uid":"8bcc076ec4d6505","reportUrl":"https://golioth.github.io/allure-reports/branch/4/#testresult/8bcc076ec4d6505","status":"passed","time":{"start":1735853867498,"stop":1735853870472,"duration":2974}},{"uid":"d858d7a66e49ea0d","reportUrl":"https://golioth.github.io/allure-reports/branch/3/#testresult/d858d7a66e49ea0d","status":"passed","time":{"start":1735847728644,"stop":1735847731497,"duration":2853}},{"uid":"6fd362ae2a6aca1","reportUrl":"https://golioth.github.io/allure-reports/branch/2000/#testresult/6fd362ae2a6aca1","status":"passed","time":{"start":1735841062136,"stop":1735841064839,"duration":2703}},{"uid":"e6c971b926a6c18","reportUrl":"https://golioth.github.io/allure-reports/branch/1999/#testresult/e6c971b926a6c18","status":"passed","time":{"start":1735840751781,"stop":1735840754754,"duration":2973}},{"uid":"57be23b85d6612d7","reportUrl":"https://golioth.github.io/allure-reports/branch/1997/#testresult/57be23b85d6612d7","status":"passed","time":{"start":1735831779360,"stop":1735831782072,"duration":2712}},{"uid":"9a43f4af19189ee9","reportUrl":"https://golioth.github.io/allure-reports/branch/1993/#testresult/9a43f4af19189ee9","status":"passed","time":{"start":1735830266531,"stop":1735830269668,"duration":3137}},{"uid":"fc58083b758e664","reportUrl":"https://golioth.github.io/allure-reports/branch/1992/#testresult/fc58083b758e664","status":"passed","time":{"start":1735824704055,"stop":1735824706782,"duration":2727}},{"uid":"887ada76559c52eb","reportUrl":"https://golioth.github.io/allure-reports/branch/1989/#testresult/887ada76559c52eb","status":"passed","time":{"start":1735671392901,"stop":1735671395566,"duration":2665}},{"uid":"937fe9d7b63b7e35","reportUrl":"https://golioth.github.io/allure-reports/branch/2/#testresult/937fe9d7b63b7e35","status":"passed","time":{"start":1735671532308,"stop":1735671535090,"duration":2782}},{"uid":"f09fb80934164e4a","reportUrl":"https://golioth.github.io/allure-reports/branch/1987/#testresult/f09fb80934164e4a","status":"passed","time":{"start":1735665065239,"stop":1735665068384,"duration":3145}},{"uid":"2c3a59a13ad015c8","reportUrl":"https://golioth.github.io/allure-reports/branch/1986/#testresult/2c3a59a13ad015c8","status":"passed","time":{"start":1735661557414,"stop":1735661560233,"duration":2819}},{"uid":"2bcf73f4f5ecc965","reportUrl":"https://golioth.github.io/allure-reports/branch/1982/#testresult/2bcf73f4f5ecc965","status":"passed","time":{"start":1735572044844,"stop":1735572047396,"duration":2552}}]},"tags":["anyio","native_sim_32","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"ba489a79982043a7.json","parameterValues":["'native_sim_32'","'zephyr'"]}