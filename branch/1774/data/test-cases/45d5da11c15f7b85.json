{"uid":"45d5da11c15f7b85","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1731999568369,"stop":1731999607226,"duration":38857},"status":"failed","statusMessage":"AssertionError: assert 8 == 2\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb4621dd0>\ndevice = <golioth.golioth.Device object at 0xffffb464cd10>\nproject = <golioth.golioth.Project object at 0xffffb4698b10>\nreleases = {'test_blocks': Release <673c373b4191ba4f3315180c, release_tags=[], device_tags=['673c37394191ba4f33151809'], artifact..., release_tags=[], device_tags=['673c37394191ba4f33151809'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 8 == 2\nE                    +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731999499111,"stop":1731999499111,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731999499112,"stop":1731999499113,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731999499112,"stop":1731999499112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731999499113,"stop":1731999499113,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731999499114,"stop":1731999499114,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731999499115,"stop":1731999499116,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731999499115,"stop":1731999499115,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731999499116,"stop":1731999499116,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731999499116,"stop":1731999499116,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731999499117,"stop":1731999499117,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731999499117,"stop":1731999499117,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731999499118,"stop":1731999499118,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731999499118,"stop":1731999538966,"duration":39848},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731999538968,"stop":1731999539456,"duration":488},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731999539457,"stop":1731999540838,"duration":1381},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731999540838,"stop":1731999544066,"duration":3228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1731999544068,"stop":1731999544844,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1731999544845,"stop":1731999545940,"duration":1095},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1731999545940,"stop":1731999547826,"duration":1886},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1731999568366,"stop":1731999568366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 8 == 2\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb4621dd0>\ndevice = <golioth.golioth.Device object at 0xffffb464cd10>\nproject = <golioth.golioth.Project object at 0xffffb4698b10>\nreleases = {'test_blocks': Release <673c373b4191ba4f3315180c, release_tags=[], device_tags=['673c37394191ba4f33151809'], artifact..., release_tags=[], device_tags=['673c37394191ba4f33151809'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 8 == 2\nE                    +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","steps":[],"attachments":[{"uid":"ce80d6df5b9732be","name":"stdout","source":"ce80d6df5b9732be.txt","type":"text/plain","size":287}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1731999607373,"stop":1731999608485,"duration":1112},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1731999608488,"stop":1731999610431,"duration":1943},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1731999610433,"stop":1731999611320,"duration":887},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1731999611322,"stop":1731999611322,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1731999611324,"stop":1731999611324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731999611326,"stop":1731999612023,"duration":697},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731999612025,"stop":1731999612025,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731999612027,"stop":1731999612034,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"df0c36e2e2a1"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":32,"unknown":0,"total":34},"items":[{"uid":"832730971d1bca31","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/832730971d1bca31","status":"passed","time":{"start":1731968042352,"stop":1731968089950,"duration":47598}},{"uid":"aeaf11c741a6c8a7","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/aeaf11c741a6c8a7","status":"passed","time":{"start":1731960464414,"stop":1731960542215,"duration":77801}},{"uid":"6f623a1291362a02","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/6f623a1291362a02","status":"passed","time":{"start":1731958726319,"stop":1731958804495,"duration":78176}},{"uid":"277cd56034a08e24","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/277cd56034a08e24","status":"passed","time":{"start":1731955998419,"stop":1731956076671,"duration":78252}},{"uid":"aebaf81db47aed49","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/aebaf81db47aed49","status":"passed","time":{"start":1731953688657,"stop":1731953766448,"duration":77791}},{"uid":"f02b409a41773b54","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/f02b409a41773b54","status":"passed","time":{"start":1731933330072,"stop":1731933407441,"duration":77369}},{"uid":"c71947d63dfb1ecf","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/c71947d63dfb1ecf","status":"passed","time":{"start":1731921660833,"stop":1731921737747,"duration":76914}},{"uid":"446a5a59066d5c43","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/446a5a59066d5c43","status":"passed","time":{"start":1731904483179,"stop":1731904530623,"duration":47444}},{"uid":"f64f45ca4c3e1e55","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/f64f45ca4c3e1e55","status":"passed","time":{"start":1731711900817,"stop":1731711947723,"duration":46906}},{"uid":"d4aef1bf997ec4d0","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/d4aef1bf997ec4d0","status":"passed","time":{"start":1731708411639,"stop":1731708489182,"duration":77543}},{"uid":"cee797f5512a6c30","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/cee797f5512a6c30","status":"passed","time":{"start":1731704266101,"stop":1731704342962,"duration":76861}},{"uid":"77a6ccd415cbace1","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/77a6ccd415cbace1","status":"passed","time":{"start":1731704955197,"stop":1731705033391,"duration":78194}},{"uid":"eb2af0bce7f8fdf8","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/eb2af0bce7f8fdf8","status":"passed","time":{"start":1731693402571,"stop":1731693480062,"duration":77491}},{"uid":"1048e2a9c79a6547","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/1048e2a9c79a6547","status":"passed","time":{"start":1731620422890,"stop":1731620500650,"duration":77760}},{"uid":"d68516cee9080bc2","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/d68516cee9080bc2","status":"passed","time":{"start":1731620422890,"stop":1731620500650,"duration":77760}},{"uid":"32637df559da04eb","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/32637df559da04eb","status":"passed","time":{"start":1731620422890,"stop":1731620500650,"duration":77760}},{"uid":"344a17940497182","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/344a17940497182","status":"passed","time":{"start":1731614387738,"stop":1731614465166,"duration":77428}},{"uid":"e91c5561a068d9c4","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/e91c5561a068d9c4","status":"passed","time":{"start":1731611799778,"stop":1731611876641,"duration":76863}},{"uid":"377a2b51df1188d9","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/377a2b51df1188d9","status":"passed","time":{"start":1731608384634,"stop":1731608462376,"duration":77742}},{"uid":"7579fcaa4c31b91a","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/7579fcaa4c31b91a","status":"passed","time":{"start":1731540954967,"stop":1731541035241,"duration":80274}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"45d5da11c15f7b85.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}