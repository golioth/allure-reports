{"uid":"d5a32b16fb75b32d","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"f979b1e449cdae55756e48dc2b712309","time":{"start":1731694581676,"stop":1731694581676,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 193279.66152547096\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffff98bcbf90>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff98a866d0>\ndevice = <golioth.golioth.Device object at 0xffff98a3e790>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 193279.66152547096\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731694413199,"stop":1731694413199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"board_name","time":{"start":1731694413200,"stop":1731694413200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"port","time":{"start":1731694413201,"stop":1731694413201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"baud","time":{"start":1731694413202,"stop":1731694413202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"wifi_ssid","time":{"start":1731694413202,"stop":1731694413203,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"wifi_psk","time":{"start":1731694413203,"stop":1731694413203,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"serial_number","time":{"start":1731694413204,"stop":1731694413204,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"fw_image","time":{"start":1731694413204,"stop":1731694413204,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"bmp_port","time":{"start":1731694413205,"stop":1731694413205,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"device_name","time":{"start":1731694413205,"stop":1731694413205,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"api_key","time":{"start":1731694413206,"stop":1731694413206,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"api_url","time":{"start":1731694413206,"stop":1731694413206,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"project","time":{"start":1731694413207,"stop":1731694413598,"duration":391},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"board","time":{"start":1731694413599,"stop":1731694452695,"duration":39096},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"device","time":{"start":1731694452697,"stop":1731694453535,"duration":838},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"setup","time":{"start":1731694453535,"stop":1731694581059,"duration":127524},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"device::0","time":{"start":1731694587118,"stop":1731694587536,"duration":418},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"board::0","time":{"start":1731694587539,"stop":1731694587540,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"project::0","time":{"start":1731694587542,"stop":1731694587544,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"7b8d436bf48b"},{"name":"thread","value":"251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":13,"skipped":0,"passed":8,"unknown":0,"total":21},"items":[{"uid":"9e46557901748c97","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/9e46557901748c97","status":"passed","time":{"start":1731621434436,"stop":1731621446894,"duration":12458}},{"uid":"5408b55fae645027","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/5408b55fae645027","status":"passed","time":{"start":1731621434436,"stop":1731621446894,"duration":12458}},{"uid":"2c1f1752a22a0aa7","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/2c1f1752a22a0aa7","status":"passed","time":{"start":1731621434436,"stop":1731621446894,"duration":12458}},{"uid":"69864893ec3394f9","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/69864893ec3394f9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731616024164,"stop":1731616024164,"duration":0}},{"uid":"44e9c4294173bf7d","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/44e9c4294173bf7d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731613055731,"stop":1731613055731,"duration":0}},{"uid":"47e1ebcc98e42d51","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/47e1ebcc98e42d51","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731610084635,"stop":1731610084635,"duration":0}},{"uid":"a356ac37805ae27c","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/a356ac37805ae27c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731597679412,"stop":1731597679412,"duration":0}},{"uid":"784e10a235a2eaa7","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/784e10a235a2eaa7","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731548200044,"stop":1731548200044,"duration":0}},{"uid":"a167367c6dfe1dbe","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/a167367c6dfe1dbe","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731563853404,"stop":1731563853404,"duration":0}},{"uid":"234d8089be4ea505","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/234d8089be4ea505","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731542156642,"stop":1731542156642,"duration":0}},{"uid":"d56aed1e4f0274c3","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/d56aed1e4f0274c3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731538833018,"stop":1731538833018,"duration":0}},{"uid":"5709cbcaebc45d70","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/5709cbcaebc45d70","status":"passed","time":{"start":1731535415447,"stop":1731535427630,"duration":12183}},{"uid":"5fff643f79ad7a34","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/5fff643f79ad7a34","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731534989567,"stop":1731534989568,"duration":1}},{"uid":"8fe5787f54c7f00f","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/8fe5787f54c7f00f","status":"passed","time":{"start":1731523177352,"stop":1731523189803,"duration":12451}},{"uid":"bb193415204b7e6f","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/bb193415204b7e6f","status":"passed","time":{"start":1731523177352,"stop":1731523189803,"duration":12451}},{"uid":"ba299fd4bddadf43","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/ba299fd4bddadf43","status":"passed","time":{"start":1731523177352,"stop":1731523189803,"duration":12451}},{"uid":"8803155ba17a4fe7","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/8803155ba17a4fe7","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731519307651,"stop":1731519307651,"duration":0}},{"uid":"7c7643f889e8667d","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/7c7643f889e8667d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731426978297,"stop":1731426978297,"duration":0}},{"uid":"6a9a0048cd4aa4a7","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/6a9a0048cd4aa4a7","status":"passed","time":{"start":1731103398764,"stop":1731103411551,"duration":12787}},{"uid":"44c4b572acb0033e","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/44c4b572acb0033e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731097910584,"stop":1731097910584,"duration":0}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"d5a32b16fb75b32d.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}