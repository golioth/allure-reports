{"uid":"19b2da726ba7468","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"2f204ffe20d9a076758a1035d6c7af62","time":{"start":1731693520884,"stop":1731693578928,"duration":58044},"status":"failed","statusMessage":"AssertionError: assert 8 == 7\n +  where 8 = int('8')","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffff94817a90>\ndevice = <golioth.golioth.Device object at 0xffff947f8050>\nproject = <golioth.golioth.Project object at 0xffff9475a650>\nreleases = {'test_blocks': Release <67378bc6991409ec59c68a03, release_tags=[], device_tags=['67378bc4991409ec59c68a00'], artifact..., release_tags=[], device_tags=['67378bc4991409ec59c68a00'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 8 == 7\nE            +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731693485424,"stop":1731693485424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"port","time":{"start":1731693485425,"stop":1731693485426,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"board_name","time":{"start":1731693485425,"stop":1731693485425,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"baud","time":{"start":1731693485426,"stop":1731693485427,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"wifi_ssid","time":{"start":1731693485427,"stop":1731693485427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"wifi_psk","time":{"start":1731693485428,"stop":1731693485428,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"fw_image","time":{"start":1731693485429,"stop":1731693485429,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"serial_number","time":{"start":1731693485430,"stop":1731693485430,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"bmp_port","time":{"start":1731693485431,"stop":1731693485431,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"api_key","time":{"start":1731693485432,"stop":1731693485432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"api_url","time":{"start":1731693485432,"stop":1731693485432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"device_name","time":{"start":1731693485433,"stop":1731693485433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"board","time":{"start":1731693485434,"stop":1731693498146,"duration":12712},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"project","time":{"start":1731693498149,"stop":1731693498835,"duration":686},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"device","time":{"start":1731693498835,"stop":1731693500240,"duration":1405},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"setup","time":{"start":1731693500241,"stop":1731693507042,"duration":6801},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"artifacts","time":{"start":1731693507044,"stop":1731693507742,"duration":698},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"tag","time":{"start":1731693507743,"stop":1731693508742,"duration":999},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"releases","time":{"start":1731693508743,"stop":1731693510845,"duration":2102},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"releases_teardown","time":{"start":1731693520881,"stop":1731693520882,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 8 == 7\n +  where 8 = int('8')","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffff94817a90>\ndevice = <golioth.golioth.Device object at 0xffff947f8050>\nproject = <golioth.golioth.Project object at 0xffff9475a650>\nreleases = {'test_blocks': Release <67378bc6991409ec59c68a03, release_tags=[], device_tags=['67378bc4991409ec59c68a00'], artifact..., release_tags=[], device_tags=['67378bc4991409ec59c68a00'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 8 == 7\nE            +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"99afe7e530641d3","name":"stdout","source":"99afe7e530641d3.txt","type":"text/plain","size":3264}],"parameters":[],"shouldDisplayMessage":true,"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":1},"afterStages":[{"name":"releases_teardown::0","time":{"start":1731693579150,"stop":1731693580935,"duration":1785},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"releases::0","time":{"start":1731693580937,"stop":1731693583016,"duration":2079},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"tag::0","time":{"start":1731693583018,"stop":1731693584141,"duration":1123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"artifacts::0","time":{"start":1731693584144,"stop":1731693584144,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"setup::0","time":{"start":1731693584146,"stop":1731693584146,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"device::0","time":{"start":1731693584148,"stop":1731693584866,"duration":718},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"project::0","time":{"start":1731693584868,"stop":1731693584868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0},{"name":"board::0","time":{"start":1731693584870,"stop":1731693584898,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"d66c65256b5e"},{"name":"thread","value":"280-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":3,"skipped":0,"passed":15,"unknown":0,"total":21},"items":[{"uid":"1a944bd0c8318807","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/1a944bd0c8318807","status":"passed","time":{"start":1731623858307,"stop":1731623935950,"duration":77643}},{"uid":"b8bf37a85f232b2c","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/b8bf37a85f232b2c","status":"passed","time":{"start":1731623858307,"stop":1731623935950,"duration":77643}},{"uid":"3bb673241af48a7e","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/3bb673241af48a7e","status":"passed","time":{"start":1731620523247,"stop":1731620601498,"duration":78251}},{"uid":"b7831c95e7a73b02","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/b7831c95e7a73b02","status":"passed","time":{"start":1731615074053,"stop":1731615152033,"duration":77980}},{"uid":"9c23344878885784","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/9c23344878885784","status":"passed","time":{"start":1731611979638,"stop":1731612057830,"duration":78192}},{"uid":"eee33d81905a2373","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/eee33d81905a2373","status":"failed","statusDetails":"AssertionError: assert 6 == 5\n +  where 6 = int('6')","time":{"start":1731609190303,"stop":1731609239151,"duration":48848}},{"uid":"277b478af8850c70","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/277b478af8850c70","status":"passed","time":{"start":1731541030489,"stop":1731541108381,"duration":77892}},{"uid":"953f057178be4b5c","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/953f057178be4b5c","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1731547113137,"stop":1731547135050,"duration":21913}},{"uid":"d6df2752b4bef6a9","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/d6df2752b4bef6a9","status":"passed","time":{"start":1731564001657,"stop":1731564079879,"duration":78222}},{"uid":"bc47aaa45009afe8","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/bc47aaa45009afe8","status":"passed","time":{"start":1731541030489,"stop":1731541108381,"duration":77892}},{"uid":"eed6622f7a965588","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/eed6622f7a965588","status":"passed","time":{"start":1731537770135,"stop":1731537847957,"duration":77822}},{"uid":"d08fb2e39c2440da","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/d08fb2e39c2440da","status":"passed","time":{"start":1731534386650,"stop":1731534465432,"duration":78782}},{"uid":"dfe46c6b0b6de1b8","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/dfe46c6b0b6de1b8","status":"passed","time":{"start":1731534048381,"stop":1731534126214,"duration":77833}},{"uid":"2f189619d6427a4c","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/2f189619d6427a4c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731523737320,"stop":1731523737320,"duration":0}},{"uid":"915028f042b276ea","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/915028f042b276ea","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731523737320,"stop":1731523737320,"duration":0}},{"uid":"a2fee4632ac82f85","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/a2fee4632ac82f85","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731523737320,"stop":1731523737320,"duration":0}},{"uid":"f46c2c0da7f0050a","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/f46c2c0da7f0050a","status":"passed","time":{"start":1731518236052,"stop":1731518313894,"duration":77842}},{"uid":"bf33fcb8daee1f86","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/bf33fcb8daee1f86","status":"passed","time":{"start":1731425880641,"stop":1731425958446,"duration":77805}},{"uid":"c78a9a1d580ba082","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/c78a9a1d580ba082","status":"passed","time":{"start":1731102894209,"stop":1731102972191,"duration":77982}},{"uid":"e9bac81f0c74963","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/e9bac81f0c74963","status":"passed","time":{"start":1731096967200,"stop":1731097045523,"duration":78323}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"19b2da726ba7468.json","parameterValues":["'nrf52840dk'","'zephyr'"]}