{
  "uid" : "f0926648a4f207df",
  "name" : "test_lightdb_observe",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.observe.pytest.test_sample#test_lightdb_observe",
  "historyId" : "c9ae6dc826a01d1d44d52fc2bf414310",
  "time" : {
    "start" : 1734029126844,
    "stop" : 1734029126844,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'",
  "statusTrace" : "self = Serial<id=0xffffbbaf73d0, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n>           self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\nE           FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'\n\n/usr/local/lib/python3.11/dist-packages/serial/serialposix.py:322: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_lightdb_observe>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:62: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:85: in launch\n    self.connect(retry_s = 10)\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:116: in connect\n    self._connect_device()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:142: in _connect_device\n    self._serial_connection = serial.Serial(\n/usr/local/lib/python3.11/dist-packages/serial/serialutil.py:244: in __init__\n    self.open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Serial<id=0xffffbbaf73d0, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n            self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n        except OSError as msg:\n            self.fd = None\n>           raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\nE           serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'\n\n/usr/local/lib/python3.11/dist-packages/serial/serialposix.py:325: SerialException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "project",
    "time" : {
      "start" : 1734029126854,
      "stop" : 1734029127269,
      "duration" : 415
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1734029128105,
      "stop" : 1734029150849,
      "duration" : 22744
    },
    "status" : "broken",
    "statusMessage" : "serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 62, in dut\n    device_object.launch()\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py\", line 85, in launch\n    self.connect(retry_s = 10)\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py\", line 116, in connect\n    self._connect_device()\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py\", line 142, in _connect_device\n    self._serial_connection = serial.Serial(\n                              ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/serial/serialutil.py\", line 244, in __init__\n    self.open()\n  File \"/usr/local/lib/python3.11/dist-packages/serial/serialposix.py\", line 325, in open\n    raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734029127269,
      "stop" : 1734029128105,
      "duration" : 836
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734029126852,
      "stop" : 1734029126853,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734029126847,
      "stop" : 1734029126847,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1734029126849,
      "stop" : 1734029126849,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734029126853,
      "stop" : 1734029126853,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734029126848,
      "stop" : 1734029126848,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734029126849,
      "stop" : 1734029126849,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734029126847,
      "stop" : 1734029126848,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1734029126850,
      "stop" : 1734029126852,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'",
    "statusTrace" : "self = Serial<id=0xffffbbaf73d0, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n>           self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\nE           FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'\n\n/usr/local/lib/python3.11/dist-packages/serial/serialposix.py:322: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_lightdb_observe>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:62: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:85: in launch\n    self.connect(retry_s = 10)\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:116: in connect\n    self._connect_device()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:142: in _connect_device\n    self._serial_connection = serial.Serial(\n/usr/local/lib/python3.11/dist-packages/serial/serialutil.py:244: in __init__\n    self.open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Serial<id=0xffffbbaf73d0, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n            self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n        except OSError as msg:\n            self.fd = None\n>           raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\nE           serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'\n\n/usr/local/lib/python3.11/dist-packages/serial/serialposix.py:325: SerialException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "985aa3052136b2b7",
      "name" : "log",
      "source" : "985aa3052136b2b7.txt",
      "type" : "text/plain",
      "size" : 186228
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1734029151835,
      "stop" : 1734029151837,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1734029151398,
      "stop" : 1734029151833,
      "duration" : 435
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1734029151842,
      "stop" : 1734029151842,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "e42e70e11d5d"
  }, {
    "name" : "thread",
    "value" : "443-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.observe.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 10,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 20
      },
      "items" : [ {
        "uid" : "ca18dd30f84d60f9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/ca18dd30f84d60f9",
        "status" : "passed",
        "time" : {
          "start" : 1734024859844,
          "stop" : 1734024899037,
          "duration" : 39193
        }
      }, {
        "uid" : "508365698129bb7d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/508365698129bb7d",
        "status" : "passed",
        "time" : {
          "start" : 1734023662261,
          "stop" : 1734023702578,
          "duration" : 40317
        }
      }, {
        "uid" : "f65f956a97da5ade",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/f65f956a97da5ade",
        "status" : "passed",
        "time" : {
          "start" : 1733982712879,
          "stop" : 1733982752568,
          "duration" : 39689
        }
      }, {
        "uid" : "b9af8907f652abb4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/b9af8907f652abb4",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733961228545,
          "stop" : 1733961321727,
          "duration" : 93182
        }
      }, {
        "uid" : "f858b5b7e66fe9c3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/f858b5b7e66fe9c3",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733957899019,
          "stop" : 1733957992128,
          "duration" : 93109
        }
      }, {
        "uid" : "a544898a199b3e44",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1903/#testresult/a544898a199b3e44",
        "status" : "broken",
        "statusDetails" : "serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'",
        "time" : {
          "start" : 1733952272108,
          "stop" : 1733952272108,
          "duration" : 0
        }
      }, {
        "uid" : "9873a34b025bb2d8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1900/#testresult/9873a34b025bb2d8",
        "status" : "passed",
        "time" : {
          "start" : 1733949049651,
          "stop" : 1733949090210,
          "duration" : 40559
        }
      }, {
        "uid" : "689b090f506e6b7b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1899/#testresult/689b090f506e6b7b",
        "status" : "passed",
        "time" : {
          "start" : 1733946479664,
          "stop" : 1733946520128,
          "duration" : 40464
        }
      }, {
        "uid" : "7ca821fd6cbc643e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1898/#testresult/7ca821fd6cbc643e",
        "status" : "passed",
        "time" : {
          "start" : 1733941810232,
          "stop" : 1733941849935,
          "duration" : 39703
        }
      }, {
        "uid" : "b1915079375fd396",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/b1915079375fd396",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733941889874,
          "stop" : 1733941983174,
          "duration" : 93300
        }
      }, {
        "uid" : "96728a3f94a61795",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/96728a3f94a61795",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733932245293,
          "stop" : 1733932338375,
          "duration" : 93082
        }
      }, {
        "uid" : "4e604c651769754b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/4e604c651769754b",
        "status" : "passed",
        "time" : {
          "start" : 1733887173133,
          "stop" : 1733887213139,
          "duration" : 40006
        }
      }, {
        "uid" : "68582a32dfa0e479",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/68582a32dfa0e479",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733890775352,
          "stop" : 1733890868556,
          "duration" : 93204
        }
      }, {
        "uid" : "5f794e4bdc624eb2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/5f794e4bdc624eb2",
        "status" : "passed",
        "time" : {
          "start" : 1733887173133,
          "stop" : 1733887213139,
          "duration" : 40006
        }
      }, {
        "uid" : "c960ce6374fc28f2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1892/#testresult/c960ce6374fc28f2",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733876242812,
          "stop" : 1733876336027,
          "duration" : 93215
        }
      }, {
        "uid" : "d8550204415aeeff",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1893/#testresult/d8550204415aeeff",
        "status" : "passed",
        "time" : {
          "start" : 1733876547320,
          "stop" : 1733876586766,
          "duration" : 39446
        }
      }, {
        "uid" : "c3ba1d0a22b90d81",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1887/#testresult/c3ba1d0a22b90d81",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733865762667,
          "stop" : 1733865855780,
          "duration" : 93113
        }
      }, {
        "uid" : "1ff4ad1505d3a3ef",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1888/#testresult/1ff4ad1505d3a3ef",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733865598678,
          "stop" : 1733865641547,
          "duration" : 42869
        }
      }, {
        "uid" : "9e94e9b5ebbc32f9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1884/#testresult/9e94e9b5ebbc32f9",
        "status" : "passed",
        "time" : {
          "start" : 1733854175153,
          "stop" : 1733854214911,
          "duration" : 39758
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "f0926648a4f207df.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}