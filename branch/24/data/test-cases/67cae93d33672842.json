{
  "uid" : "67cae93d33672842",
  "name" : "test_hello",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello",
  "historyId" : "728c1ad8cfe5fc9c60fb1445998f2048",
  "time" : {
    "start" : 1736272967872,
    "stop" : 1736273013140,
    "duration" : 45268
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffa23832d0>\ndevice = <golioth.golioth.Device object at 0xffffa2381310>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736272938322,
      "stop" : 1736272938323,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736272938330,
      "stop" : 1736272938786,
      "duration" : 456
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1736272938326,
      "stop" : 1736272938326,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736272938324,
      "stop" : 1736272938324,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1736272939630,
      "stop" : 1736272966805,
      "duration" : 27175
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736272938324,
      "stop" : 1736272938324,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736272938325,
      "stop" : 1736272938325,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736272938329,
      "stop" : 1736272938330,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1736272938326,
      "stop" : 1736272938328,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736272938329,
      "stop" : 1736272938329,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736272938787,
      "stop" : 1736272939629,
      "duration" : 842
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1736272966805,
      "stop" : 1736272967869,
      "duration" : 1064
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffa23832d0>\ndevice = <golioth.golioth.Device object at 0xffffa2381310>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c3b7fabe6fe6d7b1",
      "name" : "log",
      "source" : "c3b7fabe6fe6d7b1.txt",
      "type" : "text/plain",
      "size" : 19368
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1736273013729,
      "stop" : 1736273013732,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1736273013320,
      "stop" : 1736273013333,
      "duration" : 13
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1736273013736,
      "stop" : 1736273013737,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1736273013334,
      "stop" : 1736273013727,
      "duration" : 393
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "429f002b2281"
  }, {
    "name" : "thread",
    "value" : "975-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf9160dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "7010a41b8a45cee4",
      "status" : "passed",
      "time" : {
        "start" : 1736272282490,
        "stop" : 1736272331714,
        "duration" : 49224
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 18,
        "unknown" : 0,
        "total" : 23
      },
      "items" : [ {
        "uid" : "b962f0df81258456",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1/#testresult/b962f0df81258456",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1736225941013,
          "stop" : 1736226053749,
          "duration" : 112736
        }
      }, {
        "uid" : "2d9e5c1ba5f710c5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/2d9e5c1ba5f710c5",
        "status" : "passed",
        "time" : {
          "start" : 1736209441581,
          "stop" : 1736209466316,
          "duration" : 24735
        }
      }, {
        "uid" : "14671c7204ff34e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/14671c7204ff34e",
        "status" : "passed",
        "time" : {
          "start" : 1736209441581,
          "stop" : 1736209466316,
          "duration" : 24735
        }
      }, {
        "uid" : "a5fcce4d29c5c791",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/a5fcce4d29c5c791",
        "status" : "passed",
        "time" : {
          "start" : 1735950348019,
          "stop" : 1735950396121,
          "duration" : 48102
        }
      }, {
        "uid" : "f436692ab7ab2b48",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/f436692ab7ab2b48",
        "status" : "passed",
        "time" : {
          "start" : 1735928496853,
          "stop" : 1735928521526,
          "duration" : 24673
        }
      }, {
        "uid" : "fad542478cf0a62c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/fad542478cf0a62c",
        "status" : "passed",
        "time" : {
          "start" : 1735933005841,
          "stop" : 1735933030884,
          "duration" : 25043
        }
      }, {
        "uid" : "791f10c1c7e53b9c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/791f10c1c7e53b9c",
        "status" : "passed",
        "time" : {
          "start" : 1735928496853,
          "stop" : 1735928521526,
          "duration" : 24673
        }
      }, {
        "uid" : "feaea8a9a967af60",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/feaea8a9a967af60",
        "status" : "passed",
        "time" : {
          "start" : 1735924456477,
          "stop" : 1735924492042,
          "duration" : 35565
        }
      }, {
        "uid" : "908471edc8fc5208",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/908471edc8fc5208",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1735865147113,
          "stop" : 1735865259838,
          "duration" : 112725
        }
      }, {
        "uid" : "a63891a47579ed6b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/a63891a47579ed6b",
        "status" : "passed",
        "time" : {
          "start" : 1735864055561,
          "stop" : 1735864093926,
          "duration" : 38365
        }
      }, {
        "uid" : "d7fc1a30315963cb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/d7fc1a30315963cb",
        "status" : "passed",
        "time" : {
          "start" : 1735853527791,
          "stop" : 1735853552692,
          "duration" : 24901
        }
      }, {
        "uid" : "14948550bc0ae4cf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/14948550bc0ae4cf",
        "status" : "passed",
        "time" : {
          "start" : 1735849854295,
          "stop" : 1735849896263,
          "duration" : 41968
        }
      }, {
        "uid" : "89fb8f046f4c27ba",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/89fb8f046f4c27ba",
        "status" : "passed",
        "time" : {
          "start" : 1735848655079,
          "stop" : 1735848680874,
          "duration" : 25795
        }
      }, {
        "uid" : "946f88c6496d0248",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/946f88c6496d0248",
        "status" : "passed",
        "time" : {
          "start" : 1735838271474,
          "stop" : 1735838296240,
          "duration" : 24766
        }
      }, {
        "uid" : "1d2a1e4b97f9efdc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1993/#testresult/1d2a1e4b97f9efdc",
        "status" : "passed",
        "time" : {
          "start" : 1735834294020,
          "stop" : 1735834319163,
          "duration" : 25143
        }
      }, {
        "uid" : "fa360f8cc3cc7d97",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1992/#testresult/fa360f8cc3cc7d97",
        "status" : "passed",
        "time" : {
          "start" : 1735829360631,
          "stop" : 1735829385495,
          "duration" : 24864
        }
      }, {
        "uid" : "15c14759c0785456",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1989/#testresult/15c14759c0785456",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1735679972175,
          "stop" : 1735680084989,
          "duration" : 112814
        }
      }, {
        "uid" : "889ae37ae51e3b6c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2/#testresult/889ae37ae51e3b6c",
        "status" : "passed",
        "time" : {
          "start" : 1735680105476,
          "stop" : 1735680129956,
          "duration" : 24480
        }
      }, {
        "uid" : "ee75bf4d4c016d30",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1987/#testresult/ee75bf4d4c016d30",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1735670367573,
          "stop" : 1735670480284,
          "duration" : 112711
        }
      }, {
        "uid" : "801bbad93f594b0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1986/#testresult/801bbad93f594b0",
        "status" : "passed",
        "time" : {
          "start" : 1735666197365,
          "stop" : 1735666222268,
          "duration" : 24903
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "nrf9160dk", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "67cae93d33672842.json",
  "parameterValues" : [ "'nrf9160dk'", "'zephyr'" ]
}