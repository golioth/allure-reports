{"uid":"dc8a1c1c983f44b1","name":"test_no_args","fullName":"tests.hil.tests.rpc.test_rpc#test_no_args","historyId":"8550db7a61e240971014d0cb2b88a59c","time":{"start":1731960379262,"stop":1731960384753,"duration":5491},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffb4200e50>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffffb4237310>\ndevice = <golioth.golioth.Device object at 0xffffb4201690>\n\n    async def test_no_args(board, device):\n>       await device.rpc.no_response()\n\ntests/hil/tests/rpc/test_rpc.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffb4200e50>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731960301323,"stop":1731960301324,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731960301324,"stop":1731960301324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731960301325,"stop":1731960301325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731960301326,"stop":1731960301327,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731960301326,"stop":1731960301326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731960301327,"stop":1731960301327,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731960301328,"stop":1731960301329,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731960301328,"stop":1731960301328,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731960301329,"stop":1731960301329,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731960301330,"stop":1731960301330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731960301330,"stop":1731960301330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731960301331,"stop":1731960301863,"duration":532},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731960301331,"stop":1731960301331,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731960301864,"stop":1731960342909,"duration":41045},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731960342910,"stop":1731960343926,"duration":1016},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731960343926,"stop":1731960378130,"duration":34204},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1731960441097,"stop":1731960441098,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731960441100,"stop":1731960441595,"duration":495},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731960441597,"stop":1731960441598,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731960441601,"stop":1731960441603,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"e729ccc43e47"},{"name":"thread","value":"266-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":26,"unknown":0,"total":30},"items":[{"uid":"333fb464a93e527e","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/333fb464a93e527e","status":"passed","time":{"start":1731957096972,"stop":1731957097986,"duration":1014}},{"uid":"847a6a0771e1270","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/847a6a0771e1270","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'","time":{"start":1731954213968,"stop":1731954213968,"duration":0}},{"uid":"a5c55f4bae6b595d","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/a5c55f4bae6b595d","status":"passed","time":{"start":1731934876275,"stop":1731934877239,"duration":964}},{"uid":"f2cf4e63e2a7a3ab","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/f2cf4e63e2a7a3ab","status":"passed","time":{"start":1731922483899,"stop":1731922485456,"duration":1557}},{"uid":"f5c0345c41340cc7","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/f5c0345c41340cc7","status":"passed","time":{"start":1731905247449,"stop":1731905248407,"duration":958}},{"uid":"a277c62553d9e940","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/a277c62553d9e940","status":"passed","time":{"start":1731713655455,"stop":1731713656412,"duration":957}},{"uid":"2fd1acd83753bc34","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/2fd1acd83753bc34","status":"passed","time":{"start":1731710652214,"stop":1731710653796,"duration":1582}},{"uid":"d717655574a1b20a","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/d717655574a1b20a","status":"passed","time":{"start":1731705754608,"stop":1731705756223,"duration":1615}},{"uid":"72a02341ab78d252","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/72a02341ab78d252","status":"passed","time":{"start":1731706618607,"stop":1731706619562,"duration":955}},{"uid":"3470f03e0a0c3d34","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/3470f03e0a0c3d34","status":"passed","time":{"start":1731694386679,"stop":1731694388220,"duration":1541}},{"uid":"ece719149ff2eb85","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/ece719149ff2eb85","status":"passed","time":{"start":1731690359459,"stop":1731690360165,"duration":706}},{"uid":"ef63794db8ace3c","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/ef63794db8ace3c","status":"passed","time":{"start":1731624809827,"stop":1731624810795,"duration":968}},{"uid":"91ce5f4775777f95","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/91ce5f4775777f95","status":"passed","time":{"start":1731621427214,"stop":1731621428884,"duration":1670}},{"uid":"574e8abc1a7b7f7c","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/574e8abc1a7b7f7c","status":"passed","time":{"start":1731615918958,"stop":1731615920528,"duration":1570}},{"uid":"e997b82e1093f032","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/e997b82e1093f032","status":"passed","time":{"start":1731612409404,"stop":1731612410940,"duration":1536}},{"uid":"5b6fadd6f19ff0","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/5b6fadd6f19ff0","status":"passed","time":{"start":1731609651912,"stop":1731609652893,"duration":981}},{"uid":"43601123c851775a","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/43601123c851775a","status":"passed","time":{"start":1731542626537,"stop":1731542628077,"duration":1540}},{"uid":"c860ae4ebc9551ec","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/c860ae4ebc9551ec","status":"passed","time":{"start":1731564508044,"stop":1731564509002,"duration":958}},{"uid":"251aba14082bd1b5","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/251aba14082bd1b5","status":"passed","time":{"start":1731542626537,"stop":1731542628077,"duration":1540}},{"uid":"5c78c2bef37185ad","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/5c78c2bef37185ad","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731538688780,"stop":1731538694100,"duration":5320}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"dc8a1c1c983f44b1.json","parameterValues":["'rak5010'","'zephyr'"]}