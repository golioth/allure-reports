{"uid":"f45a1fcc504ed2e6","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"05bf37cce2d49044eee3daa5509a1354","time":{"start":1731962466353,"stop":1731962475496,"duration":9143},"status":"broken","statusMessage":"trio_websocket._impl.ConnectionClosed","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff856a6250>\ndevice = <golioth.golioth.Device object at 0xffff856b54d0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n>           async for value in stream_iter:\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:618: in iter\n    yield await monitor.get()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:157: in get\n    msg = await self.ws.get_message()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <trio_websocket._impl.WebSocketConnection object at 0xffff85693550>\n\n    async def get_message(self):\n        '''\n        Receive the next WebSocket message.\n    \n        If no message is available immediately, then this function blocks until\n        a message is ready.\n    \n        If the remote endpoint closes the connection, then the caller can still\n        get messages sent prior to closing. Once all pending messages have been\n        retrieved, additional calls to this method will raise\n        ``ConnectionClosed``. If the local endpoint closes the connection, then\n        pending messages are discarded and calls to this method will immediately\n        raise ``ConnectionClosed``.\n    \n        :rtype: str or bytes\n        :raises ConnectionClosed: if the connection is closed.\n        '''\n        try:\n            message = await self._recv_channel.receive()\n        except (trio.ClosedResourceError, trio.EndOfChannel):\n>           raise ConnectionClosed(self._close_reason) from None\nE           trio_websocket._impl.ConnectionClosed\n\n/usr/local/lib/python3.11/dist-packages/trio_websocket/_impl.py:892: ConnectionClosed","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_ssid","time":{"start":1731962437862,"stop":1731962437863,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1731962437862,"stop":1731962437862,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731962437863,"stop":1731962437863,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731962437864,"stop":1731962437864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731962437864,"stop":1731962437864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731962437865,"stop":1731962437867,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731962437868,"stop":1731962437868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731962437868,"stop":1731962437868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731962437869,"stop":1731962438422,"duration":553},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731962438422,"stop":1731962439459,"duration":1037},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731962439460,"stop":1731962463152,"duration":23692},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731962463152,"stop":1731962466346,"duration":3194},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio_websocket._impl.ConnectionClosed","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff856a6250>\ndevice = <golioth.golioth.Device object at 0xffff856b54d0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n>           async for value in stream_iter:\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:618: in iter\n    yield await monitor.get()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:157: in get\n    msg = await self.ws.get_message()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <trio_websocket._impl.WebSocketConnection object at 0xffff85693550>\n\n    async def get_message(self):\n        '''\n        Receive the next WebSocket message.\n    \n        If no message is available immediately, then this function blocks until\n        a message is ready.\n    \n        If the remote endpoint closes the connection, then the caller can still\n        get messages sent prior to closing. Once all pending messages have been\n        retrieved, additional calls to this method will raise\n        ``ConnectionClosed``. If the local endpoint closes the connection, then\n        pending messages are discarded and calls to this method will immediately\n        raise ``ConnectionClosed``.\n    \n        :rtype: str or bytes\n        :raises ConnectionClosed: if the connection is closed.\n        '''\n        try:\n            message = await self._recv_channel.receive()\n        except (trio.ClosedResourceError, trio.EndOfChannel):\n>           raise ConnectionClosed(self._close_reason) from None\nE           trio_websocket._impl.ConnectionClosed\n\n/usr/local/lib/python3.11/dist-packages/trio_websocket/_impl.py:892: ConnectionClosed","steps":[],"attachments":[{"uid":"3d2127ab5506f68","name":"log","source":"3d2127ab5506f68.txt","type":"text/plain","size":14256}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731962475942,"stop":1731962476084,"duration":142},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731962476086,"stop":1731962481455,"duration":5369},"status":"broken","statusMessage":"httpx.ReadTimeout\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 934, in run_asyncgen_fixture\n    self._call_in_runner_task(asyncgen.asend, None)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py\", line 68, in device\n    await project.delete_device(device)\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 257, in delete_device\n    await self.delete_device_by_id(dev.id)\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 254, in delete_device_by_id\n    await self.delete(f'devices/{id}')\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 80, in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 118, in delete\n    return await c.delete(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 2012, in delete\n    return await self.request(\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"project::0","time":{"start":1731962481461,"stop":1731962481468,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731962481479,"stop":1731962481480,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf52840dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"e518faadc3a6"},{"name":"thread","value":"824-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":28,"unknown":0,"total":30},"items":[{"uid":"ee471299e7f6fb27","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/ee471299e7f6fb27","status":"passed","time":{"start":1731958016205,"stop":1731958040415,"duration":24210}},{"uid":"5a09f83d9e6f1109","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/5a09f83d9e6f1109","status":"passed","time":{"start":1731955128932,"stop":1731955152012,"duration":23080}},{"uid":"80ac892b6ce828d9","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/80ac892b6ce828d9","status":"passed","time":{"start":1731933641198,"stop":1731933664477,"duration":23279}},{"uid":"ebdf40cf95586107","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/ebdf40cf95586107","status":"passed","time":{"start":1731922931682,"stop":1731922954881,"duration":23199}},{"uid":"c75150d9e8e0d830","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/c75150d9e8e0d830","status":"passed","time":{"start":1731905635751,"stop":1731905658401,"duration":22650}},{"uid":"da3ef414b265291","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/da3ef414b265291","status":"passed","time":{"start":1731713766809,"stop":1731713789283,"duration":22474}},{"uid":"92bc8f3ed6ffc2fb","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/92bc8f3ed6ffc2fb","status":"passed","time":{"start":1731710459702,"stop":1731710483490,"duration":23788}},{"uid":"f4bb2d0c7af4f147","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/f4bb2d0c7af4f147","status":"passed","time":{"start":1731706218314,"stop":1731706241119,"duration":22805}},{"uid":"2048390a11d7decc","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/2048390a11d7decc","status":"passed","time":{"start":1731694901965,"stop":1731694929716,"duration":27751}},{"uid":"7ae75fe5882a8900","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/7ae75fe5882a8900","status":"passed","time":{"start":1731689582434,"stop":1731689605273,"duration":22839}},{"uid":"12078d236112649a","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/12078d236112649a","status":"passed","time":{"start":1731625019258,"stop":1731625041700,"duration":22442}},{"uid":"5a19c1ce4226450c","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/5a19c1ce4226450c","status":"passed","time":{"start":1731621675626,"stop":1731621698733,"duration":23107}},{"uid":"f9860f1c93459161","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/f9860f1c93459161","status":"passed","time":{"start":1731616239572,"stop":1731616263218,"duration":23646}},{"uid":"8cd4027beee5208","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/8cd4027beee5208","status":"passed","time":{"start":1731613699172,"stop":1731613721571,"duration":22399}},{"uid":"f05b23e41c7e14d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/f05b23e41c7e14d2","status":"passed","time":{"start":1731610774204,"stop":1731610797206,"duration":23002}},{"uid":"87dc1c75bba0cd00","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/87dc1c75bba0cd00","status":"passed","time":{"start":1731597203048,"stop":1731597225970,"duration":22922}},{"uid":"f230afadac5e0ac1","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/f230afadac5e0ac1","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1731548234180,"stop":1731548234180,"duration":0}},{"uid":"6231e3bf35c8bc6c","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/6231e3bf35c8bc6c","status":"passed","time":{"start":1731564216822,"stop":1731564239620,"duration":22798}},{"uid":"2236726d64d1d1f","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/2236726d64d1d1f","status":"passed","time":{"start":1731542874261,"stop":1731542896782,"duration":22521}},{"uid":"cb926ab94b19b2cb","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/cb926ab94b19b2cb","status":"passed","time":{"start":1731539709884,"stop":1731539733272,"duration":23388}}]},"tags":["mikes_orange_pi","nrf52840dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"f45a1fcc504ed2e6.json","parameterValues":["'nrf52840dk'","'zephyr'"]}