{"uid":"fa0e33efd23ff18c","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1729034316137,"stop":1729034340186,"duration":24049},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff9caf9250>\ndevice = <golioth.golioth.Device object at 0xffff9cce2010>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729034272073,"stop":1729034272073,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729034272074,"stop":1729034272074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729034272075,"stop":1729034272075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729034272075,"stop":1729034272075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1729034272076,"stop":1729034272078,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1729034272076,"stop":1729034272076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729034272079,"stop":1729034272079,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729034272080,"stop":1729034272080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729034272080,"stop":1729034273850,"duration":1770},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729034273851,"stop":1729034279877,"duration":6026},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1729034279878,"stop":1729034315526,"duration":35648},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1729034315527,"stop":1729034316134,"duration":607},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff9caf9250>\ndevice = <golioth.golioth.Device object at 0xffff9cce2010>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"6488c12be7bd81ef","name":"log","source":"6488c12be7bd81ef.txt","type":"text/plain","size":32525}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1729034340397,"stop":1729034340411,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729034340412,"stop":1729034341758,"duration":1346},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729034341760,"stop":1729034341762,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1729034341767,"stop":1729034341767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"77190c04abdb"},{"name":"thread","value":"343-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":5,"unknown":0,"total":6},"items":[{"uid":"f3343b83e60532b8","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/f3343b83e60532b8","status":"passed","time":{"start":1729030984744,"stop":1729031004211,"duration":19467}},{"uid":"6ceb481552d0d7e6","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/6ceb481552d0d7e6","status":"passed","time":{"start":1729020820289,"stop":1729020841865,"duration":21576}},{"uid":"a4c409ae50270db3","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/a4c409ae50270db3","status":"passed","time":{"start":1729023948341,"stop":1729023966981,"duration":18640}},{"uid":"f9ddc7002159a5b4","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/f9ddc7002159a5b4","status":"passed","time":{"start":1729020820289,"stop":1729020841865,"duration":21576}},{"uid":"fe4de8886bee4a70","reportUrl":"https://golioth.github.io/allure-reports/branch/1638//#testresult/fe4de8886bee4a70","status":"passed","time":{"start":1729005815139,"stop":1729005856322,"duration":41183}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"fa0e33efd23ff18c.json","parameterValues":["'rak5010'","'zephyr'"]}