{"uid":"ce6d1e9836fc18b1","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"d6f328dc7a80cab5561e8020f444a4be","time":{"start":1731608281663,"stop":1731608294123,"duration":12460},"status":"failed","statusMessage":"AssertionError: assert 20.5 == 20.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fd4b3246950>\ndevice = <golioth.golioth.Device object at 0x7fd4b3234bd0>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 20.5 == 20.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"twister_harness_config","time":{"start":1731608281087,"stop":1731608281087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731608281087,"stop":1731608281087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731608281087,"stop":1731608281087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731608281087,"stop":1731608281087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1731608281087,"stop":1731608281087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731608281087,"stop":1731608281088,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731608281088,"stop":1731608281249,"duration":161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731608281088,"stop":1731608281088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731608281088,"stop":1731608281088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731608281249,"stop":1731608281657,"duration":408},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731608281657,"stop":1731608281658,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731608281658,"stop":1731608281662,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 20.5 == 20.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fd4b3246950>\ndevice = <golioth.golioth.Device object at 0x7fd4b3234bd0>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 20.5 == 20.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","steps":[],"attachments":[{"uid":"c98ef950b8825246","name":"log","source":"c98ef950b8825246.txt","type":"text/plain","size":13504}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731608294157,"stop":1731608294658,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731608294659,"stop":1731608294921,"duration":262},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731608294922,"stop":1731608294922,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731608294923,"stop":1731608294923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 11"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"13e4986e42e8"},{"name":"thread","value":"84902-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":15,"unknown":0,"total":16},"items":[{"uid":"89672e1fcba0775d","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/89672e1fcba0775d","status":"passed","time":{"start":1731606991773,"stop":1731607012499,"duration":20726}},{"uid":"bf4847e855565cdf","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/bf4847e855565cdf","status":"passed","time":{"start":1731538601826,"stop":1731538623526,"duration":21700}},{"uid":"e1fba90217464d04","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/e1fba90217464d04","status":"passed","time":{"start":1731546255609,"stop":1731546277406,"duration":21797}},{"uid":"1705da20efd420b1","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/1705da20efd420b1","status":"passed","time":{"start":1731533326223,"stop":1731533347222,"duration":20999}},{"uid":"6d538b6da9c5848","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/6d538b6da9c5848","status":"passed","time":{"start":1731538601826,"stop":1731538623526,"duration":21700}},{"uid":"1166df1ffa432066","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/1166df1ffa432066","status":"passed","time":{"start":1731533722780,"stop":1731533743728,"duration":20948}},{"uid":"bc89eace258a0691","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/bc89eace258a0691","status":"passed","time":{"start":1731533340575,"stop":1731533361460,"duration":20885}},{"uid":"f03ea1add5d8a96","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/f03ea1add5d8a96","status":"passed","time":{"start":1731533326223,"stop":1731533347222,"duration":20999}},{"uid":"3b11c51fe456fcb6","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/3b11c51fe456fcb6","status":"passed","time":{"start":1731518181573,"stop":1731518202357,"duration":20784}},{"uid":"e2cd1c1d24b28cee","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/e2cd1c1d24b28cee","status":"passed","time":{"start":1731518181573,"stop":1731518202357,"duration":20784}},{"uid":"3de5109f51916436","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/3de5109f51916436","status":"passed","time":{"start":1731518181573,"stop":1731518202357,"duration":20784}},{"uid":"ba86e2bfcf7a316f","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/ba86e2bfcf7a316f","status":"passed","time":{"start":1731518181573,"stop":1731518202357,"duration":20784}},{"uid":"905b33511414756f","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/905b33511414756f","status":"passed","time":{"start":1731425815523,"stop":1731425836386,"duration":20863}},{"uid":"55db7f9fadb9fb84","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/55db7f9fadb9fb84","status":"passed","time":{"start":1731102164155,"stop":1731102184893,"duration":20738}},{"uid":"df4d70449075b050","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/df4d70449075b050","status":"passed","time":{"start":1731096776101,"stop":1731096797136,"duration":21035}}]},"tags":["GitHub Actions 11","native_sim_64","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"ce6d1e9836fc18b1.json","parameterValues":["'native_sim_64'","'zephyr'"]}