{"uid":"78f75e19e8313fd3","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"7b5bd2e87b0538b1f5ac1141f1902779","time":{"start":1737487756617,"stop":1737487785423,"duration":28806},"status":"failed","statusMessage":"AssertionError: assert 6 == 0\n +  where 6 = int('6')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb6482810>\ndevice = <golioth.golioth.Device object at 0xffffb6634a10>\nproject = <golioth.golioth.Project object at 0xffffb6590ed0>\nreleases = {'test_blocks': Release <678ff57be7f18576acc980ce, release_tags=[], device_tags=['678ff57ae7f18576acc980cb'], artifact...ease_tags=[], device_tags=['678ff57ae7f18576acc980cb'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 6 == 0\nE                    +  where 6 = int('6')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1737487688277,"stop":1737487688278,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1737487688278,"stop":1737487688278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1737487688279,"stop":1737487688280,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1737487688280,"stop":1737487688281,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737487688281,"stop":1737487688281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737487688282,"stop":1737487688282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1737487688283,"stop":1737487688283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1737487688284,"stop":1737487688284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1737487688284,"stop":1737487688284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737487688285,"stop":1737487688285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737487688285,"stop":1737487688285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737487688286,"stop":1737487688286,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1737487688286,"stop":1737487733346,"duration":45060},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737487733348,"stop":1737487734092,"duration":744},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737487734092,"stop":1737487734912,"duration":820},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1737487734912,"stop":1737487737264,"duration":2352},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1737487737265,"stop":1737487737707,"duration":442},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1737487737708,"stop":1737487738439,"duration":731},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1737487738439,"stop":1737487740358,"duration":1919},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1737487756614,"stop":1737487756615,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 6 == 0\n +  where 6 = int('6')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb6482810>\ndevice = <golioth.golioth.Device object at 0xffffb6634a10>\nproject = <golioth.golioth.Project object at 0xffffb6590ed0>\nreleases = {'test_blocks': Release <678ff57be7f18576acc980ce, release_tags=[], device_tags=['678ff57ae7f18576acc980cb'], artifact...ease_tags=[], device_tags=['678ff57ae7f18576acc980cb'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 6 == 0\nE                    +  where 6 = int('6')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","steps":[],"attachments":[{"uid":"cfdc7efdaee6708d","name":"stdout","source":"cfdc7efdaee6708d.txt","type":"text/plain","size":85}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1737487785639,"stop":1737487786402,"duration":763},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1737487786404,"stop":1737487788206,"duration":1802},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1737487788208,"stop":1737487788986,"duration":778},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1737487788988,"stop":1737487788988,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1737487788990,"stop":1737487788990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737487788992,"stop":1737487789369,"duration":377},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737487789371,"stop":1737487789371,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1737487789373,"stop":1737487789377,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"fa23360114d9"},{"name":"thread","value":"244-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":3,"skipped":0,"passed":49,"unknown":0,"total":54},"items":[{"uid":"24f0f03c80e3b4dc","reportUrl":"https://golioth.github.io/allure-reports/branch/77//#testresult/24f0f03c80e3b4dc","status":"passed","time":{"start":1737056855044,"stop":1737056902572,"duration":47528}},{"uid":"e1240d772e1c12f5","reportUrl":"https://golioth.github.io/allure-reports/branch/77//#testresult/e1240d772e1c12f5","status":"passed","time":{"start":1737056855044,"stop":1737056902572,"duration":47528}},{"uid":"fffbac53e2277dbd","reportUrl":"https://golioth.github.io/allure-reports/branch/66//#testresult/fffbac53e2277dbd","status":"passed","time":{"start":1736978691555,"stop":1736978739119,"duration":47564}},{"uid":"a0eabfa5010fe4d0","reportUrl":"https://golioth.github.io/allure-reports/branch/74//#testresult/a0eabfa5010fe4d0","status":"passed","time":{"start":1737017380886,"stop":1737017428422,"duration":47536}},{"uid":"aa4a4dcfe6cad825","reportUrl":"https://golioth.github.io/allure-reports/branch/73//#testresult/aa4a4dcfe6cad825","status":"passed","time":{"start":1737016340231,"stop":1737016388021,"duration":47790}},{"uid":"9ffbac6ca0bee781","reportUrl":"https://golioth.github.io/allure-reports/branch/66//#testresult/9ffbac6ca0bee781","status":"passed","time":{"start":1736978691555,"stop":1736978739119,"duration":47564}},{"uid":"40accba9a0d6faa2","reportUrl":"https://golioth.github.io/allure-reports/branch/65//#testresult/40accba9a0d6faa2","status":"passed","time":{"start":1736976747897,"stop":1736976795431,"duration":47534}},{"uid":"8a49c02973e111b6","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/8a49c02973e111b6","status":"passed","time":{"start":1736960170509,"stop":1736960218178,"duration":47669}},{"uid":"29544fe9037c3978","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/29544fe9037c3978","status":"passed","time":{"start":1736960170509,"stop":1736960218178,"duration":47669}},{"uid":"73ef18881dcf582c","reportUrl":"https://golioth.github.io/allure-reports/branch/63//#testresult/73ef18881dcf582c","status":"passed","time":{"start":1736969833352,"stop":1736969881311,"duration":47959}},{"uid":"90673cfa868100","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/90673cfa868100","status":"passed","time":{"start":1736960170509,"stop":1736960218178,"duration":47669}},{"uid":"8cbcd73b977e3d45","reportUrl":"https://golioth.github.io/allure-reports/branch/52//#testresult/8cbcd73b977e3d45","status":"passed","time":{"start":1736581846752,"stop":1736581894680,"duration":47928}},{"uid":"733bce8f7cc3dc6b","reportUrl":"https://golioth.github.io/allure-reports/branch/51//#testresult/733bce8f7cc3dc6b","status":"passed","time":{"start":1736580097871,"stop":1736580145706,"duration":47835}},{"uid":"3836cf2919b6ecac","reportUrl":"https://golioth.github.io/allure-reports/branch/47//#testresult/3836cf2919b6ecac","status":"passed","time":{"start":1736528885354,"stop":1736528933558,"duration":48204}},{"uid":"e3edf8c8a41f2d09","reportUrl":"https://golioth.github.io/allure-reports/branch/46//#testresult/e3edf8c8a41f2d09","status":"passed","time":{"start":1736524131166,"stop":1736524179484,"duration":48318}},{"uid":"5b62a687960af08c","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/5b62a687960af08c","status":"passed","time":{"start":1736444623915,"stop":1736444672038,"duration":48123}},{"uid":"242b0ab1f36ba4eb","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/242b0ab1f36ba4eb","status":"passed","time":{"start":1736440123865,"stop":1736440171973,"duration":48108}},{"uid":"5b0c673551bfc6e3","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/5b0c673551bfc6e3","status":"passed","time":{"start":1736444623915,"stop":1736444672038,"duration":48123}},{"uid":"c5161c2ceb8d786d","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/c5161c2ceb8d786d","status":"passed","time":{"start":1736440123865,"stop":1736440171973,"duration":48108}},{"uid":"10096594d95c9d14","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/10096594d95c9d14","status":"passed","time":{"start":1736430592377,"stop":1736430640301,"duration":47924}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"78f75e19e8313fd3.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}