{
  "uid" : "74dc311841290498",
  "name" : "test_lightdb_delete",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.delete.pytest.test_sample#test_lightdb_delete",
  "historyId" : "f1e2c2234d7dcc518bcd25346bf33416",
  "time" : {
    "start" : 1736286774648,
    "stop" : 1736286868103,
    "duration" : 93455
  },
  "status" : "broken",
  "statusMessage" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffb5893ad0>\ndevice = <golioth.golioth.Device object at 0xffffb58ae610>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_lightdb_delete(shell, device, wifi_ssid, wifi_psk):\n        # Set counter in lightdb state\n    \n        await counter_set_and_verify(device, 34)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n>       shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/delete/pytest/test_sample.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = HardwareAdapter(), regex = '.*Golioth CoAP client connected'\nnum_of_lines = None, timeout = 90.0, print_output = True\n\n    def readlines_until(\n            self,\n            regex: str | None = None,\n            num_of_lines: int | None = None,\n            timeout: float | None = None,\n            print_output: bool = True,\n    ) -> list[str]:\n        \"\"\"\n        Read available output lines produced by device from internal buffer\n        until following conditions:\n    \n        1. If regex is provided - read until regex regex is found in read\n           line (or until timeout).\n        2. If num_of_lines is provided - read until number of read lines is\n           equal to num_of_lines (or until timeout).\n        3. If none of above is provided - return immediately lines collected so\n           far in internal buffer.\n    \n        If timeout is not provided, then use base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if regex:\n            regex_compiled = re.compile(regex)\n        lines: list[str] = []\n        if regex or num_of_lines:\n            timeout_time: float = time.time() + timeout\n            while time.time() < timeout_time:\n                try:\n                    line = self.readline(0.1, print_output)\n                except TwisterHarnessTimeoutException:\n                    continue\n                lines.append(line)\n                if regex and regex_compiled.search(line):\n                    break\n                if num_of_lines and len(lines) == num_of_lines:\n                    break\n            else:\n                msg = 'Read from device timeout occurred'\n                logger.error(msg)\n>               raise TwisterHarnessTimeoutException(msg)\nE               twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:190: TwisterHarnessTimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "dut",
    "time" : {
      "start" : 1736286746656,
      "stop" : 1736286773562,
      "duration" : 26906
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736286745422,
      "stop" : 1736286745422,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736286745422,
      "stop" : 1736286745834,
      "duration" : 412
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736286745417,
      "stop" : 1736286745417,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1736286745418,
      "stop" : 1736286745418,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1736286773562,
      "stop" : 1736286774645,
      "duration" : 1083
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736286745835,
      "stop" : 1736286746655,
      "duration" : 820
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736286745417,
      "stop" : 1736286745417,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736286745415,
      "stop" : 1736286745416,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736286745421,
      "stop" : 1736286745421,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736286745416,
      "stop" : 1736286745416,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1736286745418,
      "stop" : 1736286745420,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffb5893ad0>\ndevice = <golioth.golioth.Device object at 0xffffb58ae610>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_lightdb_delete(shell, device, wifi_ssid, wifi_psk):\n        # Set counter in lightdb state\n    \n        await counter_set_and_verify(device, 34)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n>       shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/delete/pytest/test_sample.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = HardwareAdapter(), regex = '.*Golioth CoAP client connected'\nnum_of_lines = None, timeout = 90.0, print_output = True\n\n    def readlines_until(\n            self,\n            regex: str | None = None,\n            num_of_lines: int | None = None,\n            timeout: float | None = None,\n            print_output: bool = True,\n    ) -> list[str]:\n        \"\"\"\n        Read available output lines produced by device from internal buffer\n        until following conditions:\n    \n        1. If regex is provided - read until regex regex is found in read\n           line (or until timeout).\n        2. If num_of_lines is provided - read until number of read lines is\n           equal to num_of_lines (or until timeout).\n        3. If none of above is provided - return immediately lines collected so\n           far in internal buffer.\n    \n        If timeout is not provided, then use base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if regex:\n            regex_compiled = re.compile(regex)\n        lines: list[str] = []\n        if regex or num_of_lines:\n            timeout_time: float = time.time() + timeout\n            while time.time() < timeout_time:\n                try:\n                    line = self.readline(0.1, print_output)\n                except TwisterHarnessTimeoutException:\n                    continue\n                lines.append(line)\n                if regex and regex_compiled.search(line):\n                    break\n                if num_of_lines and len(lines) == num_of_lines:\n                    break\n            else:\n                msg = 'Read from device timeout occurred'\n                logger.error(msg)\n>               raise TwisterHarnessTimeoutException(msg)\nE               twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:190: TwisterHarnessTimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7ba3494712370da6",
      "name" : "log",
      "source" : "7ba3494712370da6.txt",
      "type" : "text/plain",
      "size" : 20107
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "dut::0",
    "time" : {
      "start" : 1736286868392,
      "stop" : 1736286868417,
      "duration" : 25
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1736286868789,
      "stop" : 1736286868791,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1736286868419,
      "stop" : 1736286868787,
      "duration" : 368
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1736286868796,
      "stop" : 1736286868796,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "89a43ded7b99"
  }, {
    "name" : "thread",
    "value" : "672-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.delete.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf9160dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 25,
        "unknown" : 0,
        "total" : 26
      },
      "items" : [ {
        "uid" : "12228d69ea31da66",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/26/#testresult/12228d69ea31da66",
        "status" : "passed",
        "time" : {
          "start" : 1736285987788,
          "stop" : 1736286004564,
          "duration" : 16776
        }
      }, {
        "uid" : "caf2a199ae3c9387",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/25//#testresult/caf2a199ae3c9387",
        "status" : "passed",
        "time" : {
          "start" : 1736277176928,
          "stop" : 1736277195698,
          "duration" : 18770
        }
      }, {
        "uid" : "f97537845b194f2f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/24/#testresult/f97537845b194f2f",
        "status" : "passed",
        "time" : {
          "start" : 1736272568310,
          "stop" : 1736272600169,
          "duration" : 31859
        }
      }, {
        "uid" : "641a115446586ce0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1/#testresult/641a115446586ce0",
        "status" : "passed",
        "time" : {
          "start" : 1736225555173,
          "stop" : 1736225574691,
          "duration" : 19518
        }
      }, {
        "uid" : "6582521bb4ef5598",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/6582521bb4ef5598",
        "status" : "passed",
        "time" : {
          "start" : 1736208993723,
          "stop" : 1736209012747,
          "duration" : 19024
        }
      }, {
        "uid" : "44fce3b5bb681182",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/44fce3b5bb681182",
        "status" : "passed",
        "time" : {
          "start" : 1736208993723,
          "stop" : 1736209012747,
          "duration" : 19024
        }
      }, {
        "uid" : "6b0c6594e932edd6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/6b0c6594e932edd6",
        "status" : "passed",
        "time" : {
          "start" : 1735950001434,
          "stop" : 1735950027873,
          "duration" : 26439
        }
      }, {
        "uid" : "f2ad3e4214019cec",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/f2ad3e4214019cec",
        "status" : "passed",
        "time" : {
          "start" : 1735928045561,
          "stop" : 1735928062997,
          "duration" : 17436
        }
      }, {
        "uid" : "bb12430d1763d735",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/bb12430d1763d735",
        "status" : "passed",
        "time" : {
          "start" : 1735932604726,
          "stop" : 1735932620939,
          "duration" : 16213
        }
      }, {
        "uid" : "b95881459941fc3a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/b95881459941fc3a",
        "status" : "passed",
        "time" : {
          "start" : 1735928045561,
          "stop" : 1735928062997,
          "duration" : 17436
        }
      }, {
        "uid" : "38dc3062c0528420",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/38dc3062c0528420",
        "status" : "passed",
        "time" : {
          "start" : 1735924043829,
          "stop" : 1735924093639,
          "duration" : 49810
        }
      }, {
        "uid" : "95b750ff899cc9b0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/95b750ff899cc9b0",
        "status" : "passed",
        "time" : {
          "start" : 1735864834657,
          "stop" : 1735864852124,
          "duration" : 17467
        }
      }, {
        "uid" : "cc5a4fb0bb12579d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/cc5a4fb0bb12579d",
        "status" : "passed",
        "time" : {
          "start" : 1735863613403,
          "stop" : 1735863646481,
          "duration" : 33078
        }
      }, {
        "uid" : "64d88caf3538dad1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/64d88caf3538dad1",
        "status" : "passed",
        "time" : {
          "start" : 1735853264103,
          "stop" : 1735853281269,
          "duration" : 17166
        }
      }, {
        "uid" : "3e9f6fe4bfe1656a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/3e9f6fe4bfe1656a",
        "status" : "passed",
        "time" : {
          "start" : 1735849402311,
          "stop" : 1735849428285,
          "duration" : 25974
        }
      }, {
        "uid" : "5a3896e19aa36dc8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/5a3896e19aa36dc8",
        "status" : "passed",
        "time" : {
          "start" : 1735848333194,
          "stop" : 1735848350457,
          "duration" : 17263
        }
      }, {
        "uid" : "e06330309b7a7e7b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/e06330309b7a7e7b",
        "status" : "passed",
        "time" : {
          "start" : 1735837972695,
          "stop" : 1735837989945,
          "duration" : 17250
        }
      }, {
        "uid" : "ade64eb8a4517433",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1993/#testresult/ade64eb8a4517433",
        "status" : "passed",
        "time" : {
          "start" : 1735834036445,
          "stop" : 1735834052170,
          "duration" : 15725
        }
      }, {
        "uid" : "738050b437bf62aa",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1992/#testresult/738050b437bf62aa",
        "status" : "passed",
        "time" : {
          "start" : 1735829104005,
          "stop" : 1735829120281,
          "duration" : 16276
        }
      }, {
        "uid" : "d8c6f4e66f86bcd1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1989/#testresult/d8c6f4e66f86bcd1",
        "status" : "passed",
        "time" : {
          "start" : 1735679620588,
          "stop" : 1735679659098,
          "duration" : 38510
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "nrf9160dk", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "74dc311841290498.json",
  "parameterValues" : [ "'nrf9160dk'", "'zephyr'" ]
}