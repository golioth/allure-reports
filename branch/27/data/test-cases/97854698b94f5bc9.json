{
  "uid" : "97854698b94f5bc9",
  "name" : "test_hello",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello",
  "historyId" : "f1cf752999d3f3859e1cde5c2a14c34d",
  "time" : {
    "start" : 1736375533714,
    "stop" : 1736375556333,
    "duration" : 22619
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffb4047fd0>\ndevice = <golioth.golioth.Device object at 0xffffb4065ed0>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "device",
    "time" : {
      "start" : 1736375513255,
      "stop" : 1736375514132,
      "duration" : 877
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1736375512809,
      "stop" : 1736375512811,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736375512807,
      "stop" : 1736375512807,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736375512812,
      "stop" : 1736375512812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1736375512808,
      "stop" : 1736375512809,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736375512813,
      "stop" : 1736375513254,
      "duration" : 441
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736375512807,
      "stop" : 1736375512807,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736375512806,
      "stop" : 1736375512806,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736375512808,
      "stop" : 1736375512808,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1736375532882,
      "stop" : 1736375533712,
      "duration" : 830
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736375512812,
      "stop" : 1736375512812,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1736375514132,
      "stop" : 1736375532882,
      "duration" : 18750
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffb4047fd0>\ndevice = <golioth.golioth.Device object at 0xffffb4065ed0>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "62a1ae9f2d4fcb1d",
      "name" : "log",
      "source" : "62a1ae9f2d4fcb1d.txt",
      "type" : "text/plain",
      "size" : 20892
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1736375556540,
      "stop" : 1736375556917,
      "duration" : 377
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1736375556926,
      "stop" : 1736375556927,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1736375556919,
      "stop" : 1736375556921,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1736375556513,
      "stop" : 1736375556538,
      "duration" : 25
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32_devkitc_wrover"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.esp32_devkitc_wrover"
  }, {
    "name" : "tag",
    "value" : "tims_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "581d1cab8fae"
  }, {
    "name" : "thread",
    "value" : "517-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32_devkitc_wrover'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "23b4f36e11f84997",
      "status" : "passed",
      "time" : {
        "start" : 1736375489020,
        "stop" : 1736375508696,
        "duration" : 19676
      }
    }, {
      "uid" : "ca91d3967e58cc85",
      "status" : "passed",
      "time" : {
        "start" : 1736285094512,
        "stop" : 1736285118109,
        "duration" : 23597
      }
    }, {
      "uid" : "50e4c71768325f1f",
      "status" : "passed",
      "time" : {
        "start" : 1736285008335,
        "stop" : 1736285032163,
        "duration" : 23828
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 28,
        "unknown" : 0,
        "total" : 30
      },
      "items" : [ {
        "uid" : "11b6074b09d11b82",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/11b6074b09d11b82",
        "status" : "passed",
        "time" : {
          "start" : 1736357518110,
          "stop" : 1736357540751,
          "duration" : 22641
        }
      }, {
        "uid" : "268739b2739e89b1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/268739b2739e89b1",
        "status" : "passed",
        "time" : {
          "start" : 1736354839799,
          "stop" : 1736354862719,
          "duration" : 22920
        }
      }, {
        "uid" : "f87bef503bb7930a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/29/#testresult/f87bef503bb7930a",
        "status" : "passed",
        "time" : {
          "start" : 1736361651136,
          "stop" : 1736361674868,
          "duration" : 23732
        }
      }, {
        "uid" : "d8a0034bed086d49",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/27/#testresult/d8a0034bed086d49",
        "status" : "passed",
        "time" : {
          "start" : 1736285094512,
          "stop" : 1736285118109,
          "duration" : 23597
        }
      }, {
        "uid" : "93fd20099737e7b6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/26/#testresult/93fd20099737e7b6",
        "status" : "passed",
        "time" : {
          "start" : 1736284124579,
          "stop" : 1736284147384,
          "duration" : 22805
        }
      }, {
        "uid" : "8406a54203be7415",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/25//#testresult/8406a54203be7415",
        "status" : "passed",
        "time" : {
          "start" : 1736276304041,
          "stop" : 1736276327790,
          "duration" : 23749
        }
      }, {
        "uid" : "2a83e5f8d24f5cf3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/24/#testresult/2a83e5f8d24f5cf3",
        "status" : "passed",
        "time" : {
          "start" : 1736271487581,
          "stop" : 1736271512173,
          "duration" : 24592
        }
      }, {
        "uid" : "5b0ffaac9da09313",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1/#testresult/5b0ffaac9da09313",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1736225314127,
          "stop" : 1736225426785,
          "duration" : 112658
        }
      }, {
        "uid" : "9b0e464885c10fe6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/9b0e464885c10fe6",
        "status" : "passed",
        "time" : {
          "start" : 1736219001173,
          "stop" : 1736219023798,
          "duration" : 22625
        }
      }, {
        "uid" : "d31113a9649f9d0b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/d31113a9649f9d0b",
        "status" : "passed",
        "time" : {
          "start" : 1736208101583,
          "stop" : 1736208127150,
          "duration" : 25567
        }
      }, {
        "uid" : "244b1f96da886d13",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/244b1f96da886d13",
        "status" : "passed",
        "time" : {
          "start" : 1735947913502,
          "stop" : 1735947937143,
          "duration" : 23641
        }
      }, {
        "uid" : "6e7905c9036ca746",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/6e7905c9036ca746",
        "status" : "passed",
        "time" : {
          "start" : 1735927655968,
          "stop" : 1735927677832,
          "duration" : 21864
        }
      }, {
        "uid" : "63c8599ec5a9e8fd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/63c8599ec5a9e8fd",
        "status" : "passed",
        "time" : {
          "start" : 1735932167424,
          "stop" : 1735932193007,
          "duration" : 25583
        }
      }, {
        "uid" : "8f58f58be343c8b4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/8f58f58be343c8b4",
        "status" : "passed",
        "time" : {
          "start" : 1735927655968,
          "stop" : 1735927677832,
          "duration" : 21864
        }
      }, {
        "uid" : "763392b921e24806",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/763392b921e24806",
        "status" : "passed",
        "time" : {
          "start" : 1735922857313,
          "stop" : 1735922880735,
          "duration" : 23422
        }
      }, {
        "uid" : "d7496159d8963d6f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/d7496159d8963d6f",
        "status" : "passed",
        "time" : {
          "start" : 1735863061666,
          "stop" : 1735863085598,
          "duration" : 23932
        }
      }, {
        "uid" : "b931d2b70d06559e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/b931d2b70d06559e",
        "status" : "passed",
        "time" : {
          "start" : 1735860538835,
          "stop" : 1735860563268,
          "duration" : 24433
        }
      }, {
        "uid" : "1b8ce3862939b5d1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/1b8ce3862939b5d1",
        "status" : "passed",
        "time" : {
          "start" : 1735852379770,
          "stop" : 1735852402372,
          "duration" : 22602
        }
      }, {
        "uid" : "193a8e2d685d1f6b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/193a8e2d685d1f6b",
        "status" : "passed",
        "time" : {
          "start" : 1735847162274,
          "stop" : 1735847184549,
          "duration" : 22275
        }
      }, {
        "uid" : "fbd4bad0612bb0c9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/fbd4bad0612bb0c9",
        "status" : "passed",
        "time" : {
          "start" : 1735845935444,
          "stop" : 1735845958332,
          "duration" : 22888
        }
      } ]
    },
    "tags" : [ "anyio", "tims_orange_pi", "esp32_devkitc_wrover", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "97854698b94f5bc9.json",
  "parameterValues" : [ "'esp32_devkitc_wrover'", "'zephyr'" ]
}