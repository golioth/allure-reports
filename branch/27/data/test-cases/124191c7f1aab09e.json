{
  "uid" : "124191c7f1aab09e",
  "name" : "test_hello",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello",
  "historyId" : "467e555cbdae75d46aefa9c64cb6440a",
  "time" : {
    "start" : 1736375757218,
    "stop" : 1736375810554,
    "duration" : 53336
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff897cb510>\ndevice = <golioth.golioth.Device object at 0xffff897b2990>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "shell",
    "time" : {
      "start" : 1736375756606,
      "stop" : 1736375757215,
      "duration" : 609
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736375720625,
      "stop" : 1736375721069,
      "duration" : 444
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736375720623,
      "stop" : 1736375720624,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1736375720620,
      "stop" : 1736375720620,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736375721069,
      "stop" : 1736375721913,
      "duration" : 844
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736375720624,
      "stop" : 1736375720624,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736375720620,
      "stop" : 1736375720620,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736375720619,
      "stop" : 1736375720619,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1736375720621,
      "stop" : 1736375720623,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1736375721913,
      "stop" : 1736375756606,
      "duration" : 34693
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736375720618,
      "stop" : 1736375720618,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736375720618,
      "stop" : 1736375720618,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff897cb510>\ndevice = <golioth.golioth.Device object at 0xffff897b2990>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b12f8c0de5b22d5",
      "name" : "log",
      "source" : "b12f8c0de5b22d5.txt",
      "type" : "text/plain",
      "size" : 28507
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1736375811164,
      "stop" : 1736375811167,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1736375810729,
      "stop" : 1736375811162,
      "duration" : 433
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1736375811172,
      "stop" : 1736375811172,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1736375810719,
      "stop" : 1736375810727,
      "duration" : 8
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "53ee1887297c"
  }, {
    "name" : "thread",
    "value" : "556-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "a14ef631b8fd68b1",
      "status" : "failed",
      "statusDetails" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
      "time" : {
        "start" : 1736375662578,
        "stop" : 1736375715773,
        "duration" : 53195
      }
    }, {
      "uid" : "d2c07d4b827432ef",
      "status" : "passed",
      "time" : {
        "start" : 1736285083799,
        "stop" : 1736285136880,
        "duration" : 53081
      }
    }, {
      "uid" : "728f85dc62b752b5",
      "status" : "passed",
      "time" : {
        "start" : 1736285011578,
        "stop" : 1736285064947,
        "duration" : 53369
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 29,
        "unknown" : 0,
        "total" : 30
      },
      "items" : [ {
        "uid" : "2cdf31b06edb89da",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/2cdf31b06edb89da",
        "status" : "passed",
        "time" : {
          "start" : 1736356703793,
          "stop" : 1736356757701,
          "duration" : 53908
        }
      }, {
        "uid" : "709828ea6120e51b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/709828ea6120e51b",
        "status" : "passed",
        "time" : {
          "start" : 1736354411611,
          "stop" : 1736354465339,
          "duration" : 53728
        }
      }, {
        "uid" : "6b07a3f7e6bb8ebf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/29/#testresult/6b07a3f7e6bb8ebf",
        "status" : "passed",
        "time" : {
          "start" : 1736361351269,
          "stop" : 1736361404541,
          "duration" : 53272
        }
      }, {
        "uid" : "6b5520bc507bbb05",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/27/#testresult/6b5520bc507bbb05",
        "status" : "passed",
        "time" : {
          "start" : 1736285083799,
          "stop" : 1736285136880,
          "duration" : 53081
        }
      }, {
        "uid" : "5449da13135a98b1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/26/#testresult/5449da13135a98b1",
        "status" : "passed",
        "time" : {
          "start" : 1736283977027,
          "stop" : 1736284031666,
          "duration" : 54639
        }
      }, {
        "uid" : "42102b52d4585ff1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/25//#testresult/42102b52d4585ff1",
        "status" : "passed",
        "time" : {
          "start" : 1736276293174,
          "stop" : 1736276347256,
          "duration" : 54082
        }
      }, {
        "uid" : "74bb378b5f705445",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/24/#testresult/74bb378b5f705445",
        "status" : "passed",
        "time" : {
          "start" : 1736271301384,
          "stop" : 1736271356832,
          "duration" : 55448
        }
      }, {
        "uid" : "633504eee21fcc84",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1/#testresult/633504eee21fcc84",
        "status" : "passed",
        "time" : {
          "start" : 1736224748710,
          "stop" : 1736224801310,
          "duration" : 52600
        }
      }, {
        "uid" : "85128802cb898df4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/85128802cb898df4",
        "status" : "passed",
        "time" : {
          "start" : 1736207414706,
          "stop" : 1736207467939,
          "duration" : 53233
        }
      }, {
        "uid" : "a4f220992216ac35",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/a4f220992216ac35",
        "status" : "passed",
        "time" : {
          "start" : 1736207414706,
          "stop" : 1736207467939,
          "duration" : 53233
        }
      }, {
        "uid" : "3e1e1a6a5ecb12f7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/3e1e1a6a5ecb12f7",
        "status" : "passed",
        "time" : {
          "start" : 1735947377124,
          "stop" : 1735947430520,
          "duration" : 53396
        }
      }, {
        "uid" : "244fef842bbd985a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/244fef842bbd985a",
        "status" : "passed",
        "time" : {
          "start" : 1735927072595,
          "stop" : 1735927125813,
          "duration" : 53218
        }
      }, {
        "uid" : "44c0aa16dc480779",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/44c0aa16dc480779",
        "status" : "passed",
        "time" : {
          "start" : 1735931656887,
          "stop" : 1735931709682,
          "duration" : 52795
        }
      }, {
        "uid" : "ed1715dc5479e78c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/ed1715dc5479e78c",
        "status" : "passed",
        "time" : {
          "start" : 1735927072595,
          "stop" : 1735927125813,
          "duration" : 53218
        }
      }, {
        "uid" : "1acadeb5d136cbfe",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/1acadeb5d136cbfe",
        "status" : "passed",
        "time" : {
          "start" : 1735923250029,
          "stop" : 1735923303664,
          "duration" : 53635
        }
      }, {
        "uid" : "e5691391ca1e755a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/e5691391ca1e755a",
        "status" : "passed",
        "time" : {
          "start" : 1735861858972,
          "stop" : 1735861912614,
          "duration" : 53642
        }
      }, {
        "uid" : "ebb88a7aeaa1f14",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/ebb88a7aeaa1f14",
        "status" : "passed",
        "time" : {
          "start" : 1735859781025,
          "stop" : 1735859834081,
          "duration" : 53056
        }
      }, {
        "uid" : "742ef3eadc527973",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/742ef3eadc527973",
        "status" : "passed",
        "time" : {
          "start" : 1735852121071,
          "stop" : 1735852174279,
          "duration" : 53208
        }
      }, {
        "uid" : "5cf1c3e4a0fdc397",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/5cf1c3e4a0fdc397",
        "status" : "passed",
        "time" : {
          "start" : 1735847263218,
          "stop" : 1735847316973,
          "duration" : 53755
        }
      }, {
        "uid" : "d942d04489e8b36",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/d942d04489e8b36",
        "status" : "passed",
        "time" : {
          "start" : 1735846034993,
          "stop" : 1735846087803,
          "duration" : 52810
        }
      } ]
    },
    "tags" : [ "anyio", "mikes_testbench", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "124191c7f1aab09e.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}