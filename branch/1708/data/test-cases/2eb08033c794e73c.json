{"uid":"2eb08033c794e73c","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"86f2dfc420102ec387e85f21c8ed6fdf","time":{"start":1730409993811,"stop":1730409993811,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_stream>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_ssid","time":{"start":1730409993814,"stop":1730409993815,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1730409993814,"stop":1730409993814,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730409993815,"stop":1730409993816,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730409993815,"stop":1730409993815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1730409993816,"stop":1730409993816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1730409993817,"stop":1730409993819,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730409993819,"stop":1730409993820,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730409993820,"stop":1730409993820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730409993820,"stop":1730409994284,"duration":464},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730409994285,"stop":1730409995135,"duration":850},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1730409995136,"stop":1730410012093,"duration":16957},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1730410012094,"stop":1730410032123,"duration":20029},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_stream>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"a8de271843c5b662","name":"log","source":"a8de271843c5b662.txt","type":"text/plain","size":9866}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1730410032455,"stop":1730410032480,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730410032482,"stop":1730410032871,"duration":389},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730410032873,"stop":1730410032875,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1730410032880,"stop":1730410032881,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"699288ad8ed0"},{"name":"thread","value":"476-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":19,"unknown":0,"total":22},"items":[{"uid":"1e0c91624356bb5d","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/1e0c91624356bb5d","status":"passed","time":{"start":1730236628603,"stop":1730236651541,"duration":22938}},{"uid":"3b0b6211fc2d6bb5","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/3b0b6211fc2d6bb5","status":"passed","time":{"start":1729789796019,"stop":1729789818925,"duration":22906}},{"uid":"a547dc3ab5dd8b2b","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/a547dc3ab5dd8b2b","status":"passed","time":{"start":1729781571486,"stop":1729781591294,"duration":19808}},{"uid":"21f4f2d73d8736b0","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/21f4f2d73d8736b0","status":"passed","time":{"start":1729725562514,"stop":1729725582186,"duration":19672}},{"uid":"685c544a040cd8c4","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/685c544a040cd8c4","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729723135427,"stop":1729723158108,"duration":22681}},{"uid":"690f46e5301e32d8","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/690f46e5301e32d8","status":"passed","time":{"start":1729719781107,"stop":1729719806083,"duration":24976}},{"uid":"dd6155ea1ae088ed","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/dd6155ea1ae088ed","status":"passed","time":{"start":1729625408224,"stop":1729625429967,"duration":21743}},{"uid":"b6ba22724e1918c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/b6ba22724e1918c9","status":"passed","time":{"start":1729530253768,"stop":1729530273260,"duration":19492}},{"uid":"6460e85a62cb5e61","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/6460e85a62cb5e61","status":"passed","time":{"start":1729527819502,"stop":1729527842484,"duration":22982}},{"uid":"3f67f2b8206e4ef8","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/3f67f2b8206e4ef8","status":"passed","time":{"start":1729388766613,"stop":1729388785375,"duration":18762}},{"uid":"76577c4eb1fc11c2","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/76577c4eb1fc11c2","status":"passed","time":{"start":1729380077368,"stop":1729380098970,"duration":21602}},{"uid":"9218e492cf7cae67","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/9218e492cf7cae67","status":"passed","time":{"start":1729198544559,"stop":1729198569707,"duration":25148}},{"uid":"21b9bfa22546f63d","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/21b9bfa22546f63d","status":"passed","time":{"start":1729117186964,"stop":1729117208657,"duration":21693}},{"uid":"bd8d3a20dedd739b","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/bd8d3a20dedd739b","status":"passed","time":{"start":1729114334695,"stop":1729114356642,"duration":21947}},{"uid":"9a0bfea7a8bb0150","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/9a0bfea7a8bb0150","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729108785219,"stop":1729108807895,"duration":22676}},{"uid":"d318de27da4aa761","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/d318de27da4aa761","status":"passed","time":{"start":1729035145907,"stop":1729035165684,"duration":19777}},{"uid":"7c9989f6622fe489","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/7c9989f6622fe489","status":"passed","time":{"start":1729032666640,"stop":1729032690114,"duration":23474}},{"uid":"7cd0f691e421b360","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/7cd0f691e421b360","status":"passed","time":{"start":1729029633004,"stop":1729029651692,"duration":18688}},{"uid":"d9482ab1f380c8b","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/d9482ab1f380c8b","status":"passed","time":{"start":1729024508830,"stop":1729024533210,"duration":24380}},{"uid":"582cf1920fc0fc25","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/582cf1920fc0fc25","status":"passed","time":{"start":1729021571122,"stop":1729021594908,"duration":23786}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"2eb08033c794e73c.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}