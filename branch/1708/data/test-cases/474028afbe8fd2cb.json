{"uid":"474028afbe8fd2cb","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1730409178873,"stop":1730409223957,"duration":45084},"status":"failed","statusMessage":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff82445190>\ndevice = <golioth.golioth.Device object at 0xffff8242a5d0>\nproject = <golioth.golioth.Project object at 0xffff82446490>\nreleases = {'test_blocks': Release <6723f2b898103374e37c5c5c, release_tags=[], device_tags=['6723f2b698103374e37c5c57'], artifact..., release_tags=[], device_tags=['6723f2b698103374e37c5c57'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 5 == 4\nE            +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730409121659,"stop":1730409121660,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730409121660,"stop":1730409121661,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730409121661,"stop":1730409121661,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730409121662,"stop":1730409121662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730409121663,"stop":1730409121663,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730409121663,"stop":1730409121664,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730409121664,"stop":1730409121664,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730409121665,"stop":1730409121665,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730409121665,"stop":1730409121665,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730409121666,"stop":1730409121666,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730409121666,"stop":1730409121666,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730409121667,"stop":1730409121667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730409121667,"stop":1730409136388,"duration":14721},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730409136390,"stop":1730409136910,"duration":520},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730409136910,"stop":1730409137783,"duration":873},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730409137783,"stop":1730409141796,"duration":4013},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1730409141798,"stop":1730409142290,"duration":492},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1730409142290,"stop":1730409143198,"duration":908},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1730409143198,"stop":1730409144794,"duration":1596},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1730409178870,"stop":1730409178871,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff82445190>\ndevice = <golioth.golioth.Device object at 0xffff8242a5d0>\nproject = <golioth.golioth.Project object at 0xffff82446490>\nreleases = {'test_blocks': Release <6723f2b898103374e37c5c5c, release_tags=[], device_tags=['6723f2b698103374e37c5c57'], artifact..., release_tags=[], device_tags=['6723f2b698103374e37c5c57'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 5 == 4\nE            +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"b1559e5ff6a2e39f","name":"stdout","source":"b1559e5ff6a2e39f.txt","type":"text/plain","size":2791}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1730409224092,"stop":1730409225039,"duration":947},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1730409225041,"stop":1730409226533,"duration":1492},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1730409226535,"stop":1730409227343,"duration":808},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1730409227345,"stop":1730409227345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1730409227347,"stop":1730409227347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730409227349,"stop":1730409227750,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730409227752,"stop":1730409227753,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730409227755,"stop":1730409227758,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"a0ac2c27e59b"},{"name":"thread","value":"264-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":7,"skipped":0,"passed":15,"unknown":0,"total":25},"items":[{"uid":"23677e355d249eca","reportUrl":"https://golioth.github.io/allure-reports/branch/1707//#testresult/23677e355d249eca","status":"passed","time":{"start":1730383342299,"stop":1730383427203,"duration":84904}},{"uid":"2b14005e98e9e8b6","reportUrl":"https://golioth.github.io/allure-reports/branch/1706//#testresult/2b14005e98e9e8b6","status":"passed","time":{"start":1730362071809,"stop":1730362154183,"duration":82374}},{"uid":"c3c04704984391af","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/c3c04704984391af","status":"passed","time":{"start":1730235844202,"stop":1730235932581,"duration":88379}},{"uid":"7efcd0d54cbf3f45","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/7efcd0d54cbf3f45","status":"passed","time":{"start":1729789107732,"stop":1729789191371,"duration":83639}},{"uid":"c3c3a7f3dae12c93","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/c3c3a7f3dae12c93","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729780897219,"stop":1729780917648,"duration":20429}},{"uid":"1a5dda9e29006a51","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/1a5dda9e29006a51","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729724376469,"stop":1729724396845,"duration":20376}},{"uid":"e5feb2181ce7c486","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/e5feb2181ce7c486","status":"passed","time":{"start":1729721339222,"stop":1729721423462,"duration":84240}},{"uid":"11528b0d521939c2","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/11528b0d521939c2","status":"passed","time":{"start":1729718850859,"stop":1729718935231,"duration":84372}},{"uid":"2322535b19e65966","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/2322535b19e65966","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729624671385,"stop":1729624691814,"duration":20429}},{"uid":"83bf330ccb8a02f6","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/83bf330ccb8a02f6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729529115161,"stop":1729529135599,"duration":20438}},{"uid":"e39fae510c7d4446","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/e39fae510c7d4446","status":"passed","time":{"start":1729527175885,"stop":1729527264191,"duration":88306}},{"uid":"e27ed24f321bd6fc","reportUrl":"https://golioth.github.io/allure-reports/branch/2//#testresult/e27ed24f321bd6fc","status":"passed","time":{"start":1729389950098,"stop":1729390038321,"duration":88223}},{"uid":"189208ff746255b3","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/189208ff746255b3","status":"passed","time":{"start":1729388345508,"stop":1729388432657,"duration":87149}},{"uid":"11e7f4366343bebb","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/11e7f4366343bebb","status":"passed","time":{"start":1729379252581,"stop":1729379336990,"duration":84409}},{"uid":"f25e869057fa63ce","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/f25e869057fa63ce","status":"failed","statusDetails":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","time":{"start":1729197392928,"stop":1729197468965,"duration":76037}},{"uid":"a60afd7f88f70ee3","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/a60afd7f88f70ee3","status":"failed","statusDetails":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","time":{"start":1729116184272,"stop":1729116265402,"duration":81130}},{"uid":"8ff275ad49f286d0","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/8ff275ad49f286d0","status":"passed","time":{"start":1729113700331,"stop":1729113798252,"duration":97921}},{"uid":"5557613778ead8e6","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/5557613778ead8e6","status":"passed","time":{"start":1729107978511,"stop":1729108064387,"duration":85876}},{"uid":"2466316c0dde0666","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/2466316c0dde0666","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1729034349169,"stop":1729034349169,"duration":0}},{"uid":"3f8d26bf83c16bf9","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/3f8d26bf83c16bf9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729031154148,"stop":1729031154148,"duration":0}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"474028afbe8fd2cb.json","parameterValues":["'nrf9160dk'","'zephyr'"]}