{"uid":"cb8782ebd2c8a415","name":"test_lightdb_delete","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.delete.pytest.test_sample#test_lightdb_delete","historyId":"033bde6843906cfc60e943571f867eee","time":{"start":1730409866182,"stop":1730409866182,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_delete>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730409866185,"stop":1730409866186,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730409866186,"stop":1730409866186,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730409866187,"stop":1730409866187,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730409866187,"stop":1730409866187,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1730409866188,"stop":1730409866190,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1730409866188,"stop":1730409866188,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730409866191,"stop":1730409866191,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730409866192,"stop":1730409866192,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730409866192,"stop":1730409866629,"duration":437},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730409866630,"stop":1730409867451,"duration":821},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1730409867451,"stop":1730409884756,"duration":17305},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1730409884756,"stop":1730409904785,"duration":20029},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_delete>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"eb0f949331e0a95","name":"log","source":"eb0f949331e0a95.txt","type":"text/plain","size":9880}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1730409905120,"stop":1730409905145,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730409905147,"stop":1730409905531,"duration":384},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730409905534,"stop":1730409905536,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1730409905541,"stop":1730409905541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"699288ad8ed0"},{"name":"thread","value":"437-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.delete.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":19,"unknown":0,"total":22},"items":[{"uid":"e65241bce1cba6c5","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/e65241bce1cba6c5","status":"passed","time":{"start":1730236529021,"stop":1730236545690,"duration":16669}},{"uid":"820a7f775e51132f","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/820a7f775e51132f","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729789684104,"stop":1729789707582,"duration":23478}},{"uid":"d0520a0dfac4437f","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/d0520a0dfac4437f","status":"passed","time":{"start":1729781466893,"stop":1729781482630,"duration":15737}},{"uid":"b38f388d3cbafb6e","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/b38f388d3cbafb6e","status":"passed","time":{"start":1729725468843,"stop":1729725485567,"duration":16724}},{"uid":"e3d331dfda7e1db1","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/e3d331dfda7e1db1","status":"passed","time":{"start":1729723046670,"stop":1729723060368,"duration":13698}},{"uid":"aaee37f50cae638","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/aaee37f50cae638","status":"passed","time":{"start":1729719675605,"stop":1729719692940,"duration":17335}},{"uid":"30ca00a86f9655fb","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/30ca00a86f9655fb","status":"passed","time":{"start":1729625303704,"stop":1729625317061,"duration":13357}},{"uid":"bea1a0d73c7fa2af","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/bea1a0d73c7fa2af","status":"passed","time":{"start":1729530155889,"stop":1729530169230,"duration":13341}},{"uid":"40f513067d1a2edd","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/40f513067d1a2edd","status":"passed","time":{"start":1729527718735,"stop":1729527733554,"duration":14819}},{"uid":"51821f55a068cde9","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/51821f55a068cde9","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729388655915,"stop":1729388679307,"duration":23392}},{"uid":"bb12e078e1394060","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/bb12e078e1394060","status":"passed","time":{"start":1729379981120,"stop":1729379993487,"duration":12367}},{"uid":"696d5fb8e7afe8c8","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/696d5fb8e7afe8c8","status":"passed","time":{"start":1729198450123,"stop":1729198464942,"duration":14819}},{"uid":"689eb5e1f74a195e","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/689eb5e1f74a195e","status":"passed","time":{"start":1729117084305,"stop":1729117097704,"duration":13399}},{"uid":"b9222c36ca0361d1","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/b9222c36ca0361d1","status":"passed","time":{"start":1729114228849,"stop":1729114245408,"duration":16559}},{"uid":"a7c4a7fd5d2441ee","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/a7c4a7fd5d2441ee","status":"passed","time":{"start":1729108683658,"stop":1729108700253,"duration":16595}},{"uid":"a2b7ef98835fbbfc","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/a2b7ef98835fbbfc","status":"passed","time":{"start":1729035042695,"stop":1729035058133,"duration":15438}},{"uid":"bc746dcd33fe8482","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/bc746dcd33fe8482","status":"passed","time":{"start":1729032566146,"stop":1729032583550,"duration":17404}},{"uid":"36d438fe31eb12fc","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/36d438fe31eb12fc","status":"passed","time":{"start":1729029525835,"stop":1729029539276,"duration":13441}},{"uid":"d7942883848f5b74","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/d7942883848f5b74","status":"passed","time":{"start":1729024394081,"stop":1729024407356,"duration":13275}},{"uid":"b7ff125270379d0b","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/b7ff125270379d0b","status":"passed","time":{"start":1729021472932,"stop":1729021485271,"duration":12339}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"cb8782ebd2c8a415.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}