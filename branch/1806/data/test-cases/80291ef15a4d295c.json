{"uid":"80291ef15a4d295c","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"f1cf752999d3f3859e1cde5c2a14c34d","time":{"start":1732209367906,"stop":1732209391641,"duration":23735},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa6774710>\ndevice = <golioth.golioth.Device object at 0xffffa6776950>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732209350971,"stop":1732209350971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732209350972,"stop":1732209350972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732209350972,"stop":1732209350972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732209350973,"stop":1732209350973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732209350973,"stop":1732209350973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732209350974,"stop":1732209350976,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732209350977,"stop":1732209350977,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732209350977,"stop":1732209350977,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732209350978,"stop":1732209351524,"duration":546},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732209351525,"stop":1732209352478,"duration":953},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732209352479,"stop":1732209367048,"duration":14569},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732209367049,"stop":1732209367903,"duration":854},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa6774710>\ndevice = <golioth.golioth.Device object at 0xffffa6776950>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"395fb06f247e1139","name":"log","source":"395fb06f247e1139.txt","type":"text/plain","size":20704}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732209391821,"stop":1732209391830,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732209391832,"stop":1732209392250,"duration":418},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732209392252,"stop":1732209392254,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732209392259,"stop":1732209392260,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"56682a1ff235"},{"name":"thread","value":"474-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"99e9d925e512186b","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1732209325255,"stop":1732209346854,"duration":21599}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":7,"skipped":0,"passed":48,"unknown":0,"total":61},"items":[{"uid":"397f186389866129","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/397f186389866129","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"1b609fab341491ce","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/1b609fab341491ce","status":"passed","time":{"start":1732197179176,"stop":1732197202288,"duration":23112}},{"uid":"7f2ae8887fd5a80b","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/7f2ae8887fd5a80b","status":"passed","time":{"start":1732148807497,"stop":1732148832478,"duration":24981}},{"uid":"1d0da3ae8994cb27","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/1d0da3ae8994cb27","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"8a747a85fcadf114","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/8a747a85fcadf114","status":"passed","time":{"start":1732197179176,"stop":1732197202288,"duration":23112}},{"uid":"5be42d80ec25e7c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/5be42d80ec25e7c9","status":"passed","time":{"start":1732148807497,"stop":1732148832478,"duration":24981}},{"uid":"8be657dee6272882","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/8be657dee6272882","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"79132a1b128f921b","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/79132a1b128f921b","status":"passed","time":{"start":1732148807497,"stop":1732148832478,"duration":24981}},{"uid":"e59ad7719be96e74","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/e59ad7719be96e74","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"780f51d065458b6f","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/780f51d065458b6f","status":"passed","time":{"start":1732154033671,"stop":1732154054289,"duration":20618}},{"uid":"82be01daa52f1ad5","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/82be01daa52f1ad5","status":"passed","time":{"start":1732148807497,"stop":1732148832478,"duration":24981}},{"uid":"1fdf5e31443e078d","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/1fdf5e31443e078d","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"2c6e6ba8c664d48c","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/2c6e6ba8c664d48c","status":"passed","time":{"start":1732135594962,"stop":1732135615364,"duration":20402}},{"uid":"1071e2d556684934","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/1071e2d556684934","status":"passed","time":{"start":1732135638837,"stop":1732135661217,"duration":22380}},{"uid":"8339b718c815b444","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/8339b718c815b444","status":"passed","time":{"start":1732132890259,"stop":1732132914129,"duration":23870}},{"uid":"27212b1f3d8f4d2a","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/27212b1f3d8f4d2a","status":"passed","time":{"start":1732127018839,"stop":1732127039611,"duration":20772}},{"uid":"885e072a8176a1bb","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/885e072a8176a1bb","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732125469546,"stop":1732125492228,"duration":22682}},{"uid":"f69d6a124db35bf2","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/f69d6a124db35bf2","status":"passed","time":{"start":1732094108092,"stop":1732094129690,"duration":21598}},{"uid":"b5381dfabdef9750","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/b5381dfabdef9750","status":"passed","time":{"start":1732056522298,"stop":1732056543858,"duration":21560}},{"uid":"b2b8bddf4917adef","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/b2b8bddf4917adef","status":"passed","time":{"start":1732053718103,"stop":1732053741787,"duration":23684}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"80291ef15a4d295c.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}