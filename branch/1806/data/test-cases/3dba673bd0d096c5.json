{"uid":"3dba673bd0d096c5","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"7b5bd2e87b0538b1f5ac1141f1902779","time":{"start":1732204950611,"stop":1732204992295,"duration":41684},"status":"failed","statusMessage":"AssertionError: assert 8 == 3\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffbc467250>\ndevice = <golioth.golioth.Device object at 0xffffbc428f10>\nproject = <golioth.golioth.Project object at 0xffffbc3bcb10>\nreleases = {'test_blocks': Release <673f598cbb6157cf6cdf484d, release_tags=[], device_tags=['673f598abb6157cf6cdf4849'], artifact..., release_tags=[], device_tags=['673f598abb6157cf6cdf4849'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 8 == 3\nE                    +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732204891544,"stop":1732204891544,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732204891545,"stop":1732204891546,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732204891547,"stop":1732204891547,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732204891548,"stop":1732204891548,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732204891549,"stop":1732204891549,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732204891549,"stop":1732204891550,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732204891551,"stop":1732204891551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732204891552,"stop":1732204891552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732204891553,"stop":1732204891554,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732204891554,"stop":1732204891555,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732204891555,"stop":1732204891555,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732204891556,"stop":1732204891556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732204891557,"stop":1732204933524,"duration":41967},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732204933525,"stop":1732204934050,"duration":525},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732204934051,"stop":1732204934913,"duration":862},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732204934913,"stop":1732204937603,"duration":2690},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1732204937605,"stop":1732204938120,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1732204938121,"stop":1732204939094,"duration":973},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1732204939094,"stop":1732204940691,"duration":1597},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1732204950608,"stop":1732204950608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 8 == 3\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffbc467250>\ndevice = <golioth.golioth.Device object at 0xffffbc428f10>\nproject = <golioth.golioth.Project object at 0xffffbc3bcb10>\nreleases = {'test_blocks': Release <673f598cbb6157cf6cdf484d, release_tags=[], device_tags=['673f598abb6157cf6cdf4849'], artifact..., release_tags=[], device_tags=['673f598abb6157cf6cdf4849'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 8 == 3\nE                    +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","steps":[],"attachments":[{"uid":"d0af84fd710a3ff8","name":"stdout","source":"d0af84fd710a3ff8.txt","type":"text/plain","size":405}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1732204992411,"stop":1732204993241,"duration":830},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1732204993243,"stop":1732204994758,"duration":1515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1732204994760,"stop":1732204995597,"duration":837},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1732204995599,"stop":1732204995600,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1732204995601,"stop":1732204995602,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732204995604,"stop":1732204996143,"duration":539},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732204996145,"stop":1732204996146,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732204996148,"stop":1732204996151,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"da5f54d73b71"},{"name":"thread","value":"238-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":59,"unknown":0,"total":61},"items":[{"uid":"3a39b0f43b8df4e2","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/3a39b0f43b8df4e2","status":"passed","time":{"start":1732142017881,"stop":1732142065430,"duration":47549}},{"uid":"2f0666d0d684ce40","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/2f0666d0d684ce40","status":"passed","time":{"start":1732195984888,"stop":1732196032530,"duration":47642}},{"uid":"d4350d62a06672ba","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/d4350d62a06672ba","status":"passed","time":{"start":1732188040860,"stop":1732188088564,"duration":47704}},{"uid":"66822331555da450","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/66822331555da450","status":"passed","time":{"start":1732142017881,"stop":1732142065430,"duration":47549}},{"uid":"e1fcc11d28f993ba","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/e1fcc11d28f993ba","status":"passed","time":{"start":1732195984888,"stop":1732196032530,"duration":47642}},{"uid":"d12cc3b31e8e290a","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/d12cc3b31e8e290a","status":"passed","time":{"start":1732188040860,"stop":1732188088564,"duration":47704}},{"uid":"bab42abb778f6161","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/bab42abb778f6161","status":"passed","time":{"start":1732142017881,"stop":1732142065430,"duration":47549}},{"uid":"4365473249dbc753","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/4365473249dbc753","status":"passed","time":{"start":1732188040860,"stop":1732188088564,"duration":47704}},{"uid":"ac16391d57b12bd4","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/ac16391d57b12bd4","status":"passed","time":{"start":1732142017881,"stop":1732142065430,"duration":47549}},{"uid":"83553e51ee42f525","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/83553e51ee42f525","status":"passed","time":{"start":1732139654735,"stop":1732139702562,"duration":47827}},{"uid":"8da9578e278e65bd","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/8da9578e278e65bd","status":"passed","time":{"start":1732142017881,"stop":1732142065430,"duration":47549}},{"uid":"7599bed766e4d1ce","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/7599bed766e4d1ce","status":"passed","time":{"start":1732140769619,"stop":1732140817324,"duration":47705}},{"uid":"7dfc2f52580759cc","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/7dfc2f52580759cc","status":"passed","time":{"start":1732139654735,"stop":1732139702562,"duration":47827}},{"uid":"d9f09cb71ee9aed5","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/d9f09cb71ee9aed5","status":"passed","time":{"start":1732133034324,"stop":1732133081792,"duration":47468}},{"uid":"39e0ec71824231c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/39e0ec71824231c9","status":"passed","time":{"start":1732042164493,"stop":1732042212622,"duration":48129}},{"uid":"4187541acbfebd1","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/4187541acbfebd1","status":"passed","time":{"start":1732042164493,"stop":1732042212622,"duration":48129}},{"uid":"3e803f963e6444a2","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/3e803f963e6444a2","status":"passed","time":{"start":1732123821633,"stop":1732123868838,"duration":47205}},{"uid":"fd40a72ad3e84cb9","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/fd40a72ad3e84cb9","status":"passed","time":{"start":1732122466864,"stop":1732122514413,"duration":47549}},{"uid":"4a3b279d63294a80","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/4a3b279d63294a80","status":"passed","time":{"start":1732042164493,"stop":1732042212622,"duration":48129}},{"uid":"3c68a83235137216","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/3c68a83235137216","status":"passed","time":{"start":1732046511810,"stop":1732046559173,"duration":47363}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"3dba673bd0d096c5.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}