{"uid":"815083d288146a66","name":"test_set_int_range","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range","historyId":"1c9cc6d3f972c7f01fd8e4b5afb14d8c","time":{"start":1731957692455,"stop":1731957692455,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 57100.35453234719\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffffa4a53690>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffa4a35790>\ndevice = <golioth.golioth.Device object at 0xffffa49ea350>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 57100.35453234719\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731957539639,"stop":1731957539639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731957539640,"stop":1731957539640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731957539641,"stop":1731957539641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731957539642,"stop":1731957539642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731957539642,"stop":1731957539643,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731957539644,"stop":1731957539644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731957539645,"stop":1731957539646,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731957539645,"stop":1731957539645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731957539646,"stop":1731957539646,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731957539646,"stop":1731957539647,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731957539647,"stop":1731957539647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731957539647,"stop":1731957539647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731957539648,"stop":1731957540062,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731957540063,"stop":1731957561676,"duration":21613},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731957561678,"stop":1731957562688,"duration":1010},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731957562689,"stop":1731957691072,"duration":128383},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1731957697127,"stop":1731957697501,"duration":374},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731957697503,"stop":1731957697504,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731957697506,"stop":1731957697509,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"5c27604c9c22"},{"name":"thread","value":"257-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":9,"unknown":0,"total":30},"items":[{"uid":"c3ae04e6151120a9","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/c3ae04e6151120a9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731954617970,"stop":1731954617970,"duration":0}},{"uid":"90e7850a146bf592","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/90e7850a146bf592","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922512428,"stop":1731922512428,"duration":0}},{"uid":"539856ba349a884b","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/539856ba349a884b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922512428,"stop":1731922512428,"duration":0}},{"uid":"a5ca85395f2ef892","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/a5ca85395f2ef892","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731905343274,"stop":1731905343274,"duration":0}},{"uid":"760a877179e4775a","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/760a877179e4775a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731713711522,"stop":1731713711522,"duration":0}},{"uid":"e5a912a8e08afb97","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/e5a912a8e08afb97","status":"passed","time":{"start":1731710869674,"stop":1731710873290,"duration":3616}},{"uid":"e2dd807ed14f1e6f","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/e2dd807ed14f1e6f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731705922256,"stop":1731705922256,"duration":0}},{"uid":"701cbdb36d41f6d3","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/701cbdb36d41f6d3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731706442625,"stop":1731706442625,"duration":0}},{"uid":"6ab4c9d8688afcac","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/6ab4c9d8688afcac","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731694582427,"stop":1731694582427,"duration":0}},{"uid":"2765e4ca55e7b4a3","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/2765e4ca55e7b4a3","status":"passed","time":{"start":1731621459184,"stop":1731621463075,"duration":3891}},{"uid":"317f1592bf373069","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/317f1592bf373069","status":"passed","time":{"start":1731621459184,"stop":1731621463075,"duration":3891}},{"uid":"f2cb937a93759c71","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/f2cb937a93759c71","status":"passed","time":{"start":1731621459184,"stop":1731621463075,"duration":3891}},{"uid":"a99f3336d40b8274","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/a99f3336d40b8274","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731616024917,"stop":1731616024917,"duration":0}},{"uid":"69fd6e833a0a323a","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/69fd6e833a0a323a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731613056482,"stop":1731613056482,"duration":0}},{"uid":"aac7d09b2871c27f","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/aac7d09b2871c27f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731610085891,"stop":1731610085891,"duration":0}},{"uid":"4428be02461bb251","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/4428be02461bb251","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731597680192,"stop":1731597680192,"duration":0}},{"uid":"1cd0f1f2c8ff4e5c","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/1cd0f1f2c8ff4e5c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731548200798,"stop":1731548200798,"duration":0}},{"uid":"a463878d9bf02f43","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/a463878d9bf02f43","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731563854658,"stop":1731563854658,"duration":0}},{"uid":"37b155856c880115","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/37b155856c880115","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731542157395,"stop":1731542157395,"duration":0}},{"uid":"2ba0b93bdc59935","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/2ba0b93bdc59935","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731538833771,"stop":1731538833771,"duration":0}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"815083d288146a66.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}