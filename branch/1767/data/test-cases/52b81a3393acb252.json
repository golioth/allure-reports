{"uid":"52b81a3393acb252","name":"test_set_float_whole","fullName":"tests.hil.tests.settings.test_settings#test_set_float_whole","historyId":"0a5be134088e26800a4e7108ef82cc34","time":{"start":1731957694956,"stop":1731957694956,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 57100.35453234719\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffffa4a53690>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffa4a35790>\ndevice = <golioth.golioth.Device object at 0xffffa49ea350>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 57100.35453234719\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731957539639,"stop":1731957539639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731957539640,"stop":1731957539640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731957539641,"stop":1731957539641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731957539642,"stop":1731957539642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731957539642,"stop":1731957539643,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731957539644,"stop":1731957539644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731957539645,"stop":1731957539646,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731957539645,"stop":1731957539645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731957539646,"stop":1731957539646,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731957539646,"stop":1731957539647,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731957539647,"stop":1731957539647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731957539647,"stop":1731957539647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731957539648,"stop":1731957540062,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731957540063,"stop":1731957561676,"duration":21613},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731957561678,"stop":1731957562688,"duration":1010},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731957562689,"stop":1731957691072,"duration":128383},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1731957697127,"stop":1731957697501,"duration":374},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731957697503,"stop":1731957697504,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731957697506,"stop":1731957697509,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"5c27604c9c22"},{"name":"thread","value":"257-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":9,"unknown":0,"total":30},"items":[{"uid":"836e68f8c83f2b30","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/836e68f8c83f2b30","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731954622315,"stop":1731954622315,"duration":0}},{"uid":"fe835447bafcdc6e","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/fe835447bafcdc6e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922516774,"stop":1731922516774,"duration":0}},{"uid":"3a03e9d51ac9edd1","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/3a03e9d51ac9edd1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922516774,"stop":1731922516774,"duration":0}},{"uid":"9fc7aca0a9fd6f71","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/9fc7aca0a9fd6f71","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731905345850,"stop":1731905345850,"duration":0}},{"uid":"e03879fae6005c1f","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/e03879fae6005c1f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731713715905,"stop":1731713715905,"duration":0}},{"uid":"a197603b151f4351","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/a197603b151f4351","status":"passed","time":{"start":1731710912632,"stop":1731710916348,"duration":3716}},{"uid":"fa10568819611770","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/fa10568819611770","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731705926578,"stop":1731705926578,"duration":0}},{"uid":"89aa90f874df03c8","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/89aa90f874df03c8","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731706446986,"stop":1731706446986,"duration":0}},{"uid":"b6ac91c52cc9c06a","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/b6ac91c52cc9c06a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731694584937,"stop":1731694584937,"duration":0}},{"uid":"517948a6c44b678b","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/517948a6c44b678b","status":"passed","time":{"start":1731621502682,"stop":1731621506427,"duration":3745}},{"uid":"fa75e5ba5e04e213","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/fa75e5ba5e04e213","status":"passed","time":{"start":1731621502682,"stop":1731621506427,"duration":3745}},{"uid":"e545083dd032c3af","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/e545083dd032c3af","status":"passed","time":{"start":1731621502682,"stop":1731621506427,"duration":3745}},{"uid":"53d6351b49cca0b9","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/53d6351b49cca0b9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731616027430,"stop":1731616027430,"duration":0}},{"uid":"539b097a9376605","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/539b097a9376605","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731613058991,"stop":1731613058991,"duration":0}},{"uid":"c56c41e6aa950aea","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/c56c41e6aa950aea","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731610090241,"stop":1731610090241,"duration":0}},{"uid":"b77c2df3dbbdf114","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/b77c2df3dbbdf114","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731597682777,"stop":1731597682777,"duration":0}},{"uid":"2efe9cdb33241411","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/2efe9cdb33241411","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731548203313,"stop":1731548203313,"duration":0}},{"uid":"a0f5ebfafba02e54","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/a0f5ebfafba02e54","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731563859027,"stop":1731563859027,"duration":0}},{"uid":"86eb157bc087ce91","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/86eb157bc087ce91","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731542159910,"stop":1731542159910,"duration":0}},{"uid":"b8432e581f1dff9b","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/b8432e581f1dff9b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731538836290,"stop":1731538836290,"duration":0}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"52b81a3393acb252.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}