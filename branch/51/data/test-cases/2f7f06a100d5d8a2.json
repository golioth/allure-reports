{"uid":"2f7f06a100d5d8a2","name":"test_resume","fullName":"tests.hil.tests.ota.test_ota#test_resume","historyId":"852d4a7a7823219a6c4c9a123ccfff13","time":{"start":1736578238453,"stop":1736578262379,"duration":23926},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 154259.6893651731\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffffb7cc4d10>\nproject = <golioth.golioth.Project object at 0xffffb7cc4dd0>\nreleases = {'test_blocks': Release <678214a974b8809ed71a45b6, release_tags=[], device_tags=['678214a774b8809ed71a45b3'], artifact...ease_tags=[], device_tags=['678214a774b8809ed71a45b3'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_resume(board, project, releases):\n        await project.releases.rollout_set(releases[\"test_resume\"].id, True)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest received', timeout_s=30)\n        assert None != await board.wait_for_regex_in_line('Manifest successfully decoded', timeout_s=2)\n        assert None != await board.wait_for_regex_in_line('Start resumable blockwise download test', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Block download failed', timeout_s=10)\n>       assert None != await board.wait_for_regex_in_line('SHA256 matches as expected', timeout_s=20)\n\ntests/hil/tests/ota/test_ota.py:181: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 154259.6893651731\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1736578163927,"stop":1736578163927,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1736578163928,"stop":1736578163928,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1736578163929,"stop":1736578163929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736578163930,"stop":1736578163931,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1736578163930,"stop":1736578163930,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736578163931,"stop":1736578163931,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1736578163932,"stop":1736578163932,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1736578163932,"stop":1736578163932,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1736578163933,"stop":1736578163933,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736578163933,"stop":1736578163933,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736578163934,"stop":1736578163934,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736578163934,"stop":1736578163934,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1736578163935,"stop":1736578205842,"duration":41907},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736578205843,"stop":1736578206308,"duration":465},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736578206309,"stop":1736578207299,"duration":990},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736578207300,"stop":1736578214482,"duration":7182},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1736578214484,"stop":1736578215068,"duration":584},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1736578215069,"stop":1736578215831,"duration":762},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1736578215832,"stop":1736578217962,"duration":2130},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1736578238450,"stop":1736578238450,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 154259.6893651731\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffffb7cc4d10>\nproject = <golioth.golioth.Project object at 0xffffb7cc4dd0>\nreleases = {'test_blocks': Release <678214a974b8809ed71a45b6, release_tags=[], device_tags=['678214a774b8809ed71a45b3'], artifact...ease_tags=[], device_tags=['678214a774b8809ed71a45b3'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_resume(board, project, releases):\n        await project.releases.rollout_set(releases[\"test_resume\"].id, True)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest received', timeout_s=30)\n        assert None != await board.wait_for_regex_in_line('Manifest successfully decoded', timeout_s=2)\n        assert None != await board.wait_for_regex_in_line('Start resumable blockwise download test', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Block download failed', timeout_s=10)\n>       assert None != await board.wait_for_regex_in_line('SHA256 matches as expected', timeout_s=20)\n\ntests/hil/tests/ota/test_ota.py:181: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 154259.6893651731\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"1b5695c04e4fb71f","name":"stdout","source":"1b5695c04e4fb71f.txt","type":"text/plain","size":3120}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1736578263016,"stop":1736578263848,"duration":832},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1736578316618,"stop":1736578318760,"duration":2142},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1736578318762,"stop":1736578320941,"duration":2179},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1736578320943,"stop":1736578320943,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1736578320945,"stop":1736578320945,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1736578320947,"stop":1736578321358,"duration":411},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736578321361,"stop":1736578321361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1736578321363,"stop":1736578321366,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"8731e9fcd472"},{"name":"thread","value":"233-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":33,"unknown":0,"total":41},"items":[{"uid":"6eb4039bcb9de918","reportUrl":"https://golioth.github.io/allure-reports/branch/47//#testresult/6eb4039bcb9de918","status":"passed","time":{"start":1736527131940,"stop":1736527148098,"duration":16158}},{"uid":"f2593daf193a29a1","reportUrl":"https://golioth.github.io/allure-reports/branch/46//#testresult/f2593daf193a29a1","status":"passed","time":{"start":1736525217407,"stop":1736525233793,"duration":16386}},{"uid":"5f72e5815a47329f","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/5f72e5815a47329f","status":"passed","time":{"start":1736454245509,"stop":1736454261233,"duration":15724}},{"uid":"707da2773c78f2c6","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/707da2773c78f2c6","status":"passed","time":{"start":1736438453576,"stop":1736438470114,"duration":16538}},{"uid":"2f8f9aba719f63ea","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/2f8f9aba719f63ea","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736442862984,"stop":1736442874271,"duration":11287}},{"uid":"79fdbedc48190ec5","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/79fdbedc48190ec5","status":"passed","time":{"start":1736438453576,"stop":1736438470114,"duration":16538}},{"uid":"a148cc3171a02f39","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/a148cc3171a02f39","status":"passed","time":{"start":1736437160546,"stop":1736437177400,"duration":16854}},{"uid":"1ade036e879c3f73","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/1ade036e879c3f73","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736431309477,"stop":1736431333452,"duration":23975}},{"uid":"680ff2e9b2794512","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/680ff2e9b2794512","status":"passed","time":{"start":1736280606052,"stop":1736280621816,"duration":15764}},{"uid":"fc4a7298e7bcefbf","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/fc4a7298e7bcefbf","status":"passed","time":{"start":1736280606052,"stop":1736280621816,"duration":15764}},{"uid":"fee52fb1ca079081","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/fee52fb1ca079081","status":"passed","time":{"start":1736281773773,"stop":1736281787874,"duration":14101}},{"uid":"446c0be88f209d20","reportUrl":"https://golioth.github.io/allure-reports/branch/5/#testresult/446c0be88f209d20","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736351939712,"stop":1736351955024,"duration":15312}},{"uid":"367bdc74c1b671ba","reportUrl":"https://golioth.github.io/allure-reports/branch/4/#testresult/367bdc74c1b671ba","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736349788427,"stop":1736349801278,"duration":12851}},{"uid":"f7245e095c74895d","reportUrl":"https://golioth.github.io/allure-reports/branch/29/#testresult/f7245e095c74895d","status":"passed","time":{"start":1736358362700,"stop":1736358377615,"duration":14915}},{"uid":"9995b93e417d3722","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/9995b93e417d3722","status":"passed","time":{"start":1736281773773,"stop":1736281787874,"duration":14101}},{"uid":"b6eba882fa4e5d46","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/b6eba882fa4e5d46","status":"passed","time":{"start":1736280606052,"stop":1736280621816,"duration":15764}},{"uid":"88ce9ce28fc7cab4","reportUrl":"https://golioth.github.io/allure-reports/branch/25//#testresult/88ce9ce28fc7cab4","status":"passed","time":{"start":1736274592514,"stop":1736274608915,"duration":16401}},{"uid":"aade3f68deca2638","reportUrl":"https://golioth.github.io/allure-reports/branch/24/#testresult/aade3f68deca2638","status":"passed","time":{"start":1736268690886,"stop":1736268705472,"duration":14586}},{"uid":"bd821ee915896743","reportUrl":"https://golioth.github.io/allure-reports/branch/1/#testresult/bd821ee915896743","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736221767356,"stop":1736221782482,"duration":15126}},{"uid":"23e033718657c37f","reportUrl":"https://golioth.github.io/allure-reports/branch/20/#testresult/23e033718657c37f","status":"passed","time":{"start":1736204880944,"stop":1736204895372,"duration":14428}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"2f7f06a100d5d8a2.json","parameterValues":["'rak5010'","'zephyr'"]}