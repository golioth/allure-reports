{"uid":"6f67abed85d48b0e","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"ebde077b874ef5c350366edbe507b03b","time":{"start":1732286572244,"stop":1732286577587,"duration":5343},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff96ef2110>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffff96ef08d0>\ndevice = <golioth.golioth.Device object at 0xffff96ef3310>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff96ef2110>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732286550847,"stop":1732286550847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board_name","time":{"start":1732286550848,"stop":1732286550848,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"port","time":{"start":1732286550849,"stop":1732286550849,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"baud","time":{"start":1732286550850,"stop":1732286550850,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_ssid","time":{"start":1732286550850,"stop":1732286550851,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_psk","time":{"start":1732286550851,"stop":1732286550851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"fw_image","time":{"start":1732286550852,"stop":1732286550852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"serial_number","time":{"start":1732286550852,"stop":1732286550852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device_name","time":{"start":1732286550853,"stop":1732286550853,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"bmp_port","time":{"start":1732286550853,"stop":1732286550853,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_url","time":{"start":1732286550854,"stop":1732286550854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_key","time":{"start":1732286550854,"stop":1732286550854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project","time":{"start":1732286550855,"stop":1732286551275,"duration":420},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board","time":{"start":1732286551276,"stop":1732286565971,"duration":14695},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device","time":{"start":1732286565973,"stop":1732286566931,"duration":958},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"setup","time":{"start":1732286566932,"stop":1732286569692,"duration":2760},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"afterStages":[{"name":"setup::0","time":{"start":1732286642362,"stop":1732286642362,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device::0","time":{"start":1732286642364,"stop":1732286642736,"duration":372},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board::0","time":{"start":1732286642739,"stop":1732286642740,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project::0","time":{"start":1732286642742,"stop":1732286642745,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"f07336fe250b"},{"name":"thread","value":"278-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":52,"unknown":0,"total":64},"items":[{"uid":"6810a5169f89df0a","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/6810a5169f89df0a","status":"passed","time":{"start":1732196845136,"stop":1732196846684,"duration":1548}},{"uid":"e05bb297cfcaea18","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/e05bb297cfcaea18","status":"passed","time":{"start":1732280194119,"stop":1732280196009,"duration":1890}},{"uid":"578fc6a3543e69a8","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/578fc6a3543e69a8","status":"passed","time":{"start":1732275843588,"stop":1732275845466,"duration":1878}},{"uid":"25ac3adbe33576e7","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/25ac3adbe33576e7","status":"passed","time":{"start":1732208422456,"stop":1732208424343,"duration":1887}},{"uid":"fb8cbfc5a4342bf0","reportUrl":"https://golioth.github.io/allure-reports/branch/1819//#testresult/fb8cbfc5a4342bf0","status":"passed","time":{"start":1732231886590,"stop":1732231888177,"duration":1587}},{"uid":"b97bfb9fc5bc394c","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/b97bfb9fc5bc394c","status":"passed","time":{"start":1732230343255,"stop":1732230345215,"duration":1960}},{"uid":"707248f99697bf36","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/707248f99697bf36","status":"passed","time":{"start":1732227702998,"stop":1732227704897,"duration":1899}},{"uid":"dee7ca7ed9621047","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/dee7ca7ed9621047","status":"passed","time":{"start":1732225226268,"stop":1732225228158,"duration":1890}},{"uid":"f79c4fa60faec2f3","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/f79c4fa60faec2f3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732216693914,"stop":1732216693914,"duration":0}},{"uid":"d25cad7dedb54203","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/d25cad7dedb54203","status":"passed","time":{"start":1732196845136,"stop":1732196846684,"duration":1548}},{"uid":"566be4818b1b4ff5","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/566be4818b1b4ff5","status":"passed","time":{"start":1732208422456,"stop":1732208424343,"duration":1887}},{"uid":"719ef16f03b43cfd","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/719ef16f03b43cfd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732208274662,"stop":1732208274662,"duration":0}},{"uid":"466f49277c9eddb9","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/466f49277c9eddb9","status":"passed","time":{"start":1732205068903,"stop":1732205070821,"duration":1918}},{"uid":"f13a82c9312f54d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/f13a82c9312f54d6","status":"passed","time":{"start":1732196845136,"stop":1732196846684,"duration":1548}},{"uid":"9841ca18fae7b56","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/9841ca18fae7b56","status":"passed","time":{"start":1732202744210,"stop":1732202746097,"duration":1887}},{"uid":"1a18eb881d97e945","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/1a18eb881d97e945","status":"passed","time":{"start":1732200694822,"stop":1732200696726,"duration":1904}},{"uid":"b385e149a8e68b78","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/b385e149a8e68b78","status":"passed","time":{"start":1732196845136,"stop":1732196846684,"duration":1548}},{"uid":"855eceeab05348a9","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/855eceeab05348a9","status":"passed","time":{"start":1732195556108,"stop":1732195557695,"duration":1587}},{"uid":"ff374e56bdf77936","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/ff374e56bdf77936","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732192378860,"stop":1732192378860,"duration":0}},{"uid":"409697028e8875c1","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/409697028e8875c1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732189330876,"stop":1732189330876,"duration":0}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"6f67abed85d48b0e.json","parameterValues":["'nrf9160dk'","'zephyr'"]}