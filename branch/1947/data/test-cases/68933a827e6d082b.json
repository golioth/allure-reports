{
  "uid" : "68933a827e6d082b",
  "name" : "test_rpc",
  "fullName" : "examples.esp_idf.rpc.pytest.test_sample#test_rpc",
  "historyId" : "24deba741397d2cdea376af34b4f03ad",
  "time" : {
    "start" : 1734451430705,
    "stop" : 1734451440677,
    "duration" : 9972
  },
  "status" : "broken",
  "statusMessage" : "httpx.ConnectTimeout",
  "statusTrace" : "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7fe972d0>\ndevice = <golioth.golioth.Device object at 0xffff7fd563d0>\n\n    async def test_rpc(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to reboot and connect\n        await board.wait_for_regex_in_line('.*RPC observation established', timeout_s=90.0)\n    \n        # Test successful RPC\n>       result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n\nexamples/esp_idf/rpc/pytest/test_sample.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: in call\n    response = await c.post('rpc', json={\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "baud",
    "time" : {
      "start" : 1734451378721,
      "stop" : 1734451378721,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734451378725,
      "stop" : 1734451378725,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1734451378724,
      "stop" : 1734451378724,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734451378725,
      "stop" : 1734451378725,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734451378725,
      "stop" : 1734451378726,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1734451378719,
      "stop" : 1734451378720,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734451429768,
      "stop" : 1734451430702,
      "duration" : 934
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1734451378723,
      "stop" : 1734451378724,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734451378722,
      "stop" : 1734451378722,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734451378722,
      "stop" : 1734451378722,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734451429215,
      "stop" : 1734451429768,
      "duration" : 553
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1734451378726,
      "stop" : 1734451429213,
      "duration" : 50487
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734451378718,
      "stop" : 1734451378718,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1734451378720,
      "stop" : 1734451378721,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1734451378723,
      "stop" : 1734451378723,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "httpx.ConnectTimeout",
    "statusTrace" : "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7fe972d0>\ndevice = <golioth.golioth.Device object at 0xffff7fd563d0>\n\n    async def test_rpc(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to reboot and connect\n        await board.wait_for_regex_in_line('.*RPC observation established', timeout_s=90.0)\n    \n        # Test successful RPC\n>       result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n\nexamples/esp_idf/rpc/pytest/test_sample.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: in call\n    response = await c.post('rpc', json={\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "10f63fa586f73bbf",
      "name" : "stdout",
      "source" : "10f63fa586f73bbf.txt",
      "type" : "text/plain",
      "size" : 7969
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1734451441566,
      "stop" : 1734451442181,
      "duration" : 615
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1734451442183,
      "stop" : 1734451442183,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1734451442185,
      "stop" : 1734451442192,
      "duration" : 7
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "jons_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "defa933e2f54"
  }, {
    "name" : "thread",
    "value" : "275-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.rpc.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32c3_devkitm_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 25,
        "unknown" : 0,
        "total" : 26
      },
      "items" : [ {
        "uid" : "258f4bd49b659921",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1945/#testresult/258f4bd49b659921",
        "status" : "passed",
        "time" : {
          "start" : 1734444416316,
          "stop" : 1734444424890,
          "duration" : 8574
        }
      }, {
        "uid" : "a80091917c3a00bb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1943/#testresult/a80091917c3a00bb",
        "status" : "passed",
        "time" : {
          "start" : 1734377779994,
          "stop" : 1734377788587,
          "duration" : 8593
        }
      }, {
        "uid" : "8188751d07cbf344",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1943/#testresult/8188751d07cbf344",
        "status" : "passed",
        "time" : {
          "start" : 1734377779994,
          "stop" : 1734377788587,
          "duration" : 8593
        }
      }, {
        "uid" : "b3803bdc6cdfbbf4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1931/#testresult/b3803bdc6cdfbbf4",
        "status" : "passed",
        "time" : {
          "start" : 1734127367154,
          "stop" : 1734127374744,
          "duration" : 7590
        }
      }, {
        "uid" : "ae4ff2dd0cd26658",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1928/#testresult/ae4ff2dd0cd26658",
        "status" : "passed",
        "time" : {
          "start" : 1734047354038,
          "stop" : 1734047361898,
          "duration" : 7860
        }
      }, {
        "uid" : "9e9a485e4fd153e2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1927/#testresult/9e9a485e4fd153e2",
        "status" : "passed",
        "time" : {
          "start" : 1734044017368,
          "stop" : 1734044025042,
          "duration" : 7674
        }
      }, {
        "uid" : "45af913a0fef8257",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1921/#testresult/45af913a0fef8257",
        "status" : "passed",
        "time" : {
          "start" : 1734027441106,
          "stop" : 1734027449162,
          "duration" : 8056
        }
      }, {
        "uid" : "919b56b323787152",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/919b56b323787152",
        "status" : "passed",
        "time" : {
          "start" : 1734024103878,
          "stop" : 1734024110517,
          "duration" : 6639
        }
      }, {
        "uid" : "1299511482a05667",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/1299511482a05667",
        "status" : "passed",
        "time" : {
          "start" : 1734022307288,
          "stop" : 1734022314665,
          "duration" : 7377
        }
      }, {
        "uid" : "a7ff433c9c63ebc9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/a7ff433c9c63ebc9",
        "status" : "passed",
        "time" : {
          "start" : 1733942139832,
          "stop" : 1733942148587,
          "duration" : 8755
        }
      }, {
        "uid" : "70f0c13a8b9cc807",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/70f0c13a8b9cc807",
        "status" : "passed",
        "time" : {
          "start" : 1733960091080,
          "stop" : 1733960097871,
          "duration" : 6791
        }
      }, {
        "uid" : "b5bd47a27e7442d5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/b5bd47a27e7442d5",
        "status" : "passed",
        "time" : {
          "start" : 1733955130818,
          "stop" : 1733955138975,
          "duration" : 8157
        }
      }, {
        "uid" : "fe0ccd05e8b0ca59",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1900/#testresult/fe0ccd05e8b0ca59",
        "status" : "passed",
        "time" : {
          "start" : 1733948198058,
          "stop" : 1733948206287,
          "duration" : 8229
        }
      }, {
        "uid" : "a25abef089a8e1f3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1899/#testresult/a25abef089a8e1f3",
        "status" : "passed",
        "time" : {
          "start" : 1733946175434,
          "stop" : 1733946183801,
          "duration" : 8367
        }
      }, {
        "uid" : "dbc78ec8a8b56248",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1898/#testresult/dbc78ec8a8b56248",
        "status" : "passed",
        "time" : {
          "start" : 1733943285434,
          "stop" : 1733943293573,
          "duration" : 8139
        }
      }, {
        "uid" : "75da4b2d8461a375",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/75da4b2d8461a375",
        "status" : "passed",
        "time" : {
          "start" : 1733942139832,
          "stop" : 1733942148587,
          "duration" : 8755
        }
      }, {
        "uid" : "fee9b16ca91587eb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/fee9b16ca91587eb",
        "status" : "passed",
        "time" : {
          "start" : 1733888314338,
          "stop" : 1733888321711,
          "duration" : 7373
        }
      }, {
        "uid" : "4794a3173b187d1e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/4794a3173b187d1e",
        "status" : "passed",
        "time" : {
          "start" : 1733886385188,
          "stop" : 1733886392775,
          "duration" : 7587
        }
      }, {
        "uid" : "7513f5907750d322",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/7513f5907750d322",
        "status" : "passed",
        "time" : {
          "start" : 1733888314338,
          "stop" : 1733888321711,
          "duration" : 7373
        }
      }, {
        "uid" : "6e58d7d3995d96c4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/6e58d7d3995d96c4",
        "status" : "passed",
        "time" : {
          "start" : 1733886385188,
          "stop" : 1733886392775,
          "duration" : 7587
        }
      } ]
    },
    "tags" : [ "esp-idf", "jons_orange_pi", "anyio", "esp32c3_devkitm_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "68933a827e6d082b.json",
  "parameterValues" : [ "'esp32c3_devkitm_espidf'", "'esp-idf'" ]
}