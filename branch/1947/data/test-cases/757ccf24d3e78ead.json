{
  "uid" : "757ccf24d3e78ead",
  "name" : "test_restart",
  "fullName" : "tests.hil.tests.settings.test_settings#test_restart",
  "historyId" : "9f5dd10b486918bbbf848a6e8a89899f",
  "time" : {
    "start" : 1734451415125,
    "stop" : 1734451447364,
    "duration" : 32239
  },
  "status" : "broken",
  "statusMessage" : "httpx.ConnectTimeout",
  "statusTrace" : "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffb7524ad0>\ndevice = <golioth.golioth.Device object at 0xffffb74f6610>\n\n    async def test_restart(board, device):\n        await device.settings.set('TEST_RESTART', True)\n        assert None != await board.wait_for_regex_in_line('Received test_restart: true', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Ending session', timeout_s=10)\n    \n        # Check that we no longer receive this settings change\n        await device.settings.set('TEST_RESTART', False)\n        with pytest.raises(trio.TooSlowError) as e:\n            assert None != await board.wait_for_regex_in_line('Received test_restart: false', timeout_s=5)\n    \n        # Wait for client to restart\n        assert None != await board.wait_for_regex_in_line('Client restarted', timeout_s=60)\n    \n        # Wait for rush of initial settings log messages to pass\n        await trio.sleep(2)\n    \n>       await device.settings.set('TEST_INT', 2320)\n\ntests/hil/tests/settings/test_settings.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:705: in set\n    response = await self.device.project.put('settings/' + setting['id'], json=json)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:108: in put\n    return await c.put(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1942: in put\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "baud",
    "time" : {
      "start" : 1734451255105,
      "stop" : 1734451255106,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734451255107,
      "stop" : 1734451255107,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1734451255109,
      "stop" : 1734451255110,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734451255110,
      "stop" : 1734451255111,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1734451295594,
      "stop" : 1734451304320,
      "duration" : 8726
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1734451255109,
      "stop" : 1734451255109,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734451294719,
      "stop" : 1734451295593,
      "duration" : 874
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734451255106,
      "stop" : 1734451255107,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734451255110,
      "stop" : 1734451255110,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1734451255784,
      "stop" : 1734451294718,
      "duration" : 38934
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734451255111,
      "stop" : 1734451255111,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1734451255108,
      "stop" : 1734451255108,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734451255103,
      "stop" : 1734451255103,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1734451255105,
      "stop" : 1734451255105,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1734451255104,
      "stop" : 1734451255104,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734451255111,
      "stop" : 1734451255783,
      "duration" : 672
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "httpx.ConnectTimeout",
    "statusTrace" : "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffb7524ad0>\ndevice = <golioth.golioth.Device object at 0xffffb74f6610>\n\n    async def test_restart(board, device):\n        await device.settings.set('TEST_RESTART', True)\n        assert None != await board.wait_for_regex_in_line('Received test_restart: true', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Ending session', timeout_s=10)\n    \n        # Check that we no longer receive this settings change\n        await device.settings.set('TEST_RESTART', False)\n        with pytest.raises(trio.TooSlowError) as e:\n            assert None != await board.wait_for_regex_in_line('Received test_restart: false', timeout_s=5)\n    \n        # Wait for client to restart\n        assert None != await board.wait_for_regex_in_line('Client restarted', timeout_s=60)\n    \n        # Wait for rush of initial settings log messages to pass\n        await trio.sleep(2)\n    \n>       await device.settings.set('TEST_INT', 2320)\n\ntests/hil/tests/settings/test_settings.py:227: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:705: in set\n    response = await self.device.project.put('settings/' + setting['id'], json=json)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:108: in put\n    return await c.put(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1942: in put\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a700dac5c68c29d9",
      "name" : "stdout",
      "source" : "a700dac5c68c29d9.txt",
      "type" : "text/plain",
      "size" : 2156
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup::0",
    "time" : {
      "start" : 1734451448485,
      "stop" : 1734451448485,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1734451448487,
      "stop" : 1734451448852,
      "duration" : 365
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1734451448854,
      "stop" : 1734451448856,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1734451448858,
      "stop" : 1734451448860,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32_devkitc_wrover"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.esp32_devkitc_wrover"
  }, {
    "name" : "tag",
    "value" : "tims_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_settings"
  }, {
    "name" : "host",
    "value" : "b259989ced69"
  }, {
    "name" : "thread",
    "value" : "234-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.settings.test_settings"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32_devkitc_wrover'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 9,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 25
      },
      "items" : [ {
        "uid" : "ac32e3a3da973b1d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1945/#testresult/ac32e3a3da973b1d",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1734442900707,
          "stop" : 1734442900707,
          "duration" : 0
        }
      }, {
        "uid" : "39b6392119995ea8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1943/#testresult/39b6392119995ea8",
        "status" : "passed",
        "time" : {
          "start" : 1734377798594,
          "stop" : 1734377827441,
          "duration" : 28847
        }
      }, {
        "uid" : "410e2a4de0d9dc49",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1943/#testresult/410e2a4de0d9dc49",
        "status" : "passed",
        "time" : {
          "start" : 1734377798594,
          "stop" : 1734377827441,
          "duration" : 28847
        }
      }, {
        "uid" : "524aa062c744968a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1931/#testresult/524aa062c744968a",
        "status" : "passed",
        "time" : {
          "start" : 1734127272706,
          "stop" : 1734127302155,
          "duration" : 29449
        }
      }, {
        "uid" : "9b87ccb9446f8b59",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1928/#testresult/9b87ccb9446f8b59",
        "status" : "passed",
        "time" : {
          "start" : 1734047708902,
          "stop" : 1734047737594,
          "duration" : 28692
        }
      }, {
        "uid" : "afe4684797a857e5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1927/#testresult/afe4684797a857e5",
        "status" : "passed",
        "time" : {
          "start" : 1734044000664,
          "stop" : 1734044029343,
          "duration" : 28679
        }
      }, {
        "uid" : "5a1aea3d5827d63",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1921/#testresult/5a1aea3d5827d63",
        "status" : "passed",
        "time" : {
          "start" : 1734028418730,
          "stop" : 1734028447613,
          "duration" : 28883
        }
      }, {
        "uid" : "22f9bace20783ec6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/22f9bace20783ec6",
        "status" : "passed",
        "time" : {
          "start" : 1734022844029,
          "stop" : 1734022872916,
          "duration" : 28887
        }
      }, {
        "uid" : "9231c8fb3e2b0a3c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/9231c8fb3e2b0a3c",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1734020260102,
          "stop" : 1734020260102,
          "duration" : 0
        }
      }, {
        "uid" : "1cfb8bf993d3c89c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/1cfb8bf993d3c89c",
        "status" : "passed",
        "time" : {
          "start" : 1733939087679,
          "stop" : 1733939116744,
          "duration" : 29065
        }
      }, {
        "uid" : "a64e5328ce0ac175",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/a64e5328ce0ac175",
        "status" : "passed",
        "time" : {
          "start" : 1733961083305,
          "stop" : 1733961112025,
          "duration" : 28720
        }
      }, {
        "uid" : "44dd2ce8cc3205ff",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/44dd2ce8cc3205ff",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733956919991,
          "stop" : 1733956919991,
          "duration" : 0
        }
      }, {
        "uid" : "74d29277f674728a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1900/#testresult/74d29277f674728a",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733945530750,
          "stop" : 1733945530750,
          "duration" : 0
        }
      }, {
        "uid" : "16dfd99702f881e6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1899/#testresult/16dfd99702f881e6",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733944742013,
          "stop" : 1733944742013,
          "duration" : 0
        }
      }, {
        "uid" : "2cd6c96879e72b7a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/2cd6c96879e72b7a",
        "status" : "passed",
        "time" : {
          "start" : 1733939087679,
          "stop" : 1733939116744,
          "duration" : 29065
        }
      }, {
        "uid" : "d7825106c73d13b7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/d7825106c73d13b7",
        "status" : "passed",
        "time" : {
          "start" : 1733888907373,
          "stop" : 1733888936221,
          "duration" : 28848
        }
      }, {
        "uid" : "47a08abd48f333ce",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/47a08abd48f333ce",
        "status" : "passed",
        "time" : {
          "start" : 1733885528922,
          "stop" : 1733885557810,
          "duration" : 28888
        }
      }, {
        "uid" : "ad36af290ee8c64d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/ad36af290ee8c64d",
        "status" : "passed",
        "time" : {
          "start" : 1733888907373,
          "stop" : 1733888936221,
          "duration" : 28848
        }
      }, {
        "uid" : "50394b96116af9e3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/50394b96116af9e3",
        "status" : "passed",
        "time" : {
          "start" : 1733885528922,
          "stop" : 1733885557810,
          "duration" : 28888
        }
      }, {
        "uid" : "a0e627d05b4aa8a2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1892/#testresult/a0e627d05b4aa8a2",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733874587246,
          "stop" : 1733874587246,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "anyio", "tims_orange_pi", "esp32_devkitc_wrover", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "757ccf24d3e78ead.json",
  "parameterValues" : [ "'esp32_devkitc_wrover'", "'zephyr'" ]
}