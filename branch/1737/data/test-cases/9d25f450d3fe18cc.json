{"uid":"9d25f450d3fe18cc","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"971ce698793d8bade5e5481d115988c7","time":{"start":1731538598059,"stop":1731538611933,"duration":13874},"status":"failed","statusMessage":"AssertionError: assert 20.5 == 20.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fa7cb322950>\ndevice = <golioth.golioth.Device object at 0x7fa7cb314b90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 20.5 == 20.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_ssid","time":{"start":1731538597409,"stop":1731538597409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731538597409,"stop":1731538597409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731538597409,"stop":1731538597409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1731538597409,"stop":1731538597409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731538597409,"stop":1731538597410,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731538597409,"stop":1731538597409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731538597409,"stop":1731538597409,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731538597410,"stop":1731538597562,"duration":152},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731538597410,"stop":1731538597410,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731538597562,"stop":1731538598052,"duration":490},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731538598052,"stop":1731538598054,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731538598054,"stop":1731538598058,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 20.5 == 20.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fa7cb322950>\ndevice = <golioth.golioth.Device object at 0x7fa7cb314b90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 20.5 == 20.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","steps":[],"attachments":[{"uid":"cecf38340e71cbaf","name":"log","source":"cecf38340e71cbaf.txt","type":"text/plain","size":13493}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731538611967,"stop":1731538612468,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731538612468,"stop":1731538612624,"duration":156},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731538612624,"stop":1731538612625,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731538612626,"stop":1731538612626,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_32"},{"name":"tag","value":"GitHub Actions 18"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"92d25a789426"},{"name":"thread","value":"84923-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":10,"unknown":0,"total":11},"items":[{"uid":"d2e9fabaded1e908","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/d2e9fabaded1e908","status":"passed","time":{"start":1731533721249,"stop":1731533742182,"duration":20933}},{"uid":"8d9819d06057ff3f","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/8d9819d06057ff3f","status":"passed","time":{"start":1731533362202,"stop":1731533383379,"duration":21177}},{"uid":"632dc24b9d90434","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/632dc24b9d90434","status":"passed","time":{"start":1731533314893,"stop":1731533335721,"duration":20828}},{"uid":"7f7864a00776836","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/7f7864a00776836","status":"passed","time":{"start":1731518177028,"stop":1731518198532,"duration":21504}},{"uid":"b2d901a329ac6b55","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/b2d901a329ac6b55","status":"passed","time":{"start":1731518177028,"stop":1731518198532,"duration":21504}},{"uid":"32b73453a3b54720","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/32b73453a3b54720","status":"passed","time":{"start":1731518177028,"stop":1731518198532,"duration":21504}},{"uid":"fe111cd3cc3f278e","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/fe111cd3cc3f278e","status":"passed","time":{"start":1731518177028,"stop":1731518198532,"duration":21504}},{"uid":"1ebea5ef5491c4ed","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/1ebea5ef5491c4ed","status":"passed","time":{"start":1731425803901,"stop":1731425824982,"duration":21081}},{"uid":"4fbf0482645bef83","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/4fbf0482645bef83","status":"passed","time":{"start":1731102173347,"stop":1731102193966,"duration":20619}},{"uid":"bbce5e5544b55d4","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/bbce5e5544b55d4","status":"passed","time":{"start":1731096778596,"stop":1731096799314,"duration":20718}}]},"tags":["GitHub Actions 18","anyio","native_sim_32","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"9d25f450d3fe18cc.json","parameterValues":["'native_sim_32'","'zephyr'"]}