{"uid":"96c78f55f4609312","name":"test_fw_update","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.fw_update.pytest.test_sample#test_fw_update","historyId":"e35d87be40a3f24a162aaab8c9432c62","time":{"start":1760648077662,"stop":1760648077662,"duration":0},"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"item = <Function test_fw_update>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_zephyr_samples/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py:98: in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:948: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:940: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:910: in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <golioth.golioth.Project object at 0xffff8c712cf0>\nblueprint_id = None\n\n    @pytest.fixture(scope=\"module\")\n    async def artifact(project, blueprint_id):\n        # Find Artifact that matches this device and desired update version\n    \n        artifact = None\n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if (a.blueprint == blueprint_id and\n                a.version == UPDATE_VERSION and\n                a.package == UPDATE_PACKAGE):\n                artifact = a\n    \n>       assert artifact != None\nE       assert None != None\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/conftest.py:53: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760648077666,"stop":1760648077666,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760648077667,"stop":1760648077667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760648077667,"stop":1760648077667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info","time":{"start":1760648077668,"stop":1760648077843,"duration":175},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760648077844,"stop":1760648077844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760648077845,"stop":1760648077845,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760648077845,"stop":1760648077845,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1760648077846,"stop":1760648077846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1760648077846,"stop":1760648077848,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760648077849,"stop":1760648078668,"duration":819},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760648078669,"stop":1760648079332,"duration":663},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_id","time":{"start":1760648079333,"stop":1760648079655,"duration":322},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifact","time":{"start":1760648079655,"stop":1760648079997,"duration":342},"status":"failed","statusMessage":"AssertionError: assert None != None\n","statusTrace":"  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py\", line 98, in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 948, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 940, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 910, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/modules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/conftest.py\", line 53, in artifact\n    assert artifact != None\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"item = <Function test_fw_update>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_zephyr_samples/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py:98: in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:948: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:940: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:910: in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <golioth.golioth.Project object at 0xffff8c712cf0>\nblueprint_id = None\n\n    @pytest.fixture(scope=\"module\")\n    async def artifact(project, blueprint_id):\n        # Find Artifact that matches this device and desired update version\n    \n        artifact = None\n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if (a.blueprint == blueprint_id and\n                a.version == UPDATE_VERSION and\n                a.package == UPDATE_PACKAGE):\n                artifact = a\n    \n>       assert artifact != None\nE       assert None != None\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/conftest.py:53: AssertionError","steps":[],"attachments":[{"uid":"dc1aa1cca30a4caf","name":"log","source":"dc1aa1cca30a4caf.txt","type":"text/plain","size":12076}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"blueprint_id::0","time":{"start":1760648080550,"stop":1760648080550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760648080552,"stop":1760648080884,"duration":332},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760648080886,"stop":1760648080886,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1760648080888,"stop":1760648080888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info::0","time":{"start":1760648080895,"stop":1760648080898,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"76ac8990110d"},{"name":"thread","value":"351-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.fw_update.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":24},"items":[{"uid":"f0c9951be3b76668","reportUrl":"https://golioth.github.io/allure-reports/branch/760//#testresult/f0c9951be3b76668","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1760032977424,"stop":1760032977424,"duration":0}},{"uid":"3a7cac505bce5fe1","reportUrl":"https://golioth.github.io/allure-reports/branch/760//#testresult/3a7cac505bce5fe1","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1760027975966,"stop":1760027975966,"duration":0}},{"uid":"be4eb80507db3187","reportUrl":"https://golioth.github.io/allure-reports/branch/756//#testresult/be4eb80507db3187","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759958569214,"stop":1759958569214,"duration":0}},{"uid":"39564dae730a3938","reportUrl":"https://golioth.github.io/allure-reports/branch/756//#testresult/39564dae730a3938","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759952621938,"stop":1759952621938,"duration":0}},{"uid":"7c50036583f983a6","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/7c50036583f983a6","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759857060212,"stop":1759857060212,"duration":0}},{"uid":"23588948fbb42b15","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/23588948fbb42b15","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759799999156,"stop":1759799999157,"duration":1}},{"uid":"fde74e65cc0e9364","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/fde74e65cc0e9364","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759786648944,"stop":1759786648944,"duration":0}},{"uid":"e46e5067b53dde5c","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/e46e5067b53dde5c","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759783897101,"stop":1759783897101,"duration":0}},{"uid":"95aefc3c046a75f0","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/95aefc3c046a75f0","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759772758651,"stop":1759772758651,"duration":0}},{"uid":"a4b1aed5b2ea0ae5","reportUrl":"https://golioth.github.io/allure-reports/branch/744//#testresult/a4b1aed5b2ea0ae5","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759770289817,"stop":1759770289817,"duration":0}},{"uid":"44357e72fa98e1eb","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/44357e72fa98e1eb","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759768052875,"stop":1759768052875,"duration":0}},{"uid":"9d71fd7392228fd9","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/9d71fd7392228fd9","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759716443595,"stop":1759716443595,"duration":0}},{"uid":"d82991f8b805fb0","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/d82991f8b805fb0","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759715727177,"stop":1759715727177,"duration":0}},{"uid":"76312c20eb2297a4","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/76312c20eb2297a4","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759521990015,"stop":1759521990015,"duration":0}},{"uid":"cfa8a00b8e21c08a","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/cfa8a00b8e21c08a","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759516728091,"stop":1759516728091,"duration":0}},{"uid":"9807ebe2c645e38f","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/9807ebe2c645e38f","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759246209781,"stop":1759246209781,"duration":0}},{"uid":"ca80f8218ec801f0","reportUrl":"https://golioth.github.io/allure-reports/branch/737//#testresult/ca80f8218ec801f0","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759378869753,"stop":1759378869753,"duration":0}},{"uid":"5e3e418247e80681","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/5e3e418247e80681","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759370906711,"stop":1759370906711,"duration":0}},{"uid":"3bd0a66630296596","reportUrl":"https://golioth.github.io/allure-reports/branch/732//#testresult/3bd0a66630296596","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1759270109229,"stop":1759270310777,"duration":201548}},{"uid":"21f55b16c259efba","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/21f55b16c259efba","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759246209781,"stop":1759246209781,"duration":0}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","zephyr"]},"source":"96c78f55f4609312.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}