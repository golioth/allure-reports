{
  "uid" : "35b98dc308d73480",
  "name" : "test_rpc",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc",
  "historyId" : "b3d5b97364e6f035c71c0a09d7a1be64",
  "time" : {
    "start" : 1734462112110,
    "stop" : 1734462136073,
    "duration" : 23963
  },
  "status" : "broken",
  "statusMessage" : "AttributeError: 'RPCTimeout' object has no attribute 'status_code'",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff86099ad0>\ndevice = <golioth.golioth.Device object at 0xffff860f4bd0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734462070839,
      "stop" : 1734462070839,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734462070846,
      "stop" : 1734462071379,
      "duration" : 533
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734462071379,
      "stop" : 1734462072392,
      "duration" : 1013
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1734462070842,
      "stop" : 1734462070844,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734462070839,
      "stop" : 1734462070840,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1734462072393,
      "stop" : 1734462111474,
      "duration" : 39081
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734462070845,
      "stop" : 1734462070845,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1734462070841,
      "stop" : 1734462070841,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1734462111474,
      "stop" : 1734462112108,
      "duration" : 634
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734462070840,
      "stop" : 1734462070840,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734462070845,
      "stop" : 1734462070845,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734462070841,
      "stop" : 1734462070841,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "AttributeError: 'RPCTimeout' object has no attribute 'status_code'",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff86099ad0>\ndevice = <golioth.golioth.Device object at 0xffff860f4bd0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "752b3502c1ece4c1",
      "name" : "log",
      "source" : "752b3502c1ece4c1.txt",
      "type" : "text/plain",
      "size" : 31639
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1734462136719,
      "stop" : 1734462136722,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1734462136332,
      "stop" : 1734462136717,
      "duration" : 385
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1734462136726,
      "stop" : 1734462136727,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1734462136305,
      "stop" : 1734462136330,
      "duration" : 25
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "79f93fd5deda"
  }, {
    "name" : "thread",
    "value" : "369-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 14,
        "skipped" : 0,
        "passed" : 16,
        "unknown" : 0,
        "total" : 30
      },
      "items" : [ {
        "uid" : "a5a09927bf5b74e2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1947/#testresult/a5a09927bf5b74e2",
        "status" : "passed",
        "time" : {
          "start" : 1734452392015,
          "stop" : 1734452439005,
          "duration" : 46990
        }
      }, {
        "uid" : "d68cba3167e8bdab",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1945/#testresult/d68cba3167e8bdab",
        "status" : "passed",
        "time" : {
          "start" : 1734445540878,
          "stop" : 1734445561182,
          "duration" : 20304
        }
      }, {
        "uid" : "e329a5e2c6c71170",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1943/#testresult/e329a5e2c6c71170",
        "status" : "passed",
        "time" : {
          "start" : 1734378251053,
          "stop" : 1734378273614,
          "duration" : 22561
        }
      }, {
        "uid" : "b8b4f13a90805b6d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1943/#testresult/b8b4f13a90805b6d",
        "status" : "passed",
        "time" : {
          "start" : 1734378251053,
          "stop" : 1734378273614,
          "duration" : 22561
        }
      }, {
        "uid" : "e2258162980fdbde",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/40/#testresult/e2258162980fdbde",
        "status" : "broken",
        "statusDetails" : "golioth.golioth.RPCTimeout: RPC timeout",
        "time" : {
          "start" : 1734237364916,
          "stop" : 1734237387387,
          "duration" : 22471
        }
      }, {
        "uid" : "998f2c57aa86ffe1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1931/#testresult/998f2c57aa86ffe1",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1734127948139,
          "stop" : 1734128040856,
          "duration" : 92717
        }
      }, {
        "uid" : "8339dbbddb6f80c7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1928/#testresult/8339dbbddb6f80c7",
        "status" : "passed",
        "time" : {
          "start" : 1734048563082,
          "stop" : 1734048582764,
          "duration" : 19682
        }
      }, {
        "uid" : "e304bb30ae4525de",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1927/#testresult/e304bb30ae4525de",
        "status" : "passed",
        "time" : {
          "start" : 1734044468560,
          "stop" : 1734044487777,
          "duration" : 19217
        }
      }, {
        "uid" : "c1ccdfedb07f287b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1926/#testresult/c1ccdfedb07f287b",
        "status" : "broken",
        "statusDetails" : "serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'",
        "time" : {
          "start" : 1734033455041,
          "stop" : 1734033455041,
          "duration" : 0
        }
      }, {
        "uid" : "d68e394ab6534e95",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1921/#testresult/d68e394ab6534e95",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1734028749765,
          "stop" : 1734028842503,
          "duration" : 92738
        }
      }, {
        "uid" : "a2fc4b96c9642721",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/a2fc4b96c9642721",
        "status" : "passed",
        "time" : {
          "start" : 1734024435401,
          "stop" : 1734024454621,
          "duration" : 19220
        }
      }, {
        "uid" : "f48a0ea0b8403f13",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/f48a0ea0b8403f13",
        "status" : "passed",
        "time" : {
          "start" : 1734023228144,
          "stop" : 1734023247671,
          "duration" : 19527
        }
      }, {
        "uid" : "ab3a5ae816b8a183",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/ab3a5ae816b8a183",
        "status" : "passed",
        "time" : {
          "start" : 1733982281704,
          "stop" : 1733982300690,
          "duration" : 18986
        }
      }, {
        "uid" : "d0a8b385c0edd93f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/d0a8b385c0edd93f",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733960669445,
          "stop" : 1733960762139,
          "duration" : 92694
        }
      }, {
        "uid" : "6cef6ef1c9845a26",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/6cef6ef1c9845a26",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733957339141,
          "stop" : 1733957431921,
          "duration" : 92780
        }
      }, {
        "uid" : "f6515d6da0dbe053",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1903/#testresult/f6515d6da0dbe053",
        "status" : "broken",
        "statusDetails" : "serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'",
        "time" : {
          "start" : 1733952173054,
          "stop" : 1733952173054,
          "duration" : 0
        }
      }, {
        "uid" : "d8ac6f1170a933ec",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1900/#testresult/d8ac6f1170a933ec",
        "status" : "passed",
        "time" : {
          "start" : 1733948621635,
          "stop" : 1733948640320,
          "duration" : 18685
        }
      }, {
        "uid" : "32b64a44ee80cd0f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1899/#testresult/32b64a44ee80cd0f",
        "status" : "passed",
        "time" : {
          "start" : 1733946048550,
          "stop" : 1733946067572,
          "duration" : 19022
        }
      }, {
        "uid" : "a0b82f69e6411db",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1898/#testresult/a0b82f69e6411db",
        "status" : "passed",
        "time" : {
          "start" : 1733941377309,
          "stop" : 1733941397274,
          "duration" : 19965
        }
      }, {
        "uid" : "6be96562a05581f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/6be96562a05581f",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733941331360,
          "stop" : 1733941424156,
          "duration" : 92796
        }
      } ]
    },
    "tags" : [ "anyio", "mikes_testbench", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "35b98dc308d73480.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}