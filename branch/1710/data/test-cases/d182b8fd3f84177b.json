{"uid":"d182b8fd3f84177b","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"e5ac27ebc64962dc70036af610b826d7","time":{"start":1730471254211,"stop":1730471259577,"duration":5366},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa8a68f10>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa8a2c6d0>\ndevice = <golioth.golioth.Device object at 0xffffa8a6b650>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa8a68f10>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1730471189038,"stop":1730471189039,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730471189040,"stop":1730471189041,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730471189040,"stop":1730471189040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730471189041,"stop":1730471189041,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730471189042,"stop":1730471189042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730471189043,"stop":1730471189044,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730471189043,"stop":1730471189043,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730471189044,"stop":1730471189044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730471189045,"stop":1730471189045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730471189046,"stop":1730471189046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730471189046,"stop":1730471189046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730471189047,"stop":1730471189528,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730471189047,"stop":1730471189047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730471189529,"stop":1730471241239,"duration":51710},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730471241241,"stop":1730471242426,"duration":1185},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730471242426,"stop":1730471250674,"duration":8248},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730471337993,"stop":1730471337993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730471337998,"stop":1730471338538,"duration":540},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730471338540,"stop":1730471338541,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730471338543,"stop":1730471338546,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"eac2b42a45ac"},{"name":"thread","value":"245-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"694fe8f732515bc8","status":"passed","time":{"start":1730461065608,"stop":1730461067879,"duration":2271}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":26,"unknown":0,"total":28},"items":[{"uid":"5d8b402f5f603a58","reportUrl":"https://golioth.github.io/allure-reports/branch/1710//#testresult/5d8b402f5f603a58","status":"passed","time":{"start":1730461065608,"stop":1730461067879,"duration":2271}},{"uid":"3911dba88762cc05","reportUrl":"https://golioth.github.io/allure-reports/branch/1708//#testresult/3911dba88762cc05","status":"passed","time":{"start":1730408038311,"stop":1730408039812,"duration":1501}},{"uid":"7d451f746e302cb8","reportUrl":"https://golioth.github.io/allure-reports/branch/1707//#testresult/7d451f746e302cb8","status":"passed","time":{"start":1730382287290,"stop":1730382288255,"duration":965}},{"uid":"c44a1bdda30bbd8b","reportUrl":"https://golioth.github.io/allure-reports/branch/1706//#testresult/c44a1bdda30bbd8b","status":"passed","time":{"start":1730360882778,"stop":1730360884174,"duration":1396}},{"uid":"b49dc49ce1b64b94","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/b49dc49ce1b64b94","status":"passed","time":{"start":1730234510858,"stop":1730234511831,"duration":973}},{"uid":"54b631988b8442bc","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/54b631988b8442bc","status":"passed","time":{"start":1729787665160,"stop":1729787667397,"duration":2237}},{"uid":"b2fb1809c3a3e8bb","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/b2fb1809c3a3e8bb","status":"passed","time":{"start":1729779958516,"stop":1729779961033,"duration":2517}},{"uid":"750ead843b206e04","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/750ead843b206e04","status":"passed","time":{"start":1729722673024,"stop":1729722674024,"duration":1000}},{"uid":"c715c7822787476e","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/c715c7822787476e","status":"passed","time":{"start":1729719384590,"stop":1729719385487,"duration":897}},{"uid":"c19247522588cac7","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/c19247522588cac7","status":"passed","time":{"start":1729717400094,"stop":1729717401058,"duration":964}},{"uid":"f49e936e535dc8fd","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/f49e936e535dc8fd","status":"passed","time":{"start":1729526958048,"stop":1729526959510,"duration":1462}},{"uid":"4c38a9e6211e4c1b","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/4c38a9e6211e4c1b","status":"passed","time":{"start":1729526958048,"stop":1729526959510,"duration":1462}},{"uid":"2e58541d0dd2acb5","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/2e58541d0dd2acb5","status":"passed","time":{"start":1729525866226,"stop":1729525867688,"duration":1462}},{"uid":"b72765a3e9914eca","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/b72765a3e9914eca","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729446519179,"stop":1729446524578,"duration":5399}},{"uid":"1f2f69dc1709cca3","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/1f2f69dc1709cca3","status":"passed","time":{"start":1729444723376,"stop":1729444725622,"duration":2246}},{"uid":"e2bf1d2a456c22ed","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/e2bf1d2a456c22ed","status":"passed","time":{"start":1729377901305,"stop":1729377902769,"duration":1464}},{"uid":"cbd16346b65f4964","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/cbd16346b65f4964","status":"passed","time":{"start":1729377901305,"stop":1729377902769,"duration":1464}},{"uid":"ab7a3dbbc851ab63","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/ab7a3dbbc851ab63","status":"passed","time":{"start":1729196705910,"stop":1729196708391,"duration":2481}},{"uid":"a148d5c5b3e4283f","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/a148d5c5b3e4283f","status":"passed","time":{"start":1729114511993,"stop":1729114512889,"duration":896}},{"uid":"9e1552eef5bdb450","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/9e1552eef5bdb450","status":"passed","time":{"start":1729111856084,"stop":1729111857287,"duration":1203}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"d182b8fd3f84177b.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}