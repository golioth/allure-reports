{"uid":"49a93da2251895ce","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"f1cf752999d3f3859e1cde5c2a14c34d","time":{"start":1730462799888,"stop":1730462799888,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_hello>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730462799892,"stop":1730462799892,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730462799893,"stop":1730462799893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730462799893,"stop":1730462799893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730462799894,"stop":1730462799894,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1730462799894,"stop":1730462799895,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1730462799895,"stop":1730462799897,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730462799898,"stop":1730462799899,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730462799898,"stop":1730462799898,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730462799899,"stop":1730462800370,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730462800370,"stop":1730462801305,"duration":935},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1730462801305,"stop":1730462818310,"duration":17005},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1730462818311,"stop":1730462838343,"duration":20032},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_hello>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"2387cf9852e8c833","name":"log","source":"2387cf9852e8c833.txt","type":"text/plain","size":9867}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1730462838668,"stop":1730462838698,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730462838700,"stop":1730462839161,"duration":461},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730462839163,"stop":1730462839165,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1730462839170,"stop":1730462839171,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"6f3ee96ac2dc"},{"name":"thread","value":"523-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"337f942edd32ccc3","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1730462747878,"stop":1730462747878,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":7,"skipped":0,"passed":14,"unknown":0,"total":23},"items":[{"uid":"4417e089f01c9c33","reportUrl":"https://golioth.github.io/allure-reports/branch/1708//#testresult/4417e089f01c9c33","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1730410087544,"stop":1730410087544,"duration":0}},{"uid":"56005a0ec7e71507","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/56005a0ec7e71507","status":"passed","time":{"start":1730236718428,"stop":1730236741222,"duration":22794}},{"uid":"b052862805c645a6","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/b052862805c645a6","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729789893973,"stop":1729789916647,"duration":22674}},{"uid":"861a541bf453a807","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/861a541bf453a807","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729781666325,"stop":1729781688943,"duration":22618}},{"uid":"6cde699c3a6dab73","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/6cde699c3a6dab73","status":"passed","time":{"start":1729725657005,"stop":1729725681371,"duration":24366}},{"uid":"466fee8cdd20871e","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/466fee8cdd20871e","status":"passed","time":{"start":1729723224982,"stop":1729723244454,"duration":19472}},{"uid":"f5e11022e7dee3d4","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/f5e11022e7dee3d4","status":"passed","time":{"start":1729719884681,"stop":1729719909563,"duration":24882}},{"uid":"70b9285314a4efa2","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/70b9285314a4efa2","status":"passed","time":{"start":1729625497956,"stop":1729625518467,"duration":20511}},{"uid":"be9734f92252853a","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/be9734f92252853a","status":"passed","time":{"start":1729530351161,"stop":1729530376532,"duration":25371}},{"uid":"76051217a6164b9d","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/76051217a6164b9d","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729527916519,"stop":1729527939156,"duration":22637}},{"uid":"c5cb120062e9226b","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/c5cb120062e9226b","status":"passed","time":{"start":1729388856355,"stop":1729388880054,"duration":23699}},{"uid":"961a3321b80f59a9","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/961a3321b80f59a9","status":"passed","time":{"start":1729380174217,"stop":1729380194798,"duration":20581}},{"uid":"3eb9e39e707bdce3","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/3eb9e39e707bdce3","status":"passed","time":{"start":1729198644996,"stop":1729198668873,"duration":23877}},{"uid":"abb2a2cc65b66491","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/abb2a2cc65b66491","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729117283601,"stop":1729117396399,"duration":112798}},{"uid":"12e26f7a75dd88f8","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/12e26f7a75dd88f8","status":"passed","time":{"start":1729114431243,"stop":1729114454755,"duration":23512}},{"uid":"39e242e882678cf9","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/39e242e882678cf9","status":"passed","time":{"start":1729108885744,"stop":1729108909493,"duration":23749}},{"uid":"6eabdd92e28ed58a","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/6eabdd92e28ed58a","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1729035241293,"stop":1729035263779,"duration":22486}},{"uid":"a02932ec1f319dd","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/a02932ec1f319dd","status":"passed","time":{"start":1729032762336,"stop":1729032785824,"duration":23488}},{"uid":"f0fe4d4c9c599cc8","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/f0fe4d4c9c599cc8","status":"passed","time":{"start":1729029727641,"stop":1729029751430,"duration":23789}},{"uid":"6f440e403b4077b","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/6f440e403b4077b","status":"passed","time":{"start":1729024608659,"stop":1729024631241,"duration":22582}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"49a93da2251895ce.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}