{"uid":"a1f4dbb36b0c39a6","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1730471169979,"stop":1730471181671,"duration":11692},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8ae99610>\ndevice = <golioth.golioth.Device object at 0xffff8ae51810>\nproject = <golioth.golioth.Project object at 0xffff8ada78d0>\nreleases = {'test_blocks': Release <6724e4f4aca4baf758746da1, release_tags=[], device_tags=['6724e4f2aca4baf758746d9e'], artifact..., release_tags=[], device_tags=['6724e4f2aca4baf758746d9e'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730471090986,"stop":1730471090986,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730471090987,"stop":1730471090987,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730471090988,"stop":1730471090988,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730471090988,"stop":1730471090988,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730471090989,"stop":1730471090989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730471090989,"stop":1730471090989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730471090990,"stop":1730471090990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730471090990,"stop":1730471090990,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730471090991,"stop":1730471090991,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730471090992,"stop":1730471090992,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730471090993,"stop":1730471090993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730471090993,"stop":1730471090993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730471090994,"stop":1730471142909,"duration":51915},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730471142910,"stop":1730471143424,"duration":514},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730471143425,"stop":1730471144378,"duration":953},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730471144379,"stop":1730471153412,"duration":9033},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1730471153413,"stop":1730471153928,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1730471153929,"stop":1730471154844,"duration":915},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1730471154844,"stop":1730471156674,"duration":1830},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1730471169976,"stop":1730471169977,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8ae99610>\ndevice = <golioth.golioth.Device object at 0xffff8ae51810>\nproject = <golioth.golioth.Project object at 0xffff8ada78d0>\nreleases = {'test_blocks': Release <6724e4f4aca4baf758746da1, release_tags=[], device_tags=['6724e4f2aca4baf758746d9e'], artifact..., release_tags=[], device_tags=['6724e4f2aca4baf758746d9e'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"92d54ef99506f3b6","name":"stdout","source":"92d54ef99506f3b6.txt","type":"text/plain","size":775}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1730471181728,"stop":1730471182772,"duration":1044},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1730471182774,"stop":1730471184412,"duration":1638},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1730471184414,"stop":1730471185363,"duration":949},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1730471185365,"stop":1730471185365,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1730471185367,"stop":1730471185367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730471185369,"stop":1730471185832,"duration":463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730471185835,"stop":1730471185835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730471185837,"stop":1730471185840,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"eac2b42a45ac"},{"name":"thread","value":"240-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2a4eb4d14eb351db","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1730460974236,"stop":1730460986693,"duration":12457}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":5,"skipped":0,"passed":18,"unknown":0,"total":28},"items":[{"uid":"90af841e52dd56eb","reportUrl":"https://golioth.github.io/allure-reports/branch/1710//#testresult/90af841e52dd56eb","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1730460974236,"stop":1730460986693,"duration":12457}},{"uid":"84e194a2226e41f8","reportUrl":"https://golioth.github.io/allure-reports/branch/1708//#testresult/84e194a2226e41f8","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1730407933673,"stop":1730407954584,"duration":20911}},{"uid":"8f16238fbac00304","reportUrl":"https://golioth.github.io/allure-reports/branch/1707//#testresult/8f16238fbac00304","status":"passed","time":{"start":1730382170977,"stop":1730382248438,"duration":77461}},{"uid":"e1a299d821b7b405","reportUrl":"https://golioth.github.io/allure-reports/branch/1706//#testresult/e1a299d821b7b405","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1730360789330,"stop":1730360826533,"duration":37203}},{"uid":"984446672fde9a7f","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/984446672fde9a7f","status":"passed","time":{"start":1730234393834,"stop":1730234471737,"duration":77903}},{"uid":"42581f4651e709da","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/42581f4651e709da","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1729787579406,"stop":1729787591818,"duration":12412}},{"uid":"a8457866ba56c4d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/a8457866ba56c4d2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729779863251,"stop":1729779883648,"duration":20397}},{"uid":"fa194a0871cb5a52","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/fa194a0871cb5a52","status":"passed","time":{"start":1729722535867,"stop":1729722612815,"duration":76948}},{"uid":"618278a2e388552d","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/618278a2e388552d","status":"passed","time":{"start":1729719248522,"stop":1729719325465,"duration":76943}},{"uid":"3fd47e8d0a242a0d","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/3fd47e8d0a242a0d","status":"passed","time":{"start":1729717283843,"stop":1729717361093,"duration":77250}},{"uid":"ff7029d3c6b3a920","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/ff7029d3c6b3a920","status":"passed","time":{"start":1729526834595,"stop":1729526915726,"duration":81131}},{"uid":"3126edb6cb791724","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/3126edb6cb791724","status":"passed","time":{"start":1729526834595,"stop":1729526915726,"duration":81131}},{"uid":"356c11fc0b301279","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/356c11fc0b301279","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729525759577,"stop":1729525779939,"duration":20362}},{"uid":"2c741c0b78dba50d","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/2c741c0b78dba50d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729446423847,"stop":1729446444209,"duration":20362}},{"uid":"80daa87e9f8fd881","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/80daa87e9f8fd881","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729444627985,"stop":1729444648357,"duration":20372}},{"uid":"27711849cddb5fe1","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/27711849cddb5fe1","status":"passed","time":{"start":1729377778457,"stop":1729377859376,"duration":80919}},{"uid":"1bc040fe919a506","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/1bc040fe919a506","status":"passed","time":{"start":1729377778457,"stop":1729377859376,"duration":80919}},{"uid":"905950f2aa52f701","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/905950f2aa52f701","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1729196615970,"stop":1729196629466,"duration":13496}},{"uid":"34ef4cf4ac8dbfa8","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/34ef4cf4ac8dbfa8","status":"passed","time":{"start":1729114376362,"stop":1729114453340,"duration":76978}},{"uid":"6243c1486ffa401","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/6243c1486ffa401","status":"passed","time":{"start":1729111724555,"stop":1729111801275,"duration":76720}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"a1f4dbb36b0c39a6.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}