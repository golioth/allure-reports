{"uid":"53bd9a3ec1ecdc5e","name":"test_many_args","fullName":"tests.hil.tests.rpc.test_rpc#test_many_args","historyId":"b16b878450b332b60ff5f4528b53d266","time":{"start":1730471260706,"stop":1730471266042,"duration":5336},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa8a68f10>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa8a2c6d0>\ndevice = <golioth.golioth.Device object at 0xffffa8a6b650>\n\n    async def test_many_args(board, device):\n>       await device.rpc.no_response(1,2,3,4,5,6,7,8,9)\n\ntests/hil/tests/rpc/test_rpc.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa8a68f10>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1730471189038,"stop":1730471189039,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730471189040,"stop":1730471189041,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730471189040,"stop":1730471189040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730471189041,"stop":1730471189041,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730471189042,"stop":1730471189042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730471189043,"stop":1730471189044,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730471189043,"stop":1730471189043,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730471189044,"stop":1730471189044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730471189045,"stop":1730471189045,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730471189046,"stop":1730471189046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730471189046,"stop":1730471189046,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730471189047,"stop":1730471189528,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730471189047,"stop":1730471189047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730471189529,"stop":1730471241239,"duration":51710},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730471241241,"stop":1730471242426,"duration":1185},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730471242426,"stop":1730471250674,"duration":8248},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730471337993,"stop":1730471337993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730471337998,"stop":1730471338538,"duration":540},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730471338540,"stop":1730471338541,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730471338543,"stop":1730471338546,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"eac2b42a45ac"},{"name":"thread","value":"245-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1d6d086b0268f141","status":"passed","time":{"start":1730461067908,"stop":1730461070136,"duration":2228}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":24,"unknown":0,"total":28},"items":[{"uid":"6faa5f86a4008b05","reportUrl":"https://golioth.github.io/allure-reports/branch/1710//#testresult/6faa5f86a4008b05","status":"passed","time":{"start":1730461067908,"stop":1730461070136,"duration":2228}},{"uid":"fac81584f49e5fbb","reportUrl":"https://golioth.github.io/allure-reports/branch/1708//#testresult/fac81584f49e5fbb","status":"passed","time":{"start":1730408039840,"stop":1730408041056,"duration":1216}},{"uid":"38a34ae2684c8089","reportUrl":"https://golioth.github.io/allure-reports/branch/1707//#testresult/38a34ae2684c8089","status":"passed","time":{"start":1730382288267,"stop":1730382289511,"duration":1244}},{"uid":"ae6a1a556ac82e15","reportUrl":"https://golioth.github.io/allure-reports/branch/1706//#testresult/ae6a1a556ac82e15","status":"passed","time":{"start":1730360884185,"stop":1730360885207,"duration":1022}},{"uid":"b2b64dc988c93644","reportUrl":"https://golioth.github.io/allure-reports/branch/1702//#testresult/b2b64dc988c93644","status":"passed","time":{"start":1730234511843,"stop":1730234512832,"duration":989}},{"uid":"deb452500c903f8f","reportUrl":"https://golioth.github.io/allure-reports/branch/1696//#testresult/deb452500c903f8f","status":"passed","time":{"start":1729787667426,"stop":1729787668641,"duration":1215}},{"uid":"4c37e07ffd3e3502","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/4c37e07ffd3e3502","status":"passed","time":{"start":1729779961062,"stop":1729779962254,"duration":1192}},{"uid":"f58b702ae91d5c36","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/f58b702ae91d5c36","status":"passed","time":{"start":1729722674035,"stop":1729722675257,"duration":1222}},{"uid":"af28ae439489103e","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/af28ae439489103e","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1729719385501,"stop":1729719390855,"duration":5354}},{"uid":"c62e6fa76371ae89","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/c62e6fa76371ae89","status":"passed","time":{"start":1729717401069,"stop":1729717402060,"duration":991}},{"uid":"66c4de04bde2b6e5","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/66c4de04bde2b6e5","status":"passed","time":{"start":1729526959521,"stop":1729526960773,"duration":1252}},{"uid":"e30487d6989ad2b2","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/e30487d6989ad2b2","status":"passed","time":{"start":1729526959521,"stop":1729526960773,"duration":1252}},{"uid":"165927b81ccbe20e","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/165927b81ccbe20e","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729525867699,"stop":1729525873012,"duration":5313}},{"uid":"158f47bde81d5904","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/158f47bde81d5904","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729446525654,"stop":1729446530960,"duration":5306}},{"uid":"e44c7013f90e61b6","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/e44c7013f90e61b6","status":"passed","time":{"start":1729444725633,"stop":1729444727892,"duration":2259}},{"uid":"6f58d46ef65a5303","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/6f58d46ef65a5303","status":"passed","time":{"start":1729377902781,"stop":1729377904037,"duration":1256}},{"uid":"a59c92c9c8f4774b","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/a59c92c9c8f4774b","status":"passed","time":{"start":1729377902781,"stop":1729377904037,"duration":1256}},{"uid":"b5de7f48d70e82e0","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/b5de7f48d70e82e0","status":"passed","time":{"start":1729196708420,"stop":1729196710901,"duration":2481}},{"uid":"12f49442c0a168a8","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/12f49442c0a168a8","status":"passed","time":{"start":1729114512901,"stop":1729114513901,"duration":1000}},{"uid":"68ffc56e311deb27","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/68ffc56e311deb27","status":"passed","time":{"start":1729111857298,"stop":1729111858316,"duration":1018}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"53bd9a3ec1ecdc5e.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}