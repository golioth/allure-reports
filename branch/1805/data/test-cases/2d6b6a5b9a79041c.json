{"uid":"2d6b6a5b9a79041c","name":"test_float_return","fullName":"tests.hil.tests.rpc.test_rpc#test_float_return","historyId":"e1d6e03e7dcf1de933bb5f662c210cb0","time":{"start":1732204313363,"stop":1732204313363,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 87514.20893365424\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffff909a0d50>\nboard = <rak5010.RAK5010 object at 0xffff909a0e50>\ndevice = <golioth.golioth.Device object at 0xffff9096f650>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('RPC observation established', timeout_s=120)\n\ntests/hil/tests/rpc/test_rpc.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 87514.20893365424\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732204169463,"stop":1732204169464,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732204169464,"stop":1732204169464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732204169465,"stop":1732204169465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732204169466,"stop":1732204169467,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732204169466,"stop":1732204169466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732204169467,"stop":1732204169468,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732204169468,"stop":1732204169468,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732204169469,"stop":1732204169469,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732204169470,"stop":1732204169470,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732204169470,"stop":1732204169470,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732204169471,"stop":1732204169471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732204169472,"stop":1732204169472,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732204169473,"stop":1732204170156,"duration":683},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732204170157,"stop":1732204189403,"duration":19246},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732204189405,"stop":1732204190545,"duration":1140},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732204190545,"stop":1732204311133,"duration":120588},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/rpc/test_rpc.py\", line 13, in setup\n    assert None != await board.wait_for_regex_in_line('RPC observation established', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1732204315864,"stop":1732204316227,"duration":363},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732204316229,"stop":1732204316243,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732204316245,"stop":1732204316247,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"f0ebc0f63bc9"},{"name":"thread","value":"231-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9db3171e3950e982","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732196325555,"stop":1732196325555,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":49,"unknown":0,"total":59},"items":[{"uid":"1d80e9b2ed94be5","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/1d80e9b2ed94be5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732202017050,"stop":1732202017050,"duration":0}},{"uid":"5005843d6a73bdc5","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/5005843d6a73bdc5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732199692187,"stop":1732199692187,"duration":0}},{"uid":"60ada0337d5b6c95","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/60ada0337d5b6c95","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732196325555,"stop":1732196325555,"duration":0}},{"uid":"bbf01fc915b87448","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/bbf01fc915b87448","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732194601422,"stop":1732194601422,"duration":0}},{"uid":"d87e69d57f5bd00e","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/d87e69d57f5bd00e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732193485017,"stop":1732193485017,"duration":0}},{"uid":"15d4e1da1d0a55ce","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/15d4e1da1d0a55ce","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732189488008,"stop":1732189488008,"duration":0}},{"uid":"b205d5c181ea400d","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/b205d5c181ea400d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732187435686,"stop":1732187435686,"duration":0}},{"uid":"d8496d526bdb9420","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/d8496d526bdb9420","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732154216356,"stop":1732154216356,"duration":0}},{"uid":"c8882d954d75b63d","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/c8882d954d75b63d","status":"passed","time":{"start":1732144893703,"stop":1732144894694,"duration":991}},{"uid":"9623fffbec924089","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/9623fffbec924089","status":"passed","time":{"start":1732143679538,"stop":1732143680528,"duration":990}},{"uid":"d4682adc657c26b5","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/d4682adc657c26b5","status":"passed","time":{"start":1732141316418,"stop":1732141317408,"duration":990}},{"uid":"b7c041095e97fde7","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/b7c041095e97fde7","status":"passed","time":{"start":1732140393600,"stop":1732140394351,"duration":751}},{"uid":"179b5b53f7c4b971","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/179b5b53f7c4b971","status":"passed","time":{"start":1732134003859,"stop":1732134004851,"duration":992}},{"uid":"6063b460be252b5","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/6063b460be252b5","status":"passed","time":{"start":1732094029903,"stop":1732094030912,"duration":1009}},{"uid":"d89d0ca59a0d16f2","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/d89d0ca59a0d16f2","status":"passed","time":{"start":1732094029903,"stop":1732094030912,"duration":1009}},{"uid":"12e634332dd00d9a","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/12e634332dd00d9a","status":"passed","time":{"start":1732124820650,"stop":1732124821872,"duration":1222}},{"uid":"506c7faa60d57caa","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/506c7faa60d57caa","status":"passed","time":{"start":1732123327410,"stop":1732123328415,"duration":1005}},{"uid":"d5b7d446096c5d52","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/d5b7d446096c5d52","status":"passed","time":{"start":1732094029903,"stop":1732094030912,"duration":1009}},{"uid":"5866c8ccfb4d72ca","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/5866c8ccfb4d72ca","status":"passed","time":{"start":1732055696426,"stop":1732055697406,"duration":980}},{"uid":"7638f3fcea904987","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/7638f3fcea904987","status":"passed","time":{"start":1732053299649,"stop":1732053300641,"duration":992}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"2d6b6a5b9a79041c.json","parameterValues":["'rak5010'","'zephyr'"]}