{"uid":"e5eddc5e9e384d95","name":"test_not_registered","fullName":"tests.hil.tests.rpc.test_rpc#test_not_registered","historyId":"215a700f2125a96b26a9aa7e0a996f4a","time":{"start":1732283700229,"stop":1732283705587,"duration":5358},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff851a8f50>\nmethod = 'not_registered', params = ([],)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff8518b250>\ndevice = <golioth.golioth.Device object at 0xffff851a8250>\n\n    async def test_not_registered(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           await device.rpc.not_registered([])\n\ntests/hil/tests/rpc/test_rpc.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff851a8f50>\nmethod = 'not_registered', params = ([],)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":3,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1732283647902,"stop":1732283647902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732283647903,"stop":1732283647903,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732283647903,"stop":1732283647904,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732283647904,"stop":1732283647904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732283647905,"stop":1732283647905,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732283647906,"stop":1732283647906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732283647906,"stop":1732283647907,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732283647907,"stop":1732283647908,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732283647907,"stop":1732283647907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732283647908,"stop":1732283647909,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732283647908,"stop":1732283647908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732283647909,"stop":1732283647909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732283647909,"stop":1732283648552,"duration":643},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732283648553,"stop":1732283690042,"duration":41489},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732283690043,"stop":1732283690956,"duration":913},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732283690957,"stop":1732283700221,"duration":9264},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff851a8f50>\nmethod = 'not_registered', params = ([],)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff8518b250>\ndevice = <golioth.golioth.Device object at 0xffff851a8250>\n\n    async def test_not_registered(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           await device.rpc.not_registered([])\n\ntests/hil/tests/rpc/test_rpc.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff851a8f50>\nmethod = 'not_registered', params = ([],)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","steps":[],"attachments":[{"uid":"258f41b74daa6aa8","name":"stdout","source":"258f41b74daa6aa8.txt","type":"text/plain","size":3017},{"uid":"25910c49ae8d9cc6","name":"stderr","source":"25910c49ae8d9cc6.txt","type":"text/plain","size":252}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1732283756284,"stop":1732283756284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732283756286,"stop":1732283757009,"duration":723},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732283757011,"stop":1732283757013,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732283757015,"stop":1732283757017,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"f04648bba51e"},{"name":"thread","value":"227-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c7f60ce7fa7d57b0","status":"passed","time":{"start":1732212944311,"stop":1732212945316,"duration":1005}},{"uid":"8b96a0955c281de5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732204169460,"stop":1732204169460,"duration":0}},{"uid":"a6e5a79107089220","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732196181805,"stop":1732196181805,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":55,"unknown":0,"total":71},"items":[{"uid":"e64dfe75ca4c13be","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/e64dfe75ca4c13be","status":"passed","time":{"start":1732279444743,"stop":1732279445888,"duration":1145}},{"uid":"6387ebd2ac5c5c02","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/6387ebd2ac5c5c02","status":"passed","time":{"start":1732275961057,"stop":1732275962246,"duration":1189}},{"uid":"4354e0238fe57584","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/4354e0238fe57584","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732274177368,"stop":1732274177368,"duration":0}},{"uid":"aee2189afd4effec","reportUrl":"https://golioth.github.io/allure-reports/branch/1819//#testresult/aee2189afd4effec","status":"passed","time":{"start":1732231397701,"stop":1732231398890,"duration":1189}},{"uid":"9ec9d6e0c46020d9","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/9ec9d6e0c46020d9","status":"passed","time":{"start":1732230443646,"stop":1732230444626,"duration":980}},{"uid":"c8b4d1dd5cbe2482","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/c8b4d1dd5cbe2482","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732226773460,"stop":1732226773460,"duration":0}},{"uid":"c2e8af159047c054","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/c2e8af159047c054","status":"passed","time":{"start":1732224541250,"stop":1732224542196,"duration":946}},{"uid":"b9a632a67832c967","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/b9a632a67832c967","status":"passed","time":{"start":1732212944311,"stop":1732212945316,"duration":1005}},{"uid":"fa0d0783cb36f128","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/fa0d0783cb36f128","status":"passed","time":{"start":1732207085952,"stop":1732207086994,"duration":1042}},{"uid":"18d6d3f6b081d4c","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/18d6d3f6b081d4c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732206805247,"stop":1732206805247,"duration":0}},{"uid":"2e6304223a08aa93","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/2e6304223a08aa93","status":"passed","time":{"start":1732204865062,"stop":1732204866159,"duration":1097}},{"uid":"84b9771fb45a6318","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/84b9771fb45a6318","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732204169460,"stop":1732204169460,"duration":0}},{"uid":"208eb3b4bd469bc0","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/208eb3b4bd469bc0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732201850943,"stop":1732201850943,"duration":0}},{"uid":"bafece811c7866eb","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/bafece811c7866eb","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732199526106,"stop":1732199526106,"duration":0}},{"uid":"f90b675c9cb95912","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/f90b675c9cb95912","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732196181805,"stop":1732196181805,"duration":0}},{"uid":"9052df98de8b7e56","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/9052df98de8b7e56","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732194435116,"stop":1732194435116,"duration":0}},{"uid":"cd17cd87c513b219","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/cd17cd87c513b219","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732193319046,"stop":1732193319046,"duration":0}},{"uid":"efaa8bff6e714809","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/efaa8bff6e714809","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732189344606,"stop":1732189344606,"duration":0}},{"uid":"79cc3cb0ec693806","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/79cc3cb0ec693806","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732187269679,"stop":1732187269680,"duration":1}},{"uid":"171cfc2326528161","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/171cfc2326528161","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732154072640,"stop":1732154072640,"duration":0}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"e5eddc5e9e384d95.json","parameterValues":["'rak5010'","'zephyr'"]}