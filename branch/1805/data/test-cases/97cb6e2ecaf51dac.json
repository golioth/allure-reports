{"uid":"97cb6e2ecaf51dac","name":"test_lightdb_observe","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.observe.pytest.test_sample#test_lightdb_observe","historyId":"466fcb31cd63d28758a28daeb9320ffb","time":{"start":1732210184688,"stop":1732210184688,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_observe>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1732210184691,"stop":1732210184692,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732210184692,"stop":1732210184692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732210184693,"stop":1732210184693,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732210184693,"stop":1732210184693,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732210184694,"stop":1732210184696,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732210184694,"stop":1732210184694,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732210184697,"stop":1732210184697,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732210184698,"stop":1732210185194,"duration":496},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732210184698,"stop":1732210184698,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732210185195,"stop":1732210186491,"duration":1296},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732210186492,"stop":1732210194488,"duration":7996},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732210194489,"stop":1732210214524,"duration":20035},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_observe>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"83f24d04c63becf1","name":"log","source":"83f24d04c63becf1.txt","type":"text/plain","size":9615}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732210214865,"stop":1732210215356,"duration":491},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732210215358,"stop":1732210215804,"duration":446},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732210215806,"stop":1732210215808,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732210215813,"stop":1732210215813,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"aa1393e16640"},{"name":"thread","value":"491-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.observe.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"16802e37e61d78e7","status":"passed","time":{"start":1732199569415,"stop":1732199576058,"duration":6643}},{"uid":"361bf4e86ccc50fb","status":"passed","time":{"start":1732195990432,"stop":1732195997379,"duration":6947}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":8,"skipped":0,"passed":55,"unknown":0,"total":64},"items":[{"uid":"ac954c9e201f4885","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/ac954c9e201f4885","status":"passed","time":{"start":1732209396532,"stop":1732209408750,"duration":12218}},{"uid":"ca403d8228b04bad","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/ca403d8228b04bad","status":"passed","time":{"start":1732208832140,"stop":1732208841502,"duration":9362}},{"uid":"2b4f2ea981bbdec9","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/2b4f2ea981bbdec9","status":"passed","time":{"start":1732146464601,"stop":1732146475676,"duration":11075}},{"uid":"681ffe81e2aed23c","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/681ffe81e2aed23c","status":"passed","time":{"start":1732199569415,"stop":1732199576058,"duration":6643}},{"uid":"14339d7506f0ed4","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/14339d7506f0ed4","status":"passed","time":{"start":1732199313865,"stop":1732199323544,"duration":9679}},{"uid":"161834d75eef5d1b","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/161834d75eef5d1b","status":"passed","time":{"start":1732146464601,"stop":1732146475676,"duration":11075}},{"uid":"a383272d81905e82","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/a383272d81905e82","status":"passed","time":{"start":1732195990432,"stop":1732195997379,"duration":6947}},{"uid":"93104192ee011aba","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/93104192ee011aba","status":"passed","time":{"start":1732192885625,"stop":1732192896277,"duration":10652}},{"uid":"929064c656da8ef6","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/929064c656da8ef6","status":"passed","time":{"start":1732146464601,"stop":1732146475676,"duration":11075}},{"uid":"7b53d1603fbdd1a0","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/7b53d1603fbdd1a0","status":"passed","time":{"start":1732186933789,"stop":1732186940033,"duration":6244}},{"uid":"be7cf2e381382eab","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/be7cf2e381382eab","status":"passed","time":{"start":1732146464601,"stop":1732146475676,"duration":11075}},{"uid":"3a3dd49b0689da39","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/3a3dd49b0689da39","status":"passed","time":{"start":1732154189818,"stop":1732154201420,"duration":11602}},{"uid":"bc550513e974b21b","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/bc550513e974b21b","status":"passed","time":{"start":1732148029856,"stop":1732148040277,"duration":10421}},{"uid":"25e8556ba4cd625b","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/25e8556ba4cd625b","status":"passed","time":{"start":1732146464601,"stop":1732146475676,"duration":11075}},{"uid":"d00b31a45781d524","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/d00b31a45781d524","status":"passed","time":{"start":1732144706281,"stop":1732144717050,"duration":10769}},{"uid":"685a25ca5a008fd8","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/685a25ca5a008fd8","status":"passed","time":{"start":1732134524306,"stop":1732134535176,"duration":10870}},{"uid":"784a31ba49340acf","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/784a31ba49340acf","status":"passed","time":{"start":1732093922450,"stop":1732093932292,"duration":9842}},{"uid":"ed244ef11dbf1153","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/ed244ef11dbf1153","status":"passed","time":{"start":1732093922450,"stop":1732093932292,"duration":9842}},{"uid":"a5bf9a74f9c0ef62","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/a5bf9a74f9c0ef62","status":"passed","time":{"start":1732125916585,"stop":1732125926169,"duration":9584}},{"uid":"7da87e8572a87e0c","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/7da87e8572a87e0c","status":"passed","time":{"start":1732123879198,"stop":1732123885590,"duration":6392}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"97cb6e2ecaf51dac.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}