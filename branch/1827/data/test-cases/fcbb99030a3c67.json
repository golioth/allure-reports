{"uid":"fcbb99030a3c67","name":"test_set_int_range_max","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_max","historyId":"1b08a683124e5b82b60137ca89007f1f","time":{"start":1732289753158,"stop":1732289763937,"duration":10779},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 123696.85108939011\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffff8e5dab50>\ndevice = <golioth.golioth.Device object at 0xffff8e660290>\n\n    async def test_set_int_range_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 100)\n    \n>       assert None != await board.wait_for_regex_in_line('Received test_int_range: 100', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 123696.85108939011\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"board_name","time":{"start":1732289668017,"stop":1732289668018,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1732289668017,"stop":1732289668017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732289668018,"stop":1732289668018,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732289668019,"stop":1732289668019,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732289668019,"stop":1732289668019,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732289668020,"stop":1732289668020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732289668020,"stop":1732289668020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732289668021,"stop":1732289668021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732289668021,"stop":1732289668021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732289668022,"stop":1732289668022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732289668022,"stop":1732289668022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732289668023,"stop":1732289668475,"duration":452},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732289668023,"stop":1732289668023,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732289668475,"stop":1732289683255,"duration":14780},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732289683257,"stop":1732289684137,"duration":880},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732289684137,"stop":1732289708397,"duration":24260},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 123696.85108939011\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffff8e5dab50>\ndevice = <golioth.golioth.Device object at 0xffff8e660290>\n\n    async def test_set_int_range_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 100)\n    \n>       assert None != await board.wait_for_regex_in_line('Received test_int_range: 100', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 123696.85108939011\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"5379a56353e5beb4","name":"stdout","source":"5379a56353e5beb4.txt","type":"text/plain","size":149}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1732289878415,"stop":1732289878415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732289878421,"stop":1732289878854,"duration":433},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732289878857,"stop":1732289878858,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732289878861,"stop":1732289878863,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"6ff8051b87bf"},{"name":"thread","value":"305-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":57,"unknown":0,"total":66},"items":[{"uid":"d2c739cf3420944d","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/d2c739cf3420944d","status":"passed","time":{"start":1732196705114,"stop":1732196710229,"duration":5115}},{"uid":"402cceaeb7a5139c","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/402cceaeb7a5139c","status":"passed","time":{"start":1732286715106,"stop":1732286719469,"duration":4363}},{"uid":"cc3d23713eb7a166","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/cc3d23713eb7a166","status":"passed","time":{"start":1732196705114,"stop":1732196710229,"duration":5115}},{"uid":"65b2b15b3cf3bc3","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/65b2b15b3cf3bc3","status":"passed","time":{"start":1732280343875,"stop":1732280349094,"duration":5219}},{"uid":"a107e19c7c3d1c4e","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/a107e19c7c3d1c4e","status":"passed","time":{"start":1732276094463,"stop":1732276099374,"duration":4911}},{"uid":"81f55262cf7c6f13","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/81f55262cf7c6f13","status":"passed","time":{"start":1732208574295,"stop":1732208581220,"duration":6925}},{"uid":"d81f3e803e995d45","reportUrl":"https://golioth.github.io/allure-reports/branch/1819//#testresult/d81f3e803e995d45","status":"passed","time":{"start":1732232033386,"stop":1732232038043,"duration":4657}},{"uid":"fb1c40c930d9648c","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/fb1c40c930d9648c","status":"passed","time":{"start":1732230482795,"stop":1732230487835,"duration":5040}},{"uid":"b7f85fe973ea6b48","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/b7f85fe973ea6b48","status":"passed","time":{"start":1732227899821,"stop":1732227904843,"duration":5022}},{"uid":"c320868a97fe7b79","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/c320868a97fe7b79","status":"passed","time":{"start":1732225374265,"stop":1732225379391,"duration":5126}},{"uid":"efd1f31f75467133","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/efd1f31f75467133","status":"passed","time":{"start":1732216879122,"stop":1732216884169,"duration":5047}},{"uid":"2bd21f530b8756b9","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/2bd21f530b8756b9","status":"passed","time":{"start":1732196705114,"stop":1732196710229,"duration":5115}},{"uid":"8e121dc6add0de91","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/8e121dc6add0de91","status":"passed","time":{"start":1732208574295,"stop":1732208581220,"duration":6925}},{"uid":"abda9c46006620dd","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/abda9c46006620dd","status":"passed","time":{"start":1732208363145,"stop":1732208368178,"duration":5033}},{"uid":"b8d11980afa075d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/b8d11980afa075d2","status":"passed","time":{"start":1732205215561,"stop":1732205222277,"duration":6716}},{"uid":"48d2a455ea0dcd3f","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/48d2a455ea0dcd3f","status":"passed","time":{"start":1732196705114,"stop":1732196710229,"duration":5115}},{"uid":"e1ded1bda84ba0b2","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/e1ded1bda84ba0b2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732202962471,"stop":1732202962471,"duration":0}},{"uid":"46919b1aba694544","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/46919b1aba694544","status":"passed","time":{"start":1732200951862,"stop":1732200957273,"duration":5411}},{"uid":"3320e1e05d56d849","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/3320e1e05d56d849","status":"passed","time":{"start":1732196705114,"stop":1732196710229,"duration":5115}},{"uid":"3fb1b4845b3e804d","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/3fb1b4845b3e804d","status":"passed","time":{"start":1732195776856,"stop":1732195784625,"duration":7769}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"fcbb99030a3c67.json","parameterValues":["'nrf9160dk'","'zephyr'"]}