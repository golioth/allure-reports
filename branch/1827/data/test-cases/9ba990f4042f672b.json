{"uid":"9ba990f4042f672b","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"cdb87fc4c2730ad241928eddee1d6778","time":{"start":1732288734651,"stop":1732288747544,"duration":12893},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffffad63fc90>\ndevice = <golioth.golioth.Device object at 0xffffad6300d0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffad6300d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732288689578,"stop":1732288689578,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732288689579,"stop":1732288689579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732288689580,"stop":1732288689580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732288689580,"stop":1732288689580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732288689581,"stop":1732288689581,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732288689581,"stop":1732288689581,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732288689582,"stop":1732288689582,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732288689582,"stop":1732288689582,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732288689583,"stop":1732288689583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732288689583,"stop":1732288689583,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732288689584,"stop":1732288689584,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732288689585,"stop":1732288689585,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732288689586,"stop":1732288690070,"duration":484},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732288690071,"stop":1732288710471,"duration":20400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732288710473,"stop":1732288711786,"duration":1313},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732288711786,"stop":1732288730364,"duration":18578},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffffad63fc90>\ndevice = <golioth.golioth.Device object at 0xffffad6300d0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffad6300d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"85ca8389dfd1aaf1","name":"stdout","source":"85ca8389dfd1aaf1.txt","type":"text/plain","size":243}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1732288876224,"stop":1732288876224,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732288876229,"stop":1732288876744,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732288876746,"stop":1732288876801,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732288876803,"stop":1732288876805,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"7f5104351083"},{"name":"thread","value":"309-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":7,"skipped":0,"passed":68,"unknown":0,"total":76},"items":[{"uid":"ba87b693a23e2490","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/ba87b693a23e2490","status":"passed","time":{"start":1732193641022,"stop":1732193653847,"duration":12825}},{"uid":"195b4438bba2f69","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/195b4438bba2f69","status":"passed","time":{"start":1732285485660,"stop":1732285501206,"duration":15546}},{"uid":"fc429d1daab93232","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/fc429d1daab93232","status":"passed","time":{"start":1732193641022,"stop":1732193653847,"duration":12825}},{"uid":"90d4150b757af703","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/90d4150b757af703","status":"passed","time":{"start":1732279175368,"stop":1732279187626,"duration":12258}},{"uid":"33a2984578c59cb7","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/33a2984578c59cb7","status":"passed","time":{"start":1732206589549,"stop":1732206601967,"duration":12418}},{"uid":"f3f23a3859a84926","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/f3f23a3859a84926","status":"passed","time":{"start":1732207606025,"stop":1732207618570,"duration":12545}},{"uid":"ae28a5a5806f939c","reportUrl":"https://golioth.github.io/allure-reports/branch/1819//#testresult/ae28a5a5806f939c","status":"passed","time":{"start":1732231004780,"stop":1732231017318,"duration":12538}},{"uid":"fd50c818a7f821ef","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/fd50c818a7f821ef","status":"passed","time":{"start":1732224501638,"stop":1732224513886,"duration":12248}},{"uid":"59a53bb31ada3511","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/59a53bb31ada3511","status":"passed","time":{"start":1732226312064,"stop":1732226324987,"duration":12923}},{"uid":"a5da0652c8c51ad5","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/a5da0652c8c51ad5","status":"passed","time":{"start":1732224501638,"stop":1732224513886,"duration":12248}},{"uid":"8ea8a58056077872","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/8ea8a58056077872","status":"passed","time":{"start":1732215704548,"stop":1732215717104,"duration":12556}},{"uid":"3639dc644bc9312e","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/3639dc644bc9312e","status":"passed","time":{"start":1732193641022,"stop":1732193653847,"duration":12825}},{"uid":"88d9bfeb5bb73af5","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/88d9bfeb5bb73af5","status":"passed","time":{"start":1732207606025,"stop":1732207618570,"duration":12545}},{"uid":"cf443a79fddd7d","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/cf443a79fddd7d","status":"passed","time":{"start":1732206589549,"stop":1732206601967,"duration":12418}},{"uid":"e01d7e5da8f8ae7e","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/e01d7e5da8f8ae7e","status":"passed","time":{"start":1732192281054,"stop":1732192293598,"duration":12544}},{"uid":"2da9cdaf90460f9a","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/2da9cdaf90460f9a","status":"passed","time":{"start":1732193641022,"stop":1732193653847,"duration":12825}},{"uid":"ceaeea82cd74715e","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/ceaeea82cd74715e","status":"passed","time":{"start":1732188362527,"stop":1732188375386,"duration":12859}},{"uid":"782c721d8f6e012","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/782c721d8f6e012","status":"passed","time":{"start":1732192281054,"stop":1732192293598,"duration":12544}},{"uid":"834ad3f5163b472c","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/834ad3f5163b472c","status":"passed","time":{"start":1732193641022,"stop":1732193653847,"duration":12825}},{"uid":"42b17111c2521c16","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/42b17111c2521c16","status":"passed","time":{"start":1732188362527,"stop":1732188375386,"duration":12859}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"9ba990f4042f672b.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}