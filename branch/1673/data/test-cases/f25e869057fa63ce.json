{"uid":"f25e869057fa63ce","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1729197392928,"stop":1729197468965,"duration":76037},"status":"failed","statusMessage":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff9f6576d0>\ndevice = <golioth.golioth.Device object at 0xffff9f638390>\nproject = <golioth.golioth.Project object at 0xffff9f675310>\nreleases = {'test_blocks': Release <6711754098856a8e1a64aede, release_tags=[], device_tags=['6711753e98856a8e1a64aedb'], artifact..., release_tags=[], device_tags=['6711753e98856a8e1a64aedb'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 9 == 8\nE            +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729197348905,"stop":1729197348905,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729197348906,"stop":1729197348906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729197348907,"stop":1729197348907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729197348908,"stop":1729197348908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729197348909,"stop":1729197348909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729197348909,"stop":1729197348909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729197348910,"stop":1729197348910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729197348910,"stop":1729197348910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729197348911,"stop":1729197348911,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729197348911,"stop":1729197348912,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729197348912,"stop":1729197348912,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729197348912,"stop":1729197348912,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729197348913,"stop":1729197363621,"duration":14708},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729197363624,"stop":1729197364177,"duration":553},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729197364178,"stop":1729197365243,"duration":1065},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729197365244,"stop":1729197373764,"duration":8520},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1729197373765,"stop":1729197374307,"duration":542},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1729197374308,"stop":1729197375305,"duration":997},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1729197375305,"stop":1729197377372,"duration":2067},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1729197392925,"stop":1729197392925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff9f6576d0>\ndevice = <golioth.golioth.Device object at 0xffff9f638390>\nproject = <golioth.golioth.Project object at 0xffff9f675310>\nreleases = {'test_blocks': Release <6711754098856a8e1a64aede, release_tags=[], device_tags=['6711753e98856a8e1a64aedb'], artifact..., release_tags=[], device_tags=['6711753e98856a8e1a64aedb'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 9 == 8\nE            +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"8335ff8e2fcc0f0e","name":"stdout","source":"8335ff8e2fcc0f0e.txt","type":"text/plain","size":3867}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1729197469134,"stop":1729197470356,"duration":1222},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1729197470358,"stop":1729197472141,"duration":1783},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1729197472143,"stop":1729197473095,"duration":952},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1729197473097,"stop":1729197473097,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1729197473099,"stop":1729197473099,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729197473101,"stop":1729197473662,"duration":561},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729197473664,"stop":1729197473664,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729197473666,"stop":1729197473670,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"75096216b005"},{"name":"thread","value":"262-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":3,"skipped":0,"passed":5,"unknown":0,"total":10},"items":[{"uid":"a60afd7f88f70ee3","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/a60afd7f88f70ee3","status":"failed","statusDetails":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","time":{"start":1729116184272,"stop":1729116265402,"duration":81130}},{"uid":"8ff275ad49f286d0","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/8ff275ad49f286d0","status":"passed","time":{"start":1729113700331,"stop":1729113798252,"duration":97921}},{"uid":"5557613778ead8e6","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/5557613778ead8e6","status":"passed","time":{"start":1729107978511,"stop":1729108064387,"duration":85876}},{"uid":"2466316c0dde0666","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/2466316c0dde0666","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1729034349169,"stop":1729034349169,"duration":0}},{"uid":"3f8d26bf83c16bf9","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/3f8d26bf83c16bf9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729031154148,"stop":1729031154148,"duration":0}},{"uid":"537e2d0d614356d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/537e2d0d614356d6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729028568337,"stop":1729028588716,"duration":20379}},{"uid":"25f338c457ab5b1e","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/25f338c457ab5b1e","status":"passed","time":{"start":1729023948934,"stop":1729024042482,"duration":93548}},{"uid":"1ee51cfd5bfb2bb7","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/1ee51cfd5bfb2bb7","status":"passed","time":{"start":1729020745248,"stop":1729020834657,"duration":89409}},{"uid":"7f0f1bf958347f3f","reportUrl":"https://golioth.github.io/allure-reports/branch/1638//#testresult/7f0f1bf958347f3f","status":"passed","time":{"start":1729006287156,"stop":1729006375869,"duration":88713}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"f25e869057fa63ce.json","parameterValues":["'nrf9160dk'","'zephyr'"]}