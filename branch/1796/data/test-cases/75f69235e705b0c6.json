{"uid":"75f69235e705b0c6","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1732152638947,"stop":1732152648630,"duration":9683},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffb01a5b50>\ndevice = <golioth.golioth.Device object at 0xffffb0131d10>\nproject = <golioth.golioth.Project object at 0xffffb1191bd0>\nreleases = {'test_blocks': Release <673e8d2cbb6157cf6cdf34fd, release_tags=[], device_tags=['673e8d29bb6157cf6cdf34fa'], artifact..., release_tags=[], device_tags=['673e8d29bb6157cf6cdf34fa'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n>       await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n\ntests/hil/tests/ota/test_ota.py:175: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:938: in rollout_set\n    response = await self.patch(release_id, json=body)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:113: in patch\n    return await c.patch(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1979: in patch\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1732152567401,"stop":1732152567401,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732152567402,"stop":1732152567402,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732152567403,"stop":1732152567403,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732152567404,"stop":1732152567404,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732152567405,"stop":1732152567406,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732152567405,"stop":1732152567405,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732152567406,"stop":1732152567406,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732152567406,"stop":1732152567407,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732152567407,"stop":1732152567407,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732152567408,"stop":1732152567408,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732152567408,"stop":1732152567408,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732152567408,"stop":1732152567409,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732152567409,"stop":1732152607500,"duration":40091},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732152607502,"stop":1732152608611,"duration":1109},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732152608612,"stop":1732152610314,"duration":1702},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732152610314,"stop":1732152615432,"duration":5118},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1732152615434,"stop":1732152616422,"duration":988},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1732152616423,"stop":1732152618157,"duration":1734},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1732152618158,"stop":1732152621041,"duration":2883},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1732152638943,"stop":1732152638944,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"releases_teardown::0","time":{"start":1732152649442,"stop":1732152650397,"duration":955},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1732152650400,"stop":1732152653395,"duration":2995},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1732152653397,"stop":1732152654446,"duration":1049},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1732152654448,"stop":1732152654449,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1732152654450,"stop":1732152654450,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732152654452,"stop":1732152655123,"duration":671},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732152655125,"stop":1732152655125,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732152655127,"stop":1732152655137,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"b348a49285a0"},{"name":"thread","value":"256-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"90a42fcee211ef9e","status":"passed","time":{"start":1732139580531,"stop":1732139628536,"duration":48005}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":50,"unknown":0,"total":53},"items":[{"uid":"b0e81bef498cbffb","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/b0e81bef498cbffb","status":"passed","time":{"start":1732143595125,"stop":1732143647682,"duration":52557}},{"uid":"843bbc588d17ad24","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/843bbc588d17ad24","status":"passed","time":{"start":1732142044245,"stop":1732142095082,"duration":50837}},{"uid":"217fb1ef5a4aec2b","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/217fb1ef5a4aec2b","status":"passed","time":{"start":1732141176657,"stop":1732141224892,"duration":48235}},{"uid":"8631d1f526018c73","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/8631d1f526018c73","status":"passed","time":{"start":1732139580531,"stop":1732139628536,"duration":48005}},{"uid":"af9be550b3f95563","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/af9be550b3f95563","status":"passed","time":{"start":1732133134023,"stop":1732133181232,"duration":47209}},{"uid":"ed96f092967edb9","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/ed96f092967edb9","status":"passed","time":{"start":1732042227417,"stop":1732042275189,"duration":47772}},{"uid":"39aa5667866007a5","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/39aa5667866007a5","status":"passed","time":{"start":1732042227417,"stop":1732042275189,"duration":47772}},{"uid":"295e002ff3a5e98a","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/295e002ff3a5e98a","status":"passed","time":{"start":1732122804574,"stop":1732122854050,"duration":49476}},{"uid":"b7cff1fbc58a7017","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/b7cff1fbc58a7017","status":"passed","time":{"start":1732122669033,"stop":1732122718092,"duration":49059}},{"uid":"2c96f9c62fa0dc02","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/2c96f9c62fa0dc02","status":"passed","time":{"start":1732042227417,"stop":1732042275189,"duration":47772}},{"uid":"d22c3888b32d8263","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/d22c3888b32d8263","status":"passed","time":{"start":1732055562652,"stop":1732055609825,"duration":47173}},{"uid":"d1ba78c9d6a1153d","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/d1ba78c9d6a1153d","status":"passed","time":{"start":1732052204397,"stop":1732052251246,"duration":46849}},{"uid":"9aae601884c56c80","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/9aae601884c56c80","status":"passed","time":{"start":1732046627332,"stop":1732046674313,"duration":46981}},{"uid":"1c3d48b9d6a641c0","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/1c3d48b9d6a641c0","status":"passed","time":{"start":1732042227417,"stop":1732042275189,"duration":47772}},{"uid":"6ff8c9122db441e0","reportUrl":"https://golioth.github.io/allure-reports/branch/1780//#testresult/6ff8c9122db441e0","status":"passed","time":{"start":1732030152116,"stop":1732030199115,"duration":46999}},{"uid":"ac69a7a021b3bce3","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/ac69a7a021b3bce3","status":"passed","time":{"start":1732013149910,"stop":1732013199998,"duration":50088}},{"uid":"5c1be556687d4b5e","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/5c1be556687d4b5e","status":"passed","time":{"start":1732013149910,"stop":1732013199998,"duration":50088}},{"uid":"de39e200ded0f113","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/de39e200ded0f113","status":"passed","time":{"start":1732013149910,"stop":1732013199998,"duration":50088}},{"uid":"45d5da11c15f7b85","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/45d5da11c15f7b85","status":"failed","statusDetails":"AssertionError: assert 8 == 2\n +  where 8 = int('8')","time":{"start":1731999568369,"stop":1731999607226,"duration":38857}},{"uid":"832730971d1bca31","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/832730971d1bca31","status":"passed","time":{"start":1731968042352,"stop":1731968089950,"duration":47598}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"75f69235e705b0c6.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}