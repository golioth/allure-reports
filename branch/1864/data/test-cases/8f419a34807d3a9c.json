{
  "uid" : "8f419a34807d3a9c",
  "name" : "test_connect",
  "fullName" : "tests.hil.tests.connection.test_connection#test_connect",
  "historyId" : "0c74076b268e43310c1372e33d1629bf",
  "time" : {
    "start" : 1733327012036,
    "stop" : 1733327012036,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "golioth.golioth.ApiException: An invalid response was received from the upstream server",
  "statusTrace" : "item = <Function test_connect>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:81: in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:929: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py:64: in device\n    await device.credentials.add(name, name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceCredentials object at 0xffffa05721d0>\nidentity = 'generated-XitvmuqxaLfReket', key = 'generated-XitvmuqxaLfReket'\n\n    async def add(self, identity, key):\n        body = {\n            \"type\": \"PRE_SHARED_KEY\",\n            \"identity\": identity,\n            \"preSharedKey\": key,\n        }\n        async with self.http_client as c:\n            response = await c.post('credentials', json=body)\n            if response.status_code == 200:\n                return response.json()['data']\n            else:\n>               raise ApiException(response.json()['message'])\nE               golioth.golioth.ApiException: An invalid response was received from the upstream server\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:501: ApiException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "project",
    "time" : {
      "start" : 1733327053935,
      "stop" : 1733327054566,
      "duration" : 631
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733327012043,
      "stop" : 1733327012043,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733327012046,
      "stop" : 1733327012046,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733327054567,
      "stop" : 1733327055572,
      "duration" : 1005
    },
    "status" : "broken",
    "statusMessage" : "golioth.golioth.ApiException: An invalid response was received from the upstream server\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 929, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py\", line 64, in device\n    await device.credentials.add(name, name)\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 501, in add\n    raise ApiException(response.json()['message'])\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733327012040,
      "stop" : 1733327012040,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733327012045,
      "stop" : 1733327012045,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733327012048,
      "stop" : 1733327012048,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733327012041,
      "stop" : 1733327012041,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733327012045,
      "stop" : 1733327012046,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733327012048,
      "stop" : 1733327012048,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733327012047,
      "stop" : 1733327012047,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733327012044,
      "stop" : 1733327012044,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733327012049,
      "stop" : 1733327053933,
      "duration" : 41884
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733327012042,
      "stop" : 1733327012042,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733327012047,
      "stop" : 1733327012048,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "golioth.golioth.ApiException: An invalid response was received from the upstream server",
    "statusTrace" : "item = <Function test_connect>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:81: in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:929: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/golioth/pytest_plugin.py:64: in device\n    await device.credentials.add(name, name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceCredentials object at 0xffffa05721d0>\nidentity = 'generated-XitvmuqxaLfReket', key = 'generated-XitvmuqxaLfReket'\n\n    async def add(self, identity, key):\n        body = {\n            \"type\": \"PRE_SHARED_KEY\",\n            \"identity\": identity,\n            \"preSharedKey\": key,\n        }\n        async with self.http_client as c:\n            response = await c.post('credentials', json=body)\n            if response.status_code == 200:\n                return response.json()['data']\n            else:\n>               raise ApiException(response.json()['message'])\nE               golioth.golioth.ApiException: An invalid response was received from the upstream server\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:501: ApiException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "17ef9310f0cdc69c",
      "name" : "stdout",
      "source" : "17ef9310f0cdc69c.txt",
      "type" : "text/plain",
      "size" : 1271
    }, {
      "uid" : "ce25d0e45f5ebec0",
      "name" : "stderr",
      "source" : "ce25d0e45f5ebec0.txt",
      "type" : "text/plain",
      "size" : 252
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1733327056234,
      "stop" : 1733327056234,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1733327056236,
      "stop" : 1733327056240,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_connection"
  }, {
    "name" : "host",
    "value" : "81203b899e97"
  }, {
    "name" : "thread",
    "value" : "235-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.connection.test_connection"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 18,
        "skipped" : 0,
        "passed" : 81,
        "unknown" : 0,
        "total" : 99
      },
      "items" : [ {
        "uid" : "4fa0e928fd2b666f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/4fa0e928fd2b666f",
        "status" : "passed",
        "time" : {
          "start" : 1733252397313,
          "stop" : 1733252447123,
          "duration" : 49810
        }
      }, {
        "uid" : "dbc9153ac345c1fc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/dbc9153ac345c1fc",
        "status" : "passed",
        "time" : {
          "start" : 1733188817221,
          "stop" : 1733188852013,
          "duration" : 34792
        }
      }, {
        "uid" : "944ec7953a83306b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/944ec7953a83306b",
        "status" : "passed",
        "time" : {
          "start" : 1732802552233,
          "stop" : 1732802587052,
          "duration" : 34819
        }
      }, {
        "uid" : "508af4f92a0a4cad",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/508af4f92a0a4cad",
        "status" : "passed",
        "time" : {
          "start" : 1732748376343,
          "stop" : 1732748411313,
          "duration" : 34970
        }
      }, {
        "uid" : "459eecef79321a99",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/459eecef79321a99",
        "status" : "passed",
        "time" : {
          "start" : 1732727880468,
          "stop" : 1732727914899,
          "duration" : 34431
        }
      }, {
        "uid" : "64d7adcce41e3bbe",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/64d7adcce41e3bbe",
        "status" : "passed",
        "time" : {
          "start" : 1732722165315,
          "stop" : 1732722201043,
          "duration" : 35728
        }
      }, {
        "uid" : "b44570e29108e6dd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/b44570e29108e6dd",
        "status" : "passed",
        "time" : {
          "start" : 1732639321514,
          "stop" : 1732639357102,
          "duration" : 35588
        }
      }, {
        "uid" : "6bafc93683655d4f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/6bafc93683655d4f",
        "status" : "passed",
        "time" : {
          "start" : 1732630016457,
          "stop" : 1732630065584,
          "duration" : 49127
        }
      }, {
        "uid" : "229183aba6588dae",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/229183aba6588dae",
        "status" : "passed",
        "time" : {
          "start" : 1732564691731,
          "stop" : 1732564726886,
          "duration" : 35155
        }
      }, {
        "uid" : "c75545d4bfea7fd0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/c75545d4bfea7fd0",
        "status" : "passed",
        "time" : {
          "start" : 1732558820731,
          "stop" : 1732558856094,
          "duration" : 35363
        }
      }, {
        "uid" : "86a3d4f1307feecf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/86a3d4f1307feecf",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732552448835,
          "stop" : 1732552569304,
          "duration" : 120469
        }
      }, {
        "uid" : "44a451fef0abcee8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/44a451fef0abcee8",
        "status" : "passed",
        "time" : {
          "start" : 1732550571530,
          "stop" : 1732550606528,
          "duration" : 34998
        }
      }, {
        "uid" : "6f9eda7bd3454f78",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/6f9eda7bd3454f78",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732507763539,
          "stop" : 1732507884088,
          "duration" : 120549
        }
      }, {
        "uid" : "2cf97af0b7d75b4c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/2cf97af0b7d75b4c",
        "status" : "passed",
        "time" : {
          "start" : 1732311498064,
          "stop" : 1732311532943,
          "duration" : 34879
        }
      }, {
        "uid" : "28440603bc39328a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/28440603bc39328a",
        "status" : "passed",
        "time" : {
          "start" : 1732311498064,
          "stop" : 1732311532943,
          "duration" : 34879
        }
      }, {
        "uid" : "f765346ebc6982a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/f765346ebc6982a",
        "status" : "passed",
        "time" : {
          "start" : 1732311498064,
          "stop" : 1732311532943,
          "duration" : 34879
        }
      }, {
        "uid" : "dd176c7c8322db04",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/dd176c7c8322db04",
        "status" : "passed",
        "time" : {
          "start" : 1732311498064,
          "stop" : 1732311532943,
          "duration" : 34879
        }
      }, {
        "uid" : "fd482a556cf10d31",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/fd482a556cf10d31",
        "status" : "passed",
        "time" : {
          "start" : 1732300722495,
          "stop" : 1732300759682,
          "duration" : 37187
        }
      }, {
        "uid" : "89f49cf6bf35ed03",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/89f49cf6bf35ed03",
        "status" : "passed",
        "time" : {
          "start" : 1732300722495,
          "stop" : 1732300759682,
          "duration" : 37187
        }
      }, {
        "uid" : "c7aa417a5dade87e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/c7aa417a5dade87e",
        "status" : "passed",
        "time" : {
          "start" : 1732300722495,
          "stop" : 1732300759682,
          "duration" : 37187
        }
      } ]
    },
    "tags" : [ "anyio", "mikes_testbench", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "8f419a34807d3a9c.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}