{
  "uid" : "88942ad8651375b8",
  "name" : "test_cancel_all",
  "fullName" : "tests.hil.tests.settings.test_settings#test_cancel_all",
  "historyId" : "ffae0428d4c82c3a34e0e75a53083a28",
  "time" : {
    "start" : 1733327204900,
    "stop" : 1733327233542,
    "duration" : 28642
  },
  "status" : "broken",
  "statusMessage" : "httpx.HTTPStatusError: Server error '502 Bad Gateway' for url 'https://api.golioth.io/v1/projects/firmware_ci/devices/67507907332d20776304daae/settings'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502",
  "statusTrace" : "board = <nrf52840dk.nRF52840DK object at 0xffff8252fad0>\ndevice = <golioth.golioth.Device object at 0xffff82521b10>\n\n    async def test_cancel_all(board, device):\n        # Cancel all settings\n        await device.settings.set('TEST_CANCEL', True)\n    \n        assert None != await board.wait_for_regex_in_line('Cancelling settings', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Settings have been cancelled', timeout_s=10)\n    \n        # Check that we no longer receive this settings change\n        await device.settings.set('TEST_INT', 1337)\n    \n        with pytest.raises(trio.TooSlowError) as e:\n            assert None != await board.wait_for_regex_in_line('Received test_int', timeout_s=10)\n    \n        # Reset to expected value so we don't re-trigger test on settings registration\n        await device.settings.set('TEST_CANCEL', False)\n    \n        # Wait for device to automatically re-register all settings\n        assert None != await board.wait_for_regex_in_line('Settings have been reregistered', timeout_s=10)\n    \n>       await device.settings.set('TEST_INT', 72)\n\ntests/hil/tests/settings/test_settings.py:207: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502 Bad Gateway]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '502 Bad Gateway' for url 'https://api.golioth.io/v1/projects/firmware_ci/devices/67507907332d20776304daae/settings'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_key",
    "time" : {
      "start" : 1733327096070,
      "stop" : 1733327096070,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733327109955,
      "stop" : 1733327111924,
      "duration" : 1969
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733327096067,
      "stop" : 1733327096067,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733327096071,
      "stop" : 1733327097147,
      "duration" : 1076
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733327096068,
      "stop" : 1733327096069,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733327096068,
      "stop" : 1733327096068,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733327097148,
      "stop" : 1733327109953,
      "duration" : 12805
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733327096070,
      "stop" : 1733327096070,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733327096062,
      "stop" : 1733327096063,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1733327111925,
      "stop" : 1733327123813,
      "duration" : 11888
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733327096066,
      "stop" : 1733327096066,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733327096069,
      "stop" : 1733327096070,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733327096064,
      "stop" : 1733327096065,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733327096063,
      "stop" : 1733327096064,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733327096069,
      "stop" : 1733327096069,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733327096065,
      "stop" : 1733327096065,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "httpx.HTTPStatusError: Server error '502 Bad Gateway' for url 'https://api.golioth.io/v1/projects/firmware_ci/devices/67507907332d20776304daae/settings'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502",
    "statusTrace" : "board = <nrf52840dk.nRF52840DK object at 0xffff8252fad0>\ndevice = <golioth.golioth.Device object at 0xffff82521b10>\n\n    async def test_cancel_all(board, device):\n        # Cancel all settings\n        await device.settings.set('TEST_CANCEL', True)\n    \n        assert None != await board.wait_for_regex_in_line('Cancelling settings', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Settings have been cancelled', timeout_s=10)\n    \n        # Check that we no longer receive this settings change\n        await device.settings.set('TEST_INT', 1337)\n    \n        with pytest.raises(trio.TooSlowError) as e:\n            assert None != await board.wait_for_regex_in_line('Received test_int', timeout_s=10)\n    \n        # Reset to expected value so we don't re-trigger test on settings registration\n        await device.settings.set('TEST_CANCEL', False)\n    \n        # Wait for device to automatically re-register all settings\n        assert None != await board.wait_for_regex_in_line('Settings have been reregistered', timeout_s=10)\n    \n>       await device.settings.set('TEST_INT', 72)\n\ntests/hil/tests/settings/test_settings.py:207: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [502 Bad Gateway]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '502 Bad Gateway' for url 'https://api.golioth.io/v1/projects/firmware_ci/devices/67507907332d20776304daae/settings'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502\n\n/usr/local/lib/python3.11/dist-packages/httpx/_models.py:763: HTTPStatusError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f9425a47c0d41316",
      "name" : "stdout",
      "source" : "f9425a47c0d41316.txt",
      "type" : "text/plain",
      "size" : 6479
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1733327240456,
      "stop" : 1733327240817,
      "duration" : 361
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733327240823,
      "stop" : 1733327240825,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1733327240819,
      "stop" : 1733327240821,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup::0",
    "time" : {
      "start" : 1733327240453,
      "stop" : 1733327240454,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_settings"
  }, {
    "name" : "host",
    "value" : "74779ead1579"
  }, {
    "name" : "thread",
    "value" : "298-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.settings.test_settings"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf52840dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 18,
        "skipped" : 0,
        "passed" : 82,
        "unknown" : 0,
        "total" : 101
      },
      "items" : [ {
        "uid" : "fc26ffdfbc13752f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1862/#testresult/fc26ffdfbc13752f",
        "status" : "passed",
        "time" : {
          "start" : 1733252731682,
          "stop" : 1733252762193,
          "duration" : 30511
        }
      }, {
        "uid" : "3c4e8f30626eea41",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1860/#testresult/3c4e8f30626eea41",
        "status" : "passed",
        "time" : {
          "start" : 1733189838667,
          "stop" : 1733189869204,
          "duration" : 30537
        }
      }, {
        "uid" : "812ca1a7df47fe8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/812ca1a7df47fe8",
        "status" : "passed",
        "time" : {
          "start" : 1732727699766,
          "stop" : 1732727730249,
          "duration" : 30483
        }
      }, {
        "uid" : "e74deb978b06e278",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1852//#testresult/e74deb978b06e278",
        "status" : "passed",
        "time" : {
          "start" : 1732748205965,
          "stop" : 1732748237098,
          "duration" : 31133
        }
      }, {
        "uid" : "6fb333328da15325",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1848/#testresult/6fb333328da15325",
        "status" : "passed",
        "time" : {
          "start" : 1732727699766,
          "stop" : 1732727730249,
          "duration" : 30483
        }
      }, {
        "uid" : "e516d84d37e95480",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1847//#testresult/e516d84d37e95480",
        "status" : "passed",
        "time" : {
          "start" : 1732722514173,
          "stop" : 1732722545108,
          "duration" : 30935
        }
      }, {
        "uid" : "a41457f397215313",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/a41457f397215313",
        "status" : "passed",
        "time" : {
          "start" : 1732629811650,
          "stop" : 1732629842158,
          "duration" : 30508
        }
      }, {
        "uid" : "db8a14bc652e1523",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1844//#testresult/db8a14bc652e1523",
        "status" : "passed",
        "time" : {
          "start" : 1732629811650,
          "stop" : 1732629842158,
          "duration" : 30508
        }
      }, {
        "uid" : "9dd1fc51d096bb83",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/9dd1fc51d096bb83",
        "status" : "passed",
        "time" : {
          "start" : 1732558573375,
          "stop" : 1732558604097,
          "duration" : 30722
        }
      }, {
        "uid" : "c89b0137e80eace",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1841//#testresult/c89b0137e80eace",
        "status" : "passed",
        "time" : {
          "start" : 1732558573375,
          "stop" : 1732558604097,
          "duration" : 30722
        }
      }, {
        "uid" : "deaf5f1b26a02eca",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1840//#testresult/deaf5f1b26a02eca",
        "status" : "passed",
        "time" : {
          "start" : 1732553476521,
          "stop" : 1732553509063,
          "duration" : 32542
        }
      }, {
        "uid" : "21251047c8c203e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/21251047c8c203e",
        "status" : "passed",
        "time" : {
          "start" : 1732550403925,
          "stop" : 1732550434580,
          "duration" : 30655
        }
      }, {
        "uid" : "698947b037dafaf8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1839//#testresult/698947b037dafaf8",
        "status" : "passed",
        "time" : {
          "start" : 1732508187114,
          "stop" : 1732508218122,
          "duration" : 31008
        }
      }, {
        "uid" : "571b786b7de1d526",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/571b786b7de1d526",
        "status" : "passed",
        "time" : {
          "start" : 1732311349258,
          "stop" : 1732311380973,
          "duration" : 31715
        }
      }, {
        "uid" : "424175169bccb8d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/424175169bccb8d",
        "status" : "passed",
        "time" : {
          "start" : 1732311349258,
          "stop" : 1732311380973,
          "duration" : 31715
        }
      }, {
        "uid" : "c5e8eb848308ae3c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/c5e8eb848308ae3c",
        "status" : "passed",
        "time" : {
          "start" : 1732311349258,
          "stop" : 1732311380973,
          "duration" : 31715
        }
      }, {
        "uid" : "e94badfb2d2c622f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1835//#testresult/e94badfb2d2c622f",
        "status" : "passed",
        "time" : {
          "start" : 1732311349258,
          "stop" : 1732311380973,
          "duration" : 31715
        }
      }, {
        "uid" : "4fd025a34225b9b0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/4fd025a34225b9b0",
        "status" : "passed",
        "time" : {
          "start" : 1732300555354,
          "stop" : 1732300586135,
          "duration" : 30781
        }
      }, {
        "uid" : "99db4359e7eb230c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/99db4359e7eb230c",
        "status" : "passed",
        "time" : {
          "start" : 1732300555354,
          "stop" : 1732300586135,
          "duration" : 30781
        }
      }, {
        "uid" : "94b4745d834f8660",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1832//#testresult/94b4745d834f8660",
        "status" : "passed",
        "time" : {
          "start" : 1732300555354,
          "stop" : 1732300586135,
          "duration" : 30781
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "nrf52840dk", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "88942ad8651375b8.json",
  "parameterValues" : [ "'nrf52840dk'", "'zephyr'" ]
}