{"uid":"6c98e20173658496","name":"test_fw_update","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.fw_update.pytest.test_sample#test_fw_update","historyId":"edf5f1012f71cfc9f14f014f109d19a8","time":{"start":1732199158246,"stop":1732199158246,"duration":0},"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"item = <Function test_fw_update>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:81: in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:929: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <golioth.golioth.Project object at 0xffff94393950>\nblueprint_id = None\n\n    @pytest.fixture(scope=\"module\")\n    async def artifact(project, blueprint_id):\n        # Find Artifact that matches this device and desired update version\n    \n        artifact = None\n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if (a.blueprint == blueprint_id and\n                a.version == UPDATE_VERSION and\n                a.package == UPDATE_PACKAGE):\n                artifact = a\n    \n>       assert artifact != None\nE       assert None != None\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/conftest.py:54: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732199158248,"stop":1732199158249,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732199158249,"stop":1732199158249,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732199158250,"stop":1732199158250,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info","time":{"start":1732199158250,"stop":1732199158278,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732199158279,"stop":1732199158280,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732199158280,"stop":1732199158280,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732199158280,"stop":1732199158281,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732199158281,"stop":1732199158281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732199158282,"stop":1732199158284,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732199158285,"stop":1732199158697,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732199158698,"stop":1732199159630,"duration":932},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_id","time":{"start":1732199159631,"stop":1732199160091,"duration":460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifact","time":{"start":1732199160091,"stop":1732199160570,"duration":479},"status":"failed","statusMessage":"AssertionError: assert None != None\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 929, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/modules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/conftest.py\", line 54, in artifact\n    assert artifact != None\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"item = <Function test_fw_update>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:81: in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:929: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <golioth.golioth.Project object at 0xffff94393950>\nblueprint_id = None\n\n    @pytest.fixture(scope=\"module\")\n    async def artifact(project, blueprint_id):\n        # Find Artifact that matches this device and desired update version\n    \n        artifact = None\n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if (a.blueprint == blueprint_id and\n                a.version == UPDATE_VERSION and\n                a.package == UPDATE_PACKAGE):\n                artifact = a\n    \n>       assert artifact != None\nE       assert None != None\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/conftest.py:54: AssertionError","steps":[],"attachments":[{"uid":"514e7b602a8325cd","name":"log","source":"514e7b602a8325cd.txt","type":"text/plain","size":13294}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"blueprint_id::0","time":{"start":1732199161017,"stop":1732199161018,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732199161020,"stop":1732199161396,"duration":376},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732199161399,"stop":1732199161399,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732199161401,"stop":1732199161401,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info::0","time":{"start":1732199161408,"stop":1732199161410,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.mimxrt1024_evk"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"3b650b1e4ef9"},{"name":"thread","value":"387-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.fw_update.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cb4461454e70e18e","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1732192721375,"stop":1732192721375,"duration":0}},{"uid":"913f1328414c2b5a","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1732186771726,"stop":1732186771726,"duration":0}},{"uid":"1b1fe37bdb7797e3","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1732147917890,"stop":1732147917890,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":8,"skipped":0,"passed":47,"unknown":0,"total":59},"items":[{"uid":"46e1b70a32be147f","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/46e1b70a32be147f","status":"passed","time":{"start":1732146231780,"stop":1732146299468,"duration":67688}},{"uid":"ca6bc85ae14d018c","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/ca6bc85ae14d018c","status":"passed","time":{"start":1732195756447,"stop":1732195820719,"duration":64272}},{"uid":"6a07f03730bd7ed7","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/6a07f03730bd7ed7","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1732192721375,"stop":1732192721375,"duration":0}},{"uid":"5f3a7eb678b01600","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/5f3a7eb678b01600","status":"passed","time":{"start":1732146231780,"stop":1732146299468,"duration":67688}},{"uid":"a63a8338c320c659","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/a63a8338c320c659","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1732186771726,"stop":1732186771726,"duration":0}},{"uid":"4560aa579d9575fc","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/4560aa579d9575fc","status":"passed","time":{"start":1732146231780,"stop":1732146299468,"duration":67688}},{"uid":"4b63169d889308d5","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/4b63169d889308d5","status":"passed","time":{"start":1732153964895,"stop":1732154026890,"duration":61995}},{"uid":"d0e806fc9930048d","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/d0e806fc9930048d","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1732147917890,"stop":1732147917890,"duration":0}},{"uid":"61aee714283d50c","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/61aee714283d50c","status":"passed","time":{"start":1732146231780,"stop":1732146299468,"duration":67688}},{"uid":"3625c0ac17556ae","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/3625c0ac17556ae","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1732144516790,"stop":1732144516790,"duration":0}},{"uid":"36c08246747227d1","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/36c08246747227d1","status":"passed","time":{"start":1732134320067,"stop":1732134369697,"duration":49630}},{"uid":"49383df1179712e6","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/49383df1179712e6","status":"passed","time":{"start":1732093717858,"stop":1732093765445,"duration":47587}},{"uid":"9c08c9e692562d05","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/9c08c9e692562d05","status":"passed","time":{"start":1732093717858,"stop":1732093765445,"duration":47587}},{"uid":"c6dad706bcb28dfc","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/c6dad706bcb28dfc","status":"passed","time":{"start":1732126168548,"stop":1732126216754,"duration":48206}},{"uid":"1b1742ed819dc8b0","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/1b1742ed819dc8b0","status":"broken","statusDetails":"AttributeError: 'NoneType' object has no attribute 'replace'","time":{"start":1732123700921,"stop":1732123700921,"duration":0}},{"uid":"d236e0c0030ea1fd","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/d236e0c0030ea1fd","status":"passed","time":{"start":1732093717858,"stop":1732093765445,"duration":47587}},{"uid":"1c38086cfc2c826e","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/1c38086cfc2c826e","status":"passed","time":{"start":1732052014008,"stop":1732052061396,"duration":47388}},{"uid":"73024b9122538271","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/73024b9122538271","status":"passed","time":{"start":1732052014008,"stop":1732052061396,"duration":47388}},{"uid":"73130e34c7d7186c","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/73130e34c7d7186c","status":"passed","time":{"start":1732047666332,"stop":1732047715285,"duration":48953}},{"uid":"bd7a3c14c71c8be5","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/bd7a3c14c71c8be5","status":"passed","time":{"start":1732043369337,"stop":1732043417694,"duration":48357}}]},"tags":["anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"6c98e20173658496.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}