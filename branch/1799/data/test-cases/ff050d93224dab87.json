{"uid":"ff050d93224dab87","name":"test_hello","fullName":"examples.esp_idf.hello.pytest.test_sample#test_hello","historyId":"38bf6e633dc99475bab8d042bff56ad7","time":{"start":1732149425842,"stop":1732149445545,"duration":19703},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff96d62010>\ndevice = <golioth.golioth.Device object at 0xffff96cfd810>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732149383501,"stop":1732149383501,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732149383502,"stop":1732149383502,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732149383503,"stop":1732149383503,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732149383504,"stop":1732149383504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732149383504,"stop":1732149383505,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732149383505,"stop":1732149383505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732149383506,"stop":1732149383506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732149383506,"stop":1732149383506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732149383507,"stop":1732149383507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732149383507,"stop":1732149383507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732149383508,"stop":1732149383508,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732149383508,"stop":1732149383508,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732149383509,"stop":1732149423600,"duration":40091},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732149423600,"stop":1732149424274,"duration":674},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732149424275,"stop":1732149425833,"duration":1558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff96d62010>\ndevice = <golioth.golioth.Device object at 0xffff96cfd810>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","steps":[],"attachments":[{"uid":"9e85588965f3eb43","name":"stdout","source":"9e85588965f3eb43.txt","type":"text/plain","size":8038}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1732149445667,"stop":1732149446136,"duration":469},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732149446139,"stop":1732149446139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732149446141,"stop":1732149446148,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"4d3204b7ab5e"},{"name":"thread","value":"257-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":49,"unknown":0,"total":52},"items":[{"uid":"76991d57f42a775b","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/76991d57f42a775b","status":"passed","time":{"start":1732148514812,"stop":1732148534133,"duration":19321}},{"uid":"451843a31650c702","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/451843a31650c702","status":"passed","time":{"start":1732146511970,"stop":1732146532361,"duration":20391}},{"uid":"d4e6794f647610df","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/d4e6794f647610df","status":"passed","time":{"start":1732145146098,"stop":1732145164908,"duration":18810}},{"uid":"21fca844dd0dd9ab","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/21fca844dd0dd9ab","status":"passed","time":{"start":1732134566975,"stop":1732134587228,"duration":20253}},{"uid":"3523f7ba035645c3","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/3523f7ba035645c3","status":"passed","time":{"start":1732043581455,"stop":1732043601383,"duration":19928}},{"uid":"98febf8a3f2426bb","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/98febf8a3f2426bb","status":"passed","time":{"start":1732043581455,"stop":1732043601383,"duration":19928}},{"uid":"ef1953168296d995","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/ef1953168296d995","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1732126587559,"stop":1732126606939,"duration":19380}},{"uid":"a0d3ab4512d695d0","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/a0d3ab4512d695d0","status":"passed","time":{"start":1732125320160,"stop":1732125338393,"duration":18233}},{"uid":"b10b18ae536dbf12","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/b10b18ae536dbf12","status":"passed","time":{"start":1732043581455,"stop":1732043601383,"duration":19928}},{"uid":"4f316355a32295ed","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/4f316355a32295ed","status":"passed","time":{"start":1732048477083,"stop":1732048497237,"duration":20154}},{"uid":"6636853663f30164","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/6636853663f30164","status":"passed","time":{"start":1732048477083,"stop":1732048497237,"duration":20154}},{"uid":"7534ecbccc0ec214","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/7534ecbccc0ec214","status":"passed","time":{"start":1732048477083,"stop":1732048497237,"duration":20154}},{"uid":"c0b4736aff7ffa44","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/c0b4736aff7ffa44","status":"passed","time":{"start":1732043581455,"stop":1732043601383,"duration":19928}},{"uid":"b0938cf6d761035d","reportUrl":"https://golioth.github.io/allure-reports/branch/1780//#testresult/b0938cf6d761035d","status":"passed","time":{"start":1732031546724,"stop":1732031566618,"duration":19894}},{"uid":"2f06de8d946aae76","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/2f06de8d946aae76","status":"passed","time":{"start":1732014678961,"stop":1732014700063,"duration":21102}},{"uid":"cbaa926ceb1e5ff0","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/cbaa926ceb1e5ff0","status":"passed","time":{"start":1732014678961,"stop":1732014700063,"duration":21102}},{"uid":"dc946805daa40789","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/dc946805daa40789","status":"passed","time":{"start":1732014678961,"stop":1732014700063,"duration":21102}},{"uid":"8118ca78015a07a2","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/8118ca78015a07a2","status":"passed","time":{"start":1732001163018,"stop":1732001182759,"duration":19741}},{"uid":"974b690bfe5a08fa","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/974b690bfe5a08fa","status":"passed","time":{"start":1731969036295,"stop":1731969056016,"duration":19721}},{"uid":"c787192eaf5a28db","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/c787192eaf5a28db","status":"passed","time":{"start":1731964316013,"stop":1731964335458,"duration":19445}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"ff050d93224dab87.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}