{"uid":"e60122b6879224b2","name":"test_hello","fullName":"examples.esp_idf.hello.pytest.test_sample#test_hello","historyId":"50ac528343c8f63b54127405b2c48a27","time":{"start":1732149011975,"stop":1732149030657,"duration":18682},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9d816f10>\ndevice = <golioth.golioth.Device object at 0xffff9d7bc090>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732148968251,"stop":1732148968251,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732148968252,"stop":1732148968252,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732148968253,"stop":1732148968253,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732148968253,"stop":1732148968254,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732148968254,"stop":1732148968254,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732148968255,"stop":1732148968255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732148968256,"stop":1732148968256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732148968256,"stop":1732148968256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732148968257,"stop":1732148968257,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732148968257,"stop":1732148968257,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732148968258,"stop":1732148968258,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732148968258,"stop":1732148968258,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732148968259,"stop":1732149010632,"duration":42373},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732149010634,"stop":1732149011096,"duration":462},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732149011096,"stop":1732149011971,"duration":875},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9d816f10>\ndevice = <golioth.golioth.Device object at 0xffff9d7bc090>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","steps":[],"attachments":[{"uid":"a028437ebd6596c","name":"stdout","source":"a028437ebd6596c.txt","type":"text/plain","size":8196}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1732149030915,"stop":1732149031302,"duration":387},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732149031304,"stop":1732149031305,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732149031306,"stop":1732149031309,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"e32b0c706d22"},{"name":"thread","value":"243-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":51,"unknown":0,"total":52},"items":[{"uid":"10b4c43ed3085b56","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/10b4c43ed3085b56","status":"passed","time":{"start":1732148762535,"stop":1732148780967,"duration":18432}},{"uid":"9d0e23143e16f376","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/9d0e23143e16f376","status":"passed","time":{"start":1732148126977,"stop":1732148145317,"duration":18340}},{"uid":"53b04d41282a9f5","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/53b04d41282a9f5","status":"passed","time":{"start":1732145460207,"stop":1732145479466,"duration":19259}},{"uid":"12a76e1a461cbf5f","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/12a76e1a461cbf5f","status":"passed","time":{"start":1732135497971,"stop":1732135515949,"duration":17978}},{"uid":"71922b05d10e8e74","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/71922b05d10e8e74","status":"passed","time":{"start":1732044797851,"stop":1732044817086,"duration":19235}},{"uid":"220b29fe323ad1ff","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/220b29fe323ad1ff","status":"passed","time":{"start":1732044797851,"stop":1732044817086,"duration":19235}},{"uid":"dbbeffd393e3586e","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/dbbeffd393e3586e","status":"passed","time":{"start":1732127222740,"stop":1732127240823,"duration":18083}},{"uid":"3e490faddac57412","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/3e490faddac57412","status":"passed","time":{"start":1732125384868,"stop":1732125403125,"duration":18257}},{"uid":"c0ab7803514b68a4","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/c0ab7803514b68a4","status":"passed","time":{"start":1732044797851,"stop":1732044817086,"duration":19235}},{"uid":"575e93053e5df4d9","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/575e93053e5df4d9","status":"passed","time":{"start":1732049088157,"stop":1732049106980,"duration":18823}},{"uid":"1075ea92da24880","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/1075ea92da24880","status":"passed","time":{"start":1732049088157,"stop":1732049106980,"duration":18823}},{"uid":"5e617207dff7753f","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/5e617207dff7753f","status":"passed","time":{"start":1732049088157,"stop":1732049106980,"duration":18823}},{"uid":"ca40d1dd45bae304","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/ca40d1dd45bae304","status":"passed","time":{"start":1732044797851,"stop":1732044817086,"duration":19235}},{"uid":"fe9f4d855a27a180","reportUrl":"https://golioth.github.io/allure-reports/branch/1780//#testresult/fe9f4d855a27a180","status":"passed","time":{"start":1732032330610,"stop":1732032349166,"duration":18556}},{"uid":"8f21c4039b8b4d51","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/8f21c4039b8b4d51","status":"passed","time":{"start":1732015069703,"stop":1732015088292,"duration":18589}},{"uid":"1428dfb18c7655d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/1428dfb18c7655d6","status":"passed","time":{"start":1732015069703,"stop":1732015088292,"duration":18589}},{"uid":"6e52c0d3bdea0983","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/6e52c0d3bdea0983","status":"passed","time":{"start":1732015069703,"stop":1732015088292,"duration":18589}},{"uid":"c2c285181a5e433f","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/c2c285181a5e433f","status":"passed","time":{"start":1732002192658,"stop":1732002211056,"duration":18398}},{"uid":"fafb7669e2edf4d1","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/fafb7669e2edf4d1","status":"passed","time":{"start":1731970998624,"stop":1731971017134,"duration":18510}},{"uid":"abdf3d3a3ba14e57","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/abdf3d3a3ba14e57","status":"passed","time":{"start":1731964268904,"stop":1731964287226,"duration":18322}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"e60122b6879224b2.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}