{"uid":"8bdc25d5655870d1","name":"test_block_upload","fullName":"tests.hil.tests.stream.test_stream#test_block_upload","historyId":"bf98671d07cbfca20d31918be518cafe","time":{"start":1729722978621,"stop":1729722991565,"duration":12944},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff87ecd510>\ndevice = <golioth.golioth.Device object at 0xffff87f5f2d0>\n\n    async def test_block_upload(board, device):\n        assert None != await board.wait_for_regex_in_line('Block upload successful', timeout_s=20)\n    \n        # Wait for stream to propagate from CDG to LightDB Stream\n        await trio.sleep(6)\n    \n        # Get Stream entry of the block upload from cloud\n>       stream = await device.stream.get(path=BLOCK_UPLOAD_PATH, interval=\"1m\")\n\ntests/hil/tests/stream/test_stream.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:596: in get\n    response = await c.post(f'stream', json=json_data)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729722933909,"stop":1729722933910,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729722933910,"stop":1729722933911,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729722933911,"stop":1729722933911,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729722933912,"stop":1729722933912,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729722933913,"stop":1729722933913,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729722933914,"stop":1729722933914,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729722933914,"stop":1729722933914,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729722933915,"stop":1729722933915,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729722933915,"stop":1729722933915,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729722933916,"stop":1729722933916,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729722933916,"stop":1729722933916,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729722933917,"stop":1729722933917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729722933917,"stop":1729722973407,"duration":39490},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729722973409,"stop":1729722974134,"duration":725},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729722974134,"stop":1729722975109,"duration":975},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729722975110,"stop":1729722978612,"duration":3502},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff87ecd510>\ndevice = <golioth.golioth.Device object at 0xffff87f5f2d0>\n\n    async def test_block_upload(board, device):\n        assert None != await board.wait_for_regex_in_line('Block upload successful', timeout_s=20)\n    \n        # Wait for stream to propagate from CDG to LightDB Stream\n        await trio.sleep(6)\n    \n        # Get Stream entry of the block upload from cloud\n>       stream = await device.stream.get(path=BLOCK_UPLOAD_PATH, interval=\"1m\")\n\ntests/hil/tests/stream/test_stream.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:596: in get\n    response = await c.post(f'stream', json=json_data)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","steps":[],"attachments":[{"uid":"3515880ad21dbe25","name":"stdout","source":"3515880ad21dbe25.txt","type":"text/plain","size":8158}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1729722992539,"stop":1729722992539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729722992541,"stop":1729722993001,"duration":460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729722993003,"stop":1729722993003,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729722993005,"stop":1729722993015,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_stream"},{"name":"host","value":"478bef47b031"},{"name":"thread","value":"277-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.stream.test_stream"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":19,"unknown":0,"total":20},"items":[{"uid":"92a3a7623da7efc5","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/92a3a7623da7efc5","status":"passed","time":{"start":1729719691722,"stop":1729719699840,"duration":8118}},{"uid":"bb67f89517a719f5","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/bb67f89517a719f5","status":"passed","time":{"start":1729717664918,"stop":1729717672822,"duration":7904}},{"uid":"1519d83734331ef4","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/1519d83734331ef4","status":"passed","time":{"start":1729527238169,"stop":1729527247283,"duration":9114}},{"uid":"6e8a3bd6e8d41771","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/6e8a3bd6e8d41771","status":"passed","time":{"start":1729527238169,"stop":1729527247283,"duration":9114}},{"uid":"42cc3320a2f513a","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/42cc3320a2f513a","status":"passed","time":{"start":1729526215225,"stop":1729526234969,"duration":19744}},{"uid":"1b3a5e0d40e4a7da","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/1b3a5e0d40e4a7da","status":"passed","time":{"start":1729446876642,"stop":1729446890496,"duration":13854}},{"uid":"36a79dfd190737df","reportUrl":"https://golioth.github.io/allure-reports/branch/4//#testresult/36a79dfd190737df","status":"passed","time":{"start":1729445046731,"stop":1729445057480,"duration":10749}},{"uid":"db6587749f1d7706","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/db6587749f1d7706","status":"passed","time":{"start":1729378178144,"stop":1729378187344,"duration":9200}},{"uid":"4f863d0a606fbdaf","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/4f863d0a606fbdaf","status":"passed","time":{"start":1729378178144,"stop":1729378187344,"duration":9200}},{"uid":"9ca1e0b1281d0d2d","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/9ca1e0b1281d0d2d","status":"passed","time":{"start":1729197057247,"stop":1729197067837,"duration":10590}},{"uid":"5c093d1894e6afd8","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/5c093d1894e6afd8","status":"passed","time":{"start":1729114816158,"stop":1729114824240,"duration":8082}},{"uid":"14d7e99e1b276cbf","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/14d7e99e1b276cbf","status":"passed","time":{"start":1729112157276,"stop":1729112165409,"duration":8133}},{"uid":"257f4b181426d99a","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/257f4b181426d99a","status":"passed","time":{"start":1729106998946,"stop":1729107007270,"duration":8324}},{"uid":"fc6a14fcde75e506","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/fc6a14fcde75e506","status":"passed","time":{"start":1729033297351,"stop":1729033305216,"duration":7865}},{"uid":"aecae76d71a6cee5","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/aecae76d71a6cee5","status":"passed","time":{"start":1729029965448,"stop":1729029974494,"duration":9046}},{"uid":"5ae8512b471fc127","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/5ae8512b471fc127","status":"passed","time":{"start":1729019809725,"stop":1729019817797,"duration":8072}},{"uid":"b1ab4b8284e978e6","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/b1ab4b8284e978e6","status":"passed","time":{"start":1729022525627,"stop":1729022533761,"duration":8134}},{"uid":"68ff7c9196fa4a9d","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/68ff7c9196fa4a9d","status":"passed","time":{"start":1729019809725,"stop":1729019817797,"duration":8072}},{"uid":"e1214bfb207bb800","reportUrl":"https://golioth.github.io/allure-reports/branch/1638//#testresult/e1214bfb207bb800","status":"passed","time":{"start":1729004958365,"stop":1729004966325,"duration":7960}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"8bdc25d5655870d1.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}