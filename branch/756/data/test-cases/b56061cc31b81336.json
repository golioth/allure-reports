{"uid":"b56061cc31b81336","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6ece6f03e91be687a9089212ed56dba8","time":{"start":1759951646488,"stop":1759951687140,"duration":40652},"status":"failed","statusMessage":"AssertionError: assert 7 == 4\n +  where 7 = int('7')","statusTrace":"board = <pytest_hil.linuxboard.LinuxBoard object at 0x7f86ebed7b30>\ndevice = <golioth.golioth.Device object at 0x7f86ec0c3ce0>\nproject = <golioth.golioth.Project object at 0x7f86ec0c3650>\nreleases = {'test_blocks': Release <68e6bb1562fb6aa144e223e1, release_tags=[], device_tags=['68e6bb1462fb6aa144e223de'], artifact...ease_tags=[], device_tags=['68e6bb1462fb6aa144e223de'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 7 == 4\nE                    +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"baud","time":{"start":1759951634936,"stop":1759951634936,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759951634936,"stop":1759951634937,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1759951634936,"stop":1759951634936,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759951634937,"stop":1759951634937,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759951634937,"stop":1759951634937,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759951634937,"stop":1759951634937,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1759951634937,"stop":1759951634960,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759951634937,"stop":1759951634937,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759951634960,"stop":1759951635173,"duration":213},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759951635173,"stop":1759951635709,"duration":536},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1759951635710,"stop":1759951636088,"duration":378},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1759951636088,"stop":1759951636256,"duration":168},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1759951636256,"stop":1759951636618,"duration":362},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1759951636618,"stop":1759951637544,"duration":926},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1759951646487,"stop":1759951646488,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 7 == 4\n +  where 7 = int('7')","statusTrace":"board = <pytest_hil.linuxboard.LinuxBoard object at 0x7f86ebed7b30>\ndevice = <golioth.golioth.Device object at 0x7f86ec0c3ce0>\nproject = <golioth.golioth.Project object at 0x7f86ec0c3650>\nreleases = {'test_blocks': Release <68e6bb1562fb6aa144e223e1, release_tags=[], device_tags=['68e6bb1462fb6aa144e223de'], artifact...ease_tags=[], device_tags=['68e6bb1462fb6aa144e223de'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 7 == 4\nE                    +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","steps":[],"attachments":[{"uid":"604d8e8f4065b36d","name":"stdout","source":"604d8e8f4065b36d.txt","type":"text/plain","size":502}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1759951687178,"stop":1759951687580,"duration":402},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1759951687580,"stop":1759951688417,"duration":837},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1759951688417,"stop":1759951688775,"duration":358},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1759951688776,"stop":1759951688776,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759951688776,"stop":1759951688980,"duration":204},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1759951688776,"stop":1759951688776,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759951688980,"stop":1759951688980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1759951688981,"stop":1759951688984,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"linux"},{"name":"tag","value":"linux"},{"name":"parentSuite","value":"hil.linux.linux"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"4126-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'linux'"},{"name":"platform_name","value":"'linux'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":20,"unknown":0,"total":21},"items":[{"uid":"299411243b9fa501","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/299411243b9fa501","status":"passed","time":{"start":1759775493908,"stop":1759775543230,"duration":49322}},{"uid":"aa13d3127ec77ad7","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/aa13d3127ec77ad7","status":"passed","time":{"start":1759780599248,"stop":1759780646546,"duration":47298}},{"uid":"348e79973c9eaa3a","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/348e79973c9eaa3a","status":"passed","time":{"start":1759780599248,"stop":1759780646546,"duration":47298}},{"uid":"fc906b8a55c73998","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/fc906b8a55c73998","status":"passed","time":{"start":1759775493908,"stop":1759775543230,"duration":49322}},{"uid":"a9622c3573899d07","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/a9622c3573899d07","status":"passed","time":{"start":1759762791251,"stop":1759762842015,"duration":50764}},{"uid":"59bbf2c68d11d6c9","reportUrl":"https://golioth.github.io/allure-reports/branch/744//#testresult/59bbf2c68d11d6c9","status":"passed","time":{"start":1759764731546,"stop":1759764780118,"duration":48572}},{"uid":"11856b456bce0188","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/11856b456bce0188","status":"passed","time":{"start":1759762791251,"stop":1759762842015,"duration":50764}},{"uid":"a922b9dfa8a0e5ac","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/a922b9dfa8a0e5ac","status":"passed","time":{"start":1759514215035,"stop":1759514260533,"duration":45498}},{"uid":"a584651f0b7e7aad","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/a584651f0b7e7aad","status":"passed","time":{"start":1759367600203,"stop":1759367649104,"duration":48901}},{"uid":"96a155bd471b619a","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/96a155bd471b619a","status":"passed","time":{"start":1759514215035,"stop":1759514260533,"duration":45498}},{"uid":"a241a10af1fe30b3","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/a241a10af1fe30b3","status":"passed","time":{"start":1759514215035,"stop":1759514260533,"duration":45498}},{"uid":"b21593bb336ce48e","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/b21593bb336ce48e","status":"passed","time":{"start":1759175085187,"stop":1759175130551,"duration":45364}},{"uid":"e2bed76be0b98ea5","reportUrl":"https://golioth.github.io/allure-reports/branch/737//#testresult/e2bed76be0b98ea5","status":"passed","time":{"start":1759372118706,"stop":1759372168892,"duration":50186}},{"uid":"34220a0858cdbb28","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/34220a0858cdbb28","status":"passed","time":{"start":1759367600203,"stop":1759367649104,"duration":48901}},{"uid":"a62c0d5ba83ad862","reportUrl":"https://golioth.github.io/allure-reports/branch/732//#testresult/a62c0d5ba83ad862","status":"passed","time":{"start":1759267580750,"stop":1759267629352,"duration":48602}},{"uid":"3c528dd16669c4a5","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/3c528dd16669c4a5","status":"passed","time":{"start":1759175085187,"stop":1759175130551,"duration":45364}},{"uid":"c85e474ed9d21c8","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/c85e474ed9d21c8","status":"passed","time":{"start":1759175085187,"stop":1759175130551,"duration":45364}},{"uid":"40cfd302d6da1c2a","reportUrl":"https://golioth.github.io/allure-reports/branch/728//#testresult/40cfd302d6da1c2a","status":"passed","time":{"start":1759159187587,"stop":1759159235790,"duration":48203}},{"uid":"fe58b1eb89a4c0e","reportUrl":"https://golioth.github.io/allure-reports/branch/726//#testresult/fe58b1eb89a4c0e","status":"passed","time":{"start":1759104113023,"stop":1759104158446,"duration":45423}},{"uid":"4c367c18f55a23a8","reportUrl":"https://golioth.github.io/allure-reports/branch/723//#testresult/4c367c18f55a23a8","status":"passed","time":{"start":1758913180640,"stop":1758913226820,"duration":46180}}]},"tags":["linux","anyio"]},"source":"b56061cc31b81336.json","parameterValues":["'linux'","'linux'"]}