{"uid":"8ea184d34641e16c","name":"test_hello","fullName":"examples.esp_idf.cpp.pytest.test_sample#test_hello","historyId":"01825beeab41f1aa93031b146a613606","time":{"start":1759959565687,"stop":1759959582269,"duration":16582},"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff96b9f770>\ndevice = <golioth.golioth.Device object at 0xffff96ad4ec0>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.now(timezone.utc)\n        await board.wait_for_regex_in_line('.*Hello, Golioth 2!', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.now(timezone.utc)\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        r = re.compile(\".*Hello, Golioth 1!\")\n        matching_log = list(filter(r.match, [str(l) for l in logs]))\n>       assert len(matching_log) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nexamples/esp_idf/cpp/pytest/test_sample.py:24: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1759959539232,"stop":1759959539232,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1759959539233,"stop":1759959539233,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759959539234,"stop":1759959539235,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759959539234,"stop":1759959539234,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759959539235,"stop":1759959539235,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759959539235,"stop":1759959539236,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759959539236,"stop":1759959539236,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1759959539237,"stop":1759959564254,"duration":25017},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1759959539274,"stop":1759959539274,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1759959539275,"stop":1759959539275,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1759959539275,"stop":1759959539275,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1759959539276,"stop":1759959539276,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1759959539276,"stop":1759959539276,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759959564256,"stop":1759959564867,"duration":611},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759959564867,"stop":1759959565683,"duration":816},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff96b9f770>\ndevice = <golioth.golioth.Device object at 0xffff96ad4ec0>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.now(timezone.utc)\n        await board.wait_for_regex_in_line('.*Hello, Golioth 2!', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.now(timezone.utc)\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        r = re.compile(\".*Hello, Golioth 1!\")\n        matching_log = list(filter(r.match, [str(l) for l in logs]))\n>       assert len(matching_log) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nexamples/esp_idf/cpp/pytest/test_sample.py:24: AssertionError","steps":[],"attachments":[{"uid":"4f2ec1b82e05aaf3","name":"stdout","source":"4f2ec1b82e05aaf3.txt","type":"text/plain","size":7167}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1759959582514,"stop":1759959582923,"duration":409},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759959582925,"stop":1759959582925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1759959582927,"stop":1759959582937,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"9817a13ff956"},{"name":"thread","value":"252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.cpp.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"179755a46c10fffd","status":"passed","time":{"start":1759953341012,"stop":1759953358984,"duration":17972}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":21,"unknown":0,"total":22},"items":[{"uid":"3af77e3d149d675a","reportUrl":"https://golioth.github.io/allure-reports/branch/756//#testresult/3af77e3d149d675a","status":"passed","time":{"start":1759953341012,"stop":1759953358984,"duration":17972}},{"uid":"dfc59e3608202761","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/dfc59e3608202761","status":"passed","time":{"start":1759779126340,"stop":1759779141009,"duration":14669}},{"uid":"e04895b5cd39a706","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/e04895b5cd39a706","status":"passed","time":{"start":1759782737284,"stop":1759782752792,"duration":15508}},{"uid":"b3ed122951c3301d","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/b3ed122951c3301d","status":"passed","time":{"start":1759782737284,"stop":1759782752792,"duration":15508}},{"uid":"f16c5af79d61e1fd","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/f16c5af79d61e1fd","status":"passed","time":{"start":1759779126340,"stop":1759779141009,"duration":14669}},{"uid":"90ec1d896b40df75","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/90ec1d896b40df75","status":"passed","time":{"start":1759772657858,"stop":1759772671873,"duration":14015}},{"uid":"3e89194803524240","reportUrl":"https://golioth.github.io/allure-reports/branch/744//#testresult/3e89194803524240","status":"passed","time":{"start":1759766116661,"stop":1759766131619,"duration":14958}},{"uid":"47ae1b81876cc03","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/47ae1b81876cc03","status":"passed","time":{"start":1759764405200,"stop":1759764422157,"duration":16957}},{"uid":"4030446c8dd2c80d","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/4030446c8dd2c80d","status":"passed","time":{"start":1759516322849,"stop":1759516336487,"duration":13638}},{"uid":"5535fb1293ad44a3","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/5535fb1293ad44a3","status":"passed","time":{"start":1759369628306,"stop":1759369641214,"duration":12908}},{"uid":"66e091ae26869b59","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/66e091ae26869b59","status":"passed","time":{"start":1759516322849,"stop":1759516336487,"duration":13638}},{"uid":"6765363ee2d76aae","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/6765363ee2d76aae","status":"passed","time":{"start":1759516322849,"stop":1759516336487,"duration":13638}},{"uid":"2dffe35b1b1b9cf0","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/2dffe35b1b1b9cf0","status":"passed","time":{"start":1759176507074,"stop":1759176522451,"duration":15377}},{"uid":"e86442d3279c8a70","reportUrl":"https://golioth.github.io/allure-reports/branch/737//#testresult/e86442d3279c8a70","status":"passed","time":{"start":1759373449361,"stop":1759373462109,"duration":12748}},{"uid":"413a31a4aee3187a","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/413a31a4aee3187a","status":"passed","time":{"start":1759369628306,"stop":1759369641214,"duration":12908}},{"uid":"f857cb21b1dcf509","reportUrl":"https://golioth.github.io/allure-reports/branch/732//#testresult/f857cb21b1dcf509","status":"passed","time":{"start":1759270062317,"stop":1759270075942,"duration":13625}},{"uid":"b8e122e6b6ac5b60","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/b8e122e6b6ac5b60","status":"passed","time":{"start":1759176507074,"stop":1759176522451,"duration":15377}},{"uid":"9c73e4737a8994fb","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/9c73e4737a8994fb","status":"passed","time":{"start":1759176507074,"stop":1759176522451,"duration":15377}},{"uid":"444f5f3c9e377e81","reportUrl":"https://golioth.github.io/allure-reports/branch/728//#testresult/444f5f3c9e377e81","status":"passed","time":{"start":1759161808358,"stop":1759161821317,"duration":12959}},{"uid":"7dce480fb1984123","reportUrl":"https://golioth.github.io/allure-reports/branch/726//#testresult/7dce480fb1984123","status":"passed","time":{"start":1759106756508,"stop":1759106769206,"duration":12698}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","jons_orange_pi","anyio"]},"source":"8ea184d34641e16c.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}