{"uid":"85ad98a71d0002a3","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"c24c9ea14e94690f05bf86748c5128c2","time":{"start":1759958927566,"stop":1759958939864,"duration":12298},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffffa5d902f0>\ndevice = <golioth.golioth.Device object at 0xffffa5e9b0e0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa5e9b0e0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"baud","time":{"start":1759958882376,"stop":1759958882377,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1759958882376,"stop":1759958882376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759958882377,"stop":1759958882377,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759958882378,"stop":1759958882378,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759958882379,"stop":1759958882379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759958882379,"stop":1759958882379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759958882380,"stop":1759958882886,"duration":506},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759958882380,"stop":1759958882380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1759958882887,"stop":1759958907347,"duration":24460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759958907348,"stop":1759958908162,"duration":814},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1759958908162,"stop":1759958924491,"duration":16329},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffffa5d902f0>\ndevice = <golioth.golioth.Device object at 0xffffa5e9b0e0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa5e9b0e0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"de561a1a74024717","name":"stdout","source":"de561a1a74024717.txt","type":"text/plain","size":1962}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1759959059397,"stop":1759959059397,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759959059399,"stop":1759959059780,"duration":381},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1759959059782,"stop":1759959059783,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759959059785,"stop":1759959059788,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"7d845199ad18"},{"name":"thread","value":"251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b61c848b6f8c8e5e","status":"passed","time":{"start":1759952735202,"stop":1759952747625,"duration":12423}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":2,"skipped":0,"passed":18,"unknown":0,"total":22},"items":[{"uid":"6e81aa8fea04bcf8","reportUrl":"https://golioth.github.io/allure-reports/branch/756//#testresult/6e81aa8fea04bcf8","status":"passed","time":{"start":1759952735202,"stop":1759952747625,"duration":12423}},{"uid":"a1dd4441a4d66590","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/a1dd4441a4d66590","status":"passed","time":{"start":1759857404264,"stop":1759857416435,"duration":12171}},{"uid":"3580f6c3b0b8409","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/3580f6c3b0b8409","status":"passed","time":{"start":1759797036060,"stop":1759797048392,"duration":12332}},{"uid":"93896954281bb89b","reportUrl":"https://golioth.github.io/allure-reports/branch/749//#testresult/93896954281bb89b","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1759781307809,"stop":1759781320280,"duration":12471}},{"uid":"9b3f068ac8bc84e7","reportUrl":"https://golioth.github.io/allure-reports/branch/748//#testresult/9b3f068ac8bc84e7","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759776543863,"stop":1759776543863,"duration":0}},{"uid":"c44f2525088dce8e","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/c44f2525088dce8e","status":"passed","time":{"start":1759763946867,"stop":1759763959204,"duration":12337}},{"uid":"fbaed049388cf70","reportUrl":"https://golioth.github.io/allure-reports/branch/744//#testresult/fbaed049388cf70","status":"passed","time":{"start":1759765743696,"stop":1759765755969,"duration":12273}},{"uid":"e682ca99a1b2bca6","reportUrl":"https://golioth.github.io/allure-reports/branch/743//#testresult/e682ca99a1b2bca6","status":"passed","time":{"start":1759763946867,"stop":1759763959204,"duration":12337}},{"uid":"88b4da2fb56f95","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/88b4da2fb56f95","status":"passed","time":{"start":1759515881098,"stop":1759515893418,"duration":12320}},{"uid":"7a670fdb93af1499","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/7a670fdb93af1499","status":"passed","time":{"start":1759369190754,"stop":1759369203073,"duration":12319}},{"uid":"2eddc3cd9958cc46","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/2eddc3cd9958cc46","status":"passed","time":{"start":1759515881098,"stop":1759515893418,"duration":12320}},{"uid":"317be611c0ccdf6c","reportUrl":"https://golioth.github.io/allure-reports/branch/739//#testresult/317be611c0ccdf6c","status":"passed","time":{"start":1759515881098,"stop":1759515893418,"duration":12320}},{"uid":"a00e20f7ef5b4461","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/a00e20f7ef5b4461","status":"passed","time":{"start":1759244922067,"stop":1759244934299,"duration":12232}},{"uid":"d2bbba0b869fe368","reportUrl":"https://golioth.github.io/allure-reports/branch/737//#testresult/d2bbba0b869fe368","status":"passed","time":{"start":1759373494438,"stop":1759373506600,"duration":12162}},{"uid":"52c74bf562426cf9","reportUrl":"https://golioth.github.io/allure-reports/branch/735//#testresult/52c74bf562426cf9","status":"passed","time":{"start":1759369190754,"stop":1759369203073,"duration":12319}},{"uid":"8a050d69ae2578b2","reportUrl":"https://golioth.github.io/allure-reports/branch/732//#testresult/8a050d69ae2578b2","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759268549662,"stop":1759268549662,"duration":0}},{"uid":"ce351f8524d7ac8f","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/ce351f8524d7ac8f","status":"passed","time":{"start":1759244922067,"stop":1759244934299,"duration":12232}},{"uid":"8658b1f96f0491a0","reportUrl":"https://golioth.github.io/allure-reports/branch/729//#testresult/8658b1f96f0491a0","status":"passed","time":{"start":1759175918313,"stop":1759175930371,"duration":12058}},{"uid":"a430ed84a8b2f8db","reportUrl":"https://golioth.github.io/allure-reports/branch/728//#testresult/a430ed84a8b2f8db","status":"passed","time":{"start":1759159986065,"stop":1759159998106,"duration":12041}},{"uid":"35a6ede1fa72d8f7","reportUrl":"https://golioth.github.io/allure-reports/branch/726//#testresult/35a6ede1fa72d8f7","status":"passed","time":{"start":1759104639294,"stop":1759104651643,"duration":12349}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","mikes_testbench"]},"source":"85ad98a71d0002a3.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}