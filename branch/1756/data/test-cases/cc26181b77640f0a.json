{"uid":"cc26181b77640f0a","name":"test_restart","fullName":"tests.hil.tests.settings.test_settings#test_restart","historyId":"0292718abde5cdfeaf953fdc7df16213","time":{"start":1731714794097,"stop":1731714805252,"duration":11155},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 128633.90125179995\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffff9a48fb50>\ndevice = <golioth.golioth.Device object at 0xffff9a480590>\n\n    async def test_restart(board, device):\n        await device.settings.set('TEST_RESTART', True)\n>       assert None != await board.wait_for_regex_in_line('Received test_restart: true', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:213: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 128633.90125179995\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731714530001,"stop":1731714530002,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731714530002,"stop":1731714530003,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731714530003,"stop":1731714530004,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731714530004,"stop":1731714530004,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731714530005,"stop":1731714530005,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731714530006,"stop":1731714530006,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731714530006,"stop":1731714530006,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731714530007,"stop":1731714530007,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731714530007,"stop":1731714530008,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731714530008,"stop":1731714530008,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731714530008,"stop":1731714530009,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731714530009,"stop":1731714530405,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731714530009,"stop":1731714530009,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731714530405,"stop":1731714545228,"duration":14823},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731714545230,"stop":1731714546182,"duration":952},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731714546183,"stop":1731714666120,"duration":119937},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1731714805843,"stop":1731714805843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731714805845,"stop":1731714806300,"duration":455},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731714806303,"stop":1731714806304,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731714806306,"stop":1731714806309,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"940374c626d6"},{"name":"thread","value":"305-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":16,"unknown":0,"total":20},"items":[{"uid":"5c2cf12bd82149ce","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/5c2cf12bd82149ce","status":"passed","time":{"start":1731711703684,"stop":1731711736971,"duration":33287}},{"uid":"ea6cdfe52e9779b0","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/ea6cdfe52e9779b0","status":"passed","time":{"start":1731706923041,"stop":1731706953627,"duration":30586}},{"uid":"99185b5214c0b2cb","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/99185b5214c0b2cb","status":"passed","time":{"start":1731707680822,"stop":1731707716438,"duration":35616}},{"uid":"c47863b68e0750b5","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/c47863b68e0750b5","status":"passed","time":{"start":1731690730940,"stop":1731690766673,"duration":35733}},{"uid":"6427477639037c5b","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/6427477639037c5b","status":"passed","time":{"start":1731624161876,"stop":1731624197705,"duration":35829}},{"uid":"44537a58a3075d63","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/44537a58a3075d63","status":"passed","time":{"start":1731622398120,"stop":1731622432709,"duration":34589}},{"uid":"8265eea61e1410ed","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/8265eea61e1410ed","status":"passed","time":{"start":1731613161605,"stop":1731613192309,"duration":30704}},{"uid":"89b161ed1f62dc8d","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/89b161ed1f62dc8d","status":"passed","time":{"start":1731542988224,"stop":1731543023938,"duration":35714}},{"uid":"65c23e0d1b685d17","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/65c23e0d1b685d17","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731548428327,"stop":1731548439655,"duration":11328}},{"uid":"f5ea11f4e305f60b","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/f5ea11f4e305f60b","status":"passed","time":{"start":1731542988224,"stop":1731543023938,"duration":35714}},{"uid":"484cdace14b8e5bf","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/484cdace14b8e5bf","status":"passed","time":{"start":1731539895641,"stop":1731539938445,"duration":42804}},{"uid":"647c30724abf2d0a","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/647c30724abf2d0a","status":"passed","time":{"start":1731537096330,"stop":1731537130878,"duration":34548}},{"uid":"251a61a971718019","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/251a61a971718019","status":"passed","time":{"start":1731520042839,"stop":1731520078627,"duration":35788}},{"uid":"4ecc4e10b744ce3","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/4ecc4e10b744ce3","status":"passed","time":{"start":1731520042839,"stop":1731520078627,"duration":35788}},{"uid":"99ef015967e7ead5","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/99ef015967e7ead5","status":"passed","time":{"start":1731520042839,"stop":1731520078627,"duration":35788}},{"uid":"ce2a42afe351a47","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/ce2a42afe351a47","status":"passed","time":{"start":1731520042839,"stop":1731520078627,"duration":35788}},{"uid":"39b4ac9fd029ac7a","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/39b4ac9fd029ac7a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731427732173,"stop":1731427743265,"duration":11092}},{"uid":"edc143ccdb977297","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/edc143ccdb977297","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731103922637,"stop":1731103922637,"duration":0}},{"uid":"2240933ff03a65c3","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/2240933ff03a65c3","status":"passed","time":{"start":1731098613091,"stop":1731098648853,"duration":35762}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"cc26181b77640f0a.json","parameterValues":["'nrf9160dk'","'zephyr'"]}