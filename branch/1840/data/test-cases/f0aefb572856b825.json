{"uid":"f0aefb572856b825","name":"test_set_int_range_out_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_out_min","historyId":"07d0dc80615924eee5c9ecd5a1c0b503","time":{"start":1732553651813,"stop":1732553664746,"duration":12933},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff851eeb10>\ndevice = <golioth.golioth.Device object at 0xffff851e02d0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff851e02d0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732553574212,"stop":1732553574212,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732553574213,"stop":1732553574213,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732553574214,"stop":1732553574214,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732553574215,"stop":1732553574215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732553574216,"stop":1732553574216,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732553574217,"stop":1732553574217,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732553574217,"stop":1732553574217,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732553574218,"stop":1732553574218,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732553574219,"stop":1732553574219,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732553574220,"stop":1732553574220,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732553574220,"stop":1732553574220,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732553574221,"stop":1732553574221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732553574221,"stop":1732553574737,"duration":516},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732553574737,"stop":1732553595010,"duration":20273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732553595012,"stop":1732553596154,"duration":1142},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732553596154,"stop":1732553609885,"duration":13731},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff851eeb10>\ndevice = <golioth.golioth.Device object at 0xffff851e02d0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff851e02d0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"1901a6161458577b","name":"stdout","source":"1901a6161458577b.txt","type":"text/plain","size":244}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1732553755348,"stop":1732553755349,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732553755354,"stop":1732553755866,"duration":512},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732553755868,"stop":1732553755923,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732553755926,"stop":1732553755928,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"9de2b6160a52"},{"name":"thread","value":"310-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":7,"skipped":0,"passed":82,"unknown":0,"total":90},"items":[{"uid":"e74b75a1de56c8c7","reportUrl":"https://golioth.github.io/allure-reports/branch/1839//#testresult/e74b75a1de56c8c7","status":"passed","time":{"start":1732507481911,"stop":1732507494164,"duration":12253}},{"uid":"8e936755a2b755e9","reportUrl":"https://golioth.github.io/allure-reports/branch/1839//#testresult/8e936755a2b755e9","status":"passed","time":{"start":1732507481911,"stop":1732507494164,"duration":12253}},{"uid":"350bdd32962e6737","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/350bdd32962e6737","status":"passed","time":{"start":1732408330768,"stop":1732408343721,"duration":12953}},{"uid":"7759c6367acd1e30","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/7759c6367acd1e30","status":"passed","time":{"start":1732408330768,"stop":1732408343721,"duration":12953}},{"uid":"b32b56e9ca0404cd","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/b32b56e9ca0404cd","status":"passed","time":{"start":1732317780983,"stop":1732317793529,"duration":12546}},{"uid":"60ec27523ca1e283","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/60ec27523ca1e283","status":"passed","time":{"start":1732311976775,"stop":1732311989359,"duration":12584}},{"uid":"c08af4cee1d9155d","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/c08af4cee1d9155d","status":"passed","time":{"start":1732300411740,"stop":1732300424304,"duration":12564}},{"uid":"c0d39b3c6dd6ac7d","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/c0d39b3c6dd6ac7d","status":"passed","time":{"start":1732300411740,"stop":1732300424304,"duration":12564}},{"uid":"7643673ab32744a7","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/7643673ab32744a7","status":"passed","time":{"start":1732300411740,"stop":1732300424304,"duration":12564}},{"uid":"7c2b3e4078995b7c","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/7c2b3e4078995b7c","status":"passed","time":{"start":1732296446495,"stop":1732296458881,"duration":12386}},{"uid":"b6b96611f7c79564","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/b6b96611f7c79564","status":"passed","time":{"start":1732224536539,"stop":1732224548811,"duration":12272}},{"uid":"3995a654bcaaa20a","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/3995a654bcaaa20a","status":"passed","time":{"start":1732291346835,"stop":1732291359214,"duration":12379}},{"uid":"d56a389b1fac6662","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/d56a389b1fac6662","status":"passed","time":{"start":1732226350552,"stop":1732226363421,"duration":12869}},{"uid":"e885d6d1539a449","reportUrl":"https://golioth.github.io/allure-reports/branch/1827//#testresult/e885d6d1539a449","status":"passed","time":{"start":1732288772794,"stop":1732288785449,"duration":12655}},{"uid":"7ab4baa22f81077","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/7ab4baa22f81077","status":"passed","time":{"start":1732193679963,"stop":1732193692735,"duration":12772}},{"uid":"c633cb7ed781887a","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/c633cb7ed781887a","status":"passed","time":{"start":1732285529686,"stop":1732285544523,"duration":14837}},{"uid":"5eb3cbc1e36ccc07","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/5eb3cbc1e36ccc07","status":"passed","time":{"start":1732193679963,"stop":1732193692735,"duration":12772}},{"uid":"4a7a8d0e1600bfec","reportUrl":"https://golioth.github.io/allure-reports/branch/1824//#testresult/4a7a8d0e1600bfec","status":"passed","time":{"start":1732279210726,"stop":1732279223164,"duration":12438}},{"uid":"299b775818d8273d","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/299b775818d8273d","status":"passed","time":{"start":1732206625213,"stop":1732206637641,"duration":12428}},{"uid":"eec9420077464260","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/eec9420077464260","status":"passed","time":{"start":1732207643529,"stop":1732207655965,"duration":12436}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"f0aefb572856b825.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}