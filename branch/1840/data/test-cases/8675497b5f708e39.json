{"uid":"8675497b5f708e39","name":"test_lightdb_get","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample#test_lightdb_get","historyId":"a8632ecd3cd3b3c347c26a5269c4b5ab","time":{"start":1732555900549,"stop":1732555900549,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_get>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732555900552,"stop":1732555900552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732555900553,"stop":1732555900553,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732555900553,"stop":1732555900553,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732555900554,"stop":1732555900555,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732555900554,"stop":1732555900554,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732555900555,"stop":1732555900557,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732555900558,"stop":1732555900558,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732555900558,"stop":1732555900558,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732555900559,"stop":1732555901000,"duration":441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732555901001,"stop":1732555901858,"duration":857},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732555901859,"stop":1732555928977,"duration":27118},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732555928978,"stop":1732555949178,"duration":20200},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_get>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"780c282d696bd677","name":"log","source":"780c282d696bd677.txt","type":"text/plain","size":9587}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732555949503,"stop":1732555949506,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732555949508,"stop":1732555949890,"duration":382},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732555949892,"stop":1732555949894,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732555949899,"stop":1732555949899,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"6ac357075f68"},{"name":"thread","value":"622-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":6,"skipped":0,"passed":27,"unknown":0,"total":39},"items":[{"uid":"81a4230af09f8f32","reportUrl":"https://golioth.github.io/allure-reports/branch/1839//#testresult/81a4230af09f8f32","status":"passed","time":{"start":1732549855410,"stop":1732549888132,"duration":32722}},{"uid":"1b0b5322019ff632","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/1b0b5322019ff632","status":"passed","time":{"start":1732467480119,"stop":1732467527443,"duration":47324}},{"uid":"30b5fee10d6bda60","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/30b5fee10d6bda60","status":"passed","time":{"start":1732408551963,"stop":1732408596222,"duration":44259}},{"uid":"3551d7dd73ea7c1b","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/3551d7dd73ea7c1b","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732318231560,"stop":1732318324842,"duration":93282}},{"uid":"5a6d2c3a1541c149","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/5a6d2c3a1541c149","status":"passed","time":{"start":1732314395307,"stop":1732314439616,"duration":44309}},{"uid":"31a1e24484b8bdd8","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/31a1e24484b8bdd8","status":"passed","time":{"start":1732296723855,"stop":1732296753933,"duration":30078}},{"uid":"58116f3465a278da","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/58116f3465a278da","status":"passed","time":{"start":1732293841787,"stop":1732293887568,"duration":45781}},{"uid":"acdccad7dcdabac7","reportUrl":"https://golioth.github.io/allure-reports/branch/1816//#testresult/acdccad7dcdabac7","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessException: Could not flash device None","time":{"start":1732221666401,"stop":1732221666401,"duration":0}},{"uid":"50b0ef3c347cb153","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/50b0ef3c347cb153","status":"passed","time":{"start":1732136338104,"stop":1732136432823,"duration":94719}},{"uid":"3523b426c4dcab22","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/3523b426c4dcab22","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1732128115385,"stop":1732128115385,"duration":0}},{"uid":"38bdde23c340edb0","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/38bdde23c340edb0","status":"passed","time":{"start":1732126813653,"stop":1732126855651,"duration":41998}},{"uid":"28d78b4c7b156c20","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/28d78b4c7b156c20","status":"passed","time":{"start":1732049973879,"stop":1732050022949,"duration":49070}},{"uid":"8c259e4995a762d7","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/8c259e4995a762d7","status":"passed","time":{"start":1732049973879,"stop":1732050022949,"duration":49070}},{"uid":"6a3b4336420bc9b0","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/6a3b4336420bc9b0","status":"passed","time":{"start":1732049973879,"stop":1732050022949,"duration":49070}},{"uid":"4f1e7c197694c868","reportUrl":"https://golioth.github.io/allure-reports/branch/1780//#testresult/4f1e7c197694c868","status":"passed","time":{"start":1732033711712,"stop":1732033760484,"duration":48772}},{"uid":"641635c5fb903335","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/641635c5fb903335","status":"passed","time":{"start":1731972309240,"stop":1731972339866,"duration":30626}},{"uid":"7dde9d8c15dc9ce8","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/7dde9d8c15dc9ce8","status":"passed","time":{"start":1731964619520,"stop":1731964653115,"duration":33595}},{"uid":"432ecca7922e9a0e","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/432ecca7922e9a0e","status":"passed","time":{"start":1731959533453,"stop":1731959588411,"duration":54958}},{"uid":"dd779bf8d0a8a90","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/dd779bf8d0a8a90","status":"passed","time":{"start":1731956522684,"stop":1731956568244,"duration":45560}},{"uid":"7148c2653c220f4f","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/7148c2653c220f4f","status":"passed","time":{"start":1731907855552,"stop":1731907895584,"duration":40032}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"8675497b5f708e39.json","parameterValues":["'nrf9160dk'","'zephyr'"]}