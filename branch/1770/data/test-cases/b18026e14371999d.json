{"uid":"b18026e14371999d","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"07c5cd7ee2ca26b1984a94943c0a0280","time":{"start":1731964560223,"stop":1731964639974,"duration":79751},"status":"broken","statusMessage":"trio_websocket._impl.ConnectionClosed","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa3fabcd0>\ndevice = <golioth.golioth.Device object at 0xffffa3f99b10>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n>           async for value in stream_iter:\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:618: in iter\n    yield await monitor.get()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:157: in get\n    msg = await self.ws.get_message()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <trio_websocket._impl.WebSocketConnection object at 0xffffa401a210>\n\n    async def get_message(self):\n        '''\n        Receive the next WebSocket message.\n    \n        If no message is available immediately, then this function blocks until\n        a message is ready.\n    \n        If the remote endpoint closes the connection, then the caller can still\n        get messages sent prior to closing. Once all pending messages have been\n        retrieved, additional calls to this method will raise\n        ``ConnectionClosed``. If the local endpoint closes the connection, then\n        pending messages are discarded and calls to this method will immediately\n        raise ``ConnectionClosed``.\n    \n        :rtype: str or bytes\n        :raises ConnectionClosed: if the connection is closed.\n        '''\n        try:\n            message = await self._recv_channel.receive()\n        except (trio.ClosedResourceError, trio.EndOfChannel):\n>           raise ConnectionClosed(self._close_reason) from None\nE           trio_websocket._impl.ConnectionClosed\n\n/usr/local/lib/python3.11/dist-packages/trio_websocket/_impl.py:892: ConnectionClosed","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731964545794,"stop":1731964545794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731964545795,"stop":1731964545795,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731964545796,"stop":1731964545796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731964545796,"stop":1731964545796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731964545797,"stop":1731964545797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731964545797,"stop":1731964545799,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731964545800,"stop":1731964545800,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731964545801,"stop":1731964545801,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731964545801,"stop":1731964546206,"duration":405},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731964546206,"stop":1731964547048,"duration":842},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731964547049,"stop":1731964559608,"duration":12559},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731964559609,"stop":1731964560220,"duration":611},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio_websocket._impl.ConnectionClosed","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa3fabcd0>\ndevice = <golioth.golioth.Device object at 0xffffa3f99b10>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n>           async for value in stream_iter:\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:618: in iter\n    yield await monitor.get()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:157: in get\n    msg = await self.ws.get_message()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <trio_websocket._impl.WebSocketConnection object at 0xffffa401a210>\n\n    async def get_message(self):\n        '''\n        Receive the next WebSocket message.\n    \n        If no message is available immediately, then this function blocks until\n        a message is ready.\n    \n        If the remote endpoint closes the connection, then the caller can still\n        get messages sent prior to closing. Once all pending messages have been\n        retrieved, additional calls to this method will raise\n        ``ConnectionClosed``. If the local endpoint closes the connection, then\n        pending messages are discarded and calls to this method will immediately\n        raise ``ConnectionClosed``.\n    \n        :rtype: str or bytes\n        :raises ConnectionClosed: if the connection is closed.\n        '''\n        try:\n            message = await self._recv_channel.receive()\n        except (trio.ClosedResourceError, trio.EndOfChannel):\n>           raise ConnectionClosed(self._close_reason) from None\nE           trio_websocket._impl.ConnectionClosed\n\n/usr/local/lib/python3.11/dist-packages/trio_websocket/_impl.py:892: ConnectionClosed","steps":[],"attachments":[{"uid":"692a44e3a670470e","name":"log","source":"692a44e3a670470e.txt","type":"text/plain","size":20525}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731964640530,"stop":1731964640702,"duration":172},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731964640704,"stop":1731964641102,"duration":398},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731964641105,"stop":1731964641107,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731964641112,"stop":1731964641112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"42a421aad4d1"},{"name":"thread","value":"514-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":31,"unknown":0,"total":32},"items":[{"uid":"b3e6aab9d018310","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/b3e6aab9d018310","status":"passed","time":{"start":1731963487405,"stop":1731963541583,"duration":54178}},{"uid":"c43c286df2423511","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/c43c286df2423511","status":"passed","time":{"start":1731958408112,"stop":1731958461769,"duration":53657}},{"uid":"2ce322b821fc0552","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/2ce322b821fc0552","status":"passed","time":{"start":1731955346558,"stop":1731955400641,"duration":54083}},{"uid":"110f4d8232b06e9e","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/110f4d8232b06e9e","status":"passed","time":{"start":1731933804129,"stop":1731933861641,"duration":57512}},{"uid":"fa38280648ff714e","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/fa38280648ff714e","status":"passed","time":{"start":1731923545901,"stop":1731923604040,"duration":58139}},{"uid":"909f5dc8790931e2","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/909f5dc8790931e2","status":"passed","time":{"start":1731906263937,"stop":1731906316904,"duration":52967}},{"uid":"9bbb701b824b4608","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/9bbb701b824b4608","status":"passed","time":{"start":1731715232608,"stop":1731715285892,"duration":53284}},{"uid":"5b7165b76b6d7177","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/5b7165b76b6d7177","status":"passed","time":{"start":1731711884042,"stop":1731711938562,"duration":54520}},{"uid":"6a2e63abe4ee7da9","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/6a2e63abe4ee7da9","status":"passed","time":{"start":1731708685872,"stop":1731708738383,"duration":52511}},{"uid":"890498939f1ed62c","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/890498939f1ed62c","status":"passed","time":{"start":1731707694473,"stop":1731707747522,"duration":53049}},{"uid":"bd10fc5b607b3e11","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/bd10fc5b607b3e11","status":"passed","time":{"start":1731695600884,"stop":1731695654510,"duration":53626}},{"uid":"4576479aff5cc3ef","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/4576479aff5cc3ef","status":"passed","time":{"start":1731689666450,"stop":1731689720186,"duration":53736}},{"uid":"29a2245912859b3d","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/29a2245912859b3d","status":"passed","time":{"start":1731625248230,"stop":1731625302140,"duration":53910}},{"uid":"e6cae6af7e4b0e23","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/e6cae6af7e4b0e23","status":"passed","time":{"start":1731622686844,"stop":1731622740594,"duration":53750}},{"uid":"585f11e2447b4fb","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/585f11e2447b4fb","status":"passed","time":{"start":1731617146448,"stop":1731617206685,"duration":60237}},{"uid":"c724ab48ae47a4d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/c724ab48ae47a4d2","status":"passed","time":{"start":1731613655364,"stop":1731613709721,"duration":54357}},{"uid":"cca27eac4010dd36","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/cca27eac4010dd36","status":"passed","time":{"start":1731611303519,"stop":1731611361685,"duration":58166}},{"uid":"fed84552c8447ed1","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/fed84552c8447ed1","status":"passed","time":{"start":1731543643963,"stop":1731543696587,"duration":52624}},{"uid":"1feec1c39c45faf3","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/1feec1c39c45faf3","status":"passed","time":{"start":1731548754015,"stop":1731548808119,"duration":54104}},{"uid":"dd78c4b0adadd427","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/dd78c4b0adadd427","status":"passed","time":{"start":1731536916662,"stop":1731536972405,"duration":55743}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"b18026e14371999d.json","parameterValues":["'rak5010'","'zephyr'"]}