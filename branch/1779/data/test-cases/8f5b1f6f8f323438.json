{"uid":"8f5b1f6f8f323438","name":"test_lightdb_deleted","fullName":"tests.hil.tests.lightdb.test_lightdb#test_lightdb_deleted","historyId":"39f157a3633dd99fe6adc34bb3f4380e","time":{"start":1732013435979,"stop":1732013441855,"duration":5876},"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\ndevice = <golioth.golioth.Device object at 0xffff96ce7d90>\n\n    async def test_lightdb_deleted(device):\n        assert (await device.lightdb.get('hil/lightdb/to_delete/sync/true')) is None\n        assert (await device.lightdb.get('hil/lightdb/to_delete/sync/false')) is None\n        assert (await device.lightdb.get('hil/lightdb/to_delete/sync/int')) is None\n>       assert (await device.lightdb.get('hil/lightdb/to_delete/sync/str')) is None\n\ntests/hil/tests/lightdb/test_lightdb.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:520: in get\n    response = await c.get(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732013387653,"stop":1732013387653,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732013387654,"stop":1732013387654,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732013387655,"stop":1732013387655,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732013387656,"stop":1732013387657,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732013387656,"stop":1732013387656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732013387657,"stop":1732013387658,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732013387658,"stop":1732013387658,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732013387658,"stop":1732013387659,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732013387659,"stop":1732013387660,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732013387659,"stop":1732013387659,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732013387660,"stop":1732013387660,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732013387660,"stop":1732013387660,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732013387661,"stop":1732013388097,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732013388098,"stop":1732013408315,"duration":20217},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732013408317,"stop":1732013409547,"duration":1230},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732013409547,"stop":1732013429289,"duration":19742},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732013455687,"stop":1732013456095,"duration":408},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732013456097,"stop":1732013456565,"duration":468},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732013456567,"stop":1732013456622,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732013456625,"stop":1732013456627,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"94198c772521"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":26,"unknown":0,"total":35},"items":[{"uid":"2a1b7877ba19ee95","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/2a1b7877ba19ee95","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731999980426,"stop":1731999980426,"duration":0}},{"uid":"9c97924efc10b91a","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/9c97924efc10b91a","status":"passed","time":{"start":1731969364268,"stop":1731969368092,"duration":3824}},{"uid":"80e7b2156d96c1f0","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/80e7b2156d96c1f0","status":"passed","time":{"start":1731961272448,"stop":1731961279578,"duration":7130}},{"uid":"fbda309b9fc63c57","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/fbda309b9fc63c57","status":"passed","time":{"start":1731959509683,"stop":1731959517890,"duration":8207}},{"uid":"d46330a18c61733a","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/d46330a18c61733a","status":"passed","time":{"start":1731957136353,"stop":1731957140805,"duration":4452}},{"uid":"8bf08fd228d4c7cb","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/8bf08fd228d4c7cb","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731954473547,"stop":1731954473547,"duration":0}},{"uid":"d37a3910197211a9","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/d37a3910197211a9","status":"passed","time":{"start":1731922180649,"stop":1731922184267,"duration":3618}},{"uid":"6032ab93064534bd","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/6032ab93064534bd","status":"passed","time":{"start":1731922180649,"stop":1731922184267,"duration":3618}},{"uid":"ceaabc7c5c5e4724","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/ceaabc7c5c5e4724","status":"passed","time":{"start":1731904968927,"stop":1731904972600,"duration":3673}},{"uid":"7cd4e52843a0ef23","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/7cd4e52843a0ef23","status":"passed","time":{"start":1731712784680,"stop":1731712788437,"duration":3757}},{"uid":"6fb22680149e57e5","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/6fb22680149e57e5","status":"passed","time":{"start":1731709869386,"stop":1731709873126,"duration":3740}},{"uid":"150fdbbcda67756e","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/150fdbbcda67756e","status":"passed","time":{"start":1731704852639,"stop":1731704856499,"duration":3860}},{"uid":"4dad6dbc10bf2cb1","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/4dad6dbc10bf2cb1","status":"passed","time":{"start":1731705496899,"stop":1731705500747,"duration":3848}},{"uid":"10a6cc8af0be148c","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/10a6cc8af0be148c","status":"passed","time":{"start":1731694074399,"stop":1731694078026,"duration":3627}},{"uid":"1ede3f93f290e54e","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/1ede3f93f290e54e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731689190121,"stop":1731689190121,"duration":0}},{"uid":"db265dc63dae552e","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/db265dc63dae552e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731623944999,"stop":1731623944999,"duration":0}},{"uid":"1c59c98bd5ced42","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/1c59c98bd5ced42","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731621397163,"stop":1731621397163,"duration":0}},{"uid":"5a0f46e8fc417144","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/5a0f46e8fc417144","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731615231071,"stop":1731615231071,"duration":0}},{"uid":"3ab18395719ed84d","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/3ab18395719ed84d","status":"passed","time":{"start":1731612557114,"stop":1731612561829,"duration":4715}},{"uid":"35302e84c9afcbcf","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/35302e84c9afcbcf","status":"passed","time":{"start":1731609923722,"stop":1731609928708,"duration":4986}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"8f5b1f6f8f323438.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}