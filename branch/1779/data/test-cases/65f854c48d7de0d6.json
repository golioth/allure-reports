{"uid":"65f854c48d7de0d6","name":"test_set_int_range_max","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_max","historyId":"a32f40640df0b76768208c0664572683","time":{"start":1732014200850,"stop":1732014200850,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 161726.2079288221\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffffa30ed590>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffa2192d50>\ndevice = <golioth.golioth.Device object at 0xffffa21fbc90>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 161726.2079288221\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732014030896,"stop":1732014030896,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732014030897,"stop":1732014030897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732014030897,"stop":1732014030898,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732014030898,"stop":1732014030898,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732014030899,"stop":1732014030899,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732014030900,"stop":1732014030901,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732014030900,"stop":1732014030900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732014030901,"stop":1732014030902,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732014030901,"stop":1732014030901,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732014030902,"stop":1732014030902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732014030902,"stop":1732014030902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732014030903,"stop":1732014030903,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732014030903,"stop":1732014031332,"duration":429},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732014031333,"stop":1732014070362,"duration":39029},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732014070364,"stop":1732014071285,"duration":921},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732014071285,"stop":1732014198834,"duration":127549},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1732014204918,"stop":1732014205296,"duration":378},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732014205298,"stop":1732014205299,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732014205302,"stop":1732014205304,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"6971e2588a99"},{"name":"thread","value":"251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":23,"skipped":0,"passed":12,"unknown":0,"total":35},"items":[{"uid":"b14be663c013dcff","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/b14be663c013dcff","status":"passed","time":{"start":1731999709422,"stop":1731999713018,"duration":3596}},{"uid":"d168f85a436d2060","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/d168f85a436d2060","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731970443099,"stop":1731970443099,"duration":0}},{"uid":"65846ccf3904b02d","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/65846ccf3904b02d","status":"passed","time":{"start":1731961859807,"stop":1731961863422,"duration":3615}},{"uid":"42a23ab340ca28d","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/42a23ab340ca28d","status":"passed","time":{"start":1731960612114,"stop":1731960615688,"duration":3574}},{"uid":"cec107557a9e7130","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/cec107557a9e7130","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731957693081,"stop":1731957693081,"duration":0}},{"uid":"5f642601c0157c6d","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/5f642601c0157c6d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731954619249,"stop":1731954619249,"duration":0}},{"uid":"407f8d77fa9ee336","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/407f8d77fa9ee336","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922513702,"stop":1731922513702,"duration":0}},{"uid":"10dda6e062278e66","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/10dda6e062278e66","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922513702,"stop":1731922513702,"duration":0}},{"uid":"f980a76286962530","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/f980a76286962530","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731905343922,"stop":1731905343923,"duration":1}},{"uid":"87685895deadd644","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/87685895deadd644","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731713712807,"stop":1731713712807,"duration":0}},{"uid":"b9ff7451ff70a48b","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/b9ff7451ff70a48b","status":"passed","time":{"start":1731710876845,"stop":1731710880047,"duration":3202}},{"uid":"8754ac368c3910b3","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/8754ac368c3910b3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731705923522,"stop":1731705923522,"duration":0}},{"uid":"2c4523351538a4fa","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/2c4523351538a4fa","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731706443904,"stop":1731706443904,"duration":0}},{"uid":"9554c5e900f87daf","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/9554c5e900f87daf","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731694583055,"stop":1731694583055,"duration":0}},{"uid":"f9c28c6c2450e1d3","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/f9c28c6c2450e1d3","status":"passed","time":{"start":1731621466968,"stop":1731621470530,"duration":3562}},{"uid":"e726e16610298510","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/e726e16610298510","status":"passed","time":{"start":1731621466968,"stop":1731621470530,"duration":3562}},{"uid":"c824c73bead41422","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/c824c73bead41422","status":"passed","time":{"start":1731621466968,"stop":1731621470530,"duration":3562}},{"uid":"6ba2af2a173a1647","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/6ba2af2a173a1647","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731616025545,"stop":1731616025545,"duration":0}},{"uid":"3f0dde2891d0cf4e","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/3f0dde2891d0cf4e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731613057110,"stop":1731613057110,"duration":0}},{"uid":"68dcfb019cacf299","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/68dcfb019cacf299","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731610087170,"stop":1731610087170,"duration":0}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"65f854c48d7de0d6.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}