{"uid":"9e2999c6fedcd486","name":"test_bool_return","fullName":"tests.hil.tests.rpc.test_rpc#test_bool_return","historyId":"1b1f32053281809950082a484352d68e","time":{"start":1732013968519,"stop":1732013973847,"duration":5328},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffb45eabd0>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffb445cb90>\ndevice = <golioth.golioth.Device object at 0xffffb4496ad0>\n\n    async def test_bool_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"bool\")\n\ntests/hil/tests/rpc/test_rpc.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffb45eabd0>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732013912811,"stop":1732013912811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732013912812,"stop":1732013912812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732013912813,"stop":1732013912813,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732013912814,"stop":1732013912815,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732013912814,"stop":1732013912814,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732013912815,"stop":1732013912815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732013912816,"stop":1732013912817,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732013912816,"stop":1732013912816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732013912817,"stop":1732013912818,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732013912817,"stop":1732013912817,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732013912818,"stop":1732013912818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732013912818,"stop":1732013912818,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732013912819,"stop":1732013913233,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732013913233,"stop":1732013951766,"duration":38533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732013951768,"stop":1732013952736,"duration":968},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732013952737,"stop":1732013961759,"duration":9022},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732014027277,"stop":1732014027277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732014027280,"stop":1732014027641,"duration":361},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732014027643,"stop":1732014027645,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732014027647,"stop":1732014027649,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"6971e2588a99"},{"name":"thread","value":"244-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":15,"unknown":0,"total":35},"items":[{"uid":"1fedeb20d474db3f","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/1fedeb20d474db3f","status":"passed","time":{"start":1731999567472,"stop":1731999568201,"duration":729}},{"uid":"eec1d309ad168548","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/eec1d309ad168548","status":"passed","time":{"start":1731970217113,"stop":1731970217848,"duration":735}},{"uid":"d6dbdeb7505c51d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/d6dbdeb7505c51d2","status":"passed","time":{"start":1731961714126,"stop":1731961714924,"duration":798}},{"uid":"3d54bf98deb44bc9","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/3d54bf98deb44bc9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731960532048,"stop":1731960532048,"duration":0}},{"uid":"fbdb044795d81b67","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/fbdb044795d81b67","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731957533675,"stop":1731957533675,"duration":0}},{"uid":"2f492fa612324b2f","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/2f492fa612324b2f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731954565772,"stop":1731954565772,"duration":0}},{"uid":"e5e6ef0374e66ed8","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/e5e6ef0374e66ed8","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922439105,"stop":1731922439105,"duration":0}},{"uid":"5335088fba2d2d34","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/5335088fba2d2d34","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922439105,"stop":1731922439105,"duration":0}},{"uid":"43da41acd0d36a87","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/43da41acd0d36a87","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731905263223,"stop":1731905263223,"duration":0}},{"uid":"cfb0a4062b8ce93d","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/cfb0a4062b8ce93d","status":"passed","time":{"start":1731713595464,"stop":1731713595954,"duration":490}},{"uid":"1b1411a47e7d01e","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/1b1411a47e7d01e","status":"passed","time":{"start":1731710733580,"stop":1731710734326,"duration":746}},{"uid":"3f8e4f633b3b1639","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/3f8e4f633b3b1639","status":"passed","time":{"start":1731705802132,"stop":1731705802625,"duration":493}},{"uid":"c0cc4d3fde9b7f7f","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/c0cc4d3fde9b7f7f","status":"passed","time":{"start":1731706326943,"stop":1731706327449,"duration":506}},{"uid":"835d972ad0a1f58b","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/835d972ad0a1f58b","status":"passed","time":{"start":1731694357321,"stop":1731694358048,"duration":727}},{"uid":"44720fdde39519fa","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/44720fdde39519fa","status":"passed","time":{"start":1731621334088,"stop":1731621334843,"duration":755}},{"uid":"fd07f42abbdfd824","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/fd07f42abbdfd824","status":"passed","time":{"start":1731621334088,"stop":1731621334843,"duration":755}},{"uid":"281dcf5db547232f","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/281dcf5db547232f","status":"passed","time":{"start":1731621334088,"stop":1731621334843,"duration":755}},{"uid":"b0013f8c1c509da6","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/b0013f8c1c509da6","status":"passed","time":{"start":1731615799080,"stop":1731615799570,"duration":490}},{"uid":"4fb774eaa142415f","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/4fb774eaa142415f","status":"passed","time":{"start":1731612832496,"stop":1731612833029,"duration":533}},{"uid":"649c0b7550c4ebf1","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/649c0b7550c4ebf1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731610019471,"stop":1731610019471,"duration":0}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"9e2999c6fedcd486.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}