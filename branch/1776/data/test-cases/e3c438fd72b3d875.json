{"uid":"e3c438fd72b3d875","name":"test_set_int_range_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_min","historyId":"21550e42731a4e24efcdf770d7b8c8ac","time":{"start":1731970442785,"stop":1731970442785,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 65571.4232580936\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffffac7f3450>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffac89ba10>\ndevice = <golioth.golioth.Device object at 0xffffac831f50>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 65571.4232580936\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731970273602,"stop":1731970273602,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731970273603,"stop":1731970273603,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731970273604,"stop":1731970273604,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731970273605,"stop":1731970273605,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731970273606,"stop":1731970273607,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731970273606,"stop":1731970273606,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731970273607,"stop":1731970273607,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731970273608,"stop":1731970273608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731970273609,"stop":1731970273609,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731970273609,"stop":1731970273609,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731970273610,"stop":1731970273610,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731970273610,"stop":1731970273610,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731970273611,"stop":1731970274069,"duration":458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731970274069,"stop":1731970311500,"duration":37431},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731970311501,"stop":1731970312607,"duration":1106},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731970312607,"stop":1731970441038,"duration":128431},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1731970447174,"stop":1731970447610,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731970447612,"stop":1731970447614,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731970447616,"stop":1731970447618,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"fc27e96b9c71"},{"name":"thread","value":"250-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":11,"unknown":0,"total":33},"items":[{"uid":"a495709f3520f353","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/a495709f3520f353","status":"passed","time":{"start":1731961856256,"stop":1731961859795,"duration":3539}},{"uid":"5bdc910d77bc2151","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/5bdc910d77bc2151","status":"passed","time":{"start":1731960608014,"stop":1731960612103,"duration":4089}},{"uid":"6cebe23e29e603b2","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/6cebe23e29e603b2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731957692769,"stop":1731957692769,"duration":0}},{"uid":"31cbf2cc4dc15739","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/31cbf2cc4dc15739","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731954618694,"stop":1731954618694,"duration":0}},{"uid":"f5dc8807242215e6","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/f5dc8807242215e6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922513150,"stop":1731922513150,"duration":0}},{"uid":"70403879078277e9","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/70403879078277e9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731922513150,"stop":1731922513150,"duration":0}},{"uid":"f78479064a5b6b9c","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/f78479064a5b6b9c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731905343598,"stop":1731905343598,"duration":0}},{"uid":"25b1340a90663e3","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/25b1340a90663e3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731713712250,"stop":1731713712250,"duration":0}},{"uid":"10dac82ea825a147","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/10dac82ea825a147","status":"passed","time":{"start":1731710873302,"stop":1731710876834,"duration":3532}},{"uid":"ec684a8b312182f2","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/ec684a8b312182f2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731705922973,"stop":1731705922973,"duration":0}},{"uid":"b3c63cacb4f39558","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/b3c63cacb4f39558","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731706443351,"stop":1731706443351,"duration":0}},{"uid":"bd4dd1bb789b6cad","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/bd4dd1bb789b6cad","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731694582741,"stop":1731694582741,"duration":0}},{"uid":"c3e0a3442c87efb7","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/c3e0a3442c87efb7","status":"passed","time":{"start":1731621463094,"stop":1731621466957,"duration":3863}},{"uid":"533ce145d3860a12","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/533ce145d3860a12","status":"passed","time":{"start":1731621463094,"stop":1731621466957,"duration":3863}},{"uid":"695e5adb1ea521c0","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/695e5adb1ea521c0","status":"passed","time":{"start":1731621463094,"stop":1731621466957,"duration":3863}},{"uid":"ca017aa9425f2511","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/ca017aa9425f2511","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731616025232,"stop":1731616025232,"duration":0}},{"uid":"3fb4c35619109ffa","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/3fb4c35619109ffa","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731613056797,"stop":1731613056797,"duration":0}},{"uid":"e52cc25f24e7f286","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/e52cc25f24e7f286","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731610086614,"stop":1731610086614,"duration":0}},{"uid":"fa8e66129cd128c2","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/fa8e66129cd128c2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731597680518,"stop":1731597680519,"duration":1}},{"uid":"873da706b0c9a2c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/873da706b0c9a2c9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731548201113,"stop":1731548201113,"duration":0}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"e3c438fd72b3d875.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}