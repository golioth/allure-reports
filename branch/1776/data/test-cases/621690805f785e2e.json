{"uid":"621690805f785e2e","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1731970416291,"stop":1731970440458,"duration":24167},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff804ddd90>\ndevice = <golioth.golioth.Device object at 0xffff80723750>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731970377402,"stop":1731970377402,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731970377403,"stop":1731970377403,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731970377403,"stop":1731970377403,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731970377404,"stop":1731970377404,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731970377404,"stop":1731970377405,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731970377405,"stop":1731970377407,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731970377408,"stop":1731970377408,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731970377408,"stop":1731970377409,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731970377409,"stop":1731970378034,"duration":625},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731970378034,"stop":1731970379132,"duration":1098},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731970379132,"stop":1731970415658,"duration":36526},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731970415659,"stop":1731970416288,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff804ddd90>\ndevice = <golioth.golioth.Device object at 0xffff80723750>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"d6bc359d28b64775","name":"log","source":"d6bc359d28b64775.txt","type":"text/plain","size":28362}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731970440720,"stop":1731970440752,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731970440754,"stop":1731970441944,"duration":1190},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731970441946,"stop":1731970441948,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731970441953,"stop":1731970441953,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"725b2dcdcff8"},{"name":"thread","value":"343-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":24,"unknown":0,"total":33},"items":[{"uid":"79ffc846f529e6c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/79ffc846f529e6c9","status":"passed","time":{"start":1731964108956,"stop":1731964128816,"duration":19860}},{"uid":"49b199d12ef4c2f8","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/49b199d12ef4c2f8","status":"passed","time":{"start":1731963048072,"stop":1731963067043,"duration":18971}},{"uid":"5089cced5bd1f20f","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/5089cced5bd1f20f","status":"passed","time":{"start":1731957968250,"stop":1731957987921,"duration":19671}},{"uid":"15c17f05dfb51b1e","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/15c17f05dfb51b1e","status":"passed","time":{"start":1731954908048,"stop":1731954927860,"duration":19812}},{"uid":"9e3446e4638dd780","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/9e3446e4638dd780","status":"passed","time":{"start":1731933178504,"stop":1731933201505,"duration":23001}},{"uid":"f93edb38f5b71339","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/f93edb38f5b71339","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731922898215,"stop":1731922947318,"duration":49103}},{"uid":"10104e759f9c72b1","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/10104e759f9c72b1","status":"passed","time":{"start":1731905816407,"stop":1731905835794,"duration":19387}},{"uid":"da3a9ced7d816480","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/da3a9ced7d816480","status":"passed","time":{"start":1731714643565,"stop":1731714663668,"duration":20103}},{"uid":"50aed29dc21e462d","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/50aed29dc21e462d","status":"passed","time":{"start":1731711295359,"stop":1731711314013,"duration":18654}},{"uid":"4a802faf7cab7c31","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/4a802faf7cab7c31","status":"passed","time":{"start":1731708004945,"stop":1731708024317,"duration":19372}},{"uid":"298162b96fde9956","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/298162b96fde9956","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731707247542,"stop":1731707270810,"duration":23268}},{"uid":"6406e913dab610a4","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/6406e913dab610a4","status":"passed","time":{"start":1731695012355,"stop":1731695031991,"duration":19636}},{"uid":"1468154881fcdaad","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/1468154881fcdaad","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731689066187,"stop":1731689088189,"duration":22002}},{"uid":"fca1f3db96484674","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/fca1f3db96484674","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731624807155,"stop":1731624830669,"duration":23514}},{"uid":"c47f01799adbac61","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/c47f01799adbac61","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731622071889,"stop":1731622095391,"duration":23502}},{"uid":"3000eba297d35ef8","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/3000eba297d35ef8","status":"passed","time":{"start":1731616553542,"stop":1731616572249,"duration":18707}},{"uid":"80f2f7b5f079b5e5","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/80f2f7b5f079b5e5","status":"passed","time":{"start":1731613052174,"stop":1731613073286,"duration":21112}},{"uid":"1599727a6005eb6e","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/1599727a6005eb6e","status":"passed","time":{"start":1731610613290,"stop":1731610632033,"duration":18743}},{"uid":"84fee2f9681b04ba","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/84fee2f9681b04ba","status":"passed","time":{"start":1731543206394,"stop":1731543225301,"duration":18907}},{"uid":"31da3b2d425063ae","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/31da3b2d425063ae","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731548314488,"stop":1731548336897,"duration":22409}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"621690805f785e2e.json","parameterValues":["'rak5010'","'zephyr'"]}