{"uid":"ab27bd807d375b5c","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"03352d708656e4accf49c2f80b0063e1","time":{"start":1731923077033,"stop":1731923077033,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_rpc>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731923077036,"stop":1731923077036,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731923077037,"stop":1731923077037,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731923077037,"stop":1731923077038,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731923077038,"stop":1731923077039,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731923077038,"stop":1731923077038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731923077039,"stop":1731923077041,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731923077042,"stop":1731923077043,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731923077042,"stop":1731923077042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731923077043,"stop":1731923077587,"duration":544},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731923077588,"stop":1731923078547,"duration":959},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731923078548,"stop":1731923094852,"duration":16304},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731923094852,"stop":1731923114881,"duration":20029},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_rpc>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"1b3ad1a35ef8fa10","name":"log","source":"1b3ad1a35ef8fa10.txt","type":"text/plain","size":9859}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731923115237,"stop":1731923115264,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731923115266,"stop":1731923115636,"duration":370},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731923115638,"stop":1731923115640,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731923115645,"stop":1731923115645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"8ae40c695a32"},{"name":"thread","value":"346-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":13,"skipped":0,"passed":10,"unknown":0,"total":27},"items":[{"uid":"2f3790b2f0d632dd","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/2f3790b2f0d632dd","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731906263524,"stop":1731906286044,"duration":22520}},{"uid":"50cf6a2c71ad1cc0","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/50cf6a2c71ad1cc0","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731714727741,"stop":1731714750377,"duration":22636}},{"uid":"3ff25d859774c3f9","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/3ff25d859774c3f9","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731711287237,"stop":1731711309819,"duration":22582}},{"uid":"f3815064c47c8c20","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/f3815064c47c8c20","status":"passed","time":{"start":1731707373511,"stop":1731707383262,"duration":9751}},{"uid":"78b07474ece7dbf3","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/78b07474ece7dbf3","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731708217085,"stop":1731708239610,"duration":22525}},{"uid":"5a6e93e8d190e750","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/5a6e93e8d190e750","status":"passed","time":{"start":1731695594888,"stop":1731695606487,"duration":11599}},{"uid":"fb71ea279c4c2329","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/fb71ea279c4c2329","status":"passed","time":{"start":1731689958978,"stop":1731689972658,"duration":13680}},{"uid":"265ced04c6317e11","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/265ced04c6317e11","status":"passed","time":{"start":1731624574545,"stop":1731624587394,"duration":12849}},{"uid":"923348a43ad3ce49","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/923348a43ad3ce49","status":"passed","time":{"start":1731622785599,"stop":1731622796310,"duration":10711}},{"uid":"64673584f642bcd8","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/64673584f642bcd8","status":"passed","time":{"start":1731616344891,"stop":1731616357545,"duration":12654}},{"uid":"2585c515b7954027","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/2585c515b7954027","status":"passed","time":{"start":1731613500645,"stop":1731613513388,"duration":12743}},{"uid":"6bde702e294f582","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/6bde702e294f582","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731611034404,"stop":1731611034404,"duration":0}},{"uid":"f0d8c459c569a618","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/f0d8c459c569a618","status":"passed","time":{"start":1731597717606,"stop":1731597729377,"duration":11771}},{"uid":"d45f4b10013b2643","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/d45f4b10013b2643","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731548735818,"stop":1731548758534,"duration":22716}},{"uid":"98e5ef4e3c76453f","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/98e5ef4e3c76453f","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731566768591,"stop":1731566768591,"duration":0}},{"uid":"cc8f1e04d5f38efe","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/cc8f1e04d5f38efe","status":"passed","time":{"start":1731543184731,"stop":1731543192599,"duration":7868}},{"uid":"47b78d18c834a58","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/47b78d18c834a58","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731540209209,"stop":1731540231778,"duration":22569}},{"uid":"2903b0fb84ca4134","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/2903b0fb84ca4134","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731537597819,"stop":1731537620390,"duration":22571}},{"uid":"4e70467d26f44e31","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/4e70467d26f44e31","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731537546370,"stop":1731537546370,"duration":0}},{"uid":"fd5ebeb6afdb6d9b","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/fd5ebeb6afdb6d9b","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731523585088,"stop":1731523607819,"duration":22731}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"ab27bd807d375b5c.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}