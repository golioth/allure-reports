{"uid":"2c185219c072344b","name":"test_settings","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.settings.pytest.test_sample#test_settings","historyId":"55c411133217cd01256580dbf97484b9","time":{"start":1731934524833,"stop":1731934524833,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_settings>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731934524836,"stop":1731934524836,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731934524837,"stop":1731934524837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731934524837,"stop":1731934524837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731934524838,"stop":1731934524838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731934524838,"stop":1731934524838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731934524839,"stop":1731934524839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731934524839,"stop":1731934524840,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731934524840,"stop":1731934524842,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731934524843,"stop":1731934525309,"duration":466},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731934525310,"stop":1731934526322,"duration":1012},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731934526323,"stop":1731934543523,"duration":17200},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731934543524,"stop":1731934563553,"duration":20029},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_settings>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"f95496ed01cd763b","name":"log","source":"f95496ed01cd763b.txt","type":"text/plain","size":9870}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731934563784,"stop":1731934563820,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731934563822,"stop":1731934564200,"duration":378},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731934564202,"stop":1731934564204,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731934564206,"stop":1731934564206,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"8c6076fa486c"},{"name":"thread","value":"467-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.settings.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b0a25da7b39a8173","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731923442418,"stop":1731923442418,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":4,"skipped":0,"passed":19,"unknown":0,"total":28},"items":[{"uid":"d7dae2d8e4248225","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/d7dae2d8e4248225","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731923442418,"stop":1731923442418,"duration":0}},{"uid":"8439d17050ea2890","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/8439d17050ea2890","status":"passed","time":{"start":1731906569503,"stop":1731906579291,"duration":9788}},{"uid":"6724ea074dce9637","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/6724ea074dce9637","status":"passed","time":{"start":1731715034561,"stop":1731715043541,"duration":8980}},{"uid":"5955cd65fe8e3a95","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/5955cd65fe8e3a95","status":"passed","time":{"start":1731711603619,"stop":1731711613237,"duration":9618}},{"uid":"59402dbcc681943f","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/59402dbcc681943f","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731707721140,"stop":1731707815276,"duration":94136}},{"uid":"2f4912d7f094e6ea","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/2f4912d7f094e6ea","status":"passed","time":{"start":1731708611259,"stop":1731708623227,"duration":11968}},{"uid":"10609a38f6f714f4","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/10609a38f6f714f4","status":"passed","time":{"start":1731695898737,"stop":1731695907447,"duration":8710}},{"uid":"1657873834b8b7b9","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/1657873834b8b7b9","status":"passed","time":{"start":1731690229963,"stop":1731690240793,"duration":10830}},{"uid":"a94f9dfe2dd5333d","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/a94f9dfe2dd5333d","status":"passed","time":{"start":1731624836358,"stop":1731624846225,"duration":9867}},{"uid":"963f822eccfad043","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/963f822eccfad043","status":"passed","time":{"start":1731623033221,"stop":1731623042887,"duration":9666}},{"uid":"570275068e5f896c","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/570275068e5f896c","status":"passed","time":{"start":1731616606054,"stop":1731616616960,"duration":10906}},{"uid":"92f74e34d31c3458","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/92f74e34d31c3458","status":"passed","time":{"start":1731614354895,"stop":1731614367061,"duration":12166}},{"uid":"800fdc058de1ea31","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/800fdc058de1ea31","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731611374991,"stop":1731611374991,"duration":0}},{"uid":"a1f8c62f8e5cec76","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/a1f8c62f8e5cec76","status":"passed","time":{"start":1731598607126,"stop":1731598619038,"duration":11912}},{"uid":"c758e3ca80c94c12","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/c758e3ca80c94c12","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731549206947,"stop":1731549301024,"duration":94077}},{"uid":"6025f00572c115da","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/6025f00572c115da","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731567098779,"stop":1731567098779,"duration":0}},{"uid":"cffa1d60462ae3a6","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/cffa1d60462ae3a6","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731543550845,"stop":1731543575033,"duration":24188}},{"uid":"2e4b76803b19906","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/2e4b76803b19906","status":"passed","time":{"start":1731540522970,"stop":1731540533138,"duration":10168}},{"uid":"3c802230fa38c993","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/3c802230fa38c993","status":"passed","time":{"start":1731537994197,"stop":1731538002297,"duration":8100}},{"uid":"abf3e9b1e37513da","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/abf3e9b1e37513da","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731537857679,"stop":1731537857679,"duration":0}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"2c185219c072344b.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}