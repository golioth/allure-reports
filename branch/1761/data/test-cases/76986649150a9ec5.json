{"uid":"76986649150a9ec5","name":"test_lightdb_set","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample#test_lightdb_set","historyId":"fbdcf5b89e903e4e31b43e980f10a270","time":{"start":1731923320520,"stop":1731923320520,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_set>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731923320523,"stop":1731923320523,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731923320524,"stop":1731923320524,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731923320524,"stop":1731923320524,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731923320525,"stop":1731923320526,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731923320525,"stop":1731923320525,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731923320526,"stop":1731923320528,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731923320529,"stop":1731923320529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731923320529,"stop":1731923320530,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731923320530,"stop":1731923320939,"duration":409},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731923320940,"stop":1731923321880,"duration":940},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731923321881,"stop":1731923338160,"duration":16279},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731923338160,"stop":1731923358192,"duration":20032},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_lightdb_set>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        else:\n            hil_board = os.environ['hil_board']\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"f59d50b5425c74c","name":"log","source":"f59d50b5425c74c.txt","type":"text/plain","size":9876}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731923358435,"stop":1731923358476,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731923358477,"stop":1731923358906,"duration":429},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731923358908,"stop":1731923358910,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731923358915,"stop":1731923358915,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"8ae40c695a32"},{"name":"thread","value":"404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":7,"skipped":0,"passed":15,"unknown":0,"total":27},"items":[{"uid":"e9f7afef09825c5c","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/e9f7afef09825c5c","status":"passed","time":{"start":1731906456702,"stop":1731906478075,"duration":21373}},{"uid":"aac669eb41b8ce55","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/aac669eb41b8ce55","status":"passed","time":{"start":1731714924423,"stop":1731714944781,"duration":20358}},{"uid":"b62a57e54b0e592f","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/b62a57e54b0e592f","status":"passed","time":{"start":1731711488279,"stop":1731711513664,"duration":25385}},{"uid":"230825e6d1aadf55","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/230825e6d1aadf55","status":"failed","statusDetails":"AssertionError: assert 1 == 0","time":{"start":1731707615279,"stop":1731707632895,"duration":17616}},{"uid":"32da49d0b73be438","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/32da49d0b73be438","status":"passed","time":{"start":1731708415257,"stop":1731708435600,"duration":20343}},{"uid":"6e02a25c060c045c","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/6e02a25c060c045c","status":"passed","time":{"start":1731695782384,"stop":1731695807923,"duration":25539}},{"uid":"6fc73d3e16f60338","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/6fc73d3e16f60338","status":"passed","time":{"start":1731690104600,"stop":1731690131177,"duration":26577}},{"uid":"fbd20dd4a331d2b","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/fbd20dd4a331d2b","status":"passed","time":{"start":1731624718291,"stop":1731624740764,"duration":22473}},{"uid":"4009dea5dc7250e0","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/4009dea5dc7250e0","status":"passed","time":{"start":1731622928199,"stop":1731622948690,"duration":20491}},{"uid":"8c4d0c5bbe44eced","reportUrl":"https://golioth.github.io/allure-reports/branch/1744//#testresult/8c4d0c5bbe44eced","status":"passed","time":{"start":1731616489051,"stop":1731616509743,"duration":20692}},{"uid":"89e73dfecc28c1af","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/89e73dfecc28c1af","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731614245531,"stop":1731614268601,"duration":23070}},{"uid":"32c1f9c13406bee9","reportUrl":"https://golioth.github.io/allure-reports/branch/1742//#testresult/32c1f9c13406bee9","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731611248047,"stop":1731611248047,"duration":0}},{"uid":"a2e9a6bd15e8df40","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/a2e9a6bd15e8df40","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731598490566,"stop":1731598513785,"duration":23219}},{"uid":"e6a2dbfa124aa9b4","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/e6a2dbfa124aa9b4","status":"passed","time":{"start":1731549005108,"stop":1731549028731,"duration":23623}},{"uid":"5c98cc926691f347","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/5c98cc926691f347","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731566977442,"stop":1731566977442,"duration":0}},{"uid":"443a6d1d65cc1163","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/443a6d1d65cc1163","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731543433558,"stop":1731543456635,"duration":23077}},{"uid":"2d1d6972096311c5","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/2d1d6972096311c5","status":"passed","time":{"start":1731540410804,"stop":1731540433810,"duration":23006}},{"uid":"4022ec9d74c4d292","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/4022ec9d74c4d292","status":"passed","time":{"start":1731537799117,"stop":1731537823721,"duration":24604}},{"uid":"57e9bb0a7a7b40d7","reportUrl":"https://golioth.github.io/allure-reports/branch/1731//#testresult/57e9bb0a7a7b40d7","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1731537726556,"stop":1731537726556,"duration":0}},{"uid":"8c46cd51b2a69265","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/8c46cd51b2a69265","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1731523851322,"stop":1731523874443,"duration":23121}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"76986649150a9ec5.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}