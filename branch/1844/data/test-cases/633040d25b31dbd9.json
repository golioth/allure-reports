{"uid":"633040d25b31dbd9","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"107219ae297537605b8b92c8950f3c78","time":{"start":1732630265736,"stop":1732630281435,"duration":15699},"status":"broken","statusMessage":"AttributeError: 'ConnectError' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffba1e5150>\ndevice = <golioth.golioth.Device object at 0xffffba16a390>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'ConnectError' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732630254308,"stop":1732630254308,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732630254308,"stop":1732630254308,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732630254309,"stop":1732630254309,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732630254309,"stop":1732630254310,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732630254310,"stop":1732630254310,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732630254310,"stop":1732630254313,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732630254313,"stop":1732630254314,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732630254314,"stop":1732630255233,"duration":919},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732630254314,"stop":1732630254314,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732630255233,"stop":1732630256597,"duration":1364},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732630256599,"stop":1732630265225,"duration":8626},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732630265225,"stop":1732630265733,"duration":508},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'ConnectError' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffba1e5150>\ndevice = <golioth.golioth.Device object at 0xffffba16a390>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'ConnectError' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"8ff4fa8dab45687e","name":"log","source":"8ff4fa8dab45687e.txt","type":"text/plain","size":20930}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732630281742,"stop":1732630281985,"duration":243},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732630281986,"stop":1732630283921,"duration":1935},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732630283926,"stop":1732630283932,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732630283943,"stop":1732630283944,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"a20652f14f80"},{"name":"thread","value":"348-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":87,"unknown":0,"total":94},"items":[{"uid":"fcff0d0252d438f2","reportUrl":"https://golioth.github.io/allure-reports/branch/1841//#testresult/fcff0d0252d438f2","status":"passed","time":{"start":1732558986058,"stop":1732558995349,"duration":9291}},{"uid":"860eb0db2bd31d9","reportUrl":"https://golioth.github.io/allure-reports/branch/1841//#testresult/860eb0db2bd31d9","status":"passed","time":{"start":1732558986058,"stop":1732558995349,"duration":9291}},{"uid":"e801285ff123c4cb","reportUrl":"https://golioth.github.io/allure-reports/branch/1840//#testresult/e801285ff123c4cb","status":"passed","time":{"start":1732553789566,"stop":1732553800434,"duration":10868}},{"uid":"a153095e26a09983","reportUrl":"https://golioth.github.io/allure-reports/branch/1839//#testresult/a153095e26a09983","status":"passed","time":{"start":1732508612269,"stop":1732508621686,"duration":9417}},{"uid":"cf503200846d6d60","reportUrl":"https://golioth.github.io/allure-reports/branch/1839//#testresult/cf503200846d6d60","status":"passed","time":{"start":1732508612269,"stop":1732508621686,"duration":9417}},{"uid":"3aeb684d5a9bb9ed","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/3aeb684d5a9bb9ed","status":"passed","time":{"start":1732312553410,"stop":1732312563986,"duration":10576}},{"uid":"e13f9d9e1df8da8f","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/e13f9d9e1df8da8f","status":"passed","time":{"start":1732312553410,"stop":1732312563986,"duration":10576}},{"uid":"65dcc14cdace1f22","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/65dcc14cdace1f22","status":"passed","time":{"start":1732312553410,"stop":1732312563986,"duration":10576}},{"uid":"166f03cf3f75f580","reportUrl":"https://golioth.github.io/allure-reports/branch/1835//#testresult/166f03cf3f75f580","status":"passed","time":{"start":1732312553410,"stop":1732312563986,"duration":10576}},{"uid":"dd449ced059e9ea8","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/dd449ced059e9ea8","status":"passed","time":{"start":1732300862597,"stop":1732300871999,"duration":9402}},{"uid":"571eb893d0385c75","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/571eb893d0385c75","status":"passed","time":{"start":1732300862597,"stop":1732300871999,"duration":9402}},{"uid":"cdbbeb0f86d3316a","reportUrl":"https://golioth.github.io/allure-reports/branch/1832//#testresult/cdbbeb0f86d3316a","status":"passed","time":{"start":1732300862597,"stop":1732300871999,"duration":9402}},{"uid":"20950ce75c081bdd","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/20950ce75c081bdd","status":"passed","time":{"start":1732291358281,"stop":1732291366194,"duration":7913}},{"uid":"7c940a3bac487970","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/7c940a3bac487970","status":"passed","time":{"start":1732228377274,"stop":1732228389074,"duration":11800}},{"uid":"584c7abca4f320e7","reportUrl":"https://golioth.github.io/allure-reports/branch/1828//#testresult/584c7abca4f320e7","status":"passed","time":{"start":1732291358281,"stop":1732291366194,"duration":7913}},{"uid":"f6cfc79ce936e89","reportUrl":"https://golioth.github.io/allure-reports/branch/1818//#testresult/f6cfc79ce936e89","status":"passed","time":{"start":1732293169530,"stop":1732293179885,"duration":10355}},{"uid":"94eedc5ee2a7528a","reportUrl":"https://golioth.github.io/allure-reports/branch/1827//#testresult/94eedc5ee2a7528a","status":"passed","time":{"start":1732289141190,"stop":1732289151863,"duration":10673}},{"uid":"e5c198f1eaaa6a4a","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/e5c198f1eaaa6a4a","status":"passed","time":{"start":1732282885734,"stop":1732282895254,"duration":9520}},{"uid":"7666f211a87e8dea","reportUrl":"https://golioth.github.io/allure-reports/branch/1826//#testresult/7666f211a87e8dea","status":"passed","time":{"start":1732286563335,"stop":1732286577790,"duration":14455}},{"uid":"8bfd18153007ead7","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/8bfd18153007ead7","status":"passed","time":{"start":1732282885734,"stop":1732282895254,"duration":9520}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"633040d25b31dbd9.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}