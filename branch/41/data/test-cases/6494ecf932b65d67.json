{
  "uid" : "6494ecf932b65d67",
  "name" : "test_lightdb_set",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample#test_lightdb_set",
  "historyId" : "917f1ab1da7b7ed6820b0511f1b32b01",
  "time" : {
    "start" : 1734237177850,
    "stop" : 1734237192346,
    "duration" : 14496
  },
  "status" : "broken",
  "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7fef3b296590>\ndevice = <golioth.golioth.Device object at 0x7fef3b283650>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_lightdb_set(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            shell._device.readlines_until(regex=f\".*Setting counter to {i}\", timeout=10.0)\n>           shell._device.readlines_until(regex=f\".*Counter successfully set\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/set/pytest/test_sample.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_key",
    "time" : {
      "start" : 1734237176641,
      "stop" : 1734237176641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1734237177797,
      "stop" : 1734237177849,
      "duration" : 52
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1734237176640,
      "stop" : 1734237176640,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1734237177776,
      "stop" : 1734237177797,
      "duration" : 21
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734237176639,
      "stop" : 1734237176639,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734237176640,
      "stop" : 1734237176640,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734237176640,
      "stop" : 1734237176640,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734237177118,
      "stop" : 1734237177776,
      "duration" : 658
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734237176640,
      "stop" : 1734237176640,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1734237176640,
      "stop" : 1734237176641,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734237176641,
      "stop" : 1734237177118,
      "duration" : 477
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734237176641,
      "stop" : 1734237176641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7fef3b296590>\ndevice = <golioth.golioth.Device object at 0x7fef3b283650>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_lightdb_set(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            shell._device.readlines_until(regex=f\".*Setting counter to {i}\", timeout=10.0)\n>           shell._device.readlines_until(regex=f\".*Counter successfully set\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/set/pytest/test_sample.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "adb1280bd2024249",
      "name" : "log",
      "source" : "adb1280bd2024249.txt",
      "type" : "text/plain",
      "size" : 17493
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "dut::0",
    "time" : {
      "start" : 1734237192492,
      "stop" : 1734237192492,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1734237192493,
      "stop" : 1734237193030,
      "duration" : 537
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1734237193032,
      "stop" : 1734237193032,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1734237193031,
      "stop" : 1734237193031,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "native_sim_64"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.native_sim_64"
  }, {
    "name" : "tag",
    "value" : "GitHub Actions 42"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "47deb63c7c0f"
  }, {
    "name" : "thread",
    "value" : "70423-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'native_sim_64'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 22,
        "unknown" : 0,
        "total" : 23
      },
      "items" : [ {
        "uid" : "27c2199979c161f5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1931/#testresult/27c2199979c161f5",
        "status" : "passed",
        "time" : {
          "start" : 1734126163174,
          "stop" : 1734126184564,
          "duration" : 21390
        }
      }, {
        "uid" : "6ee4b6131bf39add",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1928/#testresult/6ee4b6131bf39add",
        "status" : "passed",
        "time" : {
          "start" : 1734043756003,
          "stop" : 1734043776254,
          "duration" : 20251
        }
      }, {
        "uid" : "78c29a7d4bd1282",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1927/#testresult/78c29a7d4bd1282",
        "status" : "passed",
        "time" : {
          "start" : 1734042798654,
          "stop" : 1734042819192,
          "duration" : 20538
        }
      }, {
        "uid" : "74d9668b93b53fe6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1921/#testresult/74d9668b93b53fe6",
        "status" : "passed",
        "time" : {
          "start" : 1734022602403,
          "stop" : 1734022622923,
          "duration" : 20520
        }
      }, {
        "uid" : "b31c258d65fc4c9e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/b31c258d65fc4c9e",
        "status" : "passed",
        "time" : {
          "start" : 1734017291166,
          "stop" : 1734017312779,
          "duration" : 21613
        }
      }, {
        "uid" : "4f1d95c395578269",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/4f1d95c395578269",
        "status" : "passed",
        "time" : {
          "start" : 1734017086989,
          "stop" : 1734017108684,
          "duration" : 21695
        }
      }, {
        "uid" : "c94893b88a0cc8e1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/c94893b88a0cc8e1",
        "status" : "passed",
        "time" : {
          "start" : 1733937207359,
          "stop" : 1733937227913,
          "duration" : 20554
        }
      }, {
        "uid" : "d0f6551a86c60c78",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/d0f6551a86c60c78",
        "status" : "passed",
        "time" : {
          "start" : 1733958210803,
          "stop" : 1733958231222,
          "duration" : 20419
        }
      }, {
        "uid" : "f6637e985f39e35",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/f6637e985f39e35",
        "status" : "passed",
        "time" : {
          "start" : 1733946597840,
          "stop" : 1733946618447,
          "duration" : 20607
        }
      }, {
        "uid" : "6f94c85a523c4963",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1900/#testresult/6f94c85a523c4963",
        "status" : "passed",
        "time" : {
          "start" : 1733937572693,
          "stop" : 1733937593311,
          "duration" : 20618
        }
      }, {
        "uid" : "97e6f59b37266afd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1899/#testresult/97e6f59b37266afd",
        "status" : "passed",
        "time" : {
          "start" : 1733937470023,
          "stop" : 1733937490324,
          "duration" : 20301
        }
      }, {
        "uid" : "8222fd3340023c45",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1898/#testresult/8222fd3340023c45",
        "status" : "passed",
        "time" : {
          "start" : 1733937229855,
          "stop" : 1733937251645,
          "duration" : 21790
        }
      }, {
        "uid" : "c4cff4ae3a1f70a9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/c4cff4ae3a1f70a9",
        "status" : "passed",
        "time" : {
          "start" : 1733937207359,
          "stop" : 1733937227913,
          "duration" : 20554
        }
      }, {
        "uid" : "c6d1245d565967b0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/c6d1245d565967b0",
        "status" : "passed",
        "time" : {
          "start" : 1733884607052,
          "stop" : 1733884628497,
          "duration" : 21445
        }
      }, {
        "uid" : "4021d662282d7d4c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/4021d662282d7d4c",
        "status" : "passed",
        "time" : {
          "start" : 1733884346856,
          "stop" : 1733884367508,
          "duration" : 20652
        }
      }, {
        "uid" : "5e87601ecd66024a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/5e87601ecd66024a",
        "status" : "passed",
        "time" : {
          "start" : 1733884607052,
          "stop" : 1733884628497,
          "duration" : 21445
        }
      }, {
        "uid" : "207c5b8769042d80",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/207c5b8769042d80",
        "status" : "passed",
        "time" : {
          "start" : 1733884346856,
          "stop" : 1733884367508,
          "duration" : 20652
        }
      }, {
        "uid" : "c7898479977e5113",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1892/#testresult/c7898479977e5113",
        "status" : "passed",
        "time" : {
          "start" : 1733871850926,
          "stop" : 1733871871361,
          "duration" : 20435
        }
      }, {
        "uid" : "ed59f2795129ade9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1893/#testresult/ed59f2795129ade9",
        "status" : "passed",
        "time" : {
          "start" : 1733871868146,
          "stop" : 1733871889486,
          "duration" : 21340
        }
      }, {
        "uid" : "7af0465ced412533",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1887/#testresult/7af0465ced412533",
        "status" : "passed",
        "time" : {
          "start" : 1733861076393,
          "stop" : 1733861098181,
          "duration" : 21788
        }
      } ]
    },
    "tags" : [ "native_sim_64", "anyio", "GitHub Actions 42", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "6494ecf932b65d67.json",
  "parameterValues" : [ "'native_sim_64'", "'zephyr'" ]
}