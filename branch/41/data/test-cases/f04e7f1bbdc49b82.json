{
  "uid" : "f04e7f1bbdc49b82",
  "name" : "test_lightdb_get",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample#test_lightdb_get",
  "historyId" : "1248e936e6823218f43c51a0258045c3",
  "time" : {
    "start" : 1734237107846,
    "stop" : 1734237117520,
    "duration" : 9674
  },
  "status" : "broken",
  "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7f425c996a50>\ndevice = <golioth.golioth.Device object at 0x7f425c97bd90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_lightdb_get(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb reads\n    \n>       shell._device.readlines_until(regex=\".*Failed to get counter \\(async\\): 0\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/get/pytest/test_sample.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "device_name",
    "time" : {
      "start" : 1734237106869,
      "stop" : 1734237106869,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1734237106870,
      "stop" : 1734237106870,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1734237107766,
      "stop" : 1734237107797,
      "duration" : 31
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734237106871,
      "stop" : 1734237106871,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1734237106870,
      "stop" : 1734237106870,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734237106869,
      "stop" : 1734237106869,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1734237107797,
      "stop" : 1734237107845,
      "duration" : 48
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734237106869,
      "stop" : 1734237106869,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734237106871,
      "stop" : 1734237106871,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734237106869,
      "stop" : 1734237106869,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734237107168,
      "stop" : 1734237107766,
      "duration" : 598
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734237106871,
      "stop" : 1734237107168,
      "duration" : 297
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7f425c996a50>\ndevice = <golioth.golioth.Device object at 0x7f425c97bd90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_lightdb_get(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb reads\n    \n>       shell._device.readlines_until(regex=\".*Failed to get counter \\(async\\): 0\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/get/pytest/test_sample.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2815bd25a40803f9",
      "name" : "log",
      "source" : "2815bd25a40803f9.txt",
      "type" : "text/plain",
      "size" : 14883
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device_object::0",
    "time" : {
      "start" : 1734237117701,
      "stop" : 1734237117701,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1734237117583,
      "stop" : 1734237117584,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1734237117584,
      "stop" : 1734237117698,
      "duration" : 114
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1734237117699,
      "stop" : 1734237117700,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "native_sim_32"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.native_sim_32"
  }, {
    "name" : "tag",
    "value" : "GitHub Actions 51"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "88d3b7b5bd4f"
  }, {
    "name" : "thread",
    "value" : "70366-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.get.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'native_sim_32'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 22,
        "unknown" : 0,
        "total" : 23
      },
      "items" : [ {
        "uid" : "8c56cd9ec5dbc974",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1931/#testresult/8c56cd9ec5dbc974",
        "status" : "passed",
        "time" : {
          "start" : 1734126170523,
          "stop" : 1734126195797,
          "duration" : 25274
        }
      }, {
        "uid" : "a343189ccec75491",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1928/#testresult/a343189ccec75491",
        "status" : "passed",
        "time" : {
          "start" : 1734043754781,
          "stop" : 1734043780076,
          "duration" : 25295
        }
      }, {
        "uid" : "ad96bcca25288488",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1927/#testresult/ad96bcca25288488",
        "status" : "passed",
        "time" : {
          "start" : 1734042798546,
          "stop" : 1734042823908,
          "duration" : 25362
        }
      }, {
        "uid" : "821afbea31e2e04c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1921/#testresult/821afbea31e2e04c",
        "status" : "passed",
        "time" : {
          "start" : 1734022608568,
          "stop" : 1734022633861,
          "duration" : 25293
        }
      }, {
        "uid" : "e85c84c025335e39",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/e85c84c025335e39",
        "status" : "passed",
        "time" : {
          "start" : 1734017299517,
          "stop" : 1734017324710,
          "duration" : 25193
        }
      }, {
        "uid" : "3fdf44c56d4507e1",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/3fdf44c56d4507e1",
        "status" : "passed",
        "time" : {
          "start" : 1734017080909,
          "stop" : 1734017106198,
          "duration" : 25289
        }
      }, {
        "uid" : "4bca239ab5828a8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/4bca239ab5828a8",
        "status" : "passed",
        "time" : {
          "start" : 1733937181636,
          "stop" : 1733937206881,
          "duration" : 25245
        }
      }, {
        "uid" : "c975a8faf403ea38",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/c975a8faf403ea38",
        "status" : "passed",
        "time" : {
          "start" : 1733958206976,
          "stop" : 1733958232207,
          "duration" : 25231
        }
      }, {
        "uid" : "1aa6bc87d26f0e77",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/1aa6bc87d26f0e77",
        "status" : "passed",
        "time" : {
          "start" : 1733946581940,
          "stop" : 1733946607309,
          "duration" : 25369
        }
      }, {
        "uid" : "9039692cc3d56679",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1900/#testresult/9039692cc3d56679",
        "status" : "passed",
        "time" : {
          "start" : 1733937580795,
          "stop" : 1733937606178,
          "duration" : 25383
        }
      }, {
        "uid" : "1007bf5930621f06",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1899/#testresult/1007bf5930621f06",
        "status" : "passed",
        "time" : {
          "start" : 1733937473349,
          "stop" : 1733937498480,
          "duration" : 25131
        }
      }, {
        "uid" : "c39f855b9cd96805",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1898/#testresult/c39f855b9cd96805",
        "status" : "passed",
        "time" : {
          "start" : 1733937216864,
          "stop" : 1733937242193,
          "duration" : 25329
        }
      }, {
        "uid" : "c3c7147e002ec110",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/c3c7147e002ec110",
        "status" : "passed",
        "time" : {
          "start" : 1733937181636,
          "stop" : 1733937206881,
          "duration" : 25245
        }
      }, {
        "uid" : "e4fdedb6cdfd4c0f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/e4fdedb6cdfd4c0f",
        "status" : "passed",
        "time" : {
          "start" : 1733884601433,
          "stop" : 1733884626832,
          "duration" : 25399
        }
      }, {
        "uid" : "35b33956d4db653e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/35b33956d4db653e",
        "status" : "passed",
        "time" : {
          "start" : 1733884340268,
          "stop" : 1733884365744,
          "duration" : 25476
        }
      }, {
        "uid" : "b3a5571c1d664de2",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/b3a5571c1d664de2",
        "status" : "passed",
        "time" : {
          "start" : 1733884601433,
          "stop" : 1733884626832,
          "duration" : 25399
        }
      }, {
        "uid" : "9504da4c6ae4f23f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/9504da4c6ae4f23f",
        "status" : "passed",
        "time" : {
          "start" : 1733884340268,
          "stop" : 1733884365744,
          "duration" : 25476
        }
      }, {
        "uid" : "e79de0db114a0845",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1892/#testresult/e79de0db114a0845",
        "status" : "passed",
        "time" : {
          "start" : 1733871848925,
          "stop" : 1733871874260,
          "duration" : 25335
        }
      }, {
        "uid" : "78b053ca2598b896",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1893/#testresult/78b053ca2598b896",
        "status" : "passed",
        "time" : {
          "start" : 1733871851243,
          "stop" : 1733871876674,
          "duration" : 25431
        }
      }, {
        "uid" : "8435365d587b9445",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1887/#testresult/8435365d587b9445",
        "status" : "passed",
        "time" : {
          "start" : 1733861067076,
          "stop" : 1733861092328,
          "duration" : 25252
        }
      } ]
    },
    "tags" : [ "anyio", "native_sim_32", "GitHub Actions 51", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "f04e7f1bbdc49b82.json",
  "parameterValues" : [ "'native_sim_32'", "'zephyr'" ]
}