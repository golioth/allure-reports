{
  "uid" : "4bc42acfd315823a",
  "name" : "test_lightdb_set",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample#test_lightdb_set",
  "historyId" : "e4e99682e260cce73d6b711077caaa5b",
  "time" : {
    "start" : 1734237110875,
    "stop" : 1734237121996,
    "duration" : 11121
  },
  "status" : "broken",
  "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7f4c9eb92450>\ndevice = <golioth.golioth.Device object at 0x7f4c9eb7b650>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_lightdb_set(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            shell._device.readlines_until(regex=f\".*Setting counter to {i}\", timeout=10.0)\n>           shell._device.readlines_until(regex=f\".*Counter successfully set\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/set/pytest/test_sample.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "device_name",
    "time" : {
      "start" : 1734237109739,
      "stop" : 1734237109739,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734237109741,
      "stop" : 1734237110125,
      "duration" : 384
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1734237110804,
      "stop" : 1734237110829,
      "duration" : 25
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734237109739,
      "stop" : 1734237109739,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1734237109739,
      "stop" : 1734237109739,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734237110125,
      "stop" : 1734237110804,
      "duration" : 679
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1734237110829,
      "stop" : 1734237110875,
      "duration" : 46
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734237109739,
      "stop" : 1734237109739,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734237109741,
      "stop" : 1734237109741,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734237109741,
      "stop" : 1734237109741,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1734237109739,
      "stop" : 1734237109741,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734237109739,
      "stop" : 1734237109739,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7f4c9eb92450>\ndevice = <golioth.golioth.Device object at 0x7f4c9eb7b650>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_lightdb_set(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            shell._device.readlines_until(regex=f\".*Setting counter to {i}\", timeout=10.0)\n>           shell._device.readlines_until(regex=f\".*Counter successfully set\", timeout=10.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/set/pytest/test_sample.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:179: in readlines_until\n    line = self.readline(0.1, print_output)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = NativeSimulatorAdapter(), timeout = 0.1, print_output = True\n\n    def readline(self, timeout: float | None = None, print_output: bool = True) -> str:\n        \"\"\"\n        Read line from device output. If timeout is not provided, then use\n        base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if self.is_device_connected() or not self._device_read_queue.empty():\n            data = self._read_from_queue(timeout)\n        else:\n            msg = 'No connection to the device and no more data to read.'\n            logger.error(msg)\n>           raise TwisterHarnessException('No connection to the device and no more data to read.')\nE           twister_harness.exceptions.TwisterHarnessException: No connection to the device and no more data to read.\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:146: TwisterHarnessException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8a42d0903f265ec7",
      "name" : "log",
      "source" : "8a42d0903f265ec7.txt",
      "type" : "text/plain",
      "size" : 17308
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1734237122445,
      "stop" : 1734237122446,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1734237122198,
      "stop" : 1734237122208,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1734237122209,
      "stop" : 1734237122445,
      "duration" : 236
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1734237122447,
      "stop" : 1734237122447,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "native_sim_32"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.native_sim_32"
  }, {
    "name" : "tag",
    "value" : "GitHub Actions 51"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "88d3b7b5bd4f"
  }, {
    "name" : "thread",
    "value" : "70784-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'native_sim_32'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 22,
        "unknown" : 0,
        "total" : 23
      },
      "items" : [ {
        "uid" : "df9544a8ce8b70ed",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1931/#testresult/df9544a8ce8b70ed",
        "status" : "passed",
        "time" : {
          "start" : 1734126172722,
          "stop" : 1734126193115,
          "duration" : 20393
        }
      }, {
        "uid" : "c8ddce8472de3ad4",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1928/#testresult/c8ddce8472de3ad4",
        "status" : "passed",
        "time" : {
          "start" : 1734043756013,
          "stop" : 1734043777580,
          "duration" : 21567
        }
      }, {
        "uid" : "6834c4b9e77e2045",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1927/#testresult/6834c4b9e77e2045",
        "status" : "passed",
        "time" : {
          "start" : 1734042800332,
          "stop" : 1734042820823,
          "duration" : 20491
        }
      }, {
        "uid" : "81c4f1fd49c2e267",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1921/#testresult/81c4f1fd49c2e267",
        "status" : "passed",
        "time" : {
          "start" : 1734022609968,
          "stop" : 1734022630441,
          "duration" : 20473
        }
      }, {
        "uid" : "add0b9519d5fd561",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1914/#testresult/add0b9519d5fd561",
        "status" : "passed",
        "time" : {
          "start" : 1734017301633,
          "stop" : 1734017321900,
          "duration" : 20267
        }
      }, {
        "uid" : "264f9eb349426993",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1913/#testresult/264f9eb349426993",
        "status" : "passed",
        "time" : {
          "start" : 1734017092052,
          "stop" : 1734017112489,
          "duration" : 20437
        }
      }, {
        "uid" : "664252169f2888c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/664252169f2888c",
        "status" : "passed",
        "time" : {
          "start" : 1733937182887,
          "stop" : 1733937204407,
          "duration" : 21520
        }
      }, {
        "uid" : "aaefc327a9fbb83b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1908/#testresult/aaefc327a9fbb83b",
        "status" : "passed",
        "time" : {
          "start" : 1733958206985,
          "stop" : 1733958228480,
          "duration" : 21495
        }
      }, {
        "uid" : "916a81e676f931eb",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1907/#testresult/916a81e676f931eb",
        "status" : "passed",
        "time" : {
          "start" : 1733946581872,
          "stop" : 1733946602586,
          "duration" : 20714
        }
      }, {
        "uid" : "5954b7d6a774149e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1900/#testresult/5954b7d6a774149e",
        "status" : "passed",
        "time" : {
          "start" : 1733937579885,
          "stop" : 1733937600385,
          "duration" : 20500
        }
      }, {
        "uid" : "888c22c18ab74d6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1899/#testresult/888c22c18ab74d6",
        "status" : "passed",
        "time" : {
          "start" : 1733937473783,
          "stop" : 1733937495110,
          "duration" : 21327
        }
      }, {
        "uid" : "26aea258facc157",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1898/#testresult/26aea258facc157",
        "status" : "passed",
        "time" : {
          "start" : 1733937217595,
          "stop" : 1733937239142,
          "duration" : 21547
        }
      }, {
        "uid" : "90562c4d902c3e37",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1897/#testresult/90562c4d902c3e37",
        "status" : "passed",
        "time" : {
          "start" : 1733937182887,
          "stop" : 1733937204407,
          "duration" : 21520
        }
      }, {
        "uid" : "6992d006061bb0a8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/6992d006061bb0a8",
        "status" : "passed",
        "time" : {
          "start" : 1733884603976,
          "stop" : 1733884624602,
          "duration" : 20626
        }
      }, {
        "uid" : "1812c95b9e0bdc88",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/1812c95b9e0bdc88",
        "status" : "passed",
        "time" : {
          "start" : 1733884340285,
          "stop" : 1733884360790,
          "duration" : 20505
        }
      }, {
        "uid" : "a647448c285f8924",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1896/#testresult/a647448c285f8924",
        "status" : "passed",
        "time" : {
          "start" : 1733884603976,
          "stop" : 1733884624602,
          "duration" : 20626
        }
      }, {
        "uid" : "2d8673e261d948f5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1895/#testresult/2d8673e261d948f5",
        "status" : "passed",
        "time" : {
          "start" : 1733884340285,
          "stop" : 1733884360790,
          "duration" : 20505
        }
      }, {
        "uid" : "fe00baa2ae01f084",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1892/#testresult/fe00baa2ae01f084",
        "status" : "passed",
        "time" : {
          "start" : 1733871848158,
          "stop" : 1733871868567,
          "duration" : 20409
        }
      }, {
        "uid" : "c9f0a3401e90d08",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1893/#testresult/c9f0a3401e90d08",
        "status" : "passed",
        "time" : {
          "start" : 1733871853161,
          "stop" : 1733871873751,
          "duration" : 20590
        }
      }, {
        "uid" : "cb4db8a255f999f5",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1887/#testresult/cb4db8a255f999f5",
        "status" : "passed",
        "time" : {
          "start" : 1733861070691,
          "stop" : 1733861091188,
          "duration" : 20497
        }
      } ]
    },
    "tags" : [ "anyio", "native_sim_32", "GitHub Actions 51", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "4bc42acfd315823a.json",
  "parameterValues" : [ "'native_sim_32'", "'zephyr'" ]
}