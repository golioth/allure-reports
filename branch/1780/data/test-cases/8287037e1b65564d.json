{"uid":"8287037e1b65564d","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1732032170356,"stop":1732032194313,"duration":23957},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff803fb410>\ndevice = <golioth.golioth.Device object at 0xffff805e2190>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732032154118,"stop":1732032154118,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732032154119,"stop":1732032154119,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732032154120,"stop":1732032154120,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732032154120,"stop":1732032154120,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732032154121,"stop":1732032154123,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732032154121,"stop":1732032154121,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732032154124,"stop":1732032154124,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732032154125,"stop":1732032154682,"duration":557},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732032154125,"stop":1732032154125,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732032154683,"stop":1732032155564,"duration":881},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732032155565,"stop":1732032169713,"duration":14148},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732032169713,"stop":1732032170353,"duration":640},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff803fb410>\ndevice = <golioth.golioth.Device object at 0xffff805e2190>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"7cc0e4c32ebfb7e9","name":"log","source":"7cc0e4c32ebfb7e9.txt","type":"text/plain","size":28016}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732032194614,"stop":1732032194664,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732032194665,"stop":1732032195169,"duration":504},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732032195171,"stop":1732032195174,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732032195178,"stop":1732032195179,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"550b3717427d"},{"name":"thread","value":"347-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":28,"unknown":0,"total":38},"items":[{"uid":"f0a6cfa9f534071e","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/f0a6cfa9f534071e","status":"passed","time":{"start":1732014654370,"stop":1732014673816,"duration":19446}},{"uid":"736d97671e29540f","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/736d97671e29540f","status":"passed","time":{"start":1732014654370,"stop":1732014673816,"duration":19446}},{"uid":"2cb5550ed3a0503","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/2cb5550ed3a0503","status":"passed","time":{"start":1732014654370,"stop":1732014673816,"duration":19446}},{"uid":"2e9b8f0b57f0644c","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/2e9b8f0b57f0644c","status":"passed","time":{"start":1732001385909,"stop":1732001409449,"duration":23540}},{"uid":"621690805f785e2e","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/621690805f785e2e","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731970416291,"stop":1731970440458,"duration":24167}},{"uid":"79ffc846f529e6c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/79ffc846f529e6c9","status":"passed","time":{"start":1731964108956,"stop":1731964128816,"duration":19860}},{"uid":"49b199d12ef4c2f8","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/49b199d12ef4c2f8","status":"passed","time":{"start":1731963048072,"stop":1731963067043,"duration":18971}},{"uid":"5089cced5bd1f20f","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/5089cced5bd1f20f","status":"passed","time":{"start":1731957968250,"stop":1731957987921,"duration":19671}},{"uid":"15c17f05dfb51b1e","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/15c17f05dfb51b1e","status":"passed","time":{"start":1731954908048,"stop":1731954927860,"duration":19812}},{"uid":"9e3446e4638dd780","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/9e3446e4638dd780","status":"passed","time":{"start":1731933178504,"stop":1731933201505,"duration":23001}},{"uid":"f93edb38f5b71339","reportUrl":"https://golioth.github.io/allure-reports/branch/1761//#testresult/f93edb38f5b71339","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731922898215,"stop":1731922947318,"duration":49103}},{"uid":"10104e759f9c72b1","reportUrl":"https://golioth.github.io/allure-reports/branch/1760//#testresult/10104e759f9c72b1","status":"passed","time":{"start":1731905816407,"stop":1731905835794,"duration":19387}},{"uid":"da3a9ced7d816480","reportUrl":"https://golioth.github.io/allure-reports/branch/1756//#testresult/da3a9ced7d816480","status":"passed","time":{"start":1731714643565,"stop":1731714663668,"duration":20103}},{"uid":"50aed29dc21e462d","reportUrl":"https://golioth.github.io/allure-reports/branch/1755//#testresult/50aed29dc21e462d","status":"passed","time":{"start":1731711295359,"stop":1731711314013,"duration":18654}},{"uid":"4a802faf7cab7c31","reportUrl":"https://golioth.github.io/allure-reports/branch/1753//#testresult/4a802faf7cab7c31","status":"passed","time":{"start":1731708004945,"stop":1731708024317,"duration":19372}},{"uid":"298162b96fde9956","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/298162b96fde9956","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731707247542,"stop":1731707270810,"duration":23268}},{"uid":"6406e913dab610a4","reportUrl":"https://golioth.github.io/allure-reports/branch/1749//#testresult/6406e913dab610a4","status":"passed","time":{"start":1731695012355,"stop":1731695031991,"duration":19636}},{"uid":"1468154881fcdaad","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/1468154881fcdaad","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731689066187,"stop":1731689088189,"duration":22002}},{"uid":"fca1f3db96484674","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/fca1f3db96484674","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731624807155,"stop":1731624830669,"duration":23514}},{"uid":"c47f01799adbac61","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/c47f01799adbac61","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731622071889,"stop":1731622095391,"duration":23502}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"8287037e1b65564d.json","parameterValues":["'rak5010'","'zephyr'"]}