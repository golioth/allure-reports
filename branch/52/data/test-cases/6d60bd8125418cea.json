{"uid":"6d60bd8125418cea","name":"test_int_return","fullName":"tests.hil.tests.rpc.test_rpc#test_int_return","historyId":"144279241e7c8c85c59394f6c4c23368","time":{"start":1736585346872,"stop":1736585352328,"duration":5456},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffb1d39310>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffb1d6f310>\ndevice = <golioth.golioth.Device object at 0xffffb1da0f90>\n\n    async def test_int_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"int\")\n\ntests/hil/tests/rpc/test_rpc.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffb1d39310>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1736585322080,"stop":1736585322081,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1736585322081,"stop":1736585322082,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1736585322082,"stop":1736585322082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1736585322083,"stop":1736585322083,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736585322084,"stop":1736585322084,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736585322085,"stop":1736585322085,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1736585322086,"stop":1736585322086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1736585322087,"stop":1736585322087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1736585322088,"stop":1736585322088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736585322089,"stop":1736585322089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736585322089,"stop":1736585322089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736585322090,"stop":1736585322831,"duration":741},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736585322090,"stop":1736585322090,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1736585322831,"stop":1736585337455,"duration":14624},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736585337457,"stop":1736585338450,"duration":993},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736585338451,"stop":1736585341680,"duration":3229},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1736585413691,"stop":1736585413691,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1736585413693,"stop":1736585414147,"duration":454},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1736585414151,"stop":1736585414153,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736585414157,"stop":1736585414162,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"f0660e2fc5e1"},{"name":"thread","value":"232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":39,"unknown":0,"total":42},"items":[{"uid":"fa3230a0523b8894","reportUrl":"https://golioth.github.io/allure-reports/branch/51//#testresult/fa3230a0523b8894","status":"passed","time":{"start":1736579565591,"stop":1736579566509,"duration":918}},{"uid":"a1d0554be25bee6","reportUrl":"https://golioth.github.io/allure-reports/branch/47//#testresult/a1d0554be25bee6","status":"passed","time":{"start":1736529566418,"stop":1736529567481,"duration":1063}},{"uid":"e524ce005efba4c9","reportUrl":"https://golioth.github.io/allure-reports/branch/46//#testresult/e524ce005efba4c9","status":"passed","time":{"start":1736524790316,"stop":1736524791293,"duration":977}},{"uid":"82e7118c9e02d61b","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/82e7118c9e02d61b","status":"passed","time":{"start":1736454042819,"stop":1736454043702,"duration":883}},{"uid":"ef46d0ed36245f60","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/ef46d0ed36245f60","status":"passed","time":{"start":1736439620363,"stop":1736439621608,"duration":1245}},{"uid":"78c57fb3d604038a","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/78c57fb3d604038a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736445243313,"stop":1736445243313,"duration":0}},{"uid":"a666aff8f3380cbf","reportUrl":"https://golioth.github.io/allure-reports/branch/42//#testresult/a666aff8f3380cbf","status":"passed","time":{"start":1736439620363,"stop":1736439621608,"duration":1245}},{"uid":"666f3c9f73e81dea","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/666f3c9f73e81dea","status":"passed","time":{"start":1736432175877,"stop":1736432176900,"duration":1023}},{"uid":"56dd633e128489c2","reportUrl":"https://golioth.github.io/allure-reports/branch/39//#testresult/56dd633e128489c2","status":"passed","time":{"start":1736432175877,"stop":1736432176900,"duration":1023}},{"uid":"6ab91863d0706b9c","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/6ab91863d0706b9c","status":"passed","time":{"start":1736279142390,"stop":1736279143333,"duration":943}},{"uid":"1a286a0ea476ef50","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/1a286a0ea476ef50","status":"passed","time":{"start":1736279142390,"stop":1736279143333,"duration":943}},{"uid":"44a5eb7d743b0ed","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/44a5eb7d743b0ed","status":"passed","time":{"start":1736282942071,"stop":1736282943125,"duration":1054}},{"uid":"a747bb673dc4f65d","reportUrl":"https://golioth.github.io/allure-reports/branch/5/#testresult/a747bb673dc4f65d","status":"passed","time":{"start":1736355213243,"stop":1736355214549,"duration":1306}},{"uid":"1e047321bb734672","reportUrl":"https://golioth.github.io/allure-reports/branch/4/#testresult/1e047321bb734672","status":"passed","time":{"start":1736351548592,"stop":1736351549527,"duration":935}},{"uid":"2c40e8550a5139be","reportUrl":"https://golioth.github.io/allure-reports/branch/29/#testresult/2c40e8550a5139be","status":"passed","time":{"start":1736359289607,"stop":1736359290843,"duration":1236}},{"uid":"18b5e6317badc6f1","reportUrl":"https://golioth.github.io/allure-reports/branch/27/#testresult/18b5e6317badc6f1","status":"passed","time":{"start":1736282942071,"stop":1736282943125,"duration":1054}},{"uid":"c5a11b30e717e05","reportUrl":"https://golioth.github.io/allure-reports/branch/26/#testresult/c5a11b30e717e05","status":"passed","time":{"start":1736279142390,"stop":1736279143333,"duration":943}},{"uid":"1d2ff7a343d02120","reportUrl":"https://golioth.github.io/allure-reports/branch/25//#testresult/1d2ff7a343d02120","status":"passed","time":{"start":1736273273812,"stop":1736273274824,"duration":1012}},{"uid":"8198e3fda25a3fc4","reportUrl":"https://golioth.github.io/allure-reports/branch/24/#testresult/8198e3fda25a3fc4","status":"passed","time":{"start":1736268488133,"stop":1736268488896,"duration":763}},{"uid":"389e48283dd01b48","reportUrl":"https://golioth.github.io/allure-reports/branch/1/#testresult/389e48283dd01b48","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736223364769,"stop":1736223364769,"duration":0}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"6d60bd8125418cea.json","parameterValues":["'nrf9160dk'","'zephyr'"]}