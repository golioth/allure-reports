{
  "uid" : "e6a1b17aacc94758",
  "name" : "test_block_upload",
  "fullName" : "tests.hil.tests.stream.test_stream#test_block_upload",
  "historyId" : "a2936f759ec0e04053acbd5c07475161",
  "time" : {
    "start" : 1736350247468,
    "stop" : 1736350267476,
    "duration" : 20008
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 64638.89398124631\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa31a2210>\ndevice = <golioth.golioth.Device object at 0xffffa315fd10>\n\n    async def test_block_upload(board, device):\n>       assert None != await board.wait_for_regex_in_line('Block upload successful', timeout_s=20)\n\ntests/hil/tests/stream/test_stream.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 64638.89398124631\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "fw_image",
    "time" : {
      "start" : 1736350191847,
      "stop" : 1736350191848,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1736350244072,
      "stop" : 1736350247459,
      "duration" : 3387
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736350191846,
      "stop" : 1736350191846,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1736350191846,
      "stop" : 1736350191846,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1736350191843,
      "stop" : 1736350191843,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736350191850,
      "stop" : 1736350191850,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1736350191850,
      "stop" : 1736350242566,
      "duration" : 50716
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736350191842,
      "stop" : 1736350191842,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736350242568,
      "stop" : 1736350243125,
      "duration" : 557
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1736350191844,
      "stop" : 1736350191845,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736350191849,
      "stop" : 1736350191849,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1736350191848,
      "stop" : 1736350191849,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1736350191848,
      "stop" : 1736350191848,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736350191847,
      "stop" : 1736350191847,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736350243126,
      "stop" : 1736350244072,
      "duration" : 946
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736350191849,
      "stop" : 1736350191849,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 64638.89398124631\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa31a2210>\ndevice = <golioth.golioth.Device object at 0xffffa315fd10>\n\n    async def test_block_upload(board, device):\n>       assert None != await board.wait_for_regex_in_line('Block upload successful', timeout_s=20)\n\ntests/hil/tests/stream/test_stream.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 64638.89398124631\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "509132005bfd2469",
      "name" : "stdout",
      "source" : "509132005bfd2469.txt",
      "type" : "text/plain",
      "size" : 17176
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "setup::0",
    "time" : {
      "start" : 1736350268102,
      "stop" : 1736350268102,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1736350268523,
      "stop" : 1736350268533,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1736350268521,
      "stop" : 1736350268521,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1736350268104,
      "stop" : 1736350268518,
      "duration" : 414
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "hil.esp-idf.esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "jons_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_stream"
  }, {
    "name" : "host",
    "value" : "7d4108177772"
  }, {
    "name" : "thread",
    "value" : "274-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.stream.test_stream"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32c3_devkitm_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 26,
        "unknown" : 0,
        "total" : 28
      },
      "items" : [ {
        "uid" : "94d1170c94b6bd5f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/29/#testresult/94d1170c94b6bd5f",
        "status" : "passed",
        "time" : {
          "start" : 1736355685079,
          "stop" : 1736355693258,
          "duration" : 8179
        }
      }, {
        "uid" : "f63d1e3a69023e95",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/27/#testresult/f63d1e3a69023e95",
        "status" : "passed",
        "time" : {
          "start" : 1736280830370,
          "stop" : 1736280839226,
          "duration" : 8856
        }
      }, {
        "uid" : "6b2b7a664884348e",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/26/#testresult/6b2b7a664884348e",
        "status" : "passed",
        "time" : {
          "start" : 1736279298717,
          "stop" : 1736279307970,
          "duration" : 9253
        }
      }, {
        "uid" : "13ebc50f267637c7",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/25//#testresult/13ebc50f267637c7",
        "status" : "passed",
        "time" : {
          "start" : 1736271377983,
          "stop" : 1736271387075,
          "duration" : 9092
        }
      }, {
        "uid" : "8b179f23192f9e64",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/24/#testresult/8b179f23192f9e64",
        "status" : "passed",
        "time" : {
          "start" : 1736265089771,
          "stop" : 1736265097846,
          "duration" : 8075
        }
      }, {
        "uid" : "b630de7c19efae0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1/#testresult/b630de7c19efae0",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1736222044809,
          "stop" : 1736222044809,
          "duration" : 0
        }
      }, {
        "uid" : "1015c44da2dcea29",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/1015c44da2dcea29",
        "status" : "passed",
        "time" : {
          "start" : 1736205388582,
          "stop" : 1736205397445,
          "duration" : 8863
        }
      }, {
        "uid" : "e471a7caf8e3b269",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/e471a7caf8e3b269",
        "status" : "passed",
        "time" : {
          "start" : 1736205388582,
          "stop" : 1736205397445,
          "duration" : 8863
        }
      }, {
        "uid" : "db1e254c928ed17f",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/db1e254c928ed17f",
        "status" : "passed",
        "time" : {
          "start" : 1735944666380,
          "stop" : 1735944674753,
          "duration" : 8373
        }
      }, {
        "uid" : "5a06919adb17fadd",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/5a06919adb17fadd",
        "status" : "passed",
        "time" : {
          "start" : 1735924006646,
          "stop" : 1735924016066,
          "duration" : 9420
        }
      }, {
        "uid" : "8bcc4784fb18accc",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/8bcc4784fb18accc",
        "status" : "passed",
        "time" : {
          "start" : 1735929286041,
          "stop" : 1735929295060,
          "duration" : 9019
        }
      }, {
        "uid" : "cf26d6d57b06e5e3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/cf26d6d57b06e5e3",
        "status" : "passed",
        "time" : {
          "start" : 1735924006646,
          "stop" : 1735924016066,
          "duration" : 9420
        }
      }, {
        "uid" : "9c7aae662b2e0400",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/9c7aae662b2e0400",
        "status" : "passed",
        "time" : {
          "start" : 1735920559116,
          "stop" : 1735920567771,
          "duration" : 8655
        }
      }, {
        "uid" : "db93df885d0e8588",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/db93df885d0e8588",
        "status" : "passed",
        "time" : {
          "start" : 1735856022432,
          "stop" : 1735856031399,
          "duration" : 8967
        }
      }, {
        "uid" : "78b7f704a2ea6ae6",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/78b7f704a2ea6ae6",
        "status" : "passed",
        "time" : {
          "start" : 1735854490101,
          "stop" : 1735854498696,
          "duration" : 8595
        }
      }, {
        "uid" : "c20e13f5e7b90479",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/c20e13f5e7b90479",
        "status" : "passed",
        "time" : {
          "start" : 1735848473519,
          "stop" : 1735848482431,
          "duration" : 8912
        }
      }, {
        "uid" : "27bd90c65a28c18c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/27bd90c65a28c18c",
        "status" : "passed",
        "time" : {
          "start" : 1735843015529,
          "stop" : 1735843023777,
          "duration" : 8248
        }
      }, {
        "uid" : "939f5380b3613d5a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/939f5380b3613d5a",
        "status" : "passed",
        "time" : {
          "start" : 1735841496310,
          "stop" : 1735841504777,
          "duration" : 8467
        }
      }, {
        "uid" : "154cdb156ceeeb1b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/154cdb156ceeeb1b",
        "status" : "passed",
        "time" : {
          "start" : 1735834320709,
          "stop" : 1735834329935,
          "duration" : 9226
        }
      }, {
        "uid" : "54907cffc67585c9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1993/#testresult/54907cffc67585c9",
        "status" : "passed",
        "time" : {
          "start" : 1735831005395,
          "stop" : 1735831015662,
          "duration" : 10267
        }
      } ]
    },
    "tags" : [ "esp-idf", "jons_orange_pi", "anyio", "esp32c3_devkitm_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "e6a1b17aacc94758.json",
  "parameterValues" : [ "'esp32c3_devkitm_espidf'", "'esp-idf'" ]
}