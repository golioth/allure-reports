{"uid":"3b5d976756a51597","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1732140362104,"stop":1732140431201,"duration":69097},"status":"failed","statusMessage":"AssertionError: assert 8 == 9\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9d483f10>\ndevice = <golioth.golioth.Device object at 0xffff9d45a950>\nproject = <golioth.golioth.Project object at 0xffff9d3ba650>\nreleases = {'test_blocks': Release <673e5d38bb6157cf6cdf2e43, release_tags=[], device_tags=['673e5d36bb6157cf6cdf2e3d'], artifact..., release_tags=[], device_tags=['673e5d36bb6157cf6cdf2e3d'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 8 == 9\nE                    +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732140285962,"stop":1732140285963,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732140285963,"stop":1732140285964,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732140285964,"stop":1732140285964,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732140285965,"stop":1732140285965,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732140285966,"stop":1732140285966,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732140285966,"stop":1732140285967,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732140285967,"stop":1732140285967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732140285968,"stop":1732140285968,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732140285968,"stop":1732140285968,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732140285969,"stop":1732140285969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732140285969,"stop":1732140285969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732140285970,"stop":1732140335883,"duration":49913},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732140285970,"stop":1732140285970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732140335885,"stop":1732140336507,"duration":622},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732140336508,"stop":1732140337468,"duration":960},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732140337468,"stop":1732140341182,"duration":3714},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1732140341183,"stop":1732140341877,"duration":694},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1732140341877,"stop":1732140342848,"duration":971},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1732140342848,"stop":1732140344875,"duration":2027},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1732140362101,"stop":1732140362101,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 8 == 9\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9d483f10>\ndevice = <golioth.golioth.Device object at 0xffff9d45a950>\nproject = <golioth.golioth.Project object at 0xffff9d3ba650>\nreleases = {'test_blocks': Release <673e5d38bb6157cf6cdf2e43, release_tags=[], device_tags=['673e5d36bb6157cf6cdf2e3d'], artifact..., release_tags=[], device_tags=['673e5d36bb6157cf6cdf2e3d'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 8 == 9\nE                    +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","steps":[],"attachments":[{"uid":"8414933c5de78816","name":"stdout","source":"8414933c5de78816.txt","type":"text/plain","size":1042}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1732140431342,"stop":1732140432615,"duration":1273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1732140432617,"stop":1732140434754,"duration":2137},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1732140434757,"stop":1732140435795,"duration":1038},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1732140435797,"stop":1732140435797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1732140435799,"stop":1732140435799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732140435801,"stop":1732140436379,"duration":578},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732140436382,"stop":1732140436382,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732140436384,"stop":1732140436394,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"0989bf9b1c3f"},{"name":"thread","value":"239-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":47,"unknown":0,"total":50},"items":[{"uid":"20df9c28d3d81375","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/20df9c28d3d81375","status":"passed","time":{"start":1732139508897,"stop":1732139559649,"duration":50752}},{"uid":"1e64561f0342f799","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/1e64561f0342f799","status":"passed","time":{"start":1732133031319,"stop":1732133078929,"duration":47610}},{"uid":"ebc819838db3b4b0","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/ebc819838db3b4b0","status":"passed","time":{"start":1732042127692,"stop":1732042175941,"duration":48249}},{"uid":"c9e2e871abc4e4e8","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/c9e2e871abc4e4e8","status":"passed","time":{"start":1732042127692,"stop":1732042175941,"duration":48249}},{"uid":"8f3fdc51bad90c65","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/8f3fdc51bad90c65","status":"passed","time":{"start":1732123557564,"stop":1732123607921,"duration":50357}},{"uid":"a458bc6fdeef529a","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/a458bc6fdeef529a","status":"passed","time":{"start":1732122530992,"stop":1732122578394,"duration":47402}},{"uid":"dec83e669d141e2e","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/dec83e669d141e2e","status":"passed","time":{"start":1732042127692,"stop":1732042175941,"duration":48249}},{"uid":"df77165f576028f","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/df77165f576028f","status":"passed","time":{"start":1732046507267,"stop":1732046557549,"duration":50282}},{"uid":"4e8ee5e0b48855e4","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/4e8ee5e0b48855e4","status":"passed","time":{"start":1732046507267,"stop":1732046557549,"duration":50282}},{"uid":"ec878f790c338b58","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/ec878f790c338b58","status":"passed","time":{"start":1732046507267,"stop":1732046557549,"duration":50282}},{"uid":"de06b7768f5a6131","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/de06b7768f5a6131","status":"passed","time":{"start":1732042127692,"stop":1732042175941,"duration":48249}},{"uid":"b057a0813f269242","reportUrl":"https://golioth.github.io/allure-reports/branch/1780//#testresult/b057a0813f269242","status":"passed","time":{"start":1732030108509,"stop":1732030155991,"duration":47482}},{"uid":"f7016d3aa462cbff","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/f7016d3aa462cbff","status":"passed","time":{"start":1732013174648,"stop":1732013225155,"duration":50507}},{"uid":"b2212119b59801d3","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/b2212119b59801d3","status":"passed","time":{"start":1732013174648,"stop":1732013225155,"duration":50507}},{"uid":"3f1f2cae4c14a4f0","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/3f1f2cae4c14a4f0","status":"passed","time":{"start":1732013174648,"stop":1732013225155,"duration":50507}},{"uid":"848938f735e1cf4f","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/848938f735e1cf4f","status":"passed","time":{"start":1731999478485,"stop":1731999526206,"duration":47721}},{"uid":"8c99b0e7a06dc5ef","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/8c99b0e7a06dc5ef","status":"passed","time":{"start":1731967299967,"stop":1731967350210,"duration":50243}},{"uid":"575f5e913e7ddbd0","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/575f5e913e7ddbd0","status":"passed","time":{"start":1731959559209,"stop":1731959639788,"duration":80579}},{"uid":"7a323406660f200e","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/7a323406660f200e","status":"passed","time":{"start":1731958683731,"stop":1731958764065,"duration":80334}},{"uid":"d471a9be0026305f","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/d471a9be0026305f","status":"passed","time":{"start":1731955794197,"stop":1731955874938,"duration":80741}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"3b5d976756a51597.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}