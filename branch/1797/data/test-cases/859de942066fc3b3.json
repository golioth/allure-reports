{"uid":"859de942066fc3b3","name":"test_object_return","fullName":"tests.hil.tests.rpc.test_rpc#test_object_return","historyId":"47f8543623ac2f6976cd8ee81eb05a6f","time":{"start":1732141318419,"stop":1732141323741,"duration":5322},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff82fd94d0>\nmethod = 'object_return_type', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff82fd9c10>\ndevice = <golioth.golioth.Device object at 0xffff82fd9290>\n\n    async def test_object_return(board, device):\n>       rsp = await device.rpc.object_return_type()\n\ntests/hil/tests/rpc/test_rpc.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff82fd94d0>\nmethod = 'object_return_type', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732141236881,"stop":1732141236881,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732141236881,"stop":1732141236882,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732141236882,"stop":1732141236882,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732141236883,"stop":1732141236883,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732141236884,"stop":1732141236884,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732141236884,"stop":1732141236885,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732141236885,"stop":1732141236885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732141236886,"stop":1732141236886,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732141236887,"stop":1732141236887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732141236888,"stop":1732141236888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732141236888,"stop":1732141236888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732141236889,"stop":1732141236889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732141236889,"stop":1732141237347,"duration":458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732141237348,"stop":1732141278822,"duration":41474},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732141278824,"stop":1732141279799,"duration":975},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732141279800,"stop":1732141308874,"duration":29074},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732141369131,"stop":1732141369131,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732141369133,"stop":1732141369511,"duration":378},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732141369513,"stop":1732141369515,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732141369517,"stop":1732141369519,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"c5b7da1e94bd"},{"name":"thread","value":"264-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":44,"unknown":0,"total":48},"items":[{"uid":"cd6ace8c565714bc","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/cd6ace8c565714bc","status":"passed","time":{"start":1732140395351,"stop":1732140396359,"duration":1008}},{"uid":"6dfeeee47c279610","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/6dfeeee47c279610","status":"passed","time":{"start":1732134005863,"stop":1732134006861,"duration":998}},{"uid":"1cfb962a5768db10","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/1cfb962a5768db10","status":"passed","time":{"start":1732094031924,"stop":1732094032671,"duration":747}},{"uid":"f04aeeae04d9d9a4","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/f04aeeae04d9d9a4","status":"passed","time":{"start":1732094031924,"stop":1732094032671,"duration":747}},{"uid":"283aeeff3d833f1c","reportUrl":"https://golioth.github.io/allure-reports/branch/1791//#testresult/283aeeff3d833f1c","status":"passed","time":{"start":1732124822884,"stop":1732124823874,"duration":990}},{"uid":"9e8d4dd42bf7d036","reportUrl":"https://golioth.github.io/allure-reports/branch/1790//#testresult/9e8d4dd42bf7d036","status":"passed","time":{"start":1732123329419,"stop":1732123330415,"duration":996}},{"uid":"a49bb04f69b4744","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/a49bb04f69b4744","status":"passed","time":{"start":1732094031924,"stop":1732094032671,"duration":747}},{"uid":"2577fbd71b54a9cf","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/2577fbd71b54a9cf","status":"passed","time":{"start":1732055698427,"stop":1732055699413,"duration":986}},{"uid":"c7113f0c67998d31","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/c7113f0c67998d31","status":"passed","time":{"start":1732053301662,"stop":1732053302639,"duration":977}},{"uid":"33f123a1ef865b02","reportUrl":"https://golioth.github.io/allure-reports/branch/1787//#testresult/33f123a1ef865b02","status":"passed","time":{"start":1732047343612,"stop":1732047344360,"duration":748}},{"uid":"db31cce8e2234ffa","reportUrl":"https://golioth.github.io/allure-reports/branch/1780//#testresult/db31cce8e2234ffa","status":"passed","time":{"start":1732031107829,"stop":1732031108587,"duration":758}},{"uid":"ebd7ba9476f8c9e1","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/ebd7ba9476f8c9e1","status":"passed","time":{"start":1732028145546,"stop":1732028146541,"duration":995}},{"uid":"3bb77f1a74d0289","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/3bb77f1a74d0289","status":"passed","time":{"start":1732028145546,"stop":1732028146541,"duration":995}},{"uid":"b8a00150fe218f32","reportUrl":"https://golioth.github.io/allure-reports/branch/1779//#testresult/b8a00150fe218f32","status":"passed","time":{"start":1732014071906,"stop":1732014072924,"duration":1018}},{"uid":"5e03f5b32b3784d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1774//#testresult/5e03f5b32b3784d2","status":"passed","time":{"start":1732000813597,"stop":1732000814330,"duration":733}},{"uid":"5b00f0ecc549e660","reportUrl":"https://golioth.github.io/allure-reports/branch/1776//#testresult/5b00f0ecc549e660","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731969788242,"stop":1731969793565,"duration":5323}},{"uid":"9ac704b97f6ca33a","reportUrl":"https://golioth.github.io/allure-reports/branch/1770//#testresult/9ac704b97f6ca33a","status":"passed","time":{"start":1731961263430,"stop":1731961264482,"duration":1052}},{"uid":"c4b0b1967d8b987a","reportUrl":"https://golioth.github.io/allure-reports/branch/1769//#testresult/c4b0b1967d8b987a","status":"passed","time":{"start":1731960396230,"stop":1731960397376,"duration":1146}},{"uid":"d86dbfdcfdf921de","reportUrl":"https://golioth.github.io/allure-reports/branch/1767//#testresult/d86dbfdcfdf921de","status":"passed","time":{"start":1731957105311,"stop":1731957106274,"duration":963}},{"uid":"11db4b2cb2bbd71","reportUrl":"https://golioth.github.io/allure-reports/branch/1764//#testresult/11db4b2cb2bbd71","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'","time":{"start":1731954216536,"stop":1731954216536,"duration":0}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"859de942066fc3b3.json","parameterValues":["'rak5010'","'zephyr'"]}