{
  "uid" : "b6dbde6fec400a74",
  "name" : "test_observation_cancel_all",
  "fullName" : "tests.hil.tests.rpc.test_rpc#test_observation_cancel_all",
  "historyId" : "e6176e7c51c2c639edadc3c78c5e69ff",
  "time" : {
    "start" : 1736351521201,
    "stop" : 1736351533275,
    "duration" : 12074
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 62496.59000629126\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7d13ce90>\ndevice = <golioth.golioth.Device object at 0xffff7d221750>\n\n    async def test_observation_cancel_all(board, device):\n        rsp = await device.rpc.cancel_all()\n    \n        assert None != await board.wait_for_regex_in_line('Cancelling observations', timeout_s=10)\n>       assert None != await board.wait_for_regex_in_line('Observations cancelled', timeout_s=10)\n\ntests/hil/tests/rpc/test_rpc.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 62496.59000629126\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "baud",
    "time" : {
      "start" : 1736351418696,
      "stop" : 1736351418696,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1736351419132,
      "stop" : 1736351470296,
      "duration" : 51164
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736351418698,
      "stop" : 1736351418698,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736351418700,
      "stop" : 1736351418700,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736351418697,
      "stop" : 1736351418697,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1736351418700,
      "stop" : 1736351418700,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1736351471321,
      "stop" : 1736351474979,
      "duration" : 3658
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736351418701,
      "stop" : 1736351419132,
      "duration" : 431
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1736351418695,
      "stop" : 1736351418695,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736351418701,
      "stop" : 1736351418701,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736351470297,
      "stop" : 1736351471320,
      "duration" : 1023
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736351418701,
      "stop" : 1736351418701,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1736351418698,
      "stop" : 1736351418698,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1736351418699,
      "stop" : 1736351418699,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736351418693,
      "stop" : 1736351418693,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1736351418694,
      "stop" : 1736351418694,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 62496.59000629126\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7d13ce90>\ndevice = <golioth.golioth.Device object at 0xffff7d221750>\n\n    async def test_observation_cancel_all(board, device):\n        rsp = await device.rpc.cancel_all()\n    \n        assert None != await board.wait_for_regex_in_line('Cancelling observations', timeout_s=10)\n>       assert None != await board.wait_for_regex_in_line('Observations cancelled', timeout_s=10)\n\ntests/hil/tests/rpc/test_rpc.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 62496.59000629126\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "52c0a6b89d098c8f",
      "name" : "stdout",
      "source" : "52c0a6b89d098c8f.txt",
      "type" : "text/plain",
      "size" : 9135
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1736351534180,
      "stop" : 1736351534185,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup::0",
    "time" : {
      "start" : 1736351533755,
      "stop" : 1736351533755,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1736351534187,
      "stop" : 1736351534189,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1736351533757,
      "stop" : 1736351534177,
      "duration" : 420
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "hil.esp-idf.esp32c3_devkitm_espidf"
  }, {
    "name" : "tag",
    "value" : "jons_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_rpc"
  }, {
    "name" : "host",
    "value" : "014c34ad1589"
  }, {
    "name" : "thread",
    "value" : "256-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.rpc.test_rpc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32c3_devkitm_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 27,
        "unknown" : 0,
        "total" : 29
      },
      "items" : [ {
        "uid" : "597c88d6bb905b7a",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/597c88d6bb905b7a",
        "status" : "passed",
        "time" : {
          "start" : 1736349970428,
          "stop" : 1736349988209,
          "duration" : 17781
        }
      }, {
        "uid" : "2f781366e053fd92",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/29/#testresult/2f781366e053fd92",
        "status" : "passed",
        "time" : {
          "start" : 1736355408912,
          "stop" : 1736355427203,
          "duration" : 18291
        }
      }, {
        "uid" : "a2ab5e4f965de435",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/27/#testresult/a2ab5e4f965de435",
        "status" : "passed",
        "time" : {
          "start" : 1736280550691,
          "stop" : 1736280569539,
          "duration" : 18848
        }
      }, {
        "uid" : "510c1778bdefd1e0",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/26/#testresult/510c1778bdefd1e0",
        "status" : "passed",
        "time" : {
          "start" : 1736279018780,
          "stop" : 1736279037550,
          "duration" : 18770
        }
      }, {
        "uid" : "53228c8daca58429",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/25//#testresult/53228c8daca58429",
        "status" : "passed",
        "time" : {
          "start" : 1736271098029,
          "stop" : 1736271116892,
          "duration" : 18863
        }
      }, {
        "uid" : "fd5b1d7342622faa",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/24/#testresult/fd5b1d7342622faa",
        "status" : "passed",
        "time" : {
          "start" : 1736264840660,
          "stop" : 1736264858759,
          "duration" : 18099
        }
      }, {
        "uid" : "4066bf67f5a4a2af",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1/#testresult/4066bf67f5a4a2af",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1736221837705,
          "stop" : 1736221849759,
          "duration" : 12054
        }
      }, {
        "uid" : "67cfb0e72a8a4d8",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/67cfb0e72a8a4d8",
        "status" : "passed",
        "time" : {
          "start" : 1736205107297,
          "stop" : 1736205126089,
          "duration" : 18792
        }
      }, {
        "uid" : "3bdb1ef84116b76b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/20/#testresult/3bdb1ef84116b76b",
        "status" : "passed",
        "time" : {
          "start" : 1736205107297,
          "stop" : 1736205126089,
          "duration" : 18792
        }
      }, {
        "uid" : "b2d31ae4e77c0dc3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/13/#testresult/b2d31ae4e77c0dc3",
        "status" : "passed",
        "time" : {
          "start" : 1735944387445,
          "stop" : 1735944406108,
          "duration" : 18663
        }
      }, {
        "uid" : "4164922180670e8c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/4164922180670e8c",
        "status" : "passed",
        "time" : {
          "start" : 1735923726539,
          "stop" : 1735923745328,
          "duration" : 18789
        }
      }, {
        "uid" : "27b2ce9225b78347",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/12/#testresult/27b2ce9225b78347",
        "status" : "passed",
        "time" : {
          "start" : 1735929005019,
          "stop" : 1735929023544,
          "duration" : 18525
        }
      }, {
        "uid" : "204c33a2cf4b7f35",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/10/#testresult/204c33a2cf4b7f35",
        "status" : "passed",
        "time" : {
          "start" : 1735923726539,
          "stop" : 1735923745328,
          "duration" : 18789
        }
      }, {
        "uid" : "db91330f5ca6d2e9",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/9/#testresult/db91330f5ca6d2e9",
        "status" : "passed",
        "time" : {
          "start" : 1735920272800,
          "stop" : 1735920291648,
          "duration" : 18848
        }
      }, {
        "uid" : "dd04723e6df025fa",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/5/#testresult/dd04723e6df025fa",
        "status" : "passed",
        "time" : {
          "start" : 1735855740380,
          "stop" : 1735855759205,
          "duration" : 18825
        }
      }, {
        "uid" : "513690780e2da86b",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/4/#testresult/513690780e2da86b",
        "status" : "passed",
        "time" : {
          "start" : 1735854210147,
          "stop" : 1735854228928,
          "duration" : 18781
        }
      }, {
        "uid" : "3734da2bb41492d",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/3/#testresult/3734da2bb41492d",
        "status" : "passed",
        "time" : {
          "start" : 1735848195402,
          "stop" : 1735848214212,
          "duration" : 18810
        }
      }, {
        "uid" : "97ea6c97596ee5d3",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/2000/#testresult/97ea6c97596ee5d3",
        "status" : "passed",
        "time" : {
          "start" : 1735842735704,
          "stop" : 1735842754275,
          "duration" : 18571
        }
      }, {
        "uid" : "746e51e085144fdf",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1999/#testresult/746e51e085144fdf",
        "status" : "passed",
        "time" : {
          "start" : 1735841218390,
          "stop" : 1735841236940,
          "duration" : 18550
        }
      }, {
        "uid" : "6a1310bda4fdd85c",
        "reportUrl" : "https://golioth.github.io/allure-reports/branch/1997/#testresult/6a1310bda4fdd85c",
        "status" : "passed",
        "time" : {
          "start" : 1735834041716,
          "stop" : 1735834060538,
          "duration" : 18822
        }
      } ]
    },
    "tags" : [ "esp-idf", "jons_orange_pi", "anyio", "esp32c3_devkitm_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "b6dbde6fec400a74.json",
  "parameterValues" : [ "'esp32c3_devkitm_espidf'", "'esp-idf'" ]
}