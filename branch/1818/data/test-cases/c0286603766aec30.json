{"uid":"c0286603766aec30","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"f1cf752999d3f3859e1cde5c2a14c34d","time":{"start":1732227565617,"stop":1732227590174,"duration":24557},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffb8de4050>\ndevice = <golioth.golioth.Device object at 0xffffb8de6250>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1732227546638,"stop":1732227546639,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732227546639,"stop":1732227546639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732227546640,"stop":1732227546640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732227546640,"stop":1732227546641,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732227546641,"stop":1732227546643,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732227546641,"stop":1732227546641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732227546644,"stop":1732227546644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732227546645,"stop":1732227546645,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732227546645,"stop":1732227547165,"duration":520},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732227547166,"stop":1732227548036,"duration":870},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732227548036,"stop":1732227564778,"duration":16742},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732227564779,"stop":1732227565614,"duration":835},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffb8de4050>\ndevice = <golioth.golioth.Device object at 0xffffb8de6250>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"d00c7506bf217750","name":"log","source":"d00c7506bf217750.txt","type":"text/plain","size":20282}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732227590353,"stop":1732227590398,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732227590400,"stop":1732227590804,"duration":404},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732227590807,"stop":1732227590809,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732227590814,"stop":1732227590814,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"e377a7707124"},{"name":"thread","value":"473-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4efcabe44b25e192","status":"passed","time":{"start":1732227517627,"stop":1732227542629,"duration":25002}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":8,"skipped":0,"passed":52,"unknown":0,"total":67},"items":[{"uid":"4a9529675693646c","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/4a9529675693646c","status":"passed","time":{"start":1732226021682,"stop":1732226043246,"duration":21564}},{"uid":"f2f06f6e44a46d3","reportUrl":"https://golioth.github.io/allure-reports/branch/1816//#testresult/f2f06f6e44a46d3","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessException: Could not flash device None","time":{"start":1732221422927,"stop":1732221422927,"duration":0}},{"uid":"80e2c0b06838994e","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/80e2c0b06838994e","status":"passed","time":{"start":1732216919244,"stop":1732216943491,"duration":24247}},{"uid":"52620f8b5eb41986","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/52620f8b5eb41986","status":"passed","time":{"start":1732197179176,"stop":1732197202288,"duration":23112}},{"uid":"3205121d8fffd556","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/3205121d8fffd556","status":"passed","time":{"start":1732210301275,"stop":1732210325960,"duration":24685}},{"uid":"80291ef15a4d295c","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/80291ef15a4d295c","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1732209367906,"stop":1732209391641,"duration":23735}},{"uid":"397f186389866129","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/397f186389866129","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"1b609fab341491ce","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/1b609fab341491ce","status":"passed","time":{"start":1732197179176,"stop":1732197202288,"duration":23112}},{"uid":"7f2ae8887fd5a80b","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/7f2ae8887fd5a80b","status":"passed","time":{"start":1732148807497,"stop":1732148832478,"duration":24981}},{"uid":"1d0da3ae8994cb27","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/1d0da3ae8994cb27","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"8a747a85fcadf114","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/8a747a85fcadf114","status":"passed","time":{"start":1732197179176,"stop":1732197202288,"duration":23112}},{"uid":"5be42d80ec25e7c9","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/5be42d80ec25e7c9","status":"passed","time":{"start":1732148807497,"stop":1732148832478,"duration":24981}},{"uid":"8be657dee6272882","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/8be657dee6272882","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"79132a1b128f921b","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/79132a1b128f921b","status":"passed","time":{"start":1732148807497,"stop":1732148832478,"duration":24981}},{"uid":"e59ad7719be96e74","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/e59ad7719be96e74","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"780f51d065458b6f","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/780f51d065458b6f","status":"passed","time":{"start":1732154033671,"stop":1732154054289,"duration":20618}},{"uid":"82be01daa52f1ad5","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/82be01daa52f1ad5","status":"passed","time":{"start":1732148807497,"stop":1732148832478,"duration":24981}},{"uid":"1fdf5e31443e078d","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/1fdf5e31443e078d","status":"passed","time":{"start":1732147947695,"stop":1732147971834,"duration":24139}},{"uid":"2c6e6ba8c664d48c","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/2c6e6ba8c664d48c","status":"passed","time":{"start":1732135594962,"stop":1732135615364,"duration":20402}},{"uid":"1071e2d556684934","reportUrl":"https://golioth.github.io/allure-reports/branch/1785//#testresult/1071e2d556684934","status":"passed","time":{"start":1732135638837,"stop":1732135661217,"duration":22380}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"c0286603766aec30.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}