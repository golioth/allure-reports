{"uid":"c9268e5c8f49f9e2","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1732227578249,"stop":1732227643987,"duration":65738},"status":"failed","statusMessage":"AssertionError: assert 7 == 8\n +  where 7 = int('7')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff8b294fd0>\ndevice = <golioth.golioth.Device object at 0xffff8b288390>\nproject = <golioth.golioth.Project object at 0xffff8b1c41d0>\nreleases = {'test_blocks': Release <673fb1cabb6157cf6cdf57d4, release_tags=[], device_tags=['673fb1c9bb6157cf6cdf57d1'], artifact..., release_tags=[], device_tags=['673fb1c9bb6157cf6cdf57d1'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 7 == 8\nE                    +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732227490578,"stop":1732227490579,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732227490580,"stop":1732227490580,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732227490581,"stop":1732227490581,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732227490582,"stop":1732227490582,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732227490583,"stop":1732227490584,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732227490585,"stop":1732227490585,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732227490586,"stop":1732227490586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732227490587,"stop":1732227490587,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732227490588,"stop":1732227490588,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732227490589,"stop":1732227490589,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732227490590,"stop":1732227490590,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732227490591,"stop":1732227490591,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732227490592,"stop":1732227505403,"duration":14811},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732227505406,"stop":1732227505837,"duration":431},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732227505838,"stop":1732227506735,"duration":897},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732227506735,"stop":1732227528474,"duration":21739},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1732227528476,"stop":1732227528977,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1732227528978,"stop":1732227529740,"duration":762},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1732227529741,"stop":1732227531224,"duration":1483},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1732227578246,"stop":1732227578246,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 7 == 8\n +  where 7 = int('7')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff8b294fd0>\ndevice = <golioth.golioth.Device object at 0xffff8b288390>\nproject = <golioth.golioth.Project object at 0xffff8b1c41d0>\nreleases = {'test_blocks': Release <673fb1cabb6157cf6cdf57d4, release_tags=[], device_tags=['673fb1c9bb6157cf6cdf57d1'], artifact..., release_tags=[], device_tags=['673fb1c9bb6157cf6cdf57d1'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 7 == 8\nE                    +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","steps":[],"attachments":[{"uid":"37b40c6aad6dab04","name":"stdout","source":"37b40c6aad6dab04.txt","type":"text/plain","size":933}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1732227644053,"stop":1732227644848,"duration":795},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1732227644850,"stop":1732227646294,"duration":1444},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1732227646297,"stop":1732227647225,"duration":928},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1732227647227,"stop":1732227647228,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1732227647229,"stop":1732227647230,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732227647232,"stop":1732227647646,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732227647648,"stop":1732227647648,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732227647650,"stop":1732227647654,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"e232d27e69d2"},{"name":"thread","value":"267-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":11,"skipped":0,"passed":43,"unknown":0,"total":57},"items":[{"uid":"567967976f82dad4","reportUrl":"https://golioth.github.io/allure-reports/branch/1817//#testresult/567967976f82dad4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732225181373,"stop":1732225181373,"duration":0}},{"uid":"a9814f7518a2b890","reportUrl":"https://golioth.github.io/allure-reports/branch/1815//#testresult/a9814f7518a2b890","status":"passed","time":{"start":1732216494567,"stop":1732216549254,"duration":54687}},{"uid":"a18997e66eaf5a6c","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/a18997e66eaf5a6c","status":"passed","time":{"start":1732203234101,"stop":1732203293238,"duration":59137}},{"uid":"d6eea5ec071367e8","reportUrl":"https://golioth.github.io/allure-reports/branch/1807//#testresult/d6eea5ec071367e8","status":"passed","time":{"start":1732208327820,"stop":1732208383831,"duration":56011}},{"uid":"ee891526cb7eaf1c","reportUrl":"https://golioth.github.io/allure-reports/branch/1806//#testresult/ee891526cb7eaf1c","status":"passed","time":{"start":1732208076956,"stop":1732208130029,"duration":53073}},{"uid":"2bfeda12d26a0419","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/2bfeda12d26a0419","status":"passed","time":{"start":1732204964655,"stop":1732205022762,"duration":58107}},{"uid":"7f6a7eb5cddbf16f","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/7f6a7eb5cddbf16f","status":"passed","time":{"start":1732203234101,"stop":1732203293238,"duration":59137}},{"uid":"eb270ed93ae9be29","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/eb270ed93ae9be29","status":"passed","time":{"start":1732202650422,"stop":1732202705330,"duration":54908}},{"uid":"fe127e332d27b712","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/fe127e332d27b712","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732200555914,"stop":1732200555914,"duration":0}},{"uid":"ba0cd7993639960e","reportUrl":"https://golioth.github.io/allure-reports/branch/1805//#testresult/ba0cd7993639960e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732196693380,"stop":1732196693380,"duration":0}},{"uid":"c68ffb1e6897d9dd","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/c68ffb1e6897d9dd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732195482970,"stop":1732195482970,"duration":0}},{"uid":"6f736d73fa146beb","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/6f736d73fa146beb","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732192237385,"stop":1732192237385,"duration":0}},{"uid":"8dafc0b6318edaf","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/8dafc0b6318edaf","status":"passed","time":{"start":1732189132747,"stop":1732189186351,"duration":53604}},{"uid":"cd612e1cf872959e","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/cd612e1cf872959e","status":"passed","time":{"start":1732186613574,"stop":1732186668779,"duration":55205}},{"uid":"44fe59bec2cfbf97","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/44fe59bec2cfbf97","status":"passed","time":{"start":1732153774349,"stop":1732153831740,"duration":57391}},{"uid":"576dc1c6da3357b1","reportUrl":"https://golioth.github.io/allure-reports/branch/1799//#testresult/576dc1c6da3357b1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732146765650,"stop":1732146765650,"duration":0}},{"uid":"14ba78e8ae82c32b","reportUrl":"https://golioth.github.io/allure-reports/branch/1798//#testresult/14ba78e8ae82c32b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732145942646,"stop":1732145942646,"duration":0}},{"uid":"fa0714f0c2dd1d10","reportUrl":"https://golioth.github.io/allure-reports/branch/1797//#testresult/fa0714f0c2dd1d10","status":"passed","time":{"start":1732142741973,"stop":1732142795860,"duration":53887}},{"uid":"15127fbf48e1f444","reportUrl":"https://golioth.github.io/allure-reports/branch/1796//#testresult/15127fbf48e1f444","status":"passed","time":{"start":1732140103702,"stop":1732140159272,"duration":55570}},{"uid":"a6cf7ae3cb86e165","reportUrl":"https://golioth.github.io/allure-reports/branch/1792//#testresult/a6cf7ae3cb86e165","status":"passed","time":{"start":1732134450571,"stop":1732134508507,"duration":57936}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"c9268e5c8f49f9e2.json","parameterValues":["'nrf9160dk'","'zephyr'"]}