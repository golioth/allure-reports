{"uid":"1beba02ec55fafe8","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"62f122e1e892b6a4ca7700385fbbf6dd","time":{"start":1729717100915,"stop":1729717122629,"duration":21714},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f5ce6d66990>\ndevice = <golioth.golioth.Device object at 0x7f5ce6d4b550>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729717099586,"stop":1729717099587,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1729717099587,"stop":1729717099587,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729717099587,"stop":1729717099587,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729717099587,"stop":1729717099587,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1729717099587,"stop":1729717099588,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729717099587,"stop":1729717099587,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729717099588,"stop":1729717099589,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729717099589,"stop":1729717099589,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729717099589,"stop":1729717100068,"duration":479},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729717100068,"stop":1729717100865,"duration":797},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1729717100865,"stop":1729717100876,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1729717100876,"stop":1729717100914,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f5ce6d66990>\ndevice = <golioth.golioth.Device object at 0x7f5ce6d4b550>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"cad5614a44e15df1","name":"log","source":"cad5614a44e15df1.txt","type":"text/plain","size":16451}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1729717122758,"stop":1729717123282,"duration":524},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729717123282,"stop":1729717123683,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729717123683,"stop":1729717123684,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1729717123685,"stop":1729717123685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_32"},{"name":"tag","value":"GitHub Actions 44"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"48f5bfc2ecfa"},{"name":"thread","value":"44476-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9d520424f2c0dd83","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1729717100266,"stop":1729717121904,"duration":21638}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":21,"unknown":0,"total":22},"items":[{"uid":"c13116206f18aee0","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/c13116206f18aee0","status":"passed","time":{"start":1729525791373,"stop":1729525813025,"duration":21652}},{"uid":"71fc3f940731f9fe","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/71fc3f940731f9fe","status":"passed","time":{"start":1729525791373,"stop":1729525813025,"duration":21652}},{"uid":"5a0d8e2d88edb230","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/5a0d8e2d88edb230","status":"passed","time":{"start":1729525398957,"stop":1729525420667,"duration":21710}},{"uid":"704453cfc15fa36b","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/704453cfc15fa36b","status":"passed","time":{"start":1729377572672,"stop":1729377594013,"duration":21341}},{"uid":"9d24183f1d0e9fd0","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/9d24183f1d0e9fd0","status":"passed","time":{"start":1729377572672,"stop":1729377594013,"duration":21341}},{"uid":"32791bce21a1cc7e","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/32791bce21a1cc7e","status":"passed","time":{"start":1729196285383,"stop":1729196306946,"duration":21563}},{"uid":"4b34c276dd68f108","reportUrl":"https://golioth.github.io/allure-reports/branch/1671//#testresult/4b34c276dd68f108","status":"passed","time":{"start":1729194043972,"stop":1729194065560,"duration":21588}},{"uid":"391d4c93bb67f8d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1670//#testresult/391d4c93bb67f8d6","status":"passed","time":{"start":1729191945123,"stop":1729191966659,"duration":21536}},{"uid":"af718f8e0968eaa1","reportUrl":"https://golioth.github.io/allure-reports/branch/1669//#testresult/af718f8e0968eaa1","status":"passed","time":{"start":1729190764867,"stop":1729190786310,"duration":21443}},{"uid":"2701f23e4bc6dbea","reportUrl":"https://golioth.github.io/allure-reports/branch/1668//#testresult/2701f23e4bc6dbea","status":"passed","time":{"start":1729189485098,"stop":1729189506699,"duration":21601}},{"uid":"4509a4c0cb96f467","reportUrl":"https://golioth.github.io/allure-reports/branch/1667//#testresult/4509a4c0cb96f467","status":"passed","time":{"start":1729188073952,"stop":1729188095472,"duration":21520}},{"uid":"6d5450a157b70a1b","reportUrl":"https://golioth.github.io/allure-reports/branch/1666//#testresult/6d5450a157b70a1b","status":"passed","time":{"start":1729184961371,"stop":1729184982708,"duration":21337}},{"uid":"83afa81567b7ec2b","reportUrl":"https://golioth.github.io/allure-reports/branch/1665//#testresult/83afa81567b7ec2b","status":"passed","time":{"start":1729183948320,"stop":1729183970509,"duration":22189}},{"uid":"98934dd5a55a8daa","reportUrl":"https://golioth.github.io/allure-reports/branch/1664//#testresult/98934dd5a55a8daa","status":"passed","time":{"start":1729182323321,"stop":1729182344859,"duration":21538}},{"uid":"43cb573759b66aa7","reportUrl":"https://golioth.github.io/allure-reports/branch/1662//#testresult/43cb573759b66aa7","status":"passed","time":{"start":1729177209786,"stop":1729177231166,"duration":21380}},{"uid":"a525741c86717fa6","reportUrl":"https://golioth.github.io/allure-reports/branch/1661//#testresult/a525741c86717fa6","status":"passed","time":{"start":1729174780955,"stop":1729174802280,"duration":21325}},{"uid":"5eb035493e7afd56","reportUrl":"https://golioth.github.io/allure-reports/branch/1660//#testresult/5eb035493e7afd56","status":"passed","time":{"start":1729129513829,"stop":1729129535246,"duration":21417}},{"uid":"c1f824e6aed65404","reportUrl":"https://golioth.github.io/allure-reports/branch/1657//#testresult/c1f824e6aed65404","status":"passed","time":{"start":1729128331912,"stop":1729128353192,"duration":21280}},{"uid":"9cbfa0ba71959864","reportUrl":"https://golioth.github.io/allure-reports/branch/1655//#testresult/9cbfa0ba71959864","status":"passed","time":{"start":1729119946514,"stop":1729119968025,"duration":21511}},{"uid":"7682d87a893be96b","reportUrl":"https://golioth.github.io/allure-reports/branch/1654//#testresult/7682d87a893be96b","status":"passed","time":{"start":1729118228181,"stop":1729118249848,"duration":21667}}]},"tags":["GitHub Actions 44","anyio","native_sim_32","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"1beba02ec55fafe8.json","parameterValues":["'native_sim_32'","'zephyr'"]}