{"uid":"6b5d705f904f3967","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"80cd057eba57a7e68ecc18ee8923db54","time":{"start":1737548508635,"stop":1737548514014,"duration":5379},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff866903d0>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff866ace90>\ndevice = <golioth.golioth.Device object at 0xffff866904d0>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff866903d0>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1737548412373,"stop":1737548412373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1737548412374,"stop":1737548412374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1737548412375,"stop":1737548412376,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1737548412375,"stop":1737548412375,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737548412376,"stop":1737548412377,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737548412377,"stop":1737548412377,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1737548412378,"stop":1737548412378,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1737548412379,"stop":1737548412379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1737548412380,"stop":1737548412380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737548412380,"stop":1737548412380,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737548412381,"stop":1737548412381,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737548412381,"stop":1737548412381,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737548412382,"stop":1737548413002,"duration":620},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1737548413003,"stop":1737548432092,"duration":19089},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737548432093,"stop":1737548433065,"duration":972},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1737548433065,"stop":1737548461506,"duration":28441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1737548515083,"stop":1737548515083,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737548515086,"stop":1737548515985,"duration":899},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1737548515987,"stop":1737548516005,"duration":18},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737548516007,"stop":1737548516010,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"5eac18d4d864"},{"name":"thread","value":"239-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":48,"unknown":0,"total":58},"items":[{"uid":"5be2ec2cd1179750","reportUrl":"https://golioth.github.io/allure-reports/branch/83//#testresult/5be2ec2cd1179750","status":"passed","time":{"start":1737487142994,"stop":1737487162779,"duration":19785}},{"uid":"9f4882a121115baf","reportUrl":"https://golioth.github.io/allure-reports/branch/84//#testresult/9f4882a121115baf","status":"passed","time":{"start":1737489673432,"stop":1737489695477,"duration":22045}},{"uid":"b666a2d484e647f3","reportUrl":"https://golioth.github.io/allure-reports/branch/84//#testresult/b666a2d484e647f3","status":"passed","time":{"start":1737489673432,"stop":1737489695477,"duration":22045}},{"uid":"f64cd22c9c39b47c","reportUrl":"https://golioth.github.io/allure-reports/branch/83//#testresult/f64cd22c9c39b47c","status":"passed","time":{"start":1737487142994,"stop":1737487162779,"duration":19785}},{"uid":"fa4807d73cd3eee1","reportUrl":"https://golioth.github.io/allure-reports/branch/77//#testresult/fa4807d73cd3eee1","status":"passed","time":{"start":1737057643635,"stop":1737057663179,"duration":19544}},{"uid":"c626a4da596a5f12","reportUrl":"https://golioth.github.io/allure-reports/branch/77//#testresult/c626a4da596a5f12","status":"passed","time":{"start":1737057643635,"stop":1737057663179,"duration":19544}},{"uid":"ba2d2eb91dc5b354","reportUrl":"https://golioth.github.io/allure-reports/branch/66//#testresult/ba2d2eb91dc5b354","status":"passed","time":{"start":1736977396944,"stop":1736977416662,"duration":19718}},{"uid":"5bea479e0824ca60","reportUrl":"https://golioth.github.io/allure-reports/branch/74//#testresult/5bea479e0824ca60","status":"passed","time":{"start":1737016505861,"stop":1737016527528,"duration":21667}},{"uid":"2fce8ad7efba4b7d","reportUrl":"https://golioth.github.io/allure-reports/branch/73//#testresult/2fce8ad7efba4b7d","status":"passed","time":{"start":1737015153642,"stop":1737015173854,"duration":20212}},{"uid":"38d969929f5e26ea","reportUrl":"https://golioth.github.io/allure-reports/branch/66//#testresult/38d969929f5e26ea","status":"passed","time":{"start":1736977396944,"stop":1736977416662,"duration":19718}},{"uid":"367df6570f89a62b","reportUrl":"https://golioth.github.io/allure-reports/branch/65//#testresult/367df6570f89a62b","status":"passed","time":{"start":1736976790829,"stop":1736976810491,"duration":19662}},{"uid":"593cd27727512dcb","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/593cd27727512dcb","status":"passed","time":{"start":1736959343524,"stop":1736959364686,"duration":21162}},{"uid":"9789fc18401cd7e0","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/9789fc18401cd7e0","status":"passed","time":{"start":1736959343524,"stop":1736959364686,"duration":21162}},{"uid":"3f96e1a0bb89eb90","reportUrl":"https://golioth.github.io/allure-reports/branch/63//#testresult/3f96e1a0bb89eb90","status":"passed","time":{"start":1736970251438,"stop":1736970271302,"duration":19864}},{"uid":"4c1bd230ce622e5f","reportUrl":"https://golioth.github.io/allure-reports/branch/59//#testresult/4c1bd230ce622e5f","status":"passed","time":{"start":1736959343524,"stop":1736959364686,"duration":21162}},{"uid":"10be59affdf838cb","reportUrl":"https://golioth.github.io/allure-reports/branch/52//#testresult/10be59affdf838cb","status":"passed","time":{"start":1736584676577,"stop":1736584698929,"duration":22352}},{"uid":"551cf79fee1088a3","reportUrl":"https://golioth.github.io/allure-reports/branch/51//#testresult/551cf79fee1088a3","status":"passed","time":{"start":1736578798318,"stop":1736578821886,"duration":23568}},{"uid":"8361391b4c008611","reportUrl":"https://golioth.github.io/allure-reports/branch/47//#testresult/8361391b4c008611","status":"passed","time":{"start":1736527747127,"stop":1736527768984,"duration":21857}},{"uid":"658e99c28d5cd176","reportUrl":"https://golioth.github.io/allure-reports/branch/46//#testresult/658e99c28d5cd176","status":"passed","time":{"start":1736525495795,"stop":1736525517533,"duration":21738}},{"uid":"ca9492d6db76d46b","reportUrl":"https://golioth.github.io/allure-reports/branch/43//#testresult/ca9492d6db76d46b","status":"passed","time":{"start":1736443288854,"stop":1736443308645,"duration":19791}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"6b5d705f904f3967.json","parameterValues":["'rak5010'","'zephyr'"]}