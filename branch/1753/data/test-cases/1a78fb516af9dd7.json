{"uid":"1a78fb516af9dd7","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"13e62dad4e4f632232e649129e1e91d5","time":{"start":1731706640978,"stop":1731706646288,"duration":5310},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa4882e50>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa488ef50>\ndevice = <golioth.golioth.Device object at 0xffffa4882dd0>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa4882e50>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731706576995,"stop":1731706576995,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731706576996,"stop":1731706576996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731706576997,"stop":1731706576997,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731706576998,"stop":1731706576998,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731706576998,"stop":1731706576999,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731706576999,"stop":1731706577000,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731706577000,"stop":1731706577000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731706577001,"stop":1731706577001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731706577002,"stop":1731706577002,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731706577003,"stop":1731706577004,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731706577004,"stop":1731706577005,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731706577005,"stop":1731706577006,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731706577006,"stop":1731706577491,"duration":485},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731706577491,"stop":1731706592214,"duration":14723},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731706592216,"stop":1731706593204,"duration":988},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731706593204,"stop":1731706605077,"duration":11873},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1731706647412,"stop":1731706647412,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731706647414,"stop":1731706648217,"duration":803},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731706648219,"stop":1731706648220,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731706648223,"stop":1731706648225,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"252ce8ad524d"},{"name":"thread","value":"287-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":15,"unknown":0,"total":18},"items":[{"uid":"f71be231117abafa","reportUrl":"https://golioth.github.io/allure-reports/branch/1754//#testresult/f71be231117abafa","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731707518030,"stop":1731707518030,"duration":0}},{"uid":"f9fac27bd2ce8e37","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/f9fac27bd2ce8e37","status":"passed","time":{"start":1731690545214,"stop":1731690564945,"duration":19731}},{"uid":"7c0bab4c070870d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/7c0bab4c070870d2","status":"passed","time":{"start":1731623970084,"stop":1731623989936,"duration":19852}},{"uid":"43c47b0d8767df9","reportUrl":"https://golioth.github.io/allure-reports/branch/1747//#testresult/43c47b0d8767df9","status":"passed","time":{"start":1731622205672,"stop":1731622225757,"duration":20085}},{"uid":"93fe368e7f0f3796","reportUrl":"https://golioth.github.io/allure-reports/branch/1743//#testresult/93fe368e7f0f3796","status":"passed","time":{"start":1731612974125,"stop":1731612994569,"duration":20444}},{"uid":"4898df7fe6bc411e","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/4898df7fe6bc411e","status":"passed","time":{"start":1731542812528,"stop":1731542832342,"duration":19814}},{"uid":"76bf4277466265ea","reportUrl":"https://golioth.github.io/allure-reports/branch/1739//#testresult/76bf4277466265ea","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731548242515,"stop":1731548247836,"duration":5321}},{"uid":"9927581b5445417","reportUrl":"https://golioth.github.io/allure-reports/branch/1737//#testresult/9927581b5445417","status":"passed","time":{"start":1731542812528,"stop":1731542832342,"duration":19814}},{"uid":"5ab749105edd290b","reportUrl":"https://golioth.github.io/allure-reports/branch/1733//#testresult/5ab749105edd290b","status":"passed","time":{"start":1731539701673,"stop":1731539721191,"duration":19518}},{"uid":"672c99c7f03a7c4b","reportUrl":"https://golioth.github.io/allure-reports/branch/1732//#testresult/672c99c7f03a7c4b","status":"passed","time":{"start":1731536907720,"stop":1731536928245,"duration":20525}},{"uid":"b0f4f06cf1ff3e4","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/b0f4f06cf1ff3e4","status":"passed","time":{"start":1731519861358,"stop":1731519881198,"duration":19840}},{"uid":"d255dbf75ab44b02","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/d255dbf75ab44b02","status":"passed","time":{"start":1731519861358,"stop":1731519881198,"duration":19840}},{"uid":"25d7435c8e1629ed","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/25d7435c8e1629ed","status":"passed","time":{"start":1731519861358,"stop":1731519881198,"duration":19840}},{"uid":"c8525f09bc59250e","reportUrl":"https://golioth.github.io/allure-reports/branch/1730//#testresult/c8525f09bc59250e","status":"passed","time":{"start":1731519861358,"stop":1731519881198,"duration":19840}},{"uid":"7fe7dbf9262e8e90","reportUrl":"https://golioth.github.io/allure-reports/branch/1725//#testresult/7fe7dbf9262e8e90","status":"passed","time":{"start":1731427524505,"stop":1731427544802,"duration":20297}},{"uid":"4766d39e411a5f38","reportUrl":"https://golioth.github.io/allure-reports/branch/1720//#testresult/4766d39e411a5f38","status":"passed","time":{"start":1731103749128,"stop":1731103769106,"duration":19978}},{"uid":"b54f9a73568793eb","reportUrl":"https://golioth.github.io/allure-reports/branch/1719//#testresult/b54f9a73568793eb","status":"passed","time":{"start":1731098436497,"stop":1731098456290,"duration":19793}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"1a78fb516af9dd7.json","parameterValues":["'nrf9160dk'","'zephyr'"]}