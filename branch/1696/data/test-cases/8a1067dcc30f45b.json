{"uid":"8a1067dcc30f45b","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"467e555cbdae75d46aefa9c64cb6440a","time":{"start":1729790186699,"stop":1729790240169,"duration":53470},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff91cd2bd0>\ndevice = <golioth.golioth.Device object at 0xffff91ca2010>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729790150237,"stop":1729790150237,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729790150238,"stop":1729790150238,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729790150239,"stop":1729790150239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729790150239,"stop":1729790150239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1729790150240,"stop":1729790150242,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1729790150240,"stop":1729790150240,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729790150243,"stop":1729790150243,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729790150244,"stop":1729790150725,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729790150244,"stop":1729790150244,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729790150726,"stop":1729790151746,"duration":1020},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1729790151747,"stop":1729790186088,"duration":34341},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1729790186088,"stop":1729790186696,"duration":608},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff91cd2bd0>\ndevice = <golioth.golioth.Device object at 0xffff91ca2010>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"4b854dda1f24ecae","name":"log","source":"4b854dda1f24ecae.txt","type":"text/plain","size":28523}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1729790240336,"stop":1729790240358,"duration":22},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729790240360,"stop":1729790240844,"duration":484},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729790240846,"stop":1729790240848,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1729790240853,"stop":1729790240853,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"a0459fb07668"},{"name":"thread","value":"578-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"75fd1f2513ee3518","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1729789966365,"stop":1729790019937,"duration":53572}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":20},"items":[{"uid":"5d44216049862a11","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/5d44216049862a11","status":"passed","time":{"start":1729724930237,"stop":1729724982918,"duration":52681}},{"uid":"6f8a2c7485aafda6","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/6f8a2c7485aafda6","status":"passed","time":{"start":1729724930237,"stop":1729724982918,"duration":52681}},{"uid":"19ca51dd54fc591f","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/19ca51dd54fc591f","status":"passed","time":{"start":1729722712775,"stop":1729722765797,"duration":53022}},{"uid":"ca279c7dd821ae99","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/ca279c7dd821ae99","status":"passed","time":{"start":1729719807177,"stop":1729719862417,"duration":55240}},{"uid":"b9fb4a5908658b3b","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/b9fb4a5908658b3b","status":"passed","time":{"start":1729530702363,"stop":1729530755750,"duration":53387}},{"uid":"64b650374f0ae651","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/64b650374f0ae651","status":"passed","time":{"start":1729530702363,"stop":1729530755750,"duration":53387}},{"uid":"b1959ce10d2db711","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/b1959ce10d2db711","status":"passed","time":{"start":1729527970042,"stop":1729528023459,"duration":53417}},{"uid":"3eb8dd448ce20aa5","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/3eb8dd448ce20aa5","status":"passed","time":{"start":1729380325399,"stop":1729380378704,"duration":53305}},{"uid":"e3c0cbd8d8561ad4","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/e3c0cbd8d8561ad4","status":"passed","time":{"start":1729380325399,"stop":1729380378704,"duration":53305}},{"uid":"6fca18ea645c001c","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/6fca18ea645c001c","status":"passed","time":{"start":1729199022381,"stop":1729199075793,"duration":53412}},{"uid":"54dfff8c2f820212","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/54dfff8c2f820212","status":"passed","time":{"start":1729117099670,"stop":1729117154660,"duration":54990}},{"uid":"90bf3515505c2add","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/90bf3515505c2add","status":"passed","time":{"start":1729114706037,"stop":1729114760236,"duration":54199}},{"uid":"6a54f6949587088","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/6a54f6949587088","status":"passed","time":{"start":1729108851167,"stop":1729108903568,"duration":52401}},{"uid":"67778c6fbc0844d6","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/67778c6fbc0844d6","status":"passed","time":{"start":1729035225976,"stop":1729035279607,"duration":53631}},{"uid":"ad5b1ac253b15ff4","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/ad5b1ac253b15ff4","status":"passed","time":{"start":1729031882333,"stop":1729031936003,"duration":53670}},{"uid":"9f5ef2735a15cf0f","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/9f5ef2735a15cf0f","status":"passed","time":{"start":1729021727711,"stop":1729021780661,"duration":52950}},{"uid":"a61d334996d0eb9f","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/a61d334996d0eb9f","status":"passed","time":{"start":1729024732658,"stop":1729024786180,"duration":53522}},{"uid":"4e0fadaae372833c","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/4e0fadaae372833c","status":"passed","time":{"start":1729021727711,"stop":1729021780661,"duration":52950}},{"uid":"d7bd4a6aa7b5e96a","reportUrl":"https://golioth.github.io/allure-reports/branch/1638//#testresult/d7bd4a6aa7b5e96a","status":"passed","time":{"start":1729006521929,"stop":1729006575247,"duration":53318}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"8a1067dcc30f45b.json","parameterValues":["'rak5010'","'zephyr'"]}