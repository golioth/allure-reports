{"uid":"5804208a5d943930","name":"test_hello","fullName":"examples.esp_idf.hello.pytest.test_sample#test_hello","historyId":"50ac528343c8f63b54127405b2c48a27","time":{"start":1729789758419,"stop":1729789781731,"duration":23312},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff7ffd1dd0>\ndevice = <golioth.golioth.Device object at 0xffff7ff68690>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729789732353,"stop":1729789732353,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729789732354,"stop":1729789732354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729789732355,"stop":1729789732355,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729789732355,"stop":1729789732356,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729789732356,"stop":1729789732356,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729789732357,"stop":1729789732357,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729789732357,"stop":1729789732358,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729789732358,"stop":1729789732358,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729789732358,"stop":1729789732359,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729789732359,"stop":1729789732360,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729789732359,"stop":1729789732359,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729789732360,"stop":1729789732360,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729789732360,"stop":1729789756816,"duration":24456},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729789756818,"stop":1729789757353,"duration":535},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729789757354,"stop":1729789758416,"duration":1062},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff7ffd1dd0>\ndevice = <golioth.golioth.Device object at 0xffff7ff68690>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","steps":[],"attachments":[{"uid":"8895589c007a37b6","name":"stdout","source":"8895589c007a37b6.txt","type":"text/plain","size":8106}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1729789781988,"stop":1729789782418,"duration":430},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729789782420,"stop":1729789782420,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729789782422,"stop":1729789782425,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"8259aec55de2"},{"name":"thread","value":"247-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":20},"items":[{"uid":"11f75c726a52168","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/11f75c726a52168","status":"passed","time":{"start":1729725148632,"stop":1729725170623,"duration":21991}},{"uid":"76d25727214b8494","reportUrl":"https://golioth.github.io/allure-reports/branch/1694//#testresult/76d25727214b8494","status":"passed","time":{"start":1729725148632,"stop":1729725170623,"duration":21991}},{"uid":"8561b1e684d28dd8","reportUrl":"https://golioth.github.io/allure-reports/branch/1693//#testresult/8561b1e684d28dd8","status":"passed","time":{"start":1729722254833,"stop":1729722273258,"duration":18425}},{"uid":"a787c9d7ca1ce755","reportUrl":"https://golioth.github.io/allure-reports/branch/1692//#testresult/a787c9d7ca1ce755","status":"passed","time":{"start":1729719537667,"stop":1729719559436,"duration":21769}},{"uid":"9fb74e0c038b4236","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/9fb74e0c038b4236","status":"passed","time":{"start":1729530556823,"stop":1729530575066,"duration":18243}},{"uid":"7ef0df74cd9095d2","reportUrl":"https://golioth.github.io/allure-reports/branch/1687//#testresult/7ef0df74cd9095d2","status":"passed","time":{"start":1729530556823,"stop":1729530575066,"duration":18243}},{"uid":"1df6e97713732eac","reportUrl":"https://golioth.github.io/allure-reports/branch/1686//#testresult/1df6e97713732eac","status":"passed","time":{"start":1729528619876,"stop":1729528639361,"duration":19485}},{"uid":"72f7a9edd28a36c3","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/72f7a9edd28a36c3","status":"passed","time":{"start":1729379861130,"stop":1729379879486,"duration":18356}},{"uid":"aed38ded8fb553c","reportUrl":"https://golioth.github.io/allure-reports/branch/1682//#testresult/aed38ded8fb553c","status":"passed","time":{"start":1729379861130,"stop":1729379879486,"duration":18356}},{"uid":"dc7d4f16b5963695","reportUrl":"https://golioth.github.io/allure-reports/branch/1673//#testresult/dc7d4f16b5963695","status":"passed","time":{"start":1729198827687,"stop":1729198846495,"duration":18808}},{"uid":"15b921eb4cb52561","reportUrl":"https://golioth.github.io/allure-reports/branch/1651//#testresult/15b921eb4cb52561","status":"passed","time":{"start":1729117287080,"stop":1729117305142,"duration":18062}},{"uid":"b31dc604850aa89e","reportUrl":"https://golioth.github.io/allure-reports/branch/1650//#testresult/b31dc604850aa89e","status":"passed","time":{"start":1729114304138,"stop":1729114322885,"duration":18747}},{"uid":"a550450654db03e5","reportUrl":"https://golioth.github.io/allure-reports/branch/1648//#testresult/a550450654db03e5","status":"passed","time":{"start":1729108574740,"stop":1729108596577,"duration":21837}},{"uid":"17977844da84f818","reportUrl":"https://golioth.github.io/allure-reports/branch/1646//#testresult/17977844da84f818","status":"passed","time":{"start":1729034868007,"stop":1729034886581,"duration":18574}},{"uid":"90c8a62c527071a6","reportUrl":"https://golioth.github.io/allure-reports/branch/1645//#testresult/90c8a62c527071a6","status":"passed","time":{"start":1729031790562,"stop":1729031808884,"duration":18322}},{"uid":"db8e83bc32e37767","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/db8e83bc32e37767","status":"passed","time":{"start":1729021454224,"stop":1729021472627,"duration":18403}},{"uid":"55660f3eac6be096","reportUrl":"https://golioth.github.io/allure-reports/branch/1642//#testresult/55660f3eac6be096","status":"passed","time":{"start":1729024708967,"stop":1729024727345,"duration":18378}},{"uid":"e075725f50209324","reportUrl":"https://golioth.github.io/allure-reports/branch/1641//#testresult/e075725f50209324","status":"passed","time":{"start":1729021454224,"stop":1729021472627,"duration":18403}},{"uid":"61461f0fe79b0351","reportUrl":"https://golioth.github.io/allure-reports/branch/1638//#testresult/61461f0fe79b0351","status":"passed","time":{"start":1729006726448,"stop":1729006748545,"duration":22097}}]},"tags":["mikes_orange_pi","esp-idf","anyio","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"5804208a5d943930.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}