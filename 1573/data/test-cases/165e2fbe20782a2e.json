{"uid":"165e2fbe20782a2e","name":"test_lightdb_reported","fullName":"tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"fb40d663b2c57d305bec2ccb217b93bf","time":{"start":1728021080610,"stop":1728021080610,"duration":0},"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"project = <golioth.golioth.Project object at 0x7f37584892a0>\nboard = <linuxboard.LinuxBoard object at 0x7f375833f3d0>\ndevice = <golioth.golioth.Device object at 0x7f375833ea40>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Setup data for replication\n        await device.lightdb.delete('hil/lightdb')\n    \n        await device.lightdb.set('hil/lightdb/desired/true', True)\n        await device.lightdb.set('hil/lightdb/desired/false', False)\n        await device.lightdb.set('hil/lightdb/desired/int', 13)\n        await device.lightdb.set('hil/lightdb/desired/float', -234.25)\n        await device.lightdb.set('hil/lightdb/desired/str', '15')\n        await device.lightdb.set('hil/lightdb/desired/obj', {'c': '26', 'd': -12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/sync/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/sync/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/async/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/async/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/async/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/async/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/async/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/observed/int', 0)\n        await device.lightdb.set('hil/lightdb/observed/cbor/int', 0)\n    \n        # Mark test data ready\n        await device.lightdb.set('hil/lightdb/desired/ready', True)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\nE       assert None != None\n\ntests/hil/tests/lightdb/test_lightdb.py:42: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"device","time":{"start":1728021080778,"stop":1728021081118,"duration":340},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728021081118,"stop":1728021189474,"duration":108356},"status":"failed","statusMessage":"AssertionError: assert None != None\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n  File \"/home/runner/.local/lib/python3.10/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/.local/lib/python3.10/site-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/anyio/_backends/_trio.py\", line 929, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n  File \"/home/runner/.local/lib/python3.10/site-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n  File \"/home/runner/.local/lib/python3.10/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/home/runner/.local/lib/python3.10/site-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n  File \"/home/runner/work/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"project = <golioth.golioth.Project object at 0x7f37584892a0>\nboard = <linuxboard.LinuxBoard object at 0x7f375833f3d0>\ndevice = <golioth.golioth.Device object at 0x7f375833ea40>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Setup data for replication\n        await device.lightdb.delete('hil/lightdb')\n    \n        await device.lightdb.set('hil/lightdb/desired/true', True)\n        await device.lightdb.set('hil/lightdb/desired/false', False)\n        await device.lightdb.set('hil/lightdb/desired/int', 13)\n        await device.lightdb.set('hil/lightdb/desired/float', -234.25)\n        await device.lightdb.set('hil/lightdb/desired/str', '15')\n        await device.lightdb.set('hil/lightdb/desired/obj', {'c': '26', 'd': -12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/sync/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/sync/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/async/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/async/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/async/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/async/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/async/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/observed/int', 0)\n        await device.lightdb.set('hil/lightdb/observed/cbor/int', 0)\n    \n        # Mark test data ready\n        await device.lightdb.set('hil/lightdb/desired/ready', True)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\nE       assert None != None\n\ntests/hil/tests/lightdb/test_lightdb.py:42: AssertionError","steps":[],"attachments":[{"uid":"54a1e71076ffedff","name":"stdout","source":"54a1e71076ffedff.txt","type":"text/plain","size":6936},{"uid":"ca5ac3ba0c6dead5","name":"stderr","source":"ca5ac3ba0c6dead5.txt","type":"text/plain","size":149}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1728021189535,"stop":1728021189562,"duration":27},"status":"broken","statusMessage":"trio.Cancelled: Cancelled\n","statusTrace":"  File \"/home/runner/.local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/_pytest/fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/.local/lib/python3.10/site-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/anyio/_backends/_trio.py\", line 934, in run_asyncgen_fixture\n    self._call_in_runner_task(asyncgen.asend, None)\n  File \"/home/runner/.local/lib/python3.10/site-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n  File \"/home/runner/.local/lib/python3.10/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/home/runner/.local/lib/python3.10/site-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n  File \"/home/runner/.local/lib/python3.10/site-packages/golioth/pytest_plugin.py\", line 68, in device\n    await project.delete_device(device)\n  File \"/home/runner/.local/lib/python3.10/site-packages/golioth/golioth.py\", line 257, in delete_device\n    await self.delete_device_by_id(dev.id)\n  File \"/home/runner/.local/lib/python3.10/site-packages/golioth/golioth.py\", line 254, in delete_device_by_id\n    await self.delete(f'devices/{id}')\n  File \"/home/runner/.local/lib/python3.10/site-packages/golioth/golioth.py\", line 80, in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/golioth/golioth.py\", line 118, in delete\n    return await c.delete(*args, **kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpx/_client.py\", line 2012, in delete\n    return await self.request(\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpx/_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpx/_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpx/_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpx/_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpx/_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpx/_transports/default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpcore/_async/connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpcore/_async/connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpcore/_async/connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpcore/_async/connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpcore/_async/connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpcore/_backends/auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n  File \"/home/runner/.local/lib/python3.10/site-packages/httpcore/_backends/trio.py\", line 132, in connect_tcp\n    stream: trio.abc.Stream = await trio.open_tcp_stream(\n  File \"/home/runner/.local/lib/python3.10/site-packages/trio/_highlevel_open_tcp_stream.py\", line 278, in open_tcp_stream\n    targets = await getaddrinfo(host, port, type=SOCK_STREAM)\n  File \"/home/runner/.local/lib/python3.10/site-packages/trio/_socket.py\", line 235, in getaddrinfo\n    return await trio.to_thread.run_sync(\n  File \"/home/runner/.local/lib/python3.10/site-packages/trio/_threads.py\", line 398, in to_thread_run_sync\n    ] = await trio.lowlevel.wait_task_rescheduled(abort)\n  File \"/home/runner/.local/lib/python3.10/site-packages/trio/_core/_traps.py\", line 178, in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n  File \"/home/runner/.local/lib/python3.10/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/home/runner/.local/lib/python3.10/site-packages/trio/_core/_run.py\", line 1437, in raise_cancel\n    raise Cancelled._create()\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"tag","value":"linux"},{"name":"tag","value":"linux"},{"name":"parentSuite","value":"hil.linux.linux"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"fv-az520-417"},{"name":"thread","value":"3667-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'linux'"},{"name":"platform_name","value":"'linux'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":1,"skipped":0,"passed":74,"unknown":0,"total":84},"items":[{"uid":"2c4a71cb84e366a2","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/2c4a71cb84e366a2","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1728020788084,"stop":1728020788084,"duration":0}},{"uid":"fd2f6f139a3ddf03","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/fd2f6f139a3ddf03","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1728020237643,"stop":1728020237643,"duration":0}},{"uid":"5ba1061cefa9ae0e","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/5ba1061cefa9ae0e","status":"passed","time":{"start":1728001424150,"stop":1728001425498,"duration":1348}},{"uid":"e13b3b1beede4d85","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/e13b3b1beede4d85","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1727986117024,"stop":1727986117116,"duration":92}},{"uid":"eb78fac02cf41f9b","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/eb78fac02cf41f9b","status":"passed","time":{"start":1727985981407,"stop":1727985984387,"duration":2980}},{"uid":"27dfeb2d8cb945c0","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/27dfeb2d8cb945c0","status":"passed","time":{"start":1727984430291,"stop":1727984431719,"duration":1428}},{"uid":"9a00dda21a1ac8de","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/9a00dda21a1ac8de","status":"passed","time":{"start":1727972612228,"stop":1727972615733,"duration":3505}},{"uid":"fc81ebb4489485d9","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/fc81ebb4489485d9","status":"passed","time":{"start":1727969997183,"stop":1727970000445,"duration":3262}},{"uid":"c240ad90b212aae5","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/c240ad90b212aae5","status":"passed","time":{"start":1727969431821,"stop":1727969435131,"duration":3310}},{"uid":"16bbcb6a2b045515","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/16bbcb6a2b045515","status":"passed","time":{"start":1727967920735,"stop":1727967921941,"duration":1206}},{"uid":"ec8eba2477c6ec04","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/ec8eba2477c6ec04","status":"passed","time":{"start":1727965229616,"stop":1727965232387,"duration":2771}},{"uid":"e9e562304e228b4f","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/e9e562304e228b4f","status":"passed","time":{"start":1727964972172,"stop":1727964975418,"duration":3246}},{"uid":"d258a9959265dec","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/d258a9959265dec","status":"passed","time":{"start":1727964249817,"stop":1727964251259,"duration":1442}},{"uid":"56ba8bf7d12c0d82","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/56ba8bf7d12c0d82","status":"passed","time":{"start":1727956190722,"stop":1727956193673,"duration":2951}},{"uid":"3885004eb202d12d","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/3885004eb202d12d","status":"passed","time":{"start":1727942575583,"stop":1727942578042,"duration":2459}},{"uid":"bb28a24aa29fb077","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/bb28a24aa29fb077","status":"passed","time":{"start":1727942970515,"stop":1727942972711,"duration":2196}},{"uid":"1ffc3cf10c686dbc","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/1ffc3cf10c686dbc","status":"passed","time":{"start":1727906010130,"stop":1727906013478,"duration":3348}},{"uid":"e661edf9cb58a882","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/e661edf9cb58a882","status":"passed","time":{"start":1727932048006,"stop":1727932051357,"duration":3351}},{"uid":"6e5eb4b6500ee9dc","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/6e5eb4b6500ee9dc","status":"passed","time":{"start":1727942575583,"stop":1727942578042,"duration":2459}},{"uid":"a21407be71a836e5","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/a21407be71a836e5","status":"passed","time":{"start":1727942206145,"stop":1727942208418,"duration":2273}}]},"tags":["linux","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"165e2fbe20782a2e.json","parameterValues":["'linux'","'linux'"]}