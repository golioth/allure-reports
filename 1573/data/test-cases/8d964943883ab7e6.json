{"uid":"8d964943883ab7e6","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1728025118317,"stop":1728025183768,"duration":65451},"status":"failed","statusMessage":"AssertionError: assert 8 == 7\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa793b710>\ndevice = <golioth.golioth.Device object at 0xffffa7910690>\nproject = <golioth.golioth.Project object at 0xffffa8247610>\nreleases = {'test_blocks': Release <66ff92101b3c084061ccf0a6, release_tags=[], device_tags=['66ff920e1b3c084061ccf0a3'], artifact..., release_tags=[], device_tags=['66ff920e1b3c084061ccf0a3'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 8 == 7\nE            +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728025047883,"stop":1728025047883,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728025047884,"stop":1728025047884,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728025047885,"stop":1728025047885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728025047886,"stop":1728025047886,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728025047887,"stop":1728025047887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728025047887,"stop":1728025047887,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728025047888,"stop":1728025047888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728025047888,"stop":1728025047888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728025047889,"stop":1728025047889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728025047889,"stop":1728025047889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728025047890,"stop":1728025047890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728025047890,"stop":1728025047890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728025047891,"stop":1728025097738,"duration":49847},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728025097740,"stop":1728025098191,"duration":451},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728025098192,"stop":1728025099053,"duration":861},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728025099054,"stop":1728025102059,"duration":3005},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1728025102061,"stop":1728025102587,"duration":526},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1728025102588,"stop":1728025103386,"duration":798},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1728025103386,"stop":1728025105091,"duration":1705},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1728025118314,"stop":1728025118315,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 8 == 7\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa793b710>\ndevice = <golioth.golioth.Device object at 0xffffa7910690>\nproject = <golioth.golioth.Project object at 0xffffa8247610>\nreleases = {'test_blocks': Release <66ff92101b3c084061ccf0a6, release_tags=[], device_tags=['66ff920e1b3c084061ccf0a3'], artifact..., release_tags=[], device_tags=['66ff920e1b3c084061ccf0a3'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 8 == 7\nE            +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"7fcd49301da5be90","name":"stdout","source":"7fcd49301da5be90.txt","type":"text/plain","size":2563}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1728025183949,"stop":1728025184896,"duration":947},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1728025184898,"stop":1728025186442,"duration":1544},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1728025186444,"stop":1728025187334,"duration":890},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1728025187336,"stop":1728025187336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728025187337,"stop":1728025187338,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728025187340,"stop":1728025187779,"duration":439},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728025187782,"stop":1728025187782,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728025187784,"stop":1728025187794,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"bfef62203db5"},{"name":"thread","value":"241-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":6,"skipped":0,"passed":68,"unknown":0,"total":85},"items":[{"uid":"8bdd7f07c0f6ec72","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/8bdd7f07c0f6ec72","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728023297965,"stop":1728023297965,"duration":0}},{"uid":"29dc69bf5cba29ce","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/29dc69bf5cba29ce","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728020967155,"stop":1728020967155,"duration":0}},{"uid":"e4bfa0151ed889ba","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/e4bfa0151ed889ba","status":"passed","time":{"start":1728001882875,"stop":1728001964124,"duration":81249}},{"uid":"97515c27ae5bd3f6","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/97515c27ae5bd3f6","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727989427007,"stop":1727989447692,"duration":20685}},{"uid":"92fda0dffd8f29a8","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/92fda0dffd8f29a8","status":"passed","time":{"start":1727989163708,"stop":1727989244344,"duration":80636}},{"uid":"f11976e39406463c","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/f11976e39406463c","status":"failed","statusDetails":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","time":{"start":1727986174749,"stop":1727986234738,"duration":59989}},{"uid":"27da25a1397c040a","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/27da25a1397c040a","status":"passed","time":{"start":1727983716377,"stop":1727983797464,"duration":81087}},{"uid":"4c3fbcf33e7621c9","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/4c3fbcf33e7621c9","status":"passed","time":{"start":1727976081237,"stop":1727976162068,"duration":80831}},{"uid":"60796132b6929e25","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/60796132b6929e25","status":"passed","time":{"start":1727964640423,"stop":1727964721274,"duration":80851}},{"uid":"92f169d1c8ef51a9","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/92f169d1c8ef51a9","status":"passed","time":{"start":1727972354284,"stop":1727972435104,"duration":80820}},{"uid":"9f0393427a07f742","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/9f0393427a07f742","status":"failed","statusDetails":"AssertionError: assert 6 == 5\n +  where 6 = int('6')","time":{"start":1727968502230,"stop":1727968553463,"duration":51233}},{"uid":"7934fb0b00fa8530","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/7934fb0b00fa8530","status":"passed","time":{"start":1727967584258,"stop":1727967665088,"duration":80830}},{"uid":"91ef7e294410fdd7","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/91ef7e294410fdd7","status":"passed","time":{"start":1727964640423,"stop":1727964721274,"duration":80851}},{"uid":"3e97410e93b94956","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/3e97410e93b94956","status":"passed","time":{"start":1727961230807,"stop":1727961311547,"duration":80740}},{"uid":"227c7c8798066341","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/227c7c8798066341","status":"passed","time":{"start":1727955286919,"stop":1727955367203,"duration":80284}},{"uid":"5849903bd22ca4cd","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/5849903bd22ca4cd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727954389463,"stop":1727954474285,"duration":84822}},{"uid":"d1d56d5975c695f","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/d1d56d5975c695f","status":"passed","time":{"start":1727906531727,"stop":1727906612487,"duration":80760}},{"uid":"b0006daf0f32867e","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/b0006daf0f32867e","status":"passed","time":{"start":1727932241316,"stop":1727932318711,"duration":77395}},{"uid":"26227ce47492986","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/26227ce47492986","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727944256756,"stop":1727944273588,"duration":16832}},{"uid":"e83a134399442f40","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/e83a134399442f40","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727943407179,"stop":1727943427918,"duration":20739}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"8d964943883ab7e6.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}