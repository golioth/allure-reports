{"uid":"fb410255574f2ce2","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"760eff61a6b23948f80921df65cbf7f5","time":{"start":1728028577934,"stop":1728028586531,"duration":8597},"status":"failed","statusMessage":"AssertionError: assert 20.5 == 20.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff89ab5d90>\ndevice = <golioth.golioth.Device object at 0xffff89aa8990>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 20.5 == 20.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728028567359,"stop":1728028567359,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728028567360,"stop":1728028567360,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728028567360,"stop":1728028567360,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1728028567361,"stop":1728028567361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728028567361,"stop":1728028567361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1728028567362,"stop":1728028567364,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728028567365,"stop":1728028567365,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728028567365,"stop":1728028567365,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728028567366,"stop":1728028567997,"duration":631},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728028567998,"stop":1728028569552,"duration":1554},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1728028569553,"stop":1728028577414,"duration":7861},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1728028577414,"stop":1728028577931,"duration":517},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 20.5 == 20.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff89ab5d90>\ndevice = <golioth.golioth.Device object at 0xffff89aa8990>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 20.5 == 20.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","steps":[],"attachments":[{"uid":"535258334927633e","name":"log","source":"535258334927633e.txt","type":"text/plain","size":14959}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1728028586813,"stop":1728028587112,"duration":299},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728028587114,"stop":1728028587607,"duration":493},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728028587609,"stop":1728028587612,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1728028587617,"stop":1728028587617,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"afe8cfed8d47"},{"name":"thread","value":"433-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":77,"unknown":0,"total":81},"items":[{"uid":"9b54d7c3a8436bbd","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/9b54d7c3a8436bbd","status":"passed","time":{"start":1728027579603,"stop":1728027603197,"duration":23594}},{"uid":"bbba86947c438a87","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/bbba86947c438a87","status":"passed","time":{"start":1728003363468,"stop":1728003385742,"duration":22274}},{"uid":"7a88487bcd39cea4","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/7a88487bcd39cea4","status":"passed","time":{"start":1727993876358,"stop":1727993898982,"duration":22624}},{"uid":"4ae1fde0a49d768f","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/4ae1fde0a49d768f","status":"passed","time":{"start":1727993532168,"stop":1727993550464,"duration":18296}},{"uid":"5e4a1a8b074aec23","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/5e4a1a8b074aec23","status":"passed","time":{"start":1727988632024,"stop":1727988655300,"duration":23276}},{"uid":"f82fb5dc60279fdd","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/f82fb5dc60279fdd","status":"passed","time":{"start":1727984774835,"stop":1727984798545,"duration":23710}},{"uid":"4a4833731adb6293","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/4a4833731adb6293","status":"passed","time":{"start":1727979572361,"stop":1727979595795,"duration":23434}},{"uid":"74602e8973f680a1","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/74602e8973f680a1","status":"passed","time":{"start":1727966409102,"stop":1727966432592,"duration":23490}},{"uid":"ca127e3764dff610","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/ca127e3764dff610","status":"passed","time":{"start":1727974829819,"stop":1727974852328,"duration":22509}},{"uid":"68aff4c84a69451d","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/68aff4c84a69451d","status":"passed","time":{"start":1727972022259,"stop":1727972044904,"duration":22645}},{"uid":"57b3923fb1c707fd","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/57b3923fb1c707fd","status":"passed","time":{"start":1727970726648,"stop":1727970747611,"duration":20963}},{"uid":"b4cee154d4d61d15","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/b4cee154d4d61d15","status":"passed","time":{"start":1727966409102,"stop":1727966432592,"duration":23490}},{"uid":"a723a730bc74de31","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/a723a730bc74de31","status":"passed","time":{"start":1727959258812,"stop":1727959281666,"duration":22854}},{"uid":"92809b04988c52c8","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/92809b04988c52c8","status":"passed","time":{"start":1727957800218,"stop":1727957823646,"duration":23428}},{"uid":"54dc83ca3bb42aa4","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/54dc83ca3bb42aa4","status":"passed","time":{"start":1727954670306,"stop":1727954693872,"duration":23566}},{"uid":"b43f3d4c4de55476","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/b43f3d4c4de55476","status":"passed","time":{"start":1727908130166,"stop":1727908152599,"duration":22433}},{"uid":"f2f6e148766b2f2f","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/f2f6e148766b2f2f","status":"passed","time":{"start":1727932360637,"stop":1727932383657,"duration":23020}},{"uid":"4c366017bb3f5dd2","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/4c366017bb3f5dd2","status":"passed","time":{"start":1727949620446,"stop":1727949642689,"duration":22243}},{"uid":"9ee70ee2cf6266a6","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/9ee70ee2cf6266a6","status":"passed","time":{"start":1727947552874,"stop":1727947575271,"duration":22397}},{"uid":"961eea581c6085f0","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/961eea581c6085f0","status":"passed","time":{"start":1727947415904,"stop":1727947438338,"duration":22434}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"fb410255574f2ce2.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}