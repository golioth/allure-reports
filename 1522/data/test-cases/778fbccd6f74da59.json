{"uid":"778fbccd6f74da59","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1727810782363,"stop":1727810803603,"duration":21240},"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff7cffc490>\ndevice = <golioth.golioth.Device object at 0xffff7d078090>\nproject = <golioth.golioth.Project object at 0xffff7cfedf90>\nreleases = {'test_blocks': Release <66fc4cc79816a3c02f19b46a, release_tags=[], device_tags=['66fc4cc59816a3c02f19b467'], artifact..., release_tags=[], device_tags=['66fc4cc59816a3c02f19b467'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727810737250,"stop":1727810737250,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727810737251,"stop":1727810737252,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727810737251,"stop":1727810737251,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727810737252,"stop":1727810737252,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727810737253,"stop":1727810737253,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727810737253,"stop":1727810737253,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727810737254,"stop":1727810737254,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727810737254,"stop":1727810737254,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727810737255,"stop":1727810737255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727810737255,"stop":1727810737255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727810737256,"stop":1727810737256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727810737257,"stop":1727810737257,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727810737258,"stop":1727810751959,"duration":14701},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727810751961,"stop":1727810752408,"duration":447},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727810752408,"stop":1727810753264,"duration":856},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727810753265,"stop":1727810756844,"duration":3579},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727810756846,"stop":1727810757352,"duration":506},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727810757353,"stop":1727810758153,"duration":800},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727810758154,"stop":1727810759671,"duration":1517},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727810782360,"stop":1727810782360,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff7cffc490>\ndevice = <golioth.golioth.Device object at 0xffff7d078090>\nproject = <golioth.golioth.Project object at 0xffff7cfedf90>\nreleases = {'test_blocks': Release <66fc4cc79816a3c02f19b46a, release_tags=[], device_tags=['66fc4cc59816a3c02f19b467'], artifact..., release_tags=[], device_tags=['66fc4cc59816a3c02f19b467'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"b39fcad7a038a6ae","name":"stdout","source":"b39fcad7a038a6ae.txt","type":"text/plain","size":1630}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727810803772,"stop":1727810804615,"duration":843},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727810804618,"stop":1727810806080,"duration":1462},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727810806083,"stop":1727810806838,"duration":755},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727810806840,"stop":1727810806840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727810806842,"stop":1727810806842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727810806844,"stop":1727810807318,"duration":474},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727810807320,"stop":1727810807321,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727810807322,"stop":1727810807326,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"e70255bf94e4"},{"name":"thread","value":"268-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":16,"skipped":0,"passed":32,"unknown":0,"total":52},"items":[{"uid":"ee8578ce44159e1a","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/ee8578ce44159e1a","status":"passed","time":{"start":1727806257754,"stop":1727806354982,"duration":97228}},{"uid":"5e2f37aa560d112","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/5e2f37aa560d112","status":"passed","time":{"start":1727798116540,"stop":1727798199646,"duration":83106}},{"uid":"e446c830a0490f6e","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/e446c830a0490f6e","status":"passed","time":{"start":1727797309864,"stop":1727797392339,"duration":82475}},{"uid":"471ff88a6af3aa25","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/471ff88a6af3aa25","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727789053967,"stop":1727789053967,"duration":0}},{"uid":"f8029cdbbc9d3a2c","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/f8029cdbbc9d3a2c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784839967,"stop":1727784839967,"duration":0}},{"uid":"d56c43e7d4106080","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/d56c43e7d4106080","status":"passed","time":{"start":1727774290803,"stop":1727774374008,"duration":83205}},{"uid":"e3e6e1ecaa48d6db","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/e3e6e1ecaa48d6db","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727779433462,"stop":1727779433462,"duration":0}},{"uid":"5b399f16c779cc60","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/5b399f16c779cc60","status":"passed","time":{"start":1727776952964,"stop":1727777036515,"duration":83551}},{"uid":"d7b819096db5cca0","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/d7b819096db5cca0","status":"passed","time":{"start":1727774290803,"stop":1727774374008,"duration":83205}},{"uid":"fb1a06f2a7a19f52","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/fb1a06f2a7a19f52","status":"passed","time":{"start":1727770904035,"stop":1727770991048,"duration":87013}},{"uid":"182d7fb73a19ff3d","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/182d7fb73a19ff3d","status":"passed","time":{"start":1727768810725,"stop":1727768893461,"duration":82736}},{"uid":"7e6411170e27a587","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/7e6411170e27a587","status":"passed","time":{"start":1727764521607,"stop":1727764604671,"duration":83064}},{"uid":"2f4eca4804740cc0","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/2f4eca4804740cc0","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1727763596715,"stop":1727763674479,"duration":77764}},{"uid":"7026a3c0556abe6d","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/7026a3c0556abe6d","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1727760144065,"stop":1727760206136,"duration":62071}},{"uid":"296679c0209e657d","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/296679c0209e657d","status":"passed","time":{"start":1727743678325,"stop":1727743766109,"duration":87784}},{"uid":"f3106ebecb0fcd36","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/f3106ebecb0fcd36","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727731397861,"stop":1727731417236,"duration":19375}},{"uid":"eca01dc58e79d622","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/eca01dc58e79d622","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727658020607,"stop":1727658106556,"duration":85949}},{"uid":"fdbd95d96d80c73c","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/fdbd95d96d80c73c","status":"passed","time":{"start":1727570835409,"stop":1727570917322,"duration":81913}},{"uid":"ec7fdc03ef7e3102","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/ec7fdc03ef7e3102","status":"passed","time":{"start":1727547676624,"stop":1727547759854,"duration":83230}},{"uid":"bc84344aa173c854","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/bc84344aa173c854","status":"passed","time":{"start":1727545332392,"stop":1727545416902,"duration":84510}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"778fbccd6f74da59.json","parameterValues":["'nrf9160dk'","'zephyr'"]}