{"uid":"5d5cf798d06140ff","name":"test_set_bool","fullName":"tests.hil.tests.settings.test_settings#test_set_bool","historyId":"aeabdc522f7c2afe45bc849dc781a6fb","time":{"start":1727811144721,"stop":1727811150028,"duration":5307},"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff95c1a990>\ndevice = <golioth.golioth.Device object at 0xffff95c117d0>\n\n    async def test_set_bool(board, device):\n>       await device.settings.set('TEST_BOOL', True)\n\ntests/hil/tests/settings/test_settings.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727811026966,"stop":1727811026966,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727811026967,"stop":1727811026967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727811026968,"stop":1727811026968,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727811026969,"stop":1727811026970,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727811026969,"stop":1727811026969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727811026970,"stop":1727811026970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727811026971,"stop":1727811026971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727811026971,"stop":1727811026971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727811026972,"stop":1727811026972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727811026972,"stop":1727811026972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727811026973,"stop":1727811026973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727811026973,"stop":1727811026973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727811026974,"stop":1727811027370,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727811027371,"stop":1727811046509,"duration":19138},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727811046510,"stop":1727811047438,"duration":928},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727811047439,"stop":1727811076705,"duration":29266},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727811205119,"stop":1727811205119,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727811205122,"stop":1727811205472,"duration":350},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727811205475,"stop":1727811205481,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727811205483,"stop":1727811205486,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"623b3705a7f0"},{"name":"thread","value":"289-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":45,"unknown":0,"total":50},"items":[{"uid":"57445ecbd90c8b7d","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/57445ecbd90c8b7d","status":"passed","time":{"start":1727806482519,"stop":1727806489535,"duration":7016}},{"uid":"93bfacf42502c069","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/93bfacf42502c069","status":"passed","time":{"start":1727796921963,"stop":1727796928066,"duration":6103}},{"uid":"8690fe95e8710235","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/8690fe95e8710235","status":"passed","time":{"start":1727795392404,"stop":1727795398358,"duration":5954}},{"uid":"9057cc075610e5f2","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/9057cc075610e5f2","status":"passed","time":{"start":1727790204243,"stop":1727790210569,"duration":6326}},{"uid":"5e97400a7b91047e","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/5e97400a7b91047e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727785545822,"stop":1727785545822,"duration":0}},{"uid":"542e83b2e27fac21","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/542e83b2e27fac21","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784584136,"stop":1727784584136,"duration":0}},{"uid":"9e09cd4440b2d006","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/9e09cd4440b2d006","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727780137828,"stop":1727780137828,"duration":0}},{"uid":"3345440c0d80acbf","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/3345440c0d80acbf","status":"passed","time":{"start":1727777016973,"stop":1727777024042,"duration":7069}},{"uid":"664842338a10d6dd","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/664842338a10d6dd","status":"passed","time":{"start":1727773909725,"stop":1727773915235,"duration":5510}},{"uid":"c29e2d6284a1a75b","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/c29e2d6284a1a75b","status":"passed","time":{"start":1727768645437,"stop":1727768651275,"duration":5838}},{"uid":"b9b54acbf23b22d0","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/b9b54acbf23b22d0","status":"passed","time":{"start":1727763425782,"stop":1727763431523,"duration":5741}},{"uid":"90a73249a6ce0019","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/90a73249a6ce0019","status":"passed","time":{"start":1727762160376,"stop":1727762166393,"duration":6017}},{"uid":"65c08afc8b85f3cb","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/65c08afc8b85f3cb","status":"passed","time":{"start":1727758879038,"stop":1727758886116,"duration":7078}},{"uid":"880a9a0b3ab6606e","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/880a9a0b3ab6606e","status":"passed","time":{"start":1727744005024,"stop":1727744011483,"duration":6459}},{"uid":"fcf0de12b1e0554d","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/fcf0de12b1e0554d","status":"passed","time":{"start":1727731485144,"stop":1727731491858,"duration":6714}},{"uid":"9d01a0e0e72e818a","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/9d01a0e0e72e818a","status":"passed","time":{"start":1727657502604,"stop":1727657507774,"duration":5170}},{"uid":"a6ea844d4f543c2e","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/a6ea844d4f543c2e","status":"passed","time":{"start":1727571175556,"stop":1727571181877,"duration":6321}},{"uid":"a5c1dcbc3f70e551","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/a5c1dcbc3f70e551","status":"passed","time":{"start":1727546587019,"stop":1727546593112,"duration":6093}},{"uid":"7cad67a677902f2a","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/7cad67a677902f2a","status":"passed","time":{"start":1727543599329,"stop":1727543605610,"duration":6281}},{"uid":"3d73a9ecb77ec0cc","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/3d73a9ecb77ec0cc","status":"passed","time":{"start":1727541689791,"stop":1727541695725,"duration":5934}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"5d5cf798d06140ff.json","parameterValues":["'rak5010'","'zephyr'"]}