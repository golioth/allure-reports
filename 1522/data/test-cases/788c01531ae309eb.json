{"uid":"788c01531ae309eb","name":"test_set_int_range_max","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_max","historyId":"093f25776b047cea25c3e7831c42397d","time":{"start":1727811125550,"stop":1727811130856,"duration":5306},"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff95c1a990>\ndevice = <golioth.golioth.Device object at 0xffff95c117d0>\n\n    async def test_set_int_range_max(board, device):\n>       await device.settings.set('TEST_INT_RANGE', 100)\n\ntests/hil/tests/settings/test_settings.py:111: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727811026966,"stop":1727811026966,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727811026967,"stop":1727811026967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727811026968,"stop":1727811026968,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727811026969,"stop":1727811026970,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727811026969,"stop":1727811026969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727811026970,"stop":1727811026970,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727811026971,"stop":1727811026971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727811026971,"stop":1727811026971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727811026972,"stop":1727811026972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727811026972,"stop":1727811026972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727811026973,"stop":1727811026973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727811026973,"stop":1727811026973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727811026974,"stop":1727811027370,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727811027371,"stop":1727811046509,"duration":19138},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727811046510,"stop":1727811047438,"duration":928},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727811047439,"stop":1727811076705,"duration":29266},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727811205119,"stop":1727811205119,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727811205122,"stop":1727811205472,"duration":350},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727811205475,"stop":1727811205481,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727811205483,"stop":1727811205486,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"623b3705a7f0"},{"name":"thread","value":"289-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":45,"unknown":0,"total":50},"items":[{"uid":"ebc748c20333f567","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/ebc748c20333f567","status":"passed","time":{"start":1727806449938,"stop":1727806456420,"duration":6482}},{"uid":"42e72b9b5d6b0646","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/42e72b9b5d6b0646","status":"passed","time":{"start":1727796889676,"stop":1727796896209,"duration":6533}},{"uid":"36422e7a77334442","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/36422e7a77334442","status":"passed","time":{"start":1727795361145,"stop":1727795366317,"duration":5172}},{"uid":"5b8c310382f318fa","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/5b8c310382f318fa","status":"passed","time":{"start":1727790173165,"stop":1727790178390,"duration":5225}},{"uid":"898518b677e25de1","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/898518b677e25de1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727785544717,"stop":1727785544717,"duration":0}},{"uid":"cb9f16ba3032ad10","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/cb9f16ba3032ad10","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784583043,"stop":1727784583043,"duration":0}},{"uid":"5816eae4371a5fb4","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/5816eae4371a5fb4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727780136728,"stop":1727780136728,"duration":0}},{"uid":"55b0453f27cf2cc2","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/55b0453f27cf2cc2","status":"passed","time":{"start":1727776985398,"stop":1727776990594,"duration":5196}},{"uid":"bae90a5ba1719e8c","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/bae90a5ba1719e8c","status":"passed","time":{"start":1727773878870,"stop":1727773883975,"duration":5105}},{"uid":"c084c297fe9cf22f","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/c084c297fe9cf22f","status":"passed","time":{"start":1727768614259,"stop":1727768619378,"duration":5119}},{"uid":"ad1deb668a0a4f4","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/ad1deb668a0a4f4","status":"passed","time":{"start":1727763394444,"stop":1727763399635,"duration":5191}},{"uid":"83dd41b9a7e8ac42","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/83dd41b9a7e8ac42","status":"passed","time":{"start":1727762128541,"stop":1727762133715,"duration":5174}},{"uid":"d749eb24f95cb306","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/d749eb24f95cb306","status":"passed","time":{"start":1727758847901,"stop":1727758853099,"duration":5198}},{"uid":"d0478c0726ce72f3","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/d0478c0726ce72f3","status":"passed","time":{"start":1727743973336,"stop":1727743979283,"duration":5947}},{"uid":"7e128460f50b03f0","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/7e128460f50b03f0","status":"passed","time":{"start":1727731454659,"stop":1727731459557,"duration":4898}},{"uid":"77e7f0ce0523b2b4","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/77e7f0ce0523b2b4","status":"passed","time":{"start":1727657471862,"stop":1727657477018,"duration":5156}},{"uid":"fb8e57d8d47c917b","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/fb8e57d8d47c917b","status":"passed","time":{"start":1727571144801,"stop":1727571149839,"duration":5038}},{"uid":"9a6c5e6ced7c8af0","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/9a6c5e6ced7c8af0","status":"passed","time":{"start":1727546555651,"stop":1727546561224,"duration":5573}},{"uid":"65359deb0cd9c0fe","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/65359deb0cd9c0fe","status":"passed","time":{"start":1727543567320,"stop":1727543573104,"duration":5784}},{"uid":"7650f08b0f20f9de","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/7650f08b0f20f9de","status":"passed","time":{"start":1727541657508,"stop":1727541663867,"duration":6359}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"788c01531ae309eb.json","parameterValues":["'rak5010'","'zephyr'"]}