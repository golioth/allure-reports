{"uid":"9de8fb78d7647e55","name":"test_set_int_range_max","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings#test_set_int_range_max","historyId":"98608cfd1fe086d7d7050891dce09ee2","time":{"start":1760055888380,"stop":1760055888380,"duration":0},"status":"broken","statusMessage":"httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/664d30f462d5d01cffff10ff'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500","statusTrace":"project = <golioth.golioth.Project object at 0x7efd2927bb60>\nboard = <pytest_hil.native_sim.NativeSimBoard object at 0x7efd2913cc20>\ndevice = <golioth.golioth.Device object at 0x7efd2913d550>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n>       await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:1063: in set\n    response = await self.project.put('settings/' + setting['id'], json=json)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [500 Internal Server Error]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/664d30f462d5d01cffff10ff'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500\n\n/root/venv/lib/python3.13/site-packages/httpx/_models.py:829: HTTPStatusError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"baud","time":{"start":1760055885139,"stop":1760055885139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1760055885139,"stop":1760055885139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760055885140,"stop":1760055885444,"duration":304},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760055885444,"stop":1760055885446,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760055885446,"stop":1760055885868,"duration":422},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760055885868,"stop":1760055888157,"duration":2289},"status":"broken","statusMessage":"httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/664d30f462d5d01cffff10ff'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500\n","statusTrace":"  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1196, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 923, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py\", line 119, in wrapper\n    yield runner.run_fixture(local_func, kwargs)\n          ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 967, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 942, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 912, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/modules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 33, in setup\n    await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n  File \"/root/venv/lib/python3.13/site-packages/golioth/golioth.py\", line 1063, in set\n    response = await self.project.put('settings/' + setting['id'], json=json)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/golioth/golioth.py\", line 83, in wrapper\n    resp.raise_for_status()\n    ~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/httpx/_models.py\", line 829, in raise_for_status\n    raise HTTPStatusError(message, request=request, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1760055888771,"stop":1760055888918,"duration":147},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760055888919,"stop":1760055888933,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760055888933,"stop":1760055888934,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_64"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"5f4bbc96ba44"},{"name":"thread","value":"7643-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":91,"unknown":0,"total":92},"items":[{"uid":"3c120a0eaea591e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/3c120a0eaea591e","status":"passed","time":{"start":1760048192561,"stop":1760048195330,"duration":2769}},{"uid":"d9a4abf0e94b0788","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/d9a4abf0e94b0788","status":"passed","time":{"start":1760040545712,"stop":1760040548214,"duration":2502}},{"uid":"df4f99369006ad8a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/df4f99369006ad8a","status":"passed","time":{"start":1760038994861,"stop":1760038997454,"duration":2593}},{"uid":"f282d34ceaeacc2a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/f282d34ceaeacc2a","status":"passed","time":{"start":1760026425719,"stop":1760026428232,"duration":2513}},{"uid":"4835dca7bffefb2","reportUrl":"https://golioth.github.io/allure-reports/recurring/1679//#testresult/4835dca7bffefb2","status":"passed","time":{"start":1760011928892,"stop":1760011931673,"duration":2781}},{"uid":"d4b2978f698f6d31","reportUrl":"https://golioth.github.io/allure-reports/recurring/1678//#testresult/d4b2978f698f6d31","status":"passed","time":{"start":1759997424924,"stop":1759997427687,"duration":2763}},{"uid":"17bcfb5319829a78","reportUrl":"https://golioth.github.io/allure-reports/recurring/1677//#testresult/17bcfb5319829a78","status":"passed","time":{"start":1759982975787,"stop":1759982978711,"duration":2924}},{"uid":"da0c0036ab662ff4","reportUrl":"https://golioth.github.io/allure-reports/recurring/1676//#testresult/da0c0036ab662ff4","status":"passed","time":{"start":1759969518559,"stop":1759969521016,"duration":2457}},{"uid":"2c80300dab6c9b28","reportUrl":"https://golioth.github.io/allure-reports/recurring/1675//#testresult/2c80300dab6c9b28","status":"passed","time":{"start":1759954141199,"stop":1759954144212,"duration":3013}},{"uid":"ce8d53033f18c792","reportUrl":"https://golioth.github.io/allure-reports/recurring/1674//#testresult/ce8d53033f18c792","status":"passed","time":{"start":1759939799405,"stop":1759939802211,"duration":2806}},{"uid":"ab4426929129ca1c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1673//#testresult/ab4426929129ca1c","status":"passed","time":{"start":1759925561329,"stop":1759925563837,"duration":2508}},{"uid":"d0e1e651fde0e2c2","reportUrl":"https://golioth.github.io/allure-reports/recurring/1672//#testresult/d0e1e651fde0e2c2","status":"passed","time":{"start":1759911045746,"stop":1759911048250,"duration":2504}},{"uid":"916f4218b9515c85","reportUrl":"https://golioth.github.io/allure-reports/recurring/1671//#testresult/916f4218b9515c85","status":"passed","time":{"start":1759896553545,"stop":1759896556045,"duration":2500}},{"uid":"15e59e1d74d6efb0","reportUrl":"https://golioth.github.io/allure-reports/recurring/1670//#testresult/15e59e1d74d6efb0","status":"passed","time":{"start":1759883118707,"stop":1759883121470,"duration":2763}},{"uid":"a0fe1133d9663a88","reportUrl":"https://golioth.github.io/allure-reports/recurring/1669//#testresult/a0fe1133d9663a88","status":"passed","time":{"start":1759867728471,"stop":1759867731223,"duration":2752}},{"uid":"4c3942c3892d7373","reportUrl":"https://golioth.github.io/allure-reports/recurring/1668//#testresult/4c3942c3892d7373","status":"passed","time":{"start":1759853434865,"stop":1759853437552,"duration":2687}},{"uid":"ac4f73ac43c04eca","reportUrl":"https://golioth.github.io/allure-reports/recurring/1667//#testresult/ac4f73ac43c04eca","status":"passed","time":{"start":1759839158122,"stop":1759839160881,"duration":2759}},{"uid":"a1690eaf5c68c63","reportUrl":"https://golioth.github.io/allure-reports/recurring/1666//#testresult/a1690eaf5c68c63","status":"passed","time":{"start":1759824605903,"stop":1759824608404,"duration":2501}},{"uid":"b24275a885c0a118","reportUrl":"https://golioth.github.io/allure-reports/recurring/1665//#testresult/b24275a885c0a118","status":"passed","time":{"start":1759810167215,"stop":1759810169976,"duration":2761}},{"uid":"18dd3fa85de8ebe","reportUrl":"https://golioth.github.io/allure-reports/recurring/1664//#testresult/18dd3fa85de8ebe","status":"passed","time":{"start":1759796735747,"stop":1759796738602,"duration":2855}}]},"tags":["native_sim_64","anyio","zephyr"]},"source":"9de8fb78d7647e55.json","parameterValues":["'native_sim_64'","'zephyr'"]}