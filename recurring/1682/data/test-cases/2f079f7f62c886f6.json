{"uid":"2f079f7f62c886f6","name":"test_set_int_range_min","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings#test_set_int_range_min","historyId":"f2fbedf51d8196c68bd555a3b53995c6","time":{"start":1760055888345,"stop":1760055888345,"duration":0},"status":"broken","statusMessage":"httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/664d30f462d5d01cffff10ff'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500","statusTrace":"project = <golioth.golioth.Project object at 0x7efd2927bb60>\nboard = <pytest_hil.native_sim.NativeSimBoard object at 0x7efd2913cc20>\ndevice = <golioth.golioth.Device object at 0x7efd2913d550>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n>       await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:1063: in set\n    response = await self.project.put('settings/' + setting['id'], json=json)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [500 Internal Server Error]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/664d30f462d5d01cffff10ff'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500\n\n/root/venv/lib/python3.13/site-packages/httpx/_models.py:829: HTTPStatusError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"baud","time":{"start":1760055885139,"stop":1760055885139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1760055885139,"stop":1760055885139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760055885140,"stop":1760055885444,"duration":304},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760055885444,"stop":1760055885446,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760055885446,"stop":1760055885868,"duration":422},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760055885868,"stop":1760055888157,"duration":2289},"status":"broken","statusMessage":"httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/664d30f462d5d01cffff10ff'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500\n","statusTrace":"  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1196, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 923, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py\", line 119, in wrapper\n    yield runner.run_fixture(local_func, kwargs)\n          ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 967, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 942, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 912, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/modules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 33, in setup\n    await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n  File \"/root/venv/lib/python3.13/site-packages/golioth/golioth.py\", line 1063, in set\n    response = await self.project.put('settings/' + setting['id'], json=json)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/golioth/golioth.py\", line 83, in wrapper\n    resp.raise_for_status()\n    ~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/httpx/_models.py\", line 829, in raise_for_status\n    raise HTTPStatusError(message, request=request, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1760055888771,"stop":1760055888918,"duration":147},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760055888919,"stop":1760055888933,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760055888933,"stop":1760055888934,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_64"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"5f4bbc96ba44"},{"name":"thread","value":"7643-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":91,"unknown":0,"total":92},"items":[{"uid":"18c8b19b748c5b9b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/18c8b19b748c5b9b","status":"passed","time":{"start":1760048189813,"stop":1760048192559,"duration":2746}},{"uid":"39495e6eda8426f1","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/39495e6eda8426f1","status":"passed","time":{"start":1760040543193,"stop":1760040545711,"duration":2518}},{"uid":"8290deb88dd5ba53","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/8290deb88dd5ba53","status":"passed","time":{"start":1760038992384,"stop":1760038994860,"duration":2476}},{"uid":"c3fef380e433185a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/c3fef380e433185a","status":"passed","time":{"start":1760026423055,"stop":1760026425718,"duration":2663}},{"uid":"87d1f1a55c0cb9ef","reportUrl":"https://golioth.github.io/allure-reports/recurring/1679//#testresult/87d1f1a55c0cb9ef","status":"passed","time":{"start":1760011926416,"stop":1760011928891,"duration":2475}},{"uid":"705e982342bf3da2","reportUrl":"https://golioth.github.io/allure-reports/recurring/1678//#testresult/705e982342bf3da2","status":"passed","time":{"start":1759997422167,"stop":1759997424922,"duration":2755}},{"uid":"1349abb1489172b8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1677//#testresult/1349abb1489172b8","status":"passed","time":{"start":1759982972947,"stop":1759982975785,"duration":2838}},{"uid":"bc93394862dece83","reportUrl":"https://golioth.github.io/allure-reports/recurring/1676//#testresult/bc93394862dece83","status":"passed","time":{"start":1759969516003,"stop":1759969518557,"duration":2554}},{"uid":"106f57aaac3b321e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1675//#testresult/106f57aaac3b321e","status":"passed","time":{"start":1759954137787,"stop":1759954141198,"duration":3411}},{"uid":"e5d7817bc5ba2ff6","reportUrl":"https://golioth.github.io/allure-reports/recurring/1674//#testresult/e5d7817bc5ba2ff6","status":"passed","time":{"start":1759939796688,"stop":1759939799403,"duration":2715}},{"uid":"a2ff691ffefbeb35","reportUrl":"https://golioth.github.io/allure-reports/recurring/1673//#testresult/a2ff691ffefbeb35","status":"passed","time":{"start":1759925558825,"stop":1759925561327,"duration":2502}},{"uid":"1cb1f20115fbe895","reportUrl":"https://golioth.github.io/allure-reports/recurring/1672//#testresult/1cb1f20115fbe895","status":"passed","time":{"start":1759911043238,"stop":1759911045744,"duration":2506}},{"uid":"89957d4768ec9204","reportUrl":"https://golioth.github.io/allure-reports/recurring/1671//#testresult/89957d4768ec9204","status":"passed","time":{"start":1759896551025,"stop":1759896553544,"duration":2519}},{"uid":"3151b512b86ee7e9","reportUrl":"https://golioth.github.io/allure-reports/recurring/1670//#testresult/3151b512b86ee7e9","status":"passed","time":{"start":1759883115872,"stop":1759883118706,"duration":2834}},{"uid":"dd40bff3401925b8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1669//#testresult/dd40bff3401925b8","status":"passed","time":{"start":1759867725708,"stop":1759867728470,"duration":2762}},{"uid":"344698a621fa29ad","reportUrl":"https://golioth.github.io/allure-reports/recurring/1668//#testresult/344698a621fa29ad","status":"passed","time":{"start":1759853431288,"stop":1759853434863,"duration":3575}},{"uid":"8eff4dea1fda305","reportUrl":"https://golioth.github.io/allure-reports/recurring/1667//#testresult/8eff4dea1fda305","status":"passed","time":{"start":1759839155217,"stop":1759839158120,"duration":2903}},{"uid":"650939ae4b8c12ba","reportUrl":"https://golioth.github.io/allure-reports/recurring/1666//#testresult/650939ae4b8c12ba","status":"passed","time":{"start":1759824603410,"stop":1759824605901,"duration":2491}},{"uid":"2e18b4e3b5edb5a6","reportUrl":"https://golioth.github.io/allure-reports/recurring/1665//#testresult/2e18b4e3b5edb5a6","status":"passed","time":{"start":1759810164714,"stop":1759810167214,"duration":2500}},{"uid":"ff6c26208e8ff65c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1664//#testresult/ff6c26208e8ff65c","status":"passed","time":{"start":1759796733010,"stop":1759796735745,"duration":2735}}]},"tags":["native_sim_64","anyio","zephyr"]},"source":"2f079f7f62c886f6.json","parameterValues":["'native_sim_64'","'zephyr'"]}