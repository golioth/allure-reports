{"uid":"a53b0eb3223a756a","name":"test_set_string","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings#test_set_string","historyId":"66d70db25b34e3e5461a1cbe5ac454da","time":{"start":1760055888594,"stop":1760055888594,"duration":0},"status":"broken","statusMessage":"httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/664d30f462d5d01cffff10ff'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500","statusTrace":"project = <golioth.golioth.Project object at 0x7efd2927bb60>\nboard = <pytest_hil.native_sim.NativeSimBoard object at 0x7efd2913cc20>\ndevice = <golioth.golioth.Device object at 0x7efd2913d550>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n>       await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:1063: in set\n    response = await self.project.put('settings/' + setting['id'], json=json)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:83: in wrapper\n    resp.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [500 Internal Server Error]>\n\n    def raise_for_status(self) -> Response:\n        \"\"\"\n        Raise the `HTTPStatusError` if one occurred.\n        \"\"\"\n        request = self._request\n        if request is None:\n            raise RuntimeError(\n                \"Cannot call `raise_for_status` as the request \"\n                \"instance has not been set on this response.\"\n            )\n    \n        if self.is_success:\n            return self\n    \n        if self.has_redirect_location:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"Redirect location: '{0.headers[location]}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n        else:\n            message = (\n                \"{error_type} '{0.status_code} {0.reason_phrase}' for url '{0.url}'\\n\"\n                \"For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/{0.status_code}\"\n            )\n    \n        status_class = self.status_code // 100\n        error_types = {\n            1: \"Informational response\",\n            3: \"Redirect response\",\n            4: \"Client error\",\n            5: \"Server error\",\n        }\n        error_type = error_types.get(status_class, \"Invalid status code\")\n        message = message.format(self, error_type=error_type)\n>       raise HTTPStatusError(message, request=request, response=self)\nE       httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/664d30f462d5d01cffff10ff'\nE       For more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500\n\n/root/venv/lib/python3.13/site-packages/httpx/_models.py:829: HTTPStatusError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"baud","time":{"start":1760055885139,"stop":1760055885139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1760055885139,"stop":1760055885139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760055885140,"stop":1760055885444,"duration":304},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760055885140,"stop":1760055885140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760055885444,"stop":1760055885446,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760055885446,"stop":1760055885868,"duration":422},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760055885868,"stop":1760055888157,"duration":2289},"status":"broken","statusMessage":"httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/settings/664d30f462d5d01cffff10ff'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500\n","statusTrace":"  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1196, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 923, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py\", line 119, in wrapper\n    yield runner.run_fixture(local_func, kwargs)\n          ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 967, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 942, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 912, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/modules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 33, in setup\n    await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n  File \"/root/venv/lib/python3.13/site-packages/golioth/golioth.py\", line 1063, in set\n    response = await self.project.put('settings/' + setting['id'], json=json)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/golioth/golioth.py\", line 83, in wrapper\n    resp.raise_for_status()\n    ~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/httpx/_models.py\", line 829, in raise_for_status\n    raise HTTPStatusError(message, request=request, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1760055888771,"stop":1760055888918,"duration":147},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760055888919,"stop":1760055888933,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760055888933,"stop":1760055888934,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_64"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"5f4bbc96ba44"},{"name":"thread","value":"7643-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":91,"unknown":0,"total":92},"items":[{"uid":"a2a2e5b141925a4","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/a2a2e5b141925a4","status":"passed","time":{"start":1760048227421,"stop":1760048230420,"duration":2999}},{"uid":"9ef642de6f4a80cb","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/9ef642de6f4a80cb","status":"passed","time":{"start":1760040578301,"stop":1760040580813,"duration":2512}},{"uid":"471bb5e2d84097a7","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/471bb5e2d84097a7","status":"passed","time":{"start":1760039028190,"stop":1760039030742,"duration":2552}},{"uid":"f4903dd3f0964ae8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/f4903dd3f0964ae8","status":"passed","time":{"start":1760026459063,"stop":1760026461865,"duration":2802}},{"uid":"65f0c283c796a84c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1679//#testresult/65f0c283c796a84c","status":"passed","time":{"start":1760011962751,"stop":1760011965499,"duration":2748}},{"uid":"94a0129d187a75fe","reportUrl":"https://golioth.github.io/allure-reports/recurring/1678//#testresult/94a0129d187a75fe","status":"passed","time":{"start":1759997460528,"stop":1759997463544,"duration":3016}},{"uid":"c9645f0ed3072cb5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1677//#testresult/c9645f0ed3072cb5","status":"passed","time":{"start":1759983010795,"stop":1759983013788,"duration":2993}},{"uid":"4c73fb9ac0ae7cee","reportUrl":"https://golioth.github.io/allure-reports/recurring/1676//#testresult/4c73fb9ac0ae7cee","status":"passed","time":{"start":1759969551487,"stop":1759969554112,"duration":2625}},{"uid":"dbd7c4426144a61b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1675//#testresult/dbd7c4426144a61b","status":"passed","time":{"start":1759954176692,"stop":1759954179535,"duration":2843}},{"uid":"5129e8facb98f6c4","reportUrl":"https://golioth.github.io/allure-reports/recurring/1674//#testresult/5129e8facb98f6c4","status":"passed","time":{"start":1759939835058,"stop":1759939838040,"duration":2982}},{"uid":"1caceed6109547a2","reportUrl":"https://golioth.github.io/allure-reports/recurring/1673//#testresult/1caceed6109547a2","status":"passed","time":{"start":1759925593932,"stop":1759925596865,"duration":2933}},{"uid":"ba254136017ad28b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1672//#testresult/ba254136017ad28b","status":"passed","time":{"start":1759911079340,"stop":1759911082110,"duration":2770}},{"uid":"6d70a99d5a3bf9f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1671//#testresult/6d70a99d5a3bf9f","status":"passed","time":{"start":1759896587133,"stop":1759896589884,"duration":2751}},{"uid":"dc16ff5a2dd9c9","reportUrl":"https://golioth.github.io/allure-reports/recurring/1670//#testresult/dc16ff5a2dd9c9","status":"passed","time":{"start":1759883153566,"stop":1759883156571,"duration":3005}},{"uid":"74aa780d992d6766","reportUrl":"https://golioth.github.io/allure-reports/recurring/1669//#testresult/74aa780d992d6766","status":"passed","time":{"start":1759867763344,"stop":1759867766358,"duration":3014}},{"uid":"f33c788a4988836b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1668//#testresult/f33c788a4988836b","status":"passed","time":{"start":1759853470397,"stop":1759853473408,"duration":3011}},{"uid":"92dca551771a7e3e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1667//#testresult/92dca551771a7e3e","status":"passed","time":{"start":1759839193224,"stop":1759839196281,"duration":3057}},{"uid":"54426a3af2872df8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1666//#testresult/54426a3af2872df8","status":"passed","time":{"start":1759824639336,"stop":1759824642111,"duration":2775}},{"uid":"2788ce9d85c602f3","reportUrl":"https://golioth.github.io/allure-reports/recurring/1665//#testresult/2788ce9d85c602f3","status":"passed","time":{"start":1759810201580,"stop":1759810204418,"duration":2838}},{"uid":"a6cc9e36ac67f9f8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1664//#testresult/a6cc9e36ac67f9f8","status":"passed","time":{"start":1759796769601,"stop":1759796772355,"duration":2754}}]},"tags":["native_sim_64","anyio","zephyr"]},"source":"a53b0eb3223a756a.json","parameterValues":["'native_sim_64'","'zephyr'"]}