{"uid":"105a93a62a6ca5a4","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"62f122e1e892b6a4ca7700385fbbf6dd","time":{"start":1760458578341,"stop":1760458599651,"duration":21310},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f66781e0980>\ndevice = <golioth.golioth.Device object at 0x7f66780a6120>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None and wifi_psk is not None:\n            shell.exec_command(f\"wifi cred add -k 1 -s \\\"{wifi_ssid}\\\" -p \\\"{wifi_psk}\\\"\")\n            shell.exec_command(\"wifi cred auto_connect\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:52: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"api_key","time":{"start":1760458577920,"stop":1760458577920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760458577920,"stop":1760458577920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760458577920,"stop":1760458577920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760458577920,"stop":1760458577920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1760458577920,"stop":1760458577920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1760458577920,"stop":1760458577920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760458577920,"stop":1760458577920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1760458577920,"stop":1760458577920,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760458577921,"stop":1760458578079,"duration":158},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760458578079,"stop":1760458578333,"duration":254},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1760458578333,"stop":1760458578334,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1760458578334,"stop":1760458578341,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f66781e0980>\ndevice = <golioth.golioth.Device object at 0x7f66780a6120>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None and wifi_psk is not None:\n            shell.exec_command(f\"wifi cred add -k 1 -s \\\"{wifi_ssid}\\\" -p \\\"{wifi_psk}\\\"\")\n            shell.exec_command(\"wifi cred auto_connect\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:52: AssertionError","steps":[],"attachments":[{"uid":"e2081cd8adfe8493","name":"log","source":"e2081cd8adfe8493.txt","type":"text/plain","size":15406}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1760458599685,"stop":1760458599786,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760458599786,"stop":1760458599901,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760458599902,"stop":1760458599902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1760458599903,"stop":1760458599903,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_32"},{"name":"tag","value":"GitHub Actions 1000064809"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"01b70d8baeb0"},{"name":"thread","value":"108773-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1c82a84d62ca866c","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1760458558381,"stop":1760458579643,"duration":21262}},{"uid":"d0ec9d85368015ae","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1760458555838,"stop":1760458577129,"duration":21291}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":4,"skipped":0,"passed":112,"unknown":0,"total":121},"items":[{"uid":"1d12c4eba9b1ad8e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1709//#testresult/1d12c4eba9b1ad8e","status":"passed","time":{"start":1760444357723,"stop":1760444379137,"duration":21414}},{"uid":"d5d551dacb910ca1","reportUrl":"https://golioth.github.io/allure-reports/recurring/1708//#testresult/d5d551dacb910ca1","status":"passed","time":{"start":1760429802954,"stop":1760429824438,"duration":21484}},{"uid":"f7702388663c1744","reportUrl":"https://golioth.github.io/allure-reports/recurring/1707//#testresult/f7702388663c1744","status":"passed","time":{"start":1760415355283,"stop":1760415376626,"duration":21343}},{"uid":"d14c75933e6abf42","reportUrl":"https://golioth.github.io/allure-reports/recurring/1706//#testresult/d14c75933e6abf42","status":"passed","time":{"start":1760401867880,"stop":1760401889637,"duration":21757}},{"uid":"1e59961a4e8e791","reportUrl":"https://golioth.github.io/allure-reports/recurring/1705//#testresult/1e59961a4e8e791","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1760386532134,"stop":1760386558365,"duration":26231}},{"uid":"b2dc2b35fd62bb65","reportUrl":"https://golioth.github.io/allure-reports/recurring/1704//#testresult/b2dc2b35fd62bb65","status":"passed","time":{"start":1760372154623,"stop":1760372176632,"duration":22009}},{"uid":"72a9030bb54ff682","reportUrl":"https://golioth.github.io/allure-reports/recurring/1703//#testresult/72a9030bb54ff682","status":"passed","time":{"start":1760357946258,"stop":1760357968463,"duration":22205}},{"uid":"1561c7166d2f1768","reportUrl":"https://golioth.github.io/allure-reports/recurring/1702//#testresult/1561c7166d2f1768","status":"passed","time":{"start":1760343448759,"stop":1760343470199,"duration":21440}},{"uid":"877140ae29329924","reportUrl":"https://golioth.github.io/allure-reports/recurring/1701//#testresult/877140ae29329924","status":"passed","time":{"start":1760328966116,"stop":1760328987668,"duration":21552}},{"uid":"a89afe0e50da0e81","reportUrl":"https://golioth.github.io/allure-reports/recurring/1700//#testresult/a89afe0e50da0e81","status":"passed","time":{"start":1760315607091,"stop":1760315628394,"duration":21303}},{"uid":"133500be6c59b249","reportUrl":"https://golioth.github.io/allure-reports/recurring/1699//#testresult/133500be6c59b249","status":"passed","time":{"start":1760300095436,"stop":1760300116773,"duration":21337}},{"uid":"54c7d79f171e82a7","reportUrl":"https://golioth.github.io/allure-reports/recurring/1698//#testresult/54c7d79f171e82a7","status":"passed","time":{"start":1760285704270,"stop":1760285725656,"duration":21386}},{"uid":"e319a64730672c81","reportUrl":"https://golioth.github.io/allure-reports/recurring/1697//#testresult/e319a64730672c81","status":"passed","time":{"start":1760271435039,"stop":1760271456413,"duration":21374}},{"uid":"f314c47680fec4a8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1696//#testresult/f314c47680fec4a8","status":"passed","time":{"start":1760256947531,"stop":1760256968790,"duration":21259}},{"uid":"cef4d7f39031369f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1695//#testresult/cef4d7f39031369f","status":"passed","time":{"start":1760242544394,"stop":1760242565686,"duration":21292}},{"uid":"9da7aa60882deacd","reportUrl":"https://golioth.github.io/allure-reports/recurring/1694//#testresult/9da7aa60882deacd","status":"passed","time":{"start":1760232181279,"stop":1760232202586,"duration":21307}},{"uid":"c52606df4ed690e0","reportUrl":"https://golioth.github.io/allure-reports/recurring/1694//#testresult/c52606df4ed690e0","status":"passed","time":{"start":1760229155688,"stop":1760229177120,"duration":21432}},{"uid":"bda3d13e0b450940","reportUrl":"https://golioth.github.io/allure-reports/recurring/1693//#testresult/bda3d13e0b450940","status":"passed","time":{"start":1760213682961,"stop":1760213704320,"duration":21359}},{"uid":"7061953c2e007d34","reportUrl":"https://golioth.github.io/allure-reports/recurring/1692//#testresult/7061953c2e007d34","status":"passed","time":{"start":1760199305679,"stop":1760199327017,"duration":21338}},{"uid":"df6ff445fabfd2c6","reportUrl":"https://golioth.github.io/allure-reports/recurring/1691//#testresult/df6ff445fabfd2c6","status":"passed","time":{"start":1760185037963,"stop":1760185059317,"duration":21354}}]},"tags":["GitHub Actions 1000064809","anyio","native_sim_32","zephyr"]},"source":"105a93a62a6ca5a4.json","parameterValues":["'native_sim_32'","'zephyr'"]}