{"uid":"33b3409de258a1db","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"d8989de114c223477a1d53d831d12112","time":{"start":1760458592621,"stop":1760458614087,"duration":21466},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f390f34c980>\ndevice = <golioth.golioth.Device object at 0x7f390f216120>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None and wifi_psk is not None:\n            shell.exec_command(f\"wifi cred add -k 1 -s \\\"{wifi_ssid}\\\" -p \\\"{wifi_psk}\\\"\")\n            shell.exec_command(\"wifi cred auto_connect\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:52: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_ssid","time":{"start":1760458591877,"stop":1760458591877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1760458591877,"stop":1760458591877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760458591877,"stop":1760458591877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760458591877,"stop":1760458591877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1760458591878,"stop":1760458591878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760458591878,"stop":1760458591878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1760458591878,"stop":1760458591878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760458591878,"stop":1760458592123,"duration":245},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760458591878,"stop":1760458591878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760458592123,"stop":1760458592609,"duration":486},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1760458592609,"stop":1760458592610,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1760458592610,"stop":1760458592620,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f390f34c980>\ndevice = <golioth.golioth.Device object at 0x7f390f216120>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None and wifi_psk is not None:\n            shell.exec_command(f\"wifi cred add -k 1 -s \\\"{wifi_ssid}\\\" -p \\\"{wifi_psk}\\\"\")\n            shell.exec_command(\"wifi cred auto_connect\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:52: AssertionError","steps":[],"attachments":[{"uid":"cbd7b6e65b6e870","name":"log","source":"cbd7b6e65b6e870.txt","type":"text/plain","size":15409}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1760458614122,"stop":1760458614223,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760458614223,"stop":1760458614445,"duration":222},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760458614446,"stop":1760458614446,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1760458614447,"stop":1760458614447,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 1000064810"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"b2b183cfb068"},{"name":"thread","value":"108781-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c8c46d9f18cdf2a1","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1760458571191,"stop":1760458592562,"duration":21371}},{"uid":"7db011672dcffe78","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1760458568948,"stop":1760458590379,"duration":21431}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":6,"skipped":0,"passed":110,"unknown":0,"total":121},"items":[{"uid":"e074c1edc76763ad","reportUrl":"https://golioth.github.io/allure-reports/recurring/1709//#testresult/e074c1edc76763ad","status":"passed","time":{"start":1760444348879,"stop":1760444370444,"duration":21565}},{"uid":"9afa068f67b02272","reportUrl":"https://golioth.github.io/allure-reports/recurring/1708//#testresult/9afa068f67b02272","status":"passed","time":{"start":1760429800193,"stop":1760429821428,"duration":21235}},{"uid":"f24fc2ec46f4ccb5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1707//#testresult/f24fc2ec46f4ccb5","status":"passed","time":{"start":1760415309742,"stop":1760415331280,"duration":21538}},{"uid":"6a4ae7b236368014","reportUrl":"https://golioth.github.io/allure-reports/recurring/1706//#testresult/6a4ae7b236368014","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1760401895168,"stop":1760401921427,"duration":26259}},{"uid":"306aa084c24dcc83","reportUrl":"https://golioth.github.io/allure-reports/recurring/1705//#testresult/306aa084c24dcc83","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1760386536834,"stop":1760386563053,"duration":26219}},{"uid":"387cfeb329a92e33","reportUrl":"https://golioth.github.io/allure-reports/recurring/1704//#testresult/387cfeb329a92e33","status":"passed","time":{"start":1760372161774,"stop":1760372187865,"duration":26091}},{"uid":"1b9d545a97c15d1f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1703//#testresult/1b9d545a97c15d1f","status":"passed","time":{"start":1760357954834,"stop":1760357981091,"duration":26257}},{"uid":"2e12468298e9b58a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1702//#testresult/2e12468298e9b58a","status":"passed","time":{"start":1760343471582,"stop":1760343493151,"duration":21569}},{"uid":"de98dfcae950bcfe","reportUrl":"https://golioth.github.io/allure-reports/recurring/1701//#testresult/de98dfcae950bcfe","status":"passed","time":{"start":1760328966286,"stop":1760328987662,"duration":21376}},{"uid":"54b6026dc244fbf4","reportUrl":"https://golioth.github.io/allure-reports/recurring/1700//#testresult/54b6026dc244fbf4","status":"passed","time":{"start":1760315606266,"stop":1760315627704,"duration":21438}},{"uid":"f4860833ed60e5d4","reportUrl":"https://golioth.github.io/allure-reports/recurring/1699//#testresult/f4860833ed60e5d4","status":"passed","time":{"start":1760300126442,"stop":1760300147766,"duration":21324}},{"uid":"543ee961498e272a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1698//#testresult/543ee961498e272a","status":"passed","time":{"start":1760285677375,"stop":1760285699831,"duration":22456}},{"uid":"96d335382ed70fcb","reportUrl":"https://golioth.github.io/allure-reports/recurring/1697//#testresult/96d335382ed70fcb","status":"passed","time":{"start":1760271432185,"stop":1760271453582,"duration":21397}},{"uid":"f0e84a8c8877973f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1696//#testresult/f0e84a8c8877973f","status":"passed","time":{"start":1760256938136,"stop":1760256959486,"duration":21350}},{"uid":"199d3b87361b3a5f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1695//#testresult/199d3b87361b3a5f","status":"passed","time":{"start":1760242537668,"stop":1760242558974,"duration":21306}},{"uid":"2312f64c81eab0b3","reportUrl":"https://golioth.github.io/allure-reports/recurring/1694//#testresult/2312f64c81eab0b3","status":"passed","time":{"start":1760232189933,"stop":1760232211441,"duration":21508}},{"uid":"3ee9589563819c6c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1694//#testresult/3ee9589563819c6c","status":"passed","time":{"start":1760229169417,"stop":1760229190624,"duration":21207}},{"uid":"2f3d693b7124ca5a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1693//#testresult/2f3d693b7124ca5a","status":"passed","time":{"start":1760213674790,"stop":1760213696256,"duration":21466}},{"uid":"40c8ea4560f04c5a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1692//#testresult/40c8ea4560f04c5a","status":"passed","time":{"start":1760199294291,"stop":1760199315788,"duration":21497}},{"uid":"75b8fb4d03534cce","reportUrl":"https://golioth.github.io/allure-reports/recurring/1691//#testresult/75b8fb4d03534cce","status":"passed","time":{"start":1760185027608,"stop":1760185048865,"duration":21257}}]},"tags":["native_sim_64","anyio","GitHub Actions 1000064810","zephyr"]},"source":"33b3409de258a1db.json","parameterValues":["'native_sim_64'","'zephyr'"]}