{"uid":"4a5cf3f592413a23","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"d8989de114c223477a1d53d831d12112","time":{"start":1759624428004,"stop":1759624449376,"duration":21372},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f37beb7c980>\ndevice = <golioth.golioth.Device object at 0x7f37bea3e900>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1759624427161,"stop":1759624427161,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759624427161,"stop":1759624427161,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759624427161,"stop":1759624427161,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759624427162,"stop":1759624427162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759624427162,"stop":1759624427361,"duration":199},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759624427162,"stop":1759624427162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1759624427162,"stop":1759624427162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1759624427162,"stop":1759624427162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759624427162,"stop":1759624427162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759624427362,"stop":1759624427995,"duration":633},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1759624427995,"stop":1759624427996,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1759624427996,"stop":1759624428003,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f37beb7c980>\ndevice = <golioth.golioth.Device object at 0x7f37bea3e900>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"2d70c9a61303f977","name":"log","source":"2d70c9a61303f977.txt","type":"text/plain","size":15352}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1759624449410,"stop":1759624449911,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759624449911,"stop":1759624450065,"duration":154},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759624450066,"stop":1759624450066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1759624450067,"stop":1759624450067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 1000059889"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"f4738e53d3e5"},{"name":"thread","value":"113057-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"30088f3fb6150882","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759624406501,"stop":1759624428003,"duration":21502}},{"uid":"6aefc8afde65af4d","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759624405888,"stop":1759624427431,"duration":21543}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":3,"skipped":0,"passed":54,"unknown":0,"total":60},"items":[{"uid":"7985b7e88968a515","reportUrl":"https://golioth.github.io/allure-reports/recurring/1651//#testresult/7985b7e88968a515","status":"passed","time":{"start":1759608866714,"stop":1759608888143,"duration":21429}},{"uid":"75dae933492123cd","reportUrl":"https://golioth.github.io/allure-reports/recurring/1650//#testresult/75dae933492123cd","status":"passed","time":{"start":1759594487807,"stop":1759594509177,"duration":21370}},{"uid":"94bb81e3e5ae658d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1649//#testresult/94bb81e3e5ae658d","status":"passed","time":{"start":1759580234919,"stop":1759580256431,"duration":21512}},{"uid":"8d23105a7fb7455f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1648//#testresult/8d23105a7fb7455f","status":"passed","time":{"start":1759565739168,"stop":1759565760416,"duration":21248}},{"uid":"b3a89e03e9707f38","reportUrl":"https://golioth.github.io/allure-reports/recurring/1647//#testresult/b3a89e03e9707f38","status":"passed","time":{"start":1759551332819,"stop":1759551354239,"duration":21420}},{"uid":"292f94c0576d3efd","reportUrl":"https://golioth.github.io/allure-reports/recurring/1646//#testresult/292f94c0576d3efd","status":"passed","time":{"start":1759537843705,"stop":1759537865241,"duration":21536}},{"uid":"670672d1c39ceb0e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1645//#testresult/670672d1c39ceb0e","status":"passed","time":{"start":1759522507698,"stop":1759522529701,"duration":22003}},{"uid":"eb75c0845c2312a8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1644//#testresult/eb75c0845c2312a8","status":"passed","time":{"start":1759508145474,"stop":1759508166878,"duration":21404}},{"uid":"3ef6dfcbb00b3cbb","reportUrl":"https://golioth.github.io/allure-reports/recurring/1643//#testresult/3ef6dfcbb00b3cbb","status":"passed","time":{"start":1759493876427,"stop":1759493897697,"duration":21270}},{"uid":"904dd1e30274f43","reportUrl":"https://golioth.github.io/allure-reports/recurring/1642//#testresult/904dd1e30274f43","status":"passed","time":{"start":1759479390252,"stop":1759479411719,"duration":21467}},{"uid":"4daece70b11ebf3d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1641//#testresult/4daece70b11ebf3d","status":"passed","time":{"start":1759464928349,"stop":1759464949673,"duration":21324}},{"uid":"3086bf859d23ba32","reportUrl":"https://golioth.github.io/allure-reports/recurring/1640//#testresult/3086bf859d23ba32","status":"passed","time":{"start":1759451382078,"stop":1759451403361,"duration":21283}},{"uid":"967ab52a8bc5b427","reportUrl":"https://golioth.github.io/allure-reports/recurring/1638//#testresult/967ab52a8bc5b427","status":"passed","time":{"start":1759421742882,"stop":1759421764393,"duration":21511}},{"uid":"d8d46190d24b45da","reportUrl":"https://golioth.github.io/allure-reports/recurring/1639//#testresult/d8d46190d24b45da","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759436113338,"stop":1759436134839,"duration":21501}},{"uid":"c490249b09304fb7","reportUrl":"https://golioth.github.io/allure-reports/recurring/1637//#testresult/c490249b09304fb7","status":"passed","time":{"start":1759407470738,"stop":1759407492432,"duration":21694}},{"uid":"86961669e7b7a4b9","reportUrl":"https://golioth.github.io/allure-reports/recurring/1636//#testresult/86961669e7b7a4b9","status":"passed","time":{"start":1759392965231,"stop":1759392986511,"duration":21280}},{"uid":"116651e6e277656b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1635//#testresult/116651e6e277656b","status":"passed","time":{"start":1759378528582,"stop":1759378550366,"duration":21784}},{"uid":"c93a52983dcc8765","reportUrl":"https://golioth.github.io/allure-reports/recurring/1634//#testresult/c93a52983dcc8765","status":"passed","time":{"start":1759365063260,"stop":1759365085915,"duration":22655}},{"uid":"3e4c43ca31834a21","reportUrl":"https://golioth.github.io/allure-reports/recurring/1633//#testresult/3e4c43ca31834a21","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1759349729742,"stop":1759349756099,"duration":26357}},{"uid":"ce315edd6478835","reportUrl":"https://golioth.github.io/allure-reports/recurring/1632//#testresult/ce315edd6478835","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1759335408402,"stop":1759335434765,"duration":26363}}]},"tags":["native_sim_64","anyio","GitHub Actions 1000059889","zephyr"]},"source":"4a5cf3f592413a23.json","parameterValues":["'native_sim_64'","'zephyr'"]}