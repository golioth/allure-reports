{"uid":"6862416701075f9b","name":"test_lightdb_reported","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"b587a46c1d6b3a703a32ac1a951bd89f","time":{"start":1760660731170,"stop":1760660731284,"duration":114},"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f283436d550>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760660718389,"stop":1760660718389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760660718389,"stop":1760660718389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760660718389,"stop":1760660718389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760660718390,"stop":1760660718681,"duration":291},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760660718390,"stop":1760660718390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760660718390,"stop":1760660718390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760660718390,"stop":1760660718390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760660718390,"stop":1760660718390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1760660718681,"stop":1760660718681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760660718681,"stop":1760660718683,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1760660718681,"stop":1760660718681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1760660718682,"stop":1760660718682,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1760660718682,"stop":1760660718682,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1760660718682,"stop":1760660718682,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760660718683,"stop":1760660719047,"duration":364},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760660719047,"stop":1760660731169,"duration":12122},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f283436d550>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","steps":[],"attachments":[{"uid":"33449bb93045765d","name":"stdout","source":"33449bb93045765d.txt","type":"text/plain","size":2540},{"uid":"d31fdde5ef45eed1","name":"stderr","source":"d31fdde5ef45eed1.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1760660738401,"stop":1760660738513,"duration":112},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760660738513,"stop":1760660738644,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760660738644,"stop":1760660738659,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760660738659,"stop":1760660738660,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_64"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"0efca58cbf70"},{"name":"thread","value":"7662-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":20,"broken":0,"skipped":0,"passed":114,"unknown":0,"total":134},"items":[{"uid":"26eca828382bd95b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1723//#testresult/26eca828382bd95b","status":"passed","time":{"start":1760645378117,"stop":1760645380070,"duration":1953}},{"uid":"8c27e549e49445a4","reportUrl":"https://golioth.github.io/allure-reports/recurring/1722//#testresult/8c27e549e49445a4","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1760631001039,"stop":1760631001184,"duration":145}},{"uid":"9f07f17182f72f39","reportUrl":"https://golioth.github.io/allure-reports/recurring/1721//#testresult/9f07f17182f72f39","status":"passed","time":{"start":1760616730338,"stop":1760616732375,"duration":2037}},{"uid":"377d3964d7f31730","reportUrl":"https://golioth.github.io/allure-reports/recurring/1720//#testresult/377d3964d7f31730","status":"passed","time":{"start":1760602211051,"stop":1760602213333,"duration":2282}},{"uid":"f296ea5c6dcc61d8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1719//#testresult/f296ea5c6dcc61d8","status":"passed","time":{"start":1760587735592,"stop":1760587737230,"duration":1638}},{"uid":"ec627fb740bcf285","reportUrl":"https://golioth.github.io/allure-reports/recurring/1718//#testresult/ec627fb740bcf285","status":"passed","time":{"start":1760574357684,"stop":1760574360678,"duration":2994}},{"uid":"bbb830034112fcdc","reportUrl":"https://golioth.github.io/allure-reports/recurring/1717//#testresult/bbb830034112fcdc","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1760558910971,"stop":1760558911081,"duration":110}},{"uid":"af11b39c0e508130","reportUrl":"https://golioth.github.io/allure-reports/recurring/1716//#testresult/af11b39c0e508130","status":"passed","time":{"start":1760544515249,"stop":1760544518232,"duration":2983}},{"uid":"b8d6e70d06daa9b8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1715//#testresult/b8d6e70d06daa9b8","status":"passed","time":{"start":1760530357970,"stop":1760530359100,"duration":1130}},{"uid":"7f67050e46fe7d72","reportUrl":"https://golioth.github.io/allure-reports/recurring/1714//#testresult/7f67050e46fe7d72","status":"passed","time":{"start":1760515806391,"stop":1760515808294,"duration":1903}},{"uid":"1e9843e38ae4818","reportUrl":"https://golioth.github.io/allure-reports/recurring/1713//#testresult/1e9843e38ae4818","status":"passed","time":{"start":1760501352078,"stop":1760501353824,"duration":1746}},{"uid":"b7785315a7bc6a24","reportUrl":"https://golioth.github.io/allure-reports/recurring/1712//#testresult/b7785315a7bc6a24","status":"passed","time":{"start":1760487929680,"stop":1760487931409,"duration":1729}},{"uid":"ac38c7c54c67b3d5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1711//#testresult/ac38c7c54c67b3d5","status":"passed","time":{"start":1760472513726,"stop":1760472516681,"duration":2955}},{"uid":"832f1609b007c2d2","reportUrl":"https://golioth.github.io/allure-reports/recurring/1710//#testresult/832f1609b007c2d2","status":"passed","time":{"start":1760458162682,"stop":1760458164731,"duration":2049}},{"uid":"181379ef8a16588f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1709//#testresult/181379ef8a16588f","status":"passed","time":{"start":1760443930200,"stop":1760443931885,"duration":1685}},{"uid":"176b7643bf522b2f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1708//#testresult/176b7643bf522b2f","status":"passed","time":{"start":1760429376289,"stop":1760429377386,"duration":1097}},{"uid":"a9f28bfd70271706","reportUrl":"https://golioth.github.io/allure-reports/recurring/1707//#testresult/a9f28bfd70271706","status":"passed","time":{"start":1760414942074,"stop":1760414945173,"duration":3099}},{"uid":"fe1f7b9366685104","reportUrl":"https://golioth.github.io/allure-reports/recurring/1706//#testresult/fe1f7b9366685104","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1760401448027,"stop":1760401448099,"duration":72}},{"uid":"77037850f5468f01","reportUrl":"https://golioth.github.io/allure-reports/recurring/1705//#testresult/77037850f5468f01","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1760386127852,"stop":1760386127922,"duration":70}},{"uid":"b7ba359154a45fa3","reportUrl":"https://golioth.github.io/allure-reports/recurring/1704//#testresult/b7ba359154a45fa3","status":"passed","time":{"start":1760371755013,"stop":1760371757986,"duration":2973}}]},"tags":["native_sim_64","anyio","zephyr"]},"source":"6862416701075f9b.json","parameterValues":["'native_sim_64'","'zephyr'"]}