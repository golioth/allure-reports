{"uid":"ef045495d6d4d0ce","name":"test_set_int_range_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_min","historyId":"ed872bf37fba44ffd9e9e28cf8d747f4","time":{"start":1760069278375,"stop":1760069288684,"duration":10309},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"self = <trio.lowlevel.FdStream object at 0x7f17240209e0>, max_bytes = 65536\n\n    async def receive_some(self, max_bytes: int | None = None) -> bytes:\n        with self._receive_conflict_detector:\n            if max_bytes is None:\n                max_bytes = DEFAULT_RECEIVE_SIZE\n            else:\n                if not isinstance(max_bytes, int):\n                    raise TypeError(\"max_bytes must be integer >= 1\")\n                if max_bytes < 1:\n                    raise ValueError(\"max_bytes must be integer >= 1\")\n    \n            await trio.lowlevel.checkpoint()\n            while True:\n                try:\n>                   data = os.read(self._fd_holder.fd, max_bytes)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE                   BlockingIOError: [Errno 11] Resource temporarily unavailable\n\n../../../.local/lib/python3.12/site-packages/trio/_unix_pipes.py:182: BlockingIOError\n\nDuring handling of the above exception, another exception occurred:\n\nseconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n../../../.local/lib/python3.12/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/lib/python3.12/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.local/lib/python3.12/site-packages/pytest_hil/linuxboard.py:31: in receive_some\n    return await self.process.stdout.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.local/lib/python3.12/site-packages/trio/_unix_pipes.py:184: in receive_some\n    await trio.lowlevel.wait_readable(self._fd_holder.fd)\n../../../.local/lib/python3.12/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.local/lib/python3.12/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n../../../.local/lib/python3.12/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n../../../.local/lib/python3.12/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n../../../.local/lib/python3.12/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n        if reason is None:\n            raise Cancelled._create(source=\"unknown\", reason=\"misnesting\")\n        else:\n>           raise Cancelled._create(\n                source=reason.source,\n                reason=reason.reason,\n                source_task=reason.source_task,\n            )\nE           trio.Cancelled: cancelled due to deadline\n\n../../../.local/lib/python3.12/site-packages/trio/_core/_run.py:1663: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <pytest_hil.linuxboard.LinuxBoard object at 0x7f17242db770>\ndevice = <golioth.golioth.Device object at 0x7f17242dbf50>\n\n    async def test_set_int_range_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', 0)\n    \n>       assert None != await board.wait_for_regex_in_line('Received test_int_range: 0', timeout_s=10)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/hil/tests/settings/test_settings.py:103: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/lib/python3.12/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n../../../.local/lib/python3.12/site-packages/trio/_timeouts.py:187: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_ssid","time":{"start":1760069242067,"stop":1760069242067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760069242067,"stop":1760069242067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1760069242067,"stop":1760069242067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760069242068,"stop":1760069242068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760069242068,"stop":1760069242068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760069242068,"stop":1760069242068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760069242068,"stop":1760069242068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760069242068,"stop":1760069242417,"duration":349},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760069242417,"stop":1760069242418,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760069242418,"stop":1760069242967,"duration":549},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760069242967,"stop":1760069251895,"duration":8928},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1760069357840,"stop":1760069357840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760069357840,"stop":1760069357981,"duration":141},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760069357982,"stop":1760069357984,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760069357985,"stop":1760069357985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"linux"},{"name":"tag","value":"linux"},{"name":"parentSuite","value":"hil.linux.linux"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"3970-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'linux'"},{"name":"platform_name","value":"'linux'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":92,"unknown":0,"total":93},"items":[{"uid":"c88c8435b85a89b5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1682//#testresult/c88c8435b85a89b5","status":"passed","time":{"start":1760055832202,"stop":1760055833950,"duration":1748}},{"uid":"d5b00c85958f7ffc","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/d5b00c85958f7ffc","status":"passed","time":{"start":1760048083134,"stop":1760048084637,"duration":1503}},{"uid":"dc20283188ea2277","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/dc20283188ea2277","status":"passed","time":{"start":1760040439468,"stop":1760040440970,"duration":1502}},{"uid":"4d0811eb804b598f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/4d0811eb804b598f","status":"passed","time":{"start":1760038896826,"stop":1760038898558,"duration":1732}},{"uid":"4e68385c43edd00d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/4e68385c43edd00d","status":"passed","time":{"start":1760026306881,"stop":1760026308342,"duration":1461}},{"uid":"4f85b63d920a002c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1679//#testresult/4f85b63d920a002c","status":"passed","time":{"start":1760011817029,"stop":1760011818684,"duration":1655}},{"uid":"622966b3aa5d141e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1678//#testresult/622966b3aa5d141e","status":"passed","time":{"start":1759997304692,"stop":1759997306205,"duration":1513}},{"uid":"1b5893a815264a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1677//#testresult/1b5893a815264a","status":"passed","time":{"start":1759982875289,"stop":1759982876983,"duration":1694}},{"uid":"e3927d4ddb6c5d16","reportUrl":"https://golioth.github.io/allure-reports/recurring/1676//#testresult/e3927d4ddb6c5d16","status":"passed","time":{"start":1759969424308,"stop":1759969425958,"duration":1650}},{"uid":"e1b35dddc5b589ed","reportUrl":"https://golioth.github.io/allure-reports/recurring/1675//#testresult/e1b35dddc5b589ed","status":"passed","time":{"start":1759954037528,"stop":1759954039508,"duration":1980}},{"uid":"94f80acb0845edf8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1674//#testresult/94f80acb0845edf8","status":"passed","time":{"start":1759939685039,"stop":1759939686764,"duration":1725}},{"uid":"65cad6c2883888dc","reportUrl":"https://golioth.github.io/allure-reports/recurring/1673//#testresult/65cad6c2883888dc","status":"passed","time":{"start":1759925485022,"stop":1759925486764,"duration":1742}},{"uid":"569ff6ef409b1652","reportUrl":"https://golioth.github.io/allure-reports/recurring/1672//#testresult/569ff6ef409b1652","status":"passed","time":{"start":1759910944954,"stop":1759910946465,"duration":1511}},{"uid":"dbaa91d2455788c3","reportUrl":"https://golioth.github.io/allure-reports/recurring/1671//#testresult/dbaa91d2455788c3","status":"passed","time":{"start":1759896464441,"stop":1759896465944,"duration":1503}},{"uid":"50b11b9f0685d877","reportUrl":"https://golioth.github.io/allure-reports/recurring/1670//#testresult/50b11b9f0685d877","status":"passed","time":{"start":1759883018176,"stop":1759883020060,"duration":1884}},{"uid":"d448028c8eb50b96","reportUrl":"https://golioth.github.io/allure-reports/recurring/1669//#testresult/d448028c8eb50b96","status":"passed","time":{"start":1759867613164,"stop":1759867615000,"duration":1836}},{"uid":"9cce60be0d750c43","reportUrl":"https://golioth.github.io/allure-reports/recurring/1668//#testresult/9cce60be0d750c43","status":"passed","time":{"start":1759853271920,"stop":1759853273876,"duration":1956}},{"uid":"4710487a3049c577","reportUrl":"https://golioth.github.io/allure-reports/recurring/1667//#testresult/4710487a3049c577","status":"passed","time":{"start":1759839034505,"stop":1759839036054,"duration":1549}},{"uid":"aa528c94d9c58938","reportUrl":"https://golioth.github.io/allure-reports/recurring/1666//#testresult/aa528c94d9c58938","status":"passed","time":{"start":1759824511803,"stop":1759824513377,"duration":1574}},{"uid":"34ed62150bc7c2a3","reportUrl":"https://golioth.github.io/allure-reports/recurring/1665//#testresult/34ed62150bc7c2a3","status":"passed","time":{"start":1759810084728,"stop":1759810086244,"duration":1516}}]},"tags":["linux","anyio"]},"source":"ef045495d6d4d0ce.json","parameterValues":["'linux'","'linux'"]}