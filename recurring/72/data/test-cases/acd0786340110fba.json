{"uid":"acd0786340110fba","name":"test_restart","fullName":"tests.hil.tests.settings.test_settings#test_restart","historyId":"d54522c406aaefb99d17d6ecedf7faab","time":{"start":1736870862817,"stop":1736870862882,"duration":65},"status":"broken","statusMessage":"httpx.ConnectError: all attempts to connect to api.golioth.io:443 failed","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n../../../.local/lib/python3.12/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/lib/python3.12/site-packages/httpx/_transports/default.py:394: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n../../../.local/lib/python3.12/site-packages/httpcore/_async/connection_pool.py:256: in handle_async_request\n    raise exc from None\n../../../.local/lib/python3.12/site-packages/httpcore/_async/connection_pool.py:236: in handle_async_request\n    response = await connection.handle_async_request(\n../../../.local/lib/python3.12/site-packages/httpcore/_async/connection.py:101: in handle_async_request\n    raise exc\n../../../.local/lib/python3.12/site-packages/httpcore/_async/connection.py:78: in handle_async_request\n    stream = await self._connect(request)\n../../../.local/lib/python3.12/site-packages/httpcore/_async/connection.py:124: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n../../../.local/lib/python3.12/site-packages/httpcore/_backends/auto.py:31: in connect_tcp\n    return await self._backend.connect_tcp(\n../../../.local/lib/python3.12/site-packages/httpcore/_backends/trio.py:128: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: all attempts to connect to api.golioth.io:443 failed\n\n../../../.local/lib/python3.12/site-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nboard = <linuxboard.LinuxBoard object at 0x7fc081f916d0>\ndevice = <golioth.golioth.Device object at 0x7fc081eafe30>\n\n    async def test_restart(board, device):\n>       await device.settings.set('TEST_RESTART', True)\n\ntests/hil/tests/settings/test_settings.py:212: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/lib/python3.12/site-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n../../../.local/lib/python3.12/site-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n../../../.local/lib/python3.12/site-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n../../../.local/lib/python3.12/site-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n../../../.local/lib/python3.12/site-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n../../../.local/lib/python3.12/site-packages/httpx/_client.py:1768: in get\n    return await self.request(\n../../../.local/lib/python3.12/site-packages/httpx/_client.py:1540: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n../../../.local/lib/python3.12/site-packages/httpx/_client.py:1629: in send\n    response = await self._send_handling_auth(\n../../../.local/lib/python3.12/site-packages/httpx/_client.py:1657: in _send_handling_auth\n    response = await self._send_handling_redirects(\n../../../.local/lib/python3.12/site-packages/httpx/_client.py:1694: in _send_handling_redirects\n    response = await self._send_single_request(request)\n../../../.local/lib/python3.12/site-packages/httpx/_client.py:1730: in _send_single_request\n    response = await transport.handle_async_request(request)\n../../../.local/lib/python3.12/site-packages/httpx/_transports/default.py:393: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.12/contextlib.py:158: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: all attempts to connect to api.golioth.io:443 failed\n\n../../../.local/lib/python3.12/site-packages/httpx/_transports/default.py:118: ConnectError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"board_name","time":{"start":1736870780360,"stop":1736870780360,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1736870780360,"stop":1736870780360,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1736870780360,"stop":1736870780360,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736870780361,"stop":1736870780361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1736870780361,"stop":1736870780361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1736870780361,"stop":1736870780361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736870780361,"stop":1736870780361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736870780361,"stop":1736870780361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736870780361,"stop":1736870780573,"duration":212},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736870780361,"stop":1736870780361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1736870780361,"stop":1736870780361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1736870780361,"stop":1736870780361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736870780361,"stop":1736870780361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736870780573,"stop":1736870781006,"duration":433},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1736870780573,"stop":1736870780573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736870781007,"stop":1736870785230,"duration":4223},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1736870863007,"stop":1736870863066,"duration":59},"status":"broken","statusMessage":"httpx.ConnectError: all attempts to connect to api.golioth.io:443 failed\n","statusTrace":"  File \"/home/runner/.local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/pytest_plugin.py\", line 98, in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 953, in run_asyncgen_fixture\n    self._call_in_runner_task(asyncgen.asend, None)\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 940, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/home/runner/.local/lib/python3.12/site-packages/anyio/_backends/_trio.py\", line 910, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/pytest_plugin.py\", line 68, in device\n    await project.delete_device(device)\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/golioth.py\", line 257, in delete_device\n    await self.delete_device_by_id(dev.id)\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/golioth.py\", line 254, in delete_device_by_id\n    await self.delete(f'devices/{id}')\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/golioth.py\", line 80, in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/golioth/golioth.py\", line 118, in delete\n    return await c.delete(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1966, in delete\n    return await self.request(\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1540, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1629, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1657, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1694, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_client.py\", line 1730, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_transports/default.py\", line 393, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"/usr/lib/python3.12/contextlib.py\", line 158, in __exit__\n    self.gen.throw(value)\n  File \"/home/runner/.local/lib/python3.12/site-packages/httpx/_transports/default.py\", line 118, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"setup::0","time":{"start":1736870863007,"stop":1736870863007,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1736870863067,"stop":1736870863070,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736870863070,"stop":1736870863071,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"linux"},{"name":"tag","value":"linux"},{"name":"parentSuite","value":"hil.linux.linux"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"fv-az1933-341"},{"name":"thread","value":"3726-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'linux'"},{"name":"platform_name","value":"'linux'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":74,"unknown":0,"total":78},"items":[{"uid":"1bd58d824f495a64","reportUrl":"https://golioth.github.io/allure-reports/recurring/71//#testresult/1bd58d824f495a64","status":"passed","time":{"start":1736856604898,"stop":1736856631798,"duration":26900}},{"uid":"31ea4bd68c5cc166","reportUrl":"https://golioth.github.io/allure-reports/recurring/70//#testresult/31ea4bd68c5cc166","status":"passed","time":{"start":1736842130939,"stop":1736842164186,"duration":33247}},{"uid":"7008c27c36f79246","reportUrl":"https://golioth.github.io/allure-reports/recurring/69//#testresult/7008c27c36f79246","status":"passed","time":{"start":1736827688632,"stop":1736827714392,"duration":25760}},{"uid":"569b0ac3d4c0aa3f","reportUrl":"https://golioth.github.io/allure-reports/recurring/68//#testresult/569b0ac3d4c0aa3f","status":"passed","time":{"start":1736814279862,"stop":1736814313338,"duration":33476}},{"uid":"489ef9049cfbc1b6","reportUrl":"https://golioth.github.io/allure-reports/recurring/67//#testresult/489ef9049cfbc1b6","status":"passed","time":{"start":1736798825893,"stop":1736798858905,"duration":33012}},{"uid":"12830110642397fd","reportUrl":"https://golioth.github.io/allure-reports/recurring/66//#testresult/12830110642397fd","status":"passed","time":{"start":1736784493424,"stop":1736784521076,"duration":27652}},{"uid":"8a6b6bf5ebe9f43b","reportUrl":"https://golioth.github.io/allure-reports/recurring/65//#testresult/8a6b6bf5ebe9f43b","status":"passed","time":{"start":1736770253436,"stop":1736770281518,"duration":28082}},{"uid":"ea86ed2b81b21f1","reportUrl":"https://golioth.github.io/allure-reports/recurring/64//#testresult/ea86ed2b81b21f1","status":"passed","time":{"start":1736755778117,"stop":1736755811697,"duration":33580}},{"uid":"78a342126f3ae76a","reportUrl":"https://golioth.github.io/allure-reports/recurring/63//#testresult/78a342126f3ae76a","status":"passed","time":{"start":1736741294332,"stop":1736741327790,"duration":33458}},{"uid":"8d85248cad292d2c","reportUrl":"https://golioth.github.io/allure-reports/recurring/62//#testresult/8d85248cad292d2c","status":"passed","time":{"start":1736727878310,"stop":1736727912045,"duration":33735}},{"uid":"d853a81245c59103","reportUrl":"https://golioth.github.io/allure-reports/recurring/61//#testresult/d853a81245c59103","status":"passed","time":{"start":1736712431499,"stop":1736712464483,"duration":32984}},{"uid":"cfa07c34fedef96a","reportUrl":"https://golioth.github.io/allure-reports/recurring/60//#testresult/cfa07c34fedef96a","status":"passed","time":{"start":1736698018197,"stop":1736698051018,"duration":32821}},{"uid":"2a0dffbc7e387203","reportUrl":"https://golioth.github.io/allure-reports/recurring/59//#testresult/2a0dffbc7e387203","status":"passed","time":{"start":1736683745021,"stop":1736683778268,"duration":33247}},{"uid":"9b6bd0a6ecb1e5d0","reportUrl":"https://golioth.github.io/allure-reports/recurring/58//#testresult/9b6bd0a6ecb1e5d0","status":"passed","time":{"start":1736669299479,"stop":1736669325946,"duration":26467}},{"uid":"c8099664f2ac956b","reportUrl":"https://golioth.github.io/allure-reports/recurring/57//#testresult/c8099664f2ac956b","status":"passed","time":{"start":1736654879202,"stop":1736654912351,"duration":33149}},{"uid":"82b12125180a220c","reportUrl":"https://golioth.github.io/allure-reports/recurring/56//#testresult/82b12125180a220c","status":"passed","time":{"start":1736641493952,"stop":1736641527362,"duration":33410}},{"uid":"bb9b1caca251b02e","reportUrl":"https://golioth.github.io/allure-reports/recurring/55//#testresult/bb9b1caca251b02e","status":"passed","time":{"start":1736626034545,"stop":1736626067957,"duration":33412}},{"uid":"93053fde4eb45833","reportUrl":"https://golioth.github.io/allure-reports/recurring/54//#testresult/93053fde4eb45833","status":"passed","time":{"start":1736611628268,"stop":1736611660787,"duration":32519}},{"uid":"317dc4d8ec924e30","reportUrl":"https://golioth.github.io/allure-reports/recurring/53//#testresult/317dc4d8ec924e30","status":"passed","time":{"start":1736597347787,"stop":1736597380552,"duration":32765}},{"uid":"95a2217568feec34","reportUrl":"https://golioth.github.io/allure-reports/recurring/52//#testresult/95a2217568feec34","status":"passed","time":{"start":1736582888237,"stop":1736582922027,"duration":33790}}]},"tags":["linux","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"acd0786340110fba.json","parameterValues":["'linux'","'linux'"]}