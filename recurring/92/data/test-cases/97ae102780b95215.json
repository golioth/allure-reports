{"uid":"97ae102780b95215","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"d8989de114c223477a1d53d831d12112","time":{"start":1737159805566,"stop":1737159827026,"duration":21460},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 1 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fa8c46b8050>\ndevice = <golioth.golioth.Device object at 0x7fa8c46990d0>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 1 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"wifi_psk","time":{"start":1737159804748,"stop":1737159804748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737159804748,"stop":1737159804748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737159804748,"stop":1737159804748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1737159804748,"stop":1737159804748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1737159804749,"stop":1737159804749,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737159804749,"stop":1737159804749,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1737159804749,"stop":1737159804749,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737159804750,"stop":1737159804999,"duration":249},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737159804750,"stop":1737159804750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737159805000,"stop":1737159805459,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1737159805460,"stop":1737159805467,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1737159805467,"stop":1737159805564,"duration":97},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 1 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fa8c46b8050>\ndevice = <golioth.golioth.Device object at 0x7fa8c46990d0>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 1 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"a77440eadb0bba40","name":"log","source":"a77440eadb0bba40.txt","type":"text/plain","size":15692}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1737159827082,"stop":1737159827587,"duration":505},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737159827588,"stop":1737159827755,"duration":167},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737159827756,"stop":1737159827757,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1737159827758,"stop":1737159827758,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 22"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"5637831fd3e2"},{"name":"thread","value":"46409-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4cbe164443a11d53","status":"passed","time":{"start":1737159800775,"stop":1737159822348,"duration":21573}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":4,"skipped":0,"passed":93,"unknown":0,"total":98},"items":[{"uid":"c328c9ff4fb99595","reportUrl":"https://golioth.github.io/allure-reports/recurring/91//#testresult/c328c9ff4fb99595","status":"passed","time":{"start":1737144582436,"stop":1737144603983,"duration":21547}},{"uid":"20f8a3e7347d602a","reportUrl":"https://golioth.github.io/allure-reports/recurring/90//#testresult/20f8a3e7347d602a","status":"passed","time":{"start":1737130177689,"stop":1737130199147,"duration":21458}},{"uid":"18747155170b0a71","reportUrl":"https://golioth.github.io/allure-reports/recurring/89//#testresult/18747155170b0a71","status":"passed","time":{"start":1737115928339,"stop":1737115949581,"duration":21242}},{"uid":"925a6e0b38a526ec","reportUrl":"https://golioth.github.io/allure-reports/recurring/88//#testresult/925a6e0b38a526ec","status":"passed","time":{"start":1737101426684,"stop":1737101448143,"duration":21459}},{"uid":"3a9de327fd2a0d22","reportUrl":"https://golioth.github.io/allure-reports/recurring/87//#testresult/3a9de327fd2a0d22","status":"passed","time":{"start":1737087011698,"stop":1737087038239,"duration":26541}},{"uid":"71cc31b45571fe84","reportUrl":"https://golioth.github.io/allure-reports/recurring/86//#testresult/71cc31b45571fe84","status":"passed","time":{"start":1737073447711,"stop":1737073469088,"duration":21377}},{"uid":"3768d60abb0031d","reportUrl":"https://golioth.github.io/allure-reports/recurring/85//#testresult/3768d60abb0031d","status":"passed","time":{"start":1737058170921,"stop":1737058192381,"duration":21460}},{"uid":"6530d0f63f07ae75","reportUrl":"https://golioth.github.io/allure-reports/recurring/84//#testresult/6530d0f63f07ae75","status":"passed","time":{"start":1737043783557,"stop":1737043804930,"duration":21373}},{"uid":"dc80456d9fc4319d","reportUrl":"https://golioth.github.io/allure-reports/recurring/83//#testresult/dc80456d9fc4319d","status":"passed","time":{"start":1737029530263,"stop":1737029551558,"duration":21295}},{"uid":"e8018b31f8e87aa1","reportUrl":"https://golioth.github.io/allure-reports/recurring/82//#testresult/e8018b31f8e87aa1","status":"passed","time":{"start":1737015030107,"stop":1737015051471,"duration":21364}},{"uid":"764d50554eb72fe7","reportUrl":"https://golioth.github.io/allure-reports/recurring/81//#testresult/764d50554eb72fe7","status":"passed","time":{"start":1737000618051,"stop":1737000639646,"duration":21595}},{"uid":"787d1e5945ffd27c","reportUrl":"https://golioth.github.io/allure-reports/recurring/80//#testresult/787d1e5945ffd27c","status":"passed","time":{"start":1736987065566,"stop":1736987087199,"duration":21633}},{"uid":"305ebe4d2a4b48fd","reportUrl":"https://golioth.github.io/allure-reports/recurring/79//#testresult/305ebe4d2a4b48fd","status":"passed","time":{"start":1736971770540,"stop":1736971791966,"duration":21426}},{"uid":"4579160c6a4956e3","reportUrl":"https://golioth.github.io/allure-reports/recurring/78//#testresult/4579160c6a4956e3","status":"passed","time":{"start":1736957404270,"stop":1736957425931,"duration":21661}},{"uid":"3ecb3faf18db0815","reportUrl":"https://golioth.github.io/allure-reports/recurring/77//#testresult/3ecb3faf18db0815","status":"passed","time":{"start":1736943149299,"stop":1736943170890,"duration":21591}},{"uid":"86f3492aed13d92f","reportUrl":"https://golioth.github.io/allure-reports/recurring/76//#testresult/86f3492aed13d92f","status":"passed","time":{"start":1736928667473,"stop":1736928689021,"duration":21548}},{"uid":"d29a565f07c4b68c","reportUrl":"https://golioth.github.io/allure-reports/recurring/75//#testresult/d29a565f07c4b68c","status":"passed","time":{"start":1736914212028,"stop":1736914233608,"duration":21580}},{"uid":"cc2fad9ad5618c23","reportUrl":"https://golioth.github.io/allure-reports/recurring/74//#testresult/cc2fad9ad5618c23","status":"passed","time":{"start":1736900663356,"stop":1736900684771,"duration":21415}},{"uid":"9088f56f454d24e9","reportUrl":"https://golioth.github.io/allure-reports/recurring/73//#testresult/9088f56f454d24e9","status":"passed","time":{"start":1736885398283,"stop":1736885420602,"duration":22319}},{"uid":"11ed5c1e685d0338","reportUrl":"https://golioth.github.io/allure-reports/recurring/72//#testresult/11ed5c1e685d0338","status":"passed","time":{"start":1736871013298,"stop":1736871034746,"duration":21448}}]},"tags":["GitHub Actions 22","native_sim_64","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"97ae102780b95215.json","parameterValues":["'native_sim_64'","'zephyr'"]}