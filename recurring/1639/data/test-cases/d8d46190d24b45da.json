{"uid":"d8d46190d24b45da","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"d8989de114c223477a1d53d831d12112","time":{"start":1759436113338,"stop":1759436134839,"duration":21501},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fbbe08c8980>\ndevice = <golioth.golioth.Device object at 0x7fbbe078a900>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"device_name","time":{"start":1759436112771,"stop":1759436112771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1759436112771,"stop":1759436112771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1759436112771,"stop":1759436112771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759436112771,"stop":1759436112771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1759436112771,"stop":1759436112772,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759436112771,"stop":1759436112771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759436112772,"stop":1759436112987,"duration":215},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759436112772,"stop":1759436112772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759436112772,"stop":1759436112772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759436112987,"stop":1759436113309,"duration":322},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1759436113309,"stop":1759436113310,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1759436113310,"stop":1759436113337,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fbbe08c8980>\ndevice = <golioth.golioth.Device object at 0x7fbbe078a900>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"273b3071fdd81292","name":"log","source":"273b3071fdd81292.txt","type":"text/plain","size":15410}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1759436134873,"stop":1759436135374,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759436135374,"stop":1759436135545,"duration":171},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759436135545,"stop":1759436135546,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1759436135546,"stop":1759436135546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 1000059065"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"aba2e46d2bb8"},{"name":"thread","value":"113103-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"880df0c526ba21b4","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759436091785,"stop":1759436113628,"duration":21843}},{"uid":"926c2cedaa33c7f2","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759436089200,"stop":1759436111610,"duration":22410}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":3,"skipped":0,"passed":41,"unknown":0,"total":46},"items":[{"uid":"c490249b09304fb7","reportUrl":"https://golioth.github.io/allure-reports/recurring/1637//#testresult/c490249b09304fb7","status":"passed","time":{"start":1759407470738,"stop":1759407492432,"duration":21694}},{"uid":"86961669e7b7a4b9","reportUrl":"https://golioth.github.io/allure-reports/recurring/1636//#testresult/86961669e7b7a4b9","status":"passed","time":{"start":1759392965231,"stop":1759392986511,"duration":21280}},{"uid":"116651e6e277656b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1635//#testresult/116651e6e277656b","status":"passed","time":{"start":1759378528582,"stop":1759378550366,"duration":21784}},{"uid":"c93a52983dcc8765","reportUrl":"https://golioth.github.io/allure-reports/recurring/1634//#testresult/c93a52983dcc8765","status":"passed","time":{"start":1759365063260,"stop":1759365085915,"duration":22655}},{"uid":"3e4c43ca31834a21","reportUrl":"https://golioth.github.io/allure-reports/recurring/1633//#testresult/3e4c43ca31834a21","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1759349729742,"stop":1759349756099,"duration":26357}},{"uid":"ce315edd6478835","reportUrl":"https://golioth.github.io/allure-reports/recurring/1632//#testresult/ce315edd6478835","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1759335408402,"stop":1759335434765,"duration":26363}},{"uid":"97da7fc86c1f02e9","reportUrl":"https://golioth.github.io/allure-reports/recurring/1631//#testresult/97da7fc86c1f02e9","status":"passed","time":{"start":1759321139135,"stop":1759321162550,"duration":23415}},{"uid":"f27eab0d349e8524","reportUrl":"https://golioth.github.io/allure-reports/recurring/1630//#testresult/f27eab0d349e8524","status":"passed","time":{"start":1759306658373,"stop":1759306679853,"duration":21480}},{"uid":"a8c430f389d97e87","reportUrl":"https://golioth.github.io/allure-reports/recurring/1629//#testresult/a8c430f389d97e87","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1759292156196,"stop":1759292182550,"duration":26354}},{"uid":"475a7b1ee672fff7","reportUrl":"https://golioth.github.io/allure-reports/recurring/1628//#testresult/475a7b1ee672fff7","status":"passed","time":{"start":1759278887906,"stop":1759278910735,"duration":22829}},{"uid":"ed1d21fca3866bf8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1627//#testresult/ed1d21fca3866bf8","status":"passed","time":{"start":1759263316136,"stop":1759263338381,"duration":22245}},{"uid":"e97c68443526a2da","reportUrl":"https://golioth.github.io/allure-reports/recurring/1626//#testresult/e97c68443526a2da","status":"passed","time":{"start":1759248947806,"stop":1759248969272,"duration":21466}},{"uid":"5f5dc7dd95d14980","reportUrl":"https://golioth.github.io/allure-reports/recurring/1625//#testresult/5f5dc7dd95d14980","status":"passed","time":{"start":1759234712529,"stop":1759234733930,"duration":21401}},{"uid":"a01ebac8fdaed71d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1624//#testresult/a01ebac8fdaed71d","status":"passed","time":{"start":1759220208370,"stop":1759220229614,"duration":21244}},{"uid":"40b2069fec473cb5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1623//#testresult/40b2069fec473cb5","status":"passed","time":{"start":1759205768700,"stop":1759205790175,"duration":21475}},{"uid":"58f9a9d03dbcc186","reportUrl":"https://golioth.github.io/allure-reports/recurring/1622//#testresult/58f9a9d03dbcc186","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759192294617,"stop":1759192315868,"duration":21251}},{"uid":"512c1f3991a8d484","reportUrl":"https://golioth.github.io/allure-reports/recurring/1621//#testresult/512c1f3991a8d484","status":"passed","time":{"start":1759176962036,"stop":1759176983828,"duration":21792}},{"uid":"5fdf1087e1395b4c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1620//#testresult/5fdf1087e1395b4c","status":"passed","time":{"start":1759162516972,"stop":1759162538474,"duration":21502}},{"uid":"fce4588e0c8660fc","reportUrl":"https://golioth.github.io/allure-reports/recurring/1619//#testresult/fce4588e0c8660fc","status":"passed","time":{"start":1759148349918,"stop":1759148372190,"duration":22272}},{"uid":"99dc5f999ba7fdf5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1618//#testresult/99dc5f999ba7fdf5","status":"passed","time":{"start":1759133871373,"stop":1759133892851,"duration":21478}}]},"tags":["GitHub Actions 1000059065","native_sim_64","anyio","zephyr"]},"source":"d8d46190d24b45da.json","parameterValues":["'native_sim_64'","'zephyr'"]}