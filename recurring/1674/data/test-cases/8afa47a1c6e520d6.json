{"uid":"8afa47a1c6e520d6","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"62f122e1e892b6a4ca7700385fbbf6dd","time":{"start":1759940178429,"stop":1759940200333,"duration":21904},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fb4249b8830>\ndevice = <golioth.golioth.Device object at 0x7fb42487dfd0>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None and wifi_psk is not None:\n            shell.exec_command(f\"wifi cred add -k 1 -s \\\"{wifi_ssid}\\\" -p \\\"{wifi_psk}\\\"\")\n            shell.exec_command(\"wifi cred auto_connect\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:52: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1759940177973,"stop":1759940177973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759940177973,"stop":1759940177974,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759940177974,"stop":1759940178160,"duration":186},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759940177974,"stop":1759940177974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1759940177974,"stop":1759940177974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1759940177974,"stop":1759940177974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759940177974,"stop":1759940177974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759940177974,"stop":1759940177974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759940177974,"stop":1759940177974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759940178160,"stop":1759940178420,"duration":260},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1759940178420,"stop":1759940178421,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1759940178421,"stop":1759940178428,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7fb4249b8830>\ndevice = <golioth.golioth.Device object at 0x7fb42487dfd0>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None and wifi_psk is not None:\n            shell.exec_command(f\"wifi cred add -k 1 -s \\\"{wifi_ssid}\\\" -p \\\"{wifi_psk}\\\"\")\n            shell.exec_command(\"wifi cred auto_connect\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:52: AssertionError","steps":[],"attachments":[{"uid":"78305b400df994bf","name":"log","source":"78305b400df994bf.txt","type":"text/plain","size":15407}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1759940200367,"stop":1759940200468,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759940200468,"stop":1759940200584,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759940200584,"stop":1759940200585,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1759940200585,"stop":1759940200585,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_32"},{"name":"tag","value":"GitHub Actions 1000061921"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"2c3181fea321"},{"name":"thread","value":"108858-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c1689e5e558964a5","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759940157631,"stop":1759940181132,"duration":23501}},{"uid":"36b3a6bf6ec52475","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759940155612,"stop":1759940179407,"duration":23795}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":2,"skipped":0,"passed":76,"unknown":0,"total":82},"items":[{"uid":"1b7fe4629c880721","reportUrl":"https://golioth.github.io/allure-reports/recurring/1673//#testresult/1b7fe4629c880721","status":"passed","time":{"start":1759925970229,"stop":1759925991483,"duration":21254}},{"uid":"b1d4bc8146deb82","reportUrl":"https://golioth.github.io/allure-reports/recurring/1672//#testresult/b1d4bc8146deb82","status":"passed","time":{"start":1759911450292,"stop":1759911476026,"duration":25734}},{"uid":"4712d9d36c067102","reportUrl":"https://golioth.github.io/allure-reports/recurring/1671//#testresult/4712d9d36c067102","status":"passed","time":{"start":1759896946201,"stop":1759896968032,"duration":21831}},{"uid":"373f36bc4d946c15","reportUrl":"https://golioth.github.io/allure-reports/recurring/1670//#testresult/373f36bc4d946c15","status":"passed","time":{"start":1759883503580,"stop":1759883525083,"duration":21503}},{"uid":"4d24738f9cf5cb40","reportUrl":"https://golioth.github.io/allure-reports/recurring/1669//#testresult/4d24738f9cf5cb40","status":"passed","time":{"start":1759868125231,"stop":1759868151213,"duration":25982}},{"uid":"963db14b6b954133","reportUrl":"https://golioth.github.io/allure-reports/recurring/1668//#testresult/963db14b6b954133","status":"passed","time":{"start":1759853752597,"stop":1759853776958,"duration":24361}},{"uid":"66bbed87278e87a9","reportUrl":"https://golioth.github.io/allure-reports/recurring/1667//#testresult/66bbed87278e87a9","status":"passed","time":{"start":1759839538975,"stop":1759839560868,"duration":21893}},{"uid":"db04fe55cb00e78b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1666//#testresult/db04fe55cb00e78b","status":"passed","time":{"start":1759825000776,"stop":1759825023429,"duration":22653}},{"uid":"7b83229847b8fdbd","reportUrl":"https://golioth.github.io/allure-reports/recurring/1665//#testresult/7b83229847b8fdbd","status":"passed","time":{"start":1759810561499,"stop":1759810585177,"duration":23678}},{"uid":"689effc23c12e7ac","reportUrl":"https://golioth.github.io/allure-reports/recurring/1664//#testresult/689effc23c12e7ac","status":"passed","time":{"start":1759797096123,"stop":1759797118713,"duration":22590}},{"uid":"3a1ce7dd1a12bb32","reportUrl":"https://golioth.github.io/allure-reports/recurring/1663//#testresult/3a1ce7dd1a12bb32","status":"passed","time":{"start":1759781724992,"stop":1759781747647,"duration":22655}},{"uid":"cd1e605cd006b4df","reportUrl":"https://golioth.github.io/allure-reports/recurring/1662//#testresult/cd1e605cd006b4df","status":"passed","time":{"start":1759767364212,"stop":1759767386654,"duration":22442}},{"uid":"60f17b92d4ea69d1","reportUrl":"https://golioth.github.io/allure-reports/recurring/1661//#testresult/60f17b92d4ea69d1","status":"passed","time":{"start":1759753131081,"stop":1759753156951,"duration":25870}},{"uid":"12c7cee94e1fe372","reportUrl":"https://golioth.github.io/allure-reports/recurring/1660//#testresult/12c7cee94e1fe372","status":"passed","time":{"start":1759738619832,"stop":1759738641188,"duration":21356}},{"uid":"90ab86a20ac2a87d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1659//#testresult/90ab86a20ac2a87d","status":"passed","time":{"start":1759724124002,"stop":1759724145763,"duration":21761}},{"uid":"62925a9a44c4fe80","reportUrl":"https://golioth.github.io/allure-reports/recurring/1658//#testresult/62925a9a44c4fe80","status":"passed","time":{"start":1759710722662,"stop":1759710744041,"duration":21379}},{"uid":"a701e10545b3f151","reportUrl":"https://golioth.github.io/allure-reports/recurring/1657//#testresult/a701e10545b3f151","status":"passed","time":{"start":1759695278401,"stop":1759695299632,"duration":21231}},{"uid":"d2baee51a4173b04","reportUrl":"https://golioth.github.io/allure-reports/recurring/1656//#testresult/d2baee51a4173b04","status":"passed","time":{"start":1759680888109,"stop":1759680909588,"duration":21479}},{"uid":"20b88227c40b5cd6","reportUrl":"https://golioth.github.io/allure-reports/recurring/1655//#testresult/20b88227c40b5cd6","status":"passed","time":{"start":1759666651785,"stop":1759666673315,"duration":21530}},{"uid":"315ad67216f6c57e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1654//#testresult/315ad67216f6c57e","status":"passed","time":{"start":1759652131626,"stop":1759652153138,"duration":21512}}]},"tags":["GitHub Actions 1000061921","anyio","native_sim_32","zephyr"]},"source":"8afa47a1c6e520d6.json","parameterValues":["'native_sim_32'","'zephyr'"]}