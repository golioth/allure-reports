{"uid":"52620058f3c141e9","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"d8989de114c223477a1d53d831d12112","time":{"start":1759940203316,"stop":1759940229095,"duration":25779},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f9cfc97c830>\ndevice = <golioth.golioth.Device object at 0x7f9cfc841fd0>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None and wifi_psk is not None:\n            shell.exec_command(f\"wifi cred add -k 1 -s \\\"{wifi_ssid}\\\" -p \\\"{wifi_psk}\\\"\")\n            shell.exec_command(\"wifi cred auto_connect\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:52: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1759940202773,"stop":1759940202773,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759940202773,"stop":1759940202774,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759940202774,"stop":1759940202774,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759940202774,"stop":1759940202774,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759940202774,"stop":1759940202985,"duration":211},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1759940202774,"stop":1759940202774,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1759940202774,"stop":1759940202774,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759940202774,"stop":1759940202774,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759940202774,"stop":1759940202774,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759940202985,"stop":1759940203308,"duration":323},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1759940203308,"stop":1759940203309,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1759940203309,"stop":1759940203316,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f9cfc97c830>\ndevice = <golioth.golioth.Device object at 0x7f9cfc841fd0>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None and wifi_psk is not None:\n            shell.exec_command(f\"wifi cred add -k 1 -s \\\"{wifi_ssid}\\\" -p \\\"{wifi_psk}\\\"\")\n            shell.exec_command(\"wifi cred auto_connect\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:52: AssertionError","steps":[],"attachments":[{"uid":"b7833766d1532b51","name":"log","source":"b7833766d1532b51.txt","type":"text/plain","size":15411}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1759940229131,"stop":1759940229232,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759940229233,"stop":1759940229378,"duration":145},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759940229378,"stop":1759940229378,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1759940229379,"stop":1759940229379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 1000061918"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"130231200f25"},{"name":"thread","value":"108787-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d87c0884740c1ea4","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759940179546,"stop":1759940201966,"duration":22420}},{"uid":"2a419dd65bd27459","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759940167201,"stop":1759940191747,"duration":24546}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":3,"skipped":0,"passed":75,"unknown":0,"total":82},"items":[{"uid":"74acf16d6a44d311","reportUrl":"https://golioth.github.io/allure-reports/recurring/1673//#testresult/74acf16d6a44d311","status":"passed","time":{"start":1759925942085,"stop":1759925963522,"duration":21437}},{"uid":"dc308c44ddeb481","reportUrl":"https://golioth.github.io/allure-reports/recurring/1672//#testresult/dc308c44ddeb481","status":"passed","time":{"start":1759911435284,"stop":1759911456676,"duration":21392}},{"uid":"7a88449490cf0108","reportUrl":"https://golioth.github.io/allure-reports/recurring/1671//#testresult/7a88449490cf0108","status":"passed","time":{"start":1759896929143,"stop":1759896950532,"duration":21389}},{"uid":"308c1189878ecee1","reportUrl":"https://golioth.github.io/allure-reports/recurring/1670//#testresult/308c1189878ecee1","status":"passed","time":{"start":1759883480928,"stop":1759883504605,"duration":23677}},{"uid":"a17ee9a78df4f8e1","reportUrl":"https://golioth.github.io/allure-reports/recurring/1669//#testresult/a17ee9a78df4f8e1","status":"passed","time":{"start":1759868100395,"stop":1759868121652,"duration":21257}},{"uid":"c9011c23491b5c30","reportUrl":"https://golioth.github.io/allure-reports/recurring/1668//#testresult/c9011c23491b5c30","status":"passed","time":{"start":1759853760541,"stop":1759853784412,"duration":23871}},{"uid":"75b6ce5136c31d6c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1667//#testresult/75b6ce5136c31d6c","status":"passed","time":{"start":1759839536209,"stop":1759839559167,"duration":22958}},{"uid":"f251f7db89815da5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1666//#testresult/f251f7db89815da5","status":"passed","time":{"start":1759824987108,"stop":1759825008355,"duration":21247}},{"uid":"b4f36439e0fb3dd3","reportUrl":"https://golioth.github.io/allure-reports/recurring/1665//#testresult/b4f36439e0fb3dd3","status":"passed","time":{"start":1759810556273,"stop":1759810577631,"duration":21358}},{"uid":"93421121c47d61c6","reportUrl":"https://golioth.github.io/allure-reports/recurring/1664//#testresult/93421121c47d61c6","status":"passed","time":{"start":1759797091887,"stop":1759797114651,"duration":22764}},{"uid":"fa962215822afdd7","reportUrl":"https://golioth.github.io/allure-reports/recurring/1663//#testresult/fa962215822afdd7","status":"passed","time":{"start":1759781684424,"stop":1759781708770,"duration":24346}},{"uid":"82552790d079a6aa","reportUrl":"https://golioth.github.io/allure-reports/recurring/1662//#testresult/82552790d079a6aa","status":"passed","time":{"start":1759767358139,"stop":1759767381737,"duration":23598}},{"uid":"62bc6d21d24d4bdf","reportUrl":"https://golioth.github.io/allure-reports/recurring/1661//#testresult/62bc6d21d24d4bdf","status":"passed","time":{"start":1759753137655,"stop":1759753163616,"duration":25961}},{"uid":"afeddeafaf9e265a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1660//#testresult/afeddeafaf9e265a","status":"passed","time":{"start":1759738621885,"stop":1759738643119,"duration":21234}},{"uid":"70adff139f809882","reportUrl":"https://golioth.github.io/allure-reports/recurring/1659//#testresult/70adff139f809882","status":"passed","time":{"start":1759724130336,"stop":1759724151843,"duration":21507}},{"uid":"63fdbb49073cbb0e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1658//#testresult/63fdbb49073cbb0e","status":"passed","time":{"start":1759710731019,"stop":1759710752657,"duration":21638}},{"uid":"984ba1b772548225","reportUrl":"https://golioth.github.io/allure-reports/recurring/1657//#testresult/984ba1b772548225","status":"passed","time":{"start":1759695283985,"stop":1759695305471,"duration":21486}},{"uid":"985cc731788443d0","reportUrl":"https://golioth.github.io/allure-reports/recurring/1656//#testresult/985cc731788443d0","status":"passed","time":{"start":1759680881747,"stop":1759680903314,"duration":21567}},{"uid":"e375a5b4b263c227","reportUrl":"https://golioth.github.io/allure-reports/recurring/1655//#testresult/e375a5b4b263c227","status":"passed","time":{"start":1759666641410,"stop":1759666662662,"duration":21252}},{"uid":"a1d337059050ef96","reportUrl":"https://golioth.github.io/allure-reports/recurring/1654//#testresult/a1d337059050ef96","status":"passed","time":{"start":1759652131531,"stop":1759652152769,"duration":21238}}]},"tags":["GitHub Actions 1000061918","native_sim_64","anyio","zephyr"]},"source":"52620058f3c141e9.json","parameterValues":["'native_sim_64'","'zephyr'"]}