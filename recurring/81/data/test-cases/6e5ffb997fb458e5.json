{"uid":"6e5ffb997fb458e5","name":"test_lightdb_reported","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"cc908bd93c71faf405adf71e50c4a8e9","time":{"start":1737000499094,"stop":1737000499307,"duration":213},"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f39b7689ed0>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"device_name","time":{"start":1737000484372,"stop":1737000484372,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737000484372,"stop":1737000484372,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1737000484372,"stop":1737000484372,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1737000484373,"stop":1737000484373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1737000484373,"stop":1737000484373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737000484373,"stop":1737000484754,"duration":381},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1737000484373,"stop":1737000484373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1737000484373,"stop":1737000484373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1737000484373,"stop":1737000484373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737000484373,"stop":1737000484373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737000484373,"stop":1737000484373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1737000484373,"stop":1737000484373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737000484373,"stop":1737000484373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1737000484755,"stop":1737000484757,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737000484757,"stop":1737000485417,"duration":660},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1737000485417,"stop":1737000499093,"duration":13676},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f39b7689ed0>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","steps":[],"attachments":[{"uid":"37106cd2fac0ae6b","name":"stdout","source":"37106cd2fac0ae6b.txt","type":"text/plain","size":2566},{"uid":"838be52286adf100","name":"stderr","source":"838be52286adf100.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1737000509062,"stop":1737000509287,"duration":225},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737000509288,"stop":1737000509532,"duration":244},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1737000509532,"stop":1737000509547,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737000509548,"stop":1737000509548,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_32"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"4a26ebd10e03"},{"name":"thread","value":"7736-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":11,"broken":3,"skipped":0,"passed":74,"unknown":0,"total":88},"items":[{"uid":"5b83e1522dbb780a","reportUrl":"https://golioth.github.io/allure-reports/recurring/80//#testresult/5b83e1522dbb780a","status":"passed","time":{"start":1736986949872,"stop":1736986952715,"duration":2843}},{"uid":"1c49f519a98ee6b6","reportUrl":"https://golioth.github.io/allure-reports/recurring/79//#testresult/1c49f519a98ee6b6","status":"passed","time":{"start":1736971657881,"stop":1736971660315,"duration":2434}},{"uid":"b42a02fddc0339b5","reportUrl":"https://golioth.github.io/allure-reports/recurring/78//#testresult/b42a02fddc0339b5","status":"passed","time":{"start":1736957288873,"stop":1736957291149,"duration":2276}},{"uid":"1fb05f9502e51386","reportUrl":"https://golioth.github.io/allure-reports/recurring/77//#testresult/1fb05f9502e51386","status":"passed","time":{"start":1736943033392,"stop":1736943035522,"duration":2130}},{"uid":"841456124ff3db5c","reportUrl":"https://golioth.github.io/allure-reports/recurring/76//#testresult/841456124ff3db5c","status":"passed","time":{"start":1736928544977,"stop":1736928547123,"duration":2146}},{"uid":"94f50c621db11b63","reportUrl":"https://golioth.github.io/allure-reports/recurring/75//#testresult/94f50c621db11b63","status":"passed","time":{"start":1736914102183,"stop":1736914104399,"duration":2216}},{"uid":"2dbe7e66403c2333","reportUrl":"https://golioth.github.io/allure-reports/recurring/74//#testresult/2dbe7e66403c2333","status":"passed","time":{"start":1736900550128,"stop":1736900552244,"duration":2116}},{"uid":"25c0288e58d1d471","reportUrl":"https://golioth.github.io/allure-reports/recurring/73//#testresult/25c0288e58d1d471","status":"passed","time":{"start":1736885278993,"stop":1736885281873,"duration":2880}},{"uid":"4d44b397731c4e04","reportUrl":"https://golioth.github.io/allure-reports/recurring/72//#testresult/4d44b397731c4e04","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1736870911332,"stop":1736870911478,"duration":146}},{"uid":"1517981ecde19ddf","reportUrl":"https://golioth.github.io/allure-reports/recurring/71//#testresult/1517981ecde19ddf","status":"passed","time":{"start":1736856629155,"stop":1736856630312,"duration":1157}},{"uid":"e3e3a467fe00a45d","reportUrl":"https://golioth.github.io/allure-reports/recurring/70//#testresult/e3e3a467fe00a45d","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1736842151889,"stop":1736842151971,"duration":82}},{"uid":"870f02b432c34d5d","reportUrl":"https://golioth.github.io/allure-reports/recurring/69//#testresult/870f02b432c34d5d","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1736827703259,"stop":1736827703364,"duration":105}},{"uid":"d3be32f71e8dcccf","reportUrl":"https://golioth.github.io/allure-reports/recurring/68//#testresult/d3be32f71e8dcccf","status":"passed","time":{"start":1736814338375,"stop":1736814339841,"duration":1466}},{"uid":"6426453a79587521","reportUrl":"https://golioth.github.io/allure-reports/recurring/67//#testresult/6426453a79587521","status":"passed","time":{"start":1736798853840,"stop":1736798855178,"duration":1338}},{"uid":"18e1bdc2a9f00111","reportUrl":"https://golioth.github.io/allure-reports/recurring/66//#testresult/18e1bdc2a9f00111","status":"passed","time":{"start":1736784503722,"stop":1736784506089,"duration":2367}},{"uid":"4dc0a54d31596fa","reportUrl":"https://golioth.github.io/allure-reports/recurring/65//#testresult/4dc0a54d31596fa","status":"passed","time":{"start":1736770276685,"stop":1736770280111,"duration":3426}},{"uid":"6da585f29a7aaeee","reportUrl":"https://golioth.github.io/allure-reports/recurring/64//#testresult/6da585f29a7aaeee","status":"passed","time":{"start":1736755790859,"stop":1736755793503,"duration":2644}},{"uid":"30791e492e977f69","reportUrl":"https://golioth.github.io/allure-reports/recurring/63//#testresult/30791e492e977f69","status":"passed","time":{"start":1736741331964,"stop":1736741335108,"duration":3144}},{"uid":"ca80961a325c556d","reportUrl":"https://golioth.github.io/allure-reports/recurring/62//#testresult/ca80961a325c556d","status":"passed","time":{"start":1736727904353,"stop":1736727906029,"duration":1676}},{"uid":"bf21849bfdaf89c2","reportUrl":"https://golioth.github.io/allure-reports/recurring/61//#testresult/bf21849bfdaf89c2","status":"passed","time":{"start":1736712470446,"stop":1736712473482,"duration":3036}}]},"tags":["anyio","native_sim_32","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"6e5ffb997fb458e5.json","parameterValues":["'native_sim_32'","'zephyr'"]}