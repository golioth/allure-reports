{"uid":"a6b1c4af54d50e0e","name":"test_lightdb_reported","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"b587a46c1d6b3a703a32ac1a951bd89f","time":{"start":1759694866570,"stop":1759694866717,"duration":147},"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f0a3f21cd70>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_url","time":{"start":1759694853613,"stop":1759694853613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759694853613,"stop":1759694853613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759694853613,"stop":1759694853613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1759694853613,"stop":1759694853613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759694853613,"stop":1759694853613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759694853613,"stop":1759694854042,"duration":429},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1759694853613,"stop":1759694853613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759694853613,"stop":1759694853613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1759694854042,"stop":1759694854042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1759694854042,"stop":1759694854042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1759694854042,"stop":1759694854043,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1759694854042,"stop":1759694854042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1759694854042,"stop":1759694854042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1759694854042,"stop":1759694854042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759694854043,"stop":1759694854654,"duration":611},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1759694854654,"stop":1759694866569,"duration":11915},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f0a3f21cd70>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","steps":[],"attachments":[{"uid":"f62ca512403791a3","name":"stdout","source":"f62ca512403791a3.txt","type":"text/plain","size":2580},{"uid":"cf036e7d0f2b93c8","name":"stderr","source":"cf036e7d0f2b93c8.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1759694874479,"stop":1759694874621,"duration":142},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759694874621,"stop":1759694874801,"duration":180},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1759694874801,"stop":1759694874809,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759694874810,"stop":1759694874810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_64"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"a2312727c127"},{"name":"thread","value":"7822-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":56,"unknown":0,"total":65},"items":[{"uid":"e752055d5f960c5b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1656//#testresult/e752055d5f960c5b","status":"passed","time":{"start":1759680468055,"stop":1759680471277,"duration":3222}},{"uid":"b0e3cc53aabc4c41","reportUrl":"https://golioth.github.io/allure-reports/recurring/1655//#testresult/b0e3cc53aabc4c41","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1759666222101,"stop":1759666222228,"duration":127}},{"uid":"dfc393107a91da1d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1654//#testresult/dfc393107a91da1d","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1759651723600,"stop":1759651723740,"duration":140}},{"uid":"6b78ca6fa1085dbf","reportUrl":"https://golioth.github.io/allure-reports/recurring/1653//#testresult/6b78ca6fa1085dbf","status":"passed","time":{"start":1759637306649,"stop":1759637308971,"duration":2322}},{"uid":"972c9e8100d21394","reportUrl":"https://golioth.github.io/allure-reports/recurring/1652//#testresult/972c9e8100d21394","status":"passed","time":{"start":1759624020376,"stop":1759624023429,"duration":3053}},{"uid":"ef7ac0a3a7c9cd31","reportUrl":"https://golioth.github.io/allure-reports/recurring/1651//#testresult/ef7ac0a3a7c9cd31","status":"passed","time":{"start":1759608455976,"stop":1759608457202,"duration":1226}},{"uid":"bcbc72e53c9241b0","reportUrl":"https://golioth.github.io/allure-reports/recurring/1650//#testresult/bcbc72e53c9241b0","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1759594093318,"stop":1759594093471,"duration":153}},{"uid":"246e0f709dc9f134","reportUrl":"https://golioth.github.io/allure-reports/recurring/1649//#testresult/246e0f709dc9f134","status":"passed","time":{"start":1759579821426,"stop":1759579823383,"duration":1957}},{"uid":"841848da256b10e1","reportUrl":"https://golioth.github.io/allure-reports/recurring/1648//#testresult/841848da256b10e1","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1759565345119,"stop":1759565345266,"duration":147}},{"uid":"56fd3de0dfd4585","reportUrl":"https://golioth.github.io/allure-reports/recurring/1647//#testresult/56fd3de0dfd4585","status":"passed","time":{"start":1759550925941,"stop":1759550927079,"duration":1138}},{"uid":"f7053438263026a3","reportUrl":"https://golioth.github.io/allure-reports/recurring/1646//#testresult/f7053438263026a3","status":"passed","time":{"start":1759537399843,"stop":1759537401767,"duration":1924}},{"uid":"6bdb05b4ae5e2a69","reportUrl":"https://golioth.github.io/allure-reports/recurring/1645//#testresult/6bdb05b4ae5e2a69","status":"passed","time":{"start":1759522084643,"stop":1759522086539,"duration":1896}},{"uid":"5cd6ffacec0e04f4","reportUrl":"https://golioth.github.io/allure-reports/recurring/1644//#testresult/5cd6ffacec0e04f4","status":"passed","time":{"start":1759507734828,"stop":1759507736927,"duration":2099}},{"uid":"2751914f751b4162","reportUrl":"https://golioth.github.io/allure-reports/recurring/1643//#testresult/2751914f751b4162","status":"passed","time":{"start":1759493467239,"stop":1759493469275,"duration":2036}},{"uid":"595e69b52cb99314","reportUrl":"https://golioth.github.io/allure-reports/recurring/1642//#testresult/595e69b52cb99314","status":"passed","time":{"start":1759478968598,"stop":1759478970259,"duration":1661}},{"uid":"b2ffa83d45f9bffa","reportUrl":"https://golioth.github.io/allure-reports/recurring/1641//#testresult/b2ffa83d45f9bffa","status":"passed","time":{"start":1759464512152,"stop":1759464514489,"duration":2337}},{"uid":"943cdcbf29be29e3","reportUrl":"https://golioth.github.io/allure-reports/recurring/1640//#testresult/943cdcbf29be29e3","status":"passed","time":{"start":1759451018184,"stop":1759451020268,"duration":2084}},{"uid":"9dbe057a79aa411","reportUrl":"https://golioth.github.io/allure-reports/recurring/1638//#testresult/9dbe057a79aa411","status":"passed","time":{"start":1759421330750,"stop":1759421333183,"duration":2433}},{"uid":"b09dfd73b48eae7e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1639//#testresult/b09dfd73b48eae7e","status":"passed","time":{"start":1759435699957,"stop":1759435703050,"duration":3093}},{"uid":"4e0e377a29162366","reportUrl":"https://golioth.github.io/allure-reports/recurring/1637//#testresult/4e0e377a29162366","status":"passed","time":{"start":1759407059449,"stop":1759407061925,"duration":2476}}]},"tags":["native_sim_64","anyio","zephyr"]},"source":"a6b1c4af54d50e0e.json","parameterValues":["'native_sim_64'","'zephyr'"]}