{"uid":"5fad5086593de18d","name":"test_lightdb_reported","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"cc908bd93c71faf405adf71e50c4a8e9","time":{"start":1760184612863,"stop":1760184612947,"duration":84},"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f86516117f0>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"project","time":{"start":1760184600451,"stop":1760184600618,"duration":167},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760184600451,"stop":1760184600451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1760184600451,"stop":1760184600451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760184600451,"stop":1760184600451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760184600451,"stop":1760184600451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760184600451,"stop":1760184600451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760184600451,"stop":1760184600451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760184600451,"stop":1760184600451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760184600618,"stop":1760184600620,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1760184600619,"stop":1760184600619,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1760184600619,"stop":1760184600619,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1760184600619,"stop":1760184600619,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1760184600619,"stop":1760184600619,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1760184600619,"stop":1760184600619,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760184600620,"stop":1760184600822,"duration":202},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760184600822,"stop":1760184612863,"duration":12041},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f86516117f0>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","steps":[],"attachments":[{"uid":"300411f3de04749d","name":"stdout","source":"300411f3de04749d.txt","type":"text/plain","size":2551},{"uid":"3f7d143784df8cea","name":"stderr","source":"3f7d143784df8cea.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1760184618928,"stop":1760184618999,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760184619000,"stop":1760184619082,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760184619083,"stop":1760184619098,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760184619099,"stop":1760184619099,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_32"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"9e2b8fb28a7e"},{"name":"thread","value":"7639-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":0,"skipped":0,"passed":86,"unknown":0,"total":101},"items":[{"uid":"346286757b2fbf15","reportUrl":"https://golioth.github.io/allure-reports/recurring/1690//#testresult/346286757b2fbf15","status":"passed","time":{"start":1760170126119,"stop":1760170127127,"duration":1008}},{"uid":"e4f787bf6aa93dd2","reportUrl":"https://golioth.github.io/allure-reports/recurring/1689//#testresult/e4f787bf6aa93dd2","status":"passed","time":{"start":1760155719502,"stop":1760155721550,"duration":2048}},{"uid":"742cb30c649ed14d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1688//#testresult/742cb30c649ed14d","status":"passed","time":{"start":1760142200845,"stop":1760142202838,"duration":1993}},{"uid":"4348a8540c6a6e3e","reportUrl":"https://golioth.github.io/allure-reports/recurring/1687//#testresult/4348a8540c6a6e3e","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1760126911706,"stop":1760126911850,"duration":144}},{"uid":"fbed69bb2b75d13a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1686//#testresult/fbed69bb2b75d13a","status":"passed","time":{"start":1760112582366,"stop":1760112585443,"duration":3077}},{"uid":"473acbb135709e94","reportUrl":"https://golioth.github.io/allure-reports/recurring/1685//#testresult/473acbb135709e94","status":"passed","time":{"start":1760098301257,"stop":1760098303122,"duration":1865}},{"uid":"c5bba770cc194e9a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1684//#testresult/c5bba770cc194e9a","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1760083835016,"stop":1760083835088,"duration":72}},{"uid":"ad9e07635dc5d022","reportUrl":"https://golioth.github.io/allure-reports/recurring/1683//#testresult/ad9e07635dc5d022","status":"passed","time":{"start":1760069340866,"stop":1760069343857,"duration":2991}},{"uid":"bd025360adaae16d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1682//#testresult/bd025360adaae16d","status":"passed","time":{"start":1760055902790,"stop":1760055904596,"duration":1806}},{"uid":"e1fbbf4b3515e0b7","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/e1fbbf4b3515e0b7","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1760048159299,"stop":1760048159438,"duration":139}},{"uid":"5b2f71b0c4a1b8f8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1681//#testresult/5b2f71b0c4a1b8f8","status":"passed","time":{"start":1760040517542,"stop":1760040520523,"duration":2981}},{"uid":"683e17f9093609d7","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/683e17f9093609d7","status":"passed","time":{"start":1760038966827,"stop":1760038968788,"duration":1961}},{"uid":"db2ff803ce064c46","reportUrl":"https://golioth.github.io/allure-reports/recurring/1680//#testresult/db2ff803ce064c46","status":"passed","time":{"start":1760026448471,"stop":1760026451466,"duration":2995}},{"uid":"1e0818faa1603d0f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1679//#testresult/1e0818faa1603d0f","status":"passed","time":{"start":1760012065044,"stop":1760012066972,"duration":1928}},{"uid":"dfaaf13a85ef764f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1678//#testresult/dfaaf13a85ef764f","status":"passed","time":{"start":1759997381005,"stop":1759997382155,"duration":1150}},{"uid":"7024f96f7a51e856","reportUrl":"https://golioth.github.io/allure-reports/recurring/1677//#testresult/7024f96f7a51e856","status":"passed","time":{"start":1759982941594,"stop":1759982943703,"duration":2109}},{"uid":"aed3e05f9c38a451","reportUrl":"https://golioth.github.io/allure-reports/recurring/1676//#testresult/aed3e05f9c38a451","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1759969488866,"stop":1759969488997,"duration":131}},{"uid":"1ac6b601664f02c1","reportUrl":"https://golioth.github.io/allure-reports/recurring/1675//#testresult/1ac6b601664f02c1","status":"passed","time":{"start":1759954111313,"stop":1759954113708,"duration":2395}},{"uid":"99ded06568176881","reportUrl":"https://golioth.github.io/allure-reports/recurring/1674//#testresult/99ded06568176881","status":"passed","time":{"start":1759939761637,"stop":1759939763991,"duration":2354}},{"uid":"7d08c5903f41c9ad","reportUrl":"https://golioth.github.io/allure-reports/recurring/1673//#testresult/7d08c5903f41c9ad","status":"passed","time":{"start":1759925535969,"stop":1759925537962,"duration":1993}}]},"tags":["anyio","native_sim_32","zephyr"]},"source":"5fad5086593de18d.json","parameterValues":["'native_sim_32'","'zephyr'"]}