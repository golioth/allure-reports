{"uid":"8a6cfcf8da5b8839","name":"test_lightdb_reported","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"b587a46c1d6b3a703a32ac1a951bd89f","time":{"start":1737115817019,"stop":1737115817101,"duration":82},"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7fed91379990>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"device_name","time":{"start":1737115805536,"stop":1737115805536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1737115805536,"stop":1737115805536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1737115805536,"stop":1737115805536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737115805536,"stop":1737115805536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737115805536,"stop":1737115805536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1737115805536,"stop":1737115805536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737115805536,"stop":1737115805536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737115805536,"stop":1737115805536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1737115805536,"stop":1737115805536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1737115805537,"stop":1737115805537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1737115805537,"stop":1737115805537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1737115805537,"stop":1737115805537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737115805537,"stop":1737115805899,"duration":362},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1737115805899,"stop":1737115805901,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737115805901,"stop":1737115806368,"duration":467},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1737115806368,"stop":1737115817018,"duration":10650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7fed91379990>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","steps":[],"attachments":[{"uid":"5d8cc8da56f4eb25","name":"stdout","source":"5d8cc8da56f4eb25.txt","type":"text/plain","size":2508},{"uid":"2bffab0acc251a40","name":"stderr","source":"2bffab0acc251a40.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1737115823339,"stop":1737115823424,"duration":85},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737115823425,"stop":1737115823513,"duration":88},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1737115823513,"stop":1737115823527,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737115823527,"stop":1737115823528,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_64"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"7bec70bb8e5b"},{"name":"thread","value":"7724-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":3,"skipped":0,"passed":85,"unknown":0,"total":96},"items":[{"uid":"4bda5bc41fcf3bcc","reportUrl":"https://golioth.github.io/allure-reports/recurring/88//#testresult/4bda5bc41fcf3bcc","status":"passed","time":{"start":1737101333364,"stop":1737101336288,"duration":2924}},{"uid":"97c3cd03ce5ca456","reportUrl":"https://golioth.github.io/allure-reports/recurring/87//#testresult/97c3cd03ce5ca456","status":"passed","time":{"start":1737086904485,"stop":1737086905794,"duration":1309}},{"uid":"d2e62d6e2ab57873","reportUrl":"https://golioth.github.io/allure-reports/recurring/86//#testresult/d2e62d6e2ab57873","status":"passed","time":{"start":1737073345910,"stop":1737073348803,"duration":2893}},{"uid":"1fd4090872266f6a","reportUrl":"https://golioth.github.io/allure-reports/recurring/85//#testresult/1fd4090872266f6a","status":"passed","time":{"start":1737058071404,"stop":1737058074320,"duration":2916}},{"uid":"79658a5b8bc1155b","reportUrl":"https://golioth.github.io/allure-reports/recurring/84//#testresult/79658a5b8bc1155b","status":"passed","time":{"start":1737043666131,"stop":1737043668423,"duration":2292}},{"uid":"f4220f080f5ac589","reportUrl":"https://golioth.github.io/allure-reports/recurring/83//#testresult/f4220f080f5ac589","status":"passed","time":{"start":1737029421404,"stop":1737029428228,"duration":6824}},{"uid":"11d0e61b393dafe7","reportUrl":"https://golioth.github.io/allure-reports/recurring/82//#testresult/11d0e61b393dafe7","status":"passed","time":{"start":1737014912750,"stop":1737014915646,"duration":2896}},{"uid":"64f6a7baa83da37d","reportUrl":"https://golioth.github.io/allure-reports/recurring/81//#testresult/64f6a7baa83da37d","status":"passed","time":{"start":1737000495216,"stop":1737000497362,"duration":2146}},{"uid":"863c2d9299560703","reportUrl":"https://golioth.github.io/allure-reports/recurring/80//#testresult/863c2d9299560703","status":"failed","statusDetails":"AssertionError: assert True is False","time":{"start":1736986952324,"stop":1736986952520,"duration":196}},{"uid":"71baae1bfa648713","reportUrl":"https://golioth.github.io/allure-reports/recurring/79//#testresult/71baae1bfa648713","status":"passed","time":{"start":1736971656618,"stop":1736971658699,"duration":2081}},{"uid":"eb541a9550f438e9","reportUrl":"https://golioth.github.io/allure-reports/recurring/78//#testresult/eb541a9550f438e9","status":"passed","time":{"start":1736957292627,"stop":1736957295563,"duration":2936}},{"uid":"96a379924f28fdbb","reportUrl":"https://golioth.github.io/allure-reports/recurring/77//#testresult/96a379924f28fdbb","status":"passed","time":{"start":1736943023764,"stop":1736943025751,"duration":1987}},{"uid":"3f98a07ba3be04f4","reportUrl":"https://golioth.github.io/allure-reports/recurring/76//#testresult/3f98a07ba3be04f4","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1736928543579,"stop":1736928543666,"duration":87}},{"uid":"562bedd8576bb9d8","reportUrl":"https://golioth.github.io/allure-reports/recurring/75//#testresult/562bedd8576bb9d8","status":"passed","time":{"start":1736914107827,"stop":1736914110107,"duration":2280}},{"uid":"2b8df3e21342b8b8","reportUrl":"https://golioth.github.io/allure-reports/recurring/74//#testresult/2b8df3e21342b8b8","status":"passed","time":{"start":1736900548265,"stop":1736900549466,"duration":1201}},{"uid":"9a73b2a39823b7b0","reportUrl":"https://golioth.github.io/allure-reports/recurring/73//#testresult/9a73b2a39823b7b0","status":"passed","time":{"start":1736885277161,"stop":1736885280580,"duration":3419}},{"uid":"87f94ade6bbaeb38","reportUrl":"https://golioth.github.io/allure-reports/recurring/72//#testresult/87f94ade6bbaeb38","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1736870909569,"stop":1736870909683,"duration":114}},{"uid":"f2e1aa793f641ce5","reportUrl":"https://golioth.github.io/allure-reports/recurring/71//#testresult/f2e1aa793f641ce5","status":"passed","time":{"start":1736856615312,"stop":1736856616503,"duration":1191}},{"uid":"7bc2eb4884e5ee6a","reportUrl":"https://golioth.github.io/allure-reports/recurring/70//#testresult/7bc2eb4884e5ee6a","status":"passed","time":{"start":1736842158187,"stop":1736842161114,"duration":2927}},{"uid":"d0d789d06c4e4ef4","reportUrl":"https://golioth.github.io/allure-reports/recurring/69//#testresult/d0d789d06c4e4ef4","status":"passed","time":{"start":1736827704362,"stop":1736827706927,"duration":2565}}]},"tags":["native_sim_64","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"8a6cfcf8da5b8839.json","parameterValues":["'native_sim_64'","'zephyr'"]}