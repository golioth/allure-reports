{"uid":"7894fcd9bbc87dad","name":"test_lightdb_reported","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"cc908bd93c71faf405adf71e50c4a8e9","time":{"start":1737403648132,"stop":1737403648211,"duration":79},"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f46bfee2390>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"port","time":{"start":1737403636709,"stop":1737403636709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737403636709,"stop":1737403636709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1737403636709,"stop":1737403636709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1737403636709,"stop":1737403636709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737403636709,"stop":1737403636709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1737403636709,"stop":1737403636709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737403636709,"stop":1737403636709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737403636710,"stop":1737403636710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1737403636710,"stop":1737403636710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1737403636710,"stop":1737403636710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737403636710,"stop":1737403637002,"duration":292},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737403636710,"stop":1737403636710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1737403636710,"stop":1737403636710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1737403637003,"stop":1737403637005,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737403637005,"stop":1737403637605,"duration":600},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1737403637605,"stop":1737403648131,"duration":10526},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f46bfee2390>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","steps":[],"attachments":[{"uid":"a235fd9765aaf3e5","name":"stdout","source":"a235fd9765aaf3e5.txt","type":"text/plain","size":2522},{"uid":"bc11b11147e488a6","name":"stderr","source":"bc11b11147e488a6.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1737403654374,"stop":1737403654449,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737403654449,"stop":1737403654538,"duration":89},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1737403654538,"stop":1737403654554,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737403654554,"stop":1737403654554,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_32"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"ad6731296213"},{"name":"thread","value":"7736-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":3,"skipped":0,"passed":98,"unknown":0,"total":116},"items":[{"uid":"a038784f0cc2488e","reportUrl":"https://golioth.github.io/allure-reports/recurring/108//#testresult/a038784f0cc2488e","status":"passed","time":{"start":1737389259233,"stop":1737389261280,"duration":2047}},{"uid":"c0d4ea905cb203ec","reportUrl":"https://golioth.github.io/allure-reports/recurring/107//#testresult/c0d4ea905cb203ec","status":"passed","time":{"start":1737375029208,"stop":1737375030311,"duration":1103}},{"uid":"8617197e2553d731","reportUrl":"https://golioth.github.io/allure-reports/recurring/106//#testresult/8617197e2553d731","status":"passed","time":{"start":1737360554456,"stop":1737360555619,"duration":1163}},{"uid":"da0534d8aea36bfa","reportUrl":"https://golioth.github.io/allure-reports/recurring/105//#testresult/da0534d8aea36bfa","status":"passed","time":{"start":1737346103390,"stop":1737346105823,"duration":2433}},{"uid":"b64f0419e3d55a56","reportUrl":"https://golioth.github.io/allure-reports/recurring/104//#testresult/b64f0419e3d55a56","status":"passed","time":{"start":1737332570188,"stop":1737332572499,"duration":2311}},{"uid":"460e6a94a2305f7b","reportUrl":"https://golioth.github.io/allure-reports/recurring/103//#testresult/460e6a94a2305f7b","status":"passed","time":{"start":1737317248799,"stop":1737317251794,"duration":2995}},{"uid":"f9dec4eb50ccc656","reportUrl":"https://golioth.github.io/allure-reports/recurring/102//#testresult/f9dec4eb50ccc656","status":"passed","time":{"start":1737302858404,"stop":1737302860414,"duration":2010}},{"uid":"7a8bfcf991cf886d","reportUrl":"https://golioth.github.io/allure-reports/recurring/101//#testresult/7a8bfcf991cf886d","status":"passed","time":{"start":1737288581271,"stop":1737288584089,"duration":2818}},{"uid":"a6a999ed668ba2fe","reportUrl":"https://golioth.github.io/allure-reports/recurring/100//#testresult/a6a999ed668ba2fe","status":"passed","time":{"start":1737274078247,"stop":1737274080478,"duration":2231}},{"uid":"ef5f117a8b00b06","reportUrl":"https://golioth.github.io/allure-reports/recurring/99//#testresult/ef5f117a8b00b06","status":"passed","time":{"start":1737259678422,"stop":1737259680811,"duration":2389}},{"uid":"b790d4df500c7fd6","reportUrl":"https://golioth.github.io/allure-reports/recurring/98//#testresult/b790d4df500c7fd6","status":"passed","time":{"start":1737246245544,"stop":1737246246702,"duration":1158}},{"uid":"46124a4dc501fff6","reportUrl":"https://golioth.github.io/allure-reports/recurring/97//#testresult/46124a4dc501fff6","status":"passed","time":{"start":1737230848467,"stop":1737230851416,"duration":2949}},{"uid":"2796f249b6b915c3","reportUrl":"https://golioth.github.io/allure-reports/recurring/96//#testresult/2796f249b6b915c3","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1737216439209,"stop":1737216439293,"duration":84}},{"uid":"767606fd70a4915c","reportUrl":"https://golioth.github.io/allure-reports/recurring/95//#testresult/767606fd70a4915c","status":"passed","time":{"start":1737202154226,"stop":1737202156579,"duration":2353}},{"uid":"10a48f887d8e1af6","reportUrl":"https://golioth.github.io/allure-reports/recurring/94//#testresult/10a48f887d8e1af6","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1737187680708,"stop":1737187680870,"duration":162}},{"uid":"c54acc8efa951900","reportUrl":"https://golioth.github.io/allure-reports/recurring/93//#testresult/c54acc8efa951900","status":"passed","time":{"start":1737173290966,"stop":1737173293819,"duration":2853}},{"uid":"28773c52d9cdf65c","reportUrl":"https://golioth.github.io/allure-reports/recurring/92//#testresult/28773c52d9cdf65c","status":"passed","time":{"start":1737159695832,"stop":1737159697120,"duration":1288}},{"uid":"72941a716cd88bef","reportUrl":"https://golioth.github.io/allure-reports/recurring/91//#testresult/72941a716cd88bef","status":"passed","time":{"start":1737144464337,"stop":1737144467172,"duration":2835}},{"uid":"b86c7bd1270bcbb8","reportUrl":"https://golioth.github.io/allure-reports/recurring/90//#testresult/b86c7bd1270bcbb8","status":"passed","time":{"start":1737130078254,"stop":1737130079393,"duration":1139}},{"uid":"c261dea8334b034b","reportUrl":"https://golioth.github.io/allure-reports/recurring/89//#testresult/c261dea8334b034b","status":"passed","time":{"start":1737115826112,"stop":1737115828932,"duration":2820}}]},"tags":["anyio","native_sim_32","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"7894fcd9bbc87dad.json","parameterValues":["'native_sim_32'","'zephyr'"]}