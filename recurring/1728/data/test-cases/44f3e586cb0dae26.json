{"uid":"44f3e586cb0dae26","name":"test_restart","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings#test_restart","historyId":"b601777bd779e625a0117567cd1cdee8","time":{"start":1760717465143,"stop":1760717515329,"duration":50186},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"self = <trio.lowlevel.FdStream object at 0x7fe3f9d1fb10>, max_bytes = 65536\n\n    async def receive_some(self, max_bytes: int | None = None) -> bytes:\n        with self._receive_conflict_detector:\n            if max_bytes is None:\n                max_bytes = DEFAULT_RECEIVE_SIZE\n            else:\n                if not isinstance(max_bytes, int):\n                    raise TypeError(\"max_bytes must be integer >= 1\")\n                if max_bytes < 1:\n                    raise ValueError(\"max_bytes must be integer >= 1\")\n    \n            await trio.lowlevel.checkpoint()\n            while True:\n                try:\n>                   data = os.read(self._fd_holder.fd, max_bytes)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE                   BlockingIOError: [Errno 11] Resource temporarily unavailable\n\n/root/venv/lib/python3.13/site-packages/trio/_unix_pipes.py:182: BlockingIOError\n\nDuring handling of the above exception, another exception occurred:\n\nseconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/linuxboard.py:31: in receive_some\n    return await self.process.stdout.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_unix_pipes.py:184: in receive_some\n    await trio.lowlevel.wait_readable(self._fd_holder.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n        if reason is None:\n            raise Cancelled._create(source=\"unknown\", reason=\"misnesting\")\n        else:\n>           raise Cancelled._create(\n                source=reason.source,\n                reason=reason.reason,\n                source_task=reason.source_task,\n            )\nE           trio.Cancelled: cancelled due to deadline\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1663: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <pytest_hil.native_sim.NativeSimBoard object at 0x7fe3f9a98980>\ndevice = <golioth.golioth.Device object at 0x7fe3f9a992b0>\n\n    async def test_restart(board, device):\n        await device.settings.set('TEST_RESTART', True)\n        assert None != await board.wait_for_regex_in_line('Received test_restart: true', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Ending session', timeout_s=10)\n    \n        # Check that we no longer receive this settings change\n        await device.settings.set('TEST_RESTART', False)\n        with pytest.raises(trio.TooSlowError) as e:\n            assert None != await board.wait_for_regex_in_line('Received test_restart: false', timeout_s=5)\n    \n        # Wait for client to restart\n        assert None != await board.wait_for_regex_in_line('Client restarted', timeout_s=60)\n    \n        # Wait for rush of initial settings log messages to pass\n        await trio.sleep(2)\n    \n        await device.settings.set('TEST_INT', 2320)\n>       assert None != await board.wait_for_regex_in_line('Received test_int: 2320', timeout_s=10)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py:228: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.9-linux-x86_64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"project","time":{"start":1760717344861,"stop":1760717345187,"duration":326},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760717344861,"stop":1760717344861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1760717344861,"stop":1760717344861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760717344861,"stop":1760717344861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760717344861,"stop":1760717344861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760717344861,"stop":1760717344861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760717344861,"stop":1760717344861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760717344861,"stop":1760717344861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760717345187,"stop":1760717345189,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760717345189,"stop":1760717345514,"duration":325},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760717345514,"stop":1760717356280,"duration":10766},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"self = <trio.lowlevel.FdStream object at 0x7fe3f9d1fb10>, max_bytes = 65536\n\n    async def receive_some(self, max_bytes: int | None = None) -> bytes:\n        with self._receive_conflict_detector:\n            if max_bytes is None:\n                max_bytes = DEFAULT_RECEIVE_SIZE\n            else:\n                if not isinstance(max_bytes, int):\n                    raise TypeError(\"max_bytes must be integer >= 1\")\n                if max_bytes < 1:\n                    raise ValueError(\"max_bytes must be integer >= 1\")\n    \n            await trio.lowlevel.checkpoint()\n            while True:\n                try:\n>                   data = os.read(self._fd_holder.fd, max_bytes)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE                   BlockingIOError: [Errno 11] Resource temporarily unavailable\n\n/root/venv/lib/python3.13/site-packages/trio/_unix_pipes.py:182: BlockingIOError\n\nDuring handling of the above exception, another exception occurred:\n\nseconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/linuxboard.py:31: in receive_some\n    return await self.process.stdout.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_unix_pipes.py:184: in receive_some\n    await trio.lowlevel.wait_readable(self._fd_holder.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n        if reason is None:\n            raise Cancelled._create(source=\"unknown\", reason=\"misnesting\")\n        else:\n>           raise Cancelled._create(\n                source=reason.source,\n                reason=reason.reason,\n                source_task=reason.source_task,\n            )\nE           trio.Cancelled: cancelled due to deadline\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1663: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <pytest_hil.native_sim.NativeSimBoard object at 0x7fe3f9a98980>\ndevice = <golioth.golioth.Device object at 0x7fe3f9a992b0>\n\n    async def test_restart(board, device):\n        await device.settings.set('TEST_RESTART', True)\n        assert None != await board.wait_for_regex_in_line('Received test_restart: true', timeout_s=10)\n        assert None != await board.wait_for_regex_in_line('Ending session', timeout_s=10)\n    \n        # Check that we no longer receive this settings change\n        await device.settings.set('TEST_RESTART', False)\n        with pytest.raises(trio.TooSlowError) as e:\n            assert None != await board.wait_for_regex_in_line('Received test_restart: false', timeout_s=5)\n    \n        # Wait for client to restart\n        assert None != await board.wait_for_regex_in_line('Client restarted', timeout_s=60)\n    \n        # Wait for rush of initial settings log messages to pass\n        await trio.sleep(2)\n    \n        await device.settings.set('TEST_INT', 2320)\n>       assert None != await board.wait_for_regex_in_line('Received test_int: 2320', timeout_s=10)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py:228: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.9-linux-x86_64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","steps":[],"attachments":[{"uid":"700371436f325dd6","name":"stdout","source":"700371436f325dd6.txt","type":"text/plain","size":7143}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1760717515381,"stop":1760717515451,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1760717515381,"stop":1760717515381,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760717515452,"stop":1760717515471,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760717515472,"stop":1760717515472,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_32"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"58113fea6dcb"},{"name":"thread","value":"7674-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":137,"unknown":0,"total":139},"items":[{"uid":"7cc2856c55f6cb1d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1727//#testresult/7cc2856c55f6cb1d","status":"passed","time":{"start":1760703225538,"stop":1760703255598,"duration":30060}},{"uid":"2fbda24fb994d868","reportUrl":"https://golioth.github.io/allure-reports/recurring/1726//#testresult/2fbda24fb994d868","status":"passed","time":{"start":1760688713857,"stop":1760688740945,"duration":27088}},{"uid":"92cddd4212bed6d3","reportUrl":"https://golioth.github.io/allure-reports/recurring/1725//#testresult/92cddd4212bed6d3","status":"passed","time":{"start":1760674252164,"stop":1760674279243,"duration":27079}},{"uid":"312b1180316e805a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1724//#testresult/312b1180316e805a","status":"passed","time":{"start":1760660824353,"stop":1760660851410,"duration":27057}},{"uid":"e3b34a7b546ec9d9","reportUrl":"https://golioth.github.io/allure-reports/recurring/1723//#testresult/e3b34a7b546ec9d9","status":"passed","time":{"start":1760645445213,"stop":1760645472781,"duration":27568}},{"uid":"ceeef5bd4aed6599","reportUrl":"https://golioth.github.io/allure-reports/recurring/1722//#testresult/ceeef5bd4aed6599","status":"passed","time":{"start":1760631062634,"stop":1760631090153,"duration":27519}},{"uid":"bb5e58241dceb7b8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1721//#testresult/bb5e58241dceb7b8","status":"passed","time":{"start":1760616827894,"stop":1760616855924,"duration":28030}},{"uid":"c8016b8faf316ed5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1720//#testresult/c8016b8faf316ed5","status":"passed","time":{"start":1760602303915,"stop":1760602331233,"duration":27318}},{"uid":"9fc96120564de5f1","reportUrl":"https://golioth.github.io/allure-reports/recurring/1719//#testresult/9fc96120564de5f1","status":"passed","time":{"start":1760587847919,"stop":1760587875427,"duration":27508}},{"uid":"72c64989a0ab67ce","reportUrl":"https://golioth.github.io/allure-reports/recurring/1718//#testresult/72c64989a0ab67ce","status":"passed","time":{"start":1760574439343,"stop":1760574466402,"duration":27059}},{"uid":"e3377261edb8601","reportUrl":"https://golioth.github.io/allure-reports/recurring/1717//#testresult/e3377261edb8601","status":"passed","time":{"start":1760559016769,"stop":1760559044358,"duration":27589}},{"uid":"a976d17a17fd08a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1716//#testresult/a976d17a17fd08a","status":"passed","time":{"start":1760544606389,"stop":1760544635287,"duration":28898}},{"uid":"1508e086f0e9c8f2","reportUrl":"https://golioth.github.io/allure-reports/recurring/1715//#testresult/1508e086f0e9c8f2","status":"passed","time":{"start":1760530465322,"stop":1760530492900,"duration":27578}},{"uid":"23b164cf34e24962","reportUrl":"https://golioth.github.io/allure-reports/recurring/1714//#testresult/23b164cf34e24962","status":"passed","time":{"start":1760515898650,"stop":1760515925709,"duration":27059}},{"uid":"98bb0db6571adff9","reportUrl":"https://golioth.github.io/allure-reports/recurring/1713//#testresult/98bb0db6571adff9","status":"passed","time":{"start":1760501450920,"stop":1760501478488,"duration":27568}},{"uid":"d76b575e46b06d8b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1712//#testresult/d76b575e46b06d8b","status":"passed","time":{"start":1760488057343,"stop":1760488084852,"duration":27509}},{"uid":"651bcd7a7c6a15df","reportUrl":"https://golioth.github.io/allure-reports/recurring/1711//#testresult/651bcd7a7c6a15df","status":"passed","time":{"start":1760472607684,"stop":1760472637092,"duration":29408}},{"uid":"663ea873f8c98569","reportUrl":"https://golioth.github.io/allure-reports/recurring/1710//#testresult/663ea873f8c98569","status":"passed","time":{"start":1760458261803,"stop":1760458288851,"duration":27048}},{"uid":"901f878b5d48a0b2","reportUrl":"https://golioth.github.io/allure-reports/recurring/1709//#testresult/901f878b5d48a0b2","status":"passed","time":{"start":1760444021127,"stop":1760444048725,"duration":27598}},{"uid":"56922ab3f792388b","reportUrl":"https://golioth.github.io/allure-reports/recurring/1708//#testresult/56922ab3f792388b","status":"passed","time":{"start":1760429474023,"stop":1760429501102,"duration":27079}}]},"tags":["anyio","native_sim_32","zephyr"]},"source":"44f3e586cb0dae26.json","parameterValues":["'native_sim_32'","'zephyr'"]}