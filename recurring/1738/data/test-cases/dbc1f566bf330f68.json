{"uid":"dbc1f566bf330f68","name":"test_lightdb_reported","fullName":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"cc908bd93c71faf405adf71e50c4a8e9","time":{"start":1760861341245,"stop":1760861341368,"duration":123},"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f73eaa5d6a0>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760861327707,"stop":1760861327707,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760861327707,"stop":1760861327707,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760861327707,"stop":1760861327707,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760861327707,"stop":1760861327707,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760861327708,"stop":1760861327708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760861327708,"stop":1760861327708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760861327708,"stop":1760861328055,"duration":347},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760861327708,"stop":1760861327708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760861328055,"stop":1760861328057,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1760861328056,"stop":1760861328056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1760861328056,"stop":1760861328056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1760861328056,"stop":1760861328056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1760861328056,"stop":1760861328056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1760861328056,"stop":1760861328056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760861328057,"stop":1760861328354,"duration":297},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760861328354,"stop":1760861341244,"duration":12890},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None is True","statusTrace":"device = <golioth.golioth.Device object at 0x7f73eaa5d6a0>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\nE       assert None is True\n\nmodules/lib/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py:58: AssertionError","steps":[],"attachments":[{"uid":"519cddf2468014e7","name":"stdout","source":"519cddf2468014e7.txt","type":"text/plain","size":2536},{"uid":"9d40fa2930749009","name":"stderr","source":"9d40fa2930749009.txt","type":"text/plain","size":50}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1760861348638,"stop":1760861348759,"duration":121},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760861348759,"stop":1760861348911,"duration":152},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760861348912,"stop":1760861348932,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760861348932,"stop":1760861348932,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.native_sim_32"},{"name":"tag"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"d3b20a7e99e5"},{"name":"thread","value":"7669-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":24,"broken":0,"skipped":0,"passed":126,"unknown":0,"total":150},"items":[{"uid":"f4e32862f8d89e4","reportUrl":"https://golioth.github.io/allure-reports/recurring/1737//#testresult/f4e32862f8d89e4","status":"passed","time":{"start":1760847020592,"stop":1760847022394,"duration":1802}},{"uid":"2a1dbab6a5f34999","reportUrl":"https://golioth.github.io/allure-reports/recurring/1736//#testresult/2a1dbab6a5f34999","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1760833679458,"stop":1760833679561,"duration":103}},{"uid":"7c10e217d29eba34","reportUrl":"https://golioth.github.io/allure-reports/recurring/1735//#testresult/7c10e217d29eba34","status":"passed","time":{"start":1760818074470,"stop":1760818077263,"duration":2793}},{"uid":"a7a8bd3864e3880f","reportUrl":"https://golioth.github.io/allure-reports/recurring/1734//#testresult/a7a8bd3864e3880f","status":"passed","time":{"start":1760803674236,"stop":1760803675907,"duration":1671}},{"uid":"d2e2519dd02eea8a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1733//#testresult/d2e2519dd02eea8a","status":"passed","time":{"start":1760789440379,"stop":1760789441220,"duration":841}},{"uid":"bc504c7c98bd281a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1732//#testresult/bc504c7c98bd281a","status":"passed","time":{"start":1760774949343,"stop":1760774952154,"duration":2811}},{"uid":"b21b36f058947529","reportUrl":"https://golioth.github.io/allure-reports/recurring/1731//#testresult/b21b36f058947529","status":"passed","time":{"start":1760760522880,"stop":1760760523689,"duration":809}},{"uid":"7598b40741331100","reportUrl":"https://golioth.github.io/allure-reports/recurring/1730//#testresult/7598b40741331100","status":"passed","time":{"start":1760747013219,"stop":1760747015990,"duration":2771}},{"uid":"a7356d1b93db8e67","reportUrl":"https://golioth.github.io/allure-reports/recurring/1729//#testresult/a7356d1b93db8e67","status":"passed","time":{"start":1760741501398,"stop":1760741502794,"duration":1396}},{"uid":"d606fbf226c48dfa","reportUrl":"https://golioth.github.io/allure-reports/recurring/1729//#testresult/d606fbf226c48dfa","status":"passed","time":{"start":1760731741847,"stop":1760731743060,"duration":1213}},{"uid":"4a62dd5bb9187086","reportUrl":"https://golioth.github.io/allure-reports/recurring/1728//#testresult/4a62dd5bb9187086","status":"failed","statusDetails":"AssertionError: assert True is False","time":{"start":1760717361298,"stop":1760717361422,"duration":124}},{"uid":"8fff453736b847ac","reportUrl":"https://golioth.github.io/allure-reports/recurring/1727//#testresult/8fff453736b847ac","status":"passed","time":{"start":1760703121780,"stop":1760703123640,"duration":1860}},{"uid":"ce1c65291e917fe1","reportUrl":"https://golioth.github.io/allure-reports/recurring/1726//#testresult/ce1c65291e917fe1","status":"passed","time":{"start":1760688621580,"stop":1760688624774,"duration":3194}},{"uid":"10b9dea0b5012c59","reportUrl":"https://golioth.github.io/allure-reports/recurring/1725//#testresult/10b9dea0b5012c59","status":"failed","statusDetails":"AssertionError: assert None is True","time":{"start":1760674154047,"stop":1760674154110,"duration":63}},{"uid":"2ad3b330ff80aa78","reportUrl":"https://golioth.github.io/allure-reports/recurring/1724//#testresult/2ad3b330ff80aa78","status":"passed","time":{"start":1760660732721,"stop":1760660734523,"duration":1802}},{"uid":"73882686221e08e6","reportUrl":"https://golioth.github.io/allure-reports/recurring/1723//#testresult/73882686221e08e6","status":"failed","statusDetails":"AssertionError: assert True is False","time":{"start":1760645301929,"stop":1760645302075,"duration":146}},{"uid":"9023f609565c084c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1722//#testresult/9023f609565c084c","status":"passed","time":{"start":1760630977814,"stop":1760630980924,"duration":3110}},{"uid":"d8f13267331dca14","reportUrl":"https://golioth.github.io/allure-reports/recurring/1721//#testresult/d8f13267331dca14","status":"passed","time":{"start":1760616730502,"stop":1760616732454,"duration":1952}},{"uid":"18c24b9af4a14429","reportUrl":"https://golioth.github.io/allure-reports/recurring/1720//#testresult/18c24b9af4a14429","status":"passed","time":{"start":1760602209661,"stop":1760602210676,"duration":1015}},{"uid":"17e5b3e02b9d5e9","reportUrl":"https://golioth.github.io/allure-reports/recurring/1719//#testresult/17e5b3e02b9d5e9","status":"passed","time":{"start":1760587735305,"stop":1760587737416,"duration":2111}}]},"tags":["anyio","native_sim_32","zephyr"]},"source":"dbc1f566bf330f68.json","parameterValues":["'native_sim_32'","'zephyr'"]}