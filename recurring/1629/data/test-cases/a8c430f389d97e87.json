{"uid":"a8c430f389d97e87","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"d8989de114c223477a1d53d831d12112","time":{"start":1759292156196,"stop":1759292182550,"duration":26354},"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:394: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:256: in handle_async_request\n    raise exc from None\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:236: in handle_async_request\n    response = await connection.handle_async_request(\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:103: in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:136: in handle_async_request\n    raise exc\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:106: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:177: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:217: in _receive_event\n    data = await self._network_stream.read(\n/root/venv/lib/python3.13/site-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n         ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-x86_64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/root/venv/lib/python3.13/site-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nshell = <twister_harness.helpers.shell.Shell object at 0x7fddc5764980>\ndevice = <golioth.golioth.Device object at 0x7fddc562a900>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n>       logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:428: in get_logs\n    return await self.project.get_logs(params=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:272: in get_logs\n    resp = await self.get('logs', params=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1768: in get\n    return await self.request(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1540: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1629: in send\n    response = await self._send_handling_auth(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1657: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1694: in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1730: in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:393: in handle_async_request\n    with map_httpcore_exceptions():\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-x86_64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:118: ReadTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"api_url","time":{"start":1759292155490,"stop":1759292155491,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759292155490,"stop":1759292155490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759292155490,"stop":1759292155490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759292155490,"stop":1759292155490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1759292155490,"stop":1759292155490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1759292155490,"stop":1759292155490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1759292155490,"stop":1759292155490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759292155490,"stop":1759292155490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759292155491,"stop":1759292155733,"duration":242},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759292155733,"stop":1759292156186,"duration":453},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1759292156186,"stop":1759292156187,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1759292156187,"stop":1759292156195,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:394: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:256: in handle_async_request\n    raise exc from None\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:236: in handle_async_request\n    response = await connection.handle_async_request(\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:103: in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:136: in handle_async_request\n    raise exc\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:106: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:177: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:217: in _receive_event\n    data = await self._network_stream.read(\n/root/venv/lib/python3.13/site-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n         ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-x86_64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/root/venv/lib/python3.13/site-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nshell = <twister_harness.helpers.shell.Shell object at 0x7fddc5764980>\ndevice = <golioth.golioth.Device object at 0x7fddc562a900>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n>       logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:428: in get_logs\n    return await self.project.get_logs(params=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:272: in get_logs\n    resp = await self.get('logs', params=params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1768: in get\n    return await self.request(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1540: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1629: in send\n    response = await self._send_handling_auth(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1657: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1694: in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1730: in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:393: in handle_async_request\n    with map_httpcore_exceptions():\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-x86_64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:118: ReadTimeout","steps":[],"attachments":[{"uid":"f51837ff2e1a63f2","name":"log","source":"f51837ff2e1a63f2.txt","type":"text/plain","size":14079}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1759292182694,"stop":1759292183195,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759292183195,"stop":1759292183418,"duration":223},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759292183418,"stop":1759292183419,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1759292183419,"stop":1759292183419,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 1000058293"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"a99009b27bad"},{"name":"thread","value":"113087-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"75b8624fab1c57ab","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1759292135472,"stop":1759292161788,"duration":26316}},{"uid":"aecbad1ee6722b7d","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1759292135149,"stop":1759292161467,"duration":26318}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":35,"unknown":0,"total":37},"items":[{"uid":"475a7b1ee672fff7","reportUrl":"https://golioth.github.io/allure-reports/recurring/1628//#testresult/475a7b1ee672fff7","status":"passed","time":{"start":1759278887906,"stop":1759278910735,"duration":22829}},{"uid":"ed1d21fca3866bf8","reportUrl":"https://golioth.github.io/allure-reports/recurring/1627//#testresult/ed1d21fca3866bf8","status":"passed","time":{"start":1759263316136,"stop":1759263338381,"duration":22245}},{"uid":"e97c68443526a2da","reportUrl":"https://golioth.github.io/allure-reports/recurring/1626//#testresult/e97c68443526a2da","status":"passed","time":{"start":1759248947806,"stop":1759248969272,"duration":21466}},{"uid":"5f5dc7dd95d14980","reportUrl":"https://golioth.github.io/allure-reports/recurring/1625//#testresult/5f5dc7dd95d14980","status":"passed","time":{"start":1759234712529,"stop":1759234733930,"duration":21401}},{"uid":"a01ebac8fdaed71d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1624//#testresult/a01ebac8fdaed71d","status":"passed","time":{"start":1759220208370,"stop":1759220229614,"duration":21244}},{"uid":"40b2069fec473cb5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1623//#testresult/40b2069fec473cb5","status":"passed","time":{"start":1759205768700,"stop":1759205790175,"duration":21475}},{"uid":"58f9a9d03dbcc186","reportUrl":"https://golioth.github.io/allure-reports/recurring/1622//#testresult/58f9a9d03dbcc186","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759192294617,"stop":1759192315868,"duration":21251}},{"uid":"512c1f3991a8d484","reportUrl":"https://golioth.github.io/allure-reports/recurring/1621//#testresult/512c1f3991a8d484","status":"passed","time":{"start":1759176962036,"stop":1759176983828,"duration":21792}},{"uid":"5fdf1087e1395b4c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1620//#testresult/5fdf1087e1395b4c","status":"passed","time":{"start":1759162516972,"stop":1759162538474,"duration":21502}},{"uid":"fce4588e0c8660fc","reportUrl":"https://golioth.github.io/allure-reports/recurring/1619//#testresult/fce4588e0c8660fc","status":"passed","time":{"start":1759148349918,"stop":1759148372190,"duration":22272}},{"uid":"99dc5f999ba7fdf5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1618//#testresult/99dc5f999ba7fdf5","status":"passed","time":{"start":1759133871373,"stop":1759133892851,"duration":21478}},{"uid":"a60c6a9523712182","reportUrl":"https://golioth.github.io/allure-reports/recurring/1617//#testresult/a60c6a9523712182","status":"passed","time":{"start":1759119350493,"stop":1759119371746,"duration":21253}},{"uid":"2372aad9ef0cacdf","reportUrl":"https://golioth.github.io/allure-reports/recurring/1616//#testresult/2372aad9ef0cacdf","status":"passed","time":{"start":1759105937331,"stop":1759105958645,"duration":21314}},{"uid":"64b280324dbbf272","reportUrl":"https://golioth.github.io/allure-reports/recurring/1615//#testresult/64b280324dbbf272","status":"passed","time":{"start":1759090486790,"stop":1759090508171,"duration":21381}},{"uid":"f7f66658479fccae","reportUrl":"https://golioth.github.io/allure-reports/recurring/1614//#testresult/f7f66658479fccae","status":"passed","time":{"start":1759076066257,"stop":1759076087507,"duration":21250}},{"uid":"520be62986bf8a03","reportUrl":"https://golioth.github.io/allure-reports/recurring/1613//#testresult/520be62986bf8a03","status":"passed","time":{"start":1759061841997,"stop":1759061863451,"duration":21454}},{"uid":"99d2c662eb09df4a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1612//#testresult/99d2c662eb09df4a","status":"passed","time":{"start":1759047346000,"stop":1759047367591,"duration":21591}},{"uid":"7fcba5e521873d24","reportUrl":"https://golioth.github.io/allure-reports/recurring/1611//#testresult/7fcba5e521873d24","status":"passed","time":{"start":1759032959825,"stop":1759032981322,"duration":21497}},{"uid":"7e74a7d0a6e8d1ff","reportUrl":"https://golioth.github.io/allure-reports/recurring/1610//#testresult/7e74a7d0a6e8d1ff","status":"passed","time":{"start":1759019661913,"stop":1759019683123,"duration":21210}},{"uid":"c7749dffe0d53a95","reportUrl":"https://golioth.github.io/allure-reports/recurring/1609//#testresult/c7749dffe0d53a95","status":"passed","time":{"start":1759004083907,"stop":1759004105257,"duration":21350}}]},"tags":["GitHub Actions 1000058293","native_sim_64","anyio","zephyr"]},"source":"a8c430f389d97e87.json","parameterValues":["'native_sim_64'","'zephyr'"]}