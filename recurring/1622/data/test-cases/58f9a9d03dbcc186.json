{"uid":"58f9a9d03dbcc186","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"d8989de114c223477a1d53d831d12112","time":{"start":1759192294617,"stop":1759192315868,"duration":21251},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f68e67d8980>\ndevice = <golioth.golioth.Device object at 0x7f68e669a900>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"device_name","time":{"start":1759192294321,"stop":1759192294321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1759192294321,"stop":1759192294321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759192294321,"stop":1759192294321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1759192294321,"stop":1759192294322,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759192294321,"stop":1759192294321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1759192294321,"stop":1759192294321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759192294322,"stop":1759192294322,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759192294322,"stop":1759192294322,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759192294322,"stop":1759192294433,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759192294433,"stop":1759192294603,"duration":170},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1759192294603,"stop":1759192294604,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1759192294604,"stop":1759192294617,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f68e67d8980>\ndevice = <golioth.golioth.Device object at 0x7f68e669a900>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.now(datetime.UTC)\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.now(datetime.UTC)\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"1c1447754042f92f","name":"log","source":"1c1447754042f92f.txt","type":"text/plain","size":15409}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1759192315901,"stop":1759192316402,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759192316403,"stop":1759192316491,"duration":88},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759192316491,"stop":1759192316491,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1759192316492,"stop":1759192316492,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 1000057849"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"2539bf0bf6b0"},{"name":"thread","value":"113081-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"eadc66020c93b51c","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759192272002,"stop":1759192293128,"duration":21126}},{"uid":"fb0cf7a41a5b5f14","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1759192271506,"stop":1759192293064,"duration":21558}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":29,"unknown":0,"total":30},"items":[{"uid":"512c1f3991a8d484","reportUrl":"https://golioth.github.io/allure-reports/recurring/1621//#testresult/512c1f3991a8d484","status":"passed","time":{"start":1759176962036,"stop":1759176983828,"duration":21792}},{"uid":"5fdf1087e1395b4c","reportUrl":"https://golioth.github.io/allure-reports/recurring/1620//#testresult/5fdf1087e1395b4c","status":"passed","time":{"start":1759162516972,"stop":1759162538474,"duration":21502}},{"uid":"fce4588e0c8660fc","reportUrl":"https://golioth.github.io/allure-reports/recurring/1619//#testresult/fce4588e0c8660fc","status":"passed","time":{"start":1759148349918,"stop":1759148372190,"duration":22272}},{"uid":"99dc5f999ba7fdf5","reportUrl":"https://golioth.github.io/allure-reports/recurring/1618//#testresult/99dc5f999ba7fdf5","status":"passed","time":{"start":1759133871373,"stop":1759133892851,"duration":21478}},{"uid":"a60c6a9523712182","reportUrl":"https://golioth.github.io/allure-reports/recurring/1617//#testresult/a60c6a9523712182","status":"passed","time":{"start":1759119350493,"stop":1759119371746,"duration":21253}},{"uid":"2372aad9ef0cacdf","reportUrl":"https://golioth.github.io/allure-reports/recurring/1616//#testresult/2372aad9ef0cacdf","status":"passed","time":{"start":1759105937331,"stop":1759105958645,"duration":21314}},{"uid":"64b280324dbbf272","reportUrl":"https://golioth.github.io/allure-reports/recurring/1615//#testresult/64b280324dbbf272","status":"passed","time":{"start":1759090486790,"stop":1759090508171,"duration":21381}},{"uid":"f7f66658479fccae","reportUrl":"https://golioth.github.io/allure-reports/recurring/1614//#testresult/f7f66658479fccae","status":"passed","time":{"start":1759076066257,"stop":1759076087507,"duration":21250}},{"uid":"520be62986bf8a03","reportUrl":"https://golioth.github.io/allure-reports/recurring/1613//#testresult/520be62986bf8a03","status":"passed","time":{"start":1759061841997,"stop":1759061863451,"duration":21454}},{"uid":"99d2c662eb09df4a","reportUrl":"https://golioth.github.io/allure-reports/recurring/1612//#testresult/99d2c662eb09df4a","status":"passed","time":{"start":1759047346000,"stop":1759047367591,"duration":21591}},{"uid":"7fcba5e521873d24","reportUrl":"https://golioth.github.io/allure-reports/recurring/1611//#testresult/7fcba5e521873d24","status":"passed","time":{"start":1759032959825,"stop":1759032981322,"duration":21497}},{"uid":"7e74a7d0a6e8d1ff","reportUrl":"https://golioth.github.io/allure-reports/recurring/1610//#testresult/7e74a7d0a6e8d1ff","status":"passed","time":{"start":1759019661913,"stop":1759019683123,"duration":21210}},{"uid":"c7749dffe0d53a95","reportUrl":"https://golioth.github.io/allure-reports/recurring/1609//#testresult/c7749dffe0d53a95","status":"passed","time":{"start":1759004083907,"stop":1759004105257,"duration":21350}},{"uid":"8b34f4cdfeb5bb14","reportUrl":"https://golioth.github.io/allure-reports/recurring/1608//#testresult/8b34f4cdfeb5bb14","status":"passed","time":{"start":1758989671670,"stop":1758989693908,"duration":22238}},{"uid":"deb0905f811b1ab","reportUrl":"https://golioth.github.io/allure-reports/recurring/1607//#testresult/deb0905f811b1ab","status":"passed","time":{"start":1758975444995,"stop":1758975468360,"duration":23365}},{"uid":"f4713b42cab803f6","reportUrl":"https://golioth.github.io/allure-reports/recurring/1606//#testresult/f4713b42cab803f6","status":"passed","time":{"start":1758960928066,"stop":1758960949498,"duration":21432}},{"uid":"a3bcf3835462c4d","reportUrl":"https://golioth.github.io/allure-reports/recurring/1605//#testresult/a3bcf3835462c4d","status":"passed","time":{"start":1758946517436,"stop":1758946538816,"duration":21380}},{"uid":"32098265efb5a10","reportUrl":"https://golioth.github.io/allure-reports/recurring/1604//#testresult/32098265efb5a10","status":"passed","time":{"start":1758933042711,"stop":1758933064077,"duration":21366}},{"uid":"a6a7ad1c24d889df","reportUrl":"https://golioth.github.io/allure-reports/recurring/1603//#testresult/a6a7ad1c24d889df","status":"passed","time":{"start":1758917705973,"stop":1758917727771,"duration":21798}},{"uid":"4353f25e75b8b5d6","reportUrl":"https://golioth.github.io/allure-reports/recurring/1602//#testresult/4353f25e75b8b5d6","status":"passed","time":{"start":1758903314665,"stop":1758903336115,"duration":21450}}]},"tags":["GitHub Actions 1000057849","native_sim_64","anyio","zephyr"]},"source":"58f9a9d03dbcc186.json","parameterValues":["'native_sim_64'","'zephyr'"]}