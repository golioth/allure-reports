{"uid":"b22fbeebac5c346e","name":"test_wrong_type","fullName":"tests.hil.tests.settings.test_settings#test_wrong_type","historyId":"3a5e907e646af77992122ec4d5ed6146","time":{"start":1728080700562,"stop":1728080705889,"duration":5327},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\ndevice = <golioth.golioth.Device object at 0xffffa5bb21d0>\n\n    async def test_wrong_type(device):\n>       await assert_settings_error(device, 'TEST_WRONG_TYPE', VALUE_FORMAT_NOT_VALID)\n\ntests/hil/tests/settings/test_settings.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/hil/tests/settings/test_settings.py:45: in assert_settings_error\n    await device.refresh()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:405: in refresh\n    resp = await c.get(self.base_url)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728080531719,"stop":1728080531719,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728080531720,"stop":1728080531720,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728080531721,"stop":1728080531721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728080531721,"stop":1728080531722,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728080531722,"stop":1728080531722,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728080531723,"stop":1728080531724,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728080531723,"stop":1728080531723,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728080531724,"stop":1728080531725,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728080531724,"stop":1728080531724,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728080531725,"stop":1728080531725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728080531725,"stop":1728080531726,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728080531726,"stop":1728080532203,"duration":477},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728080531726,"stop":1728080531726,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728080532203,"stop":1728080571983,"duration":39780},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728080571985,"stop":1728080573132,"duration":1147},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728080573133,"stop":1728080592146,"duration":19013},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728080772549,"stop":1728080772550,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728080772555,"stop":1728080773278,"duration":723},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728080773281,"stop":1728080773286,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728080773288,"stop":1728080773290,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"6e3a521e2197"},{"name":"thread","value":"275-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":88,"unknown":0,"total":91},"items":[{"uid":"afa18df83869e68a","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/afa18df83869e68a","status":"passed","time":{"start":1728073588134,"stop":1728073588921,"duration":787}},{"uid":"f763412e6ed3edc9","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/f763412e6ed3edc9","status":"passed","time":{"start":1728069918172,"stop":1728069918880,"duration":708}},{"uid":"e87c6fb61081eca4","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/e87c6fb61081eca4","status":"passed","time":{"start":1728066145817,"stop":1728066146501,"duration":684}},{"uid":"e3c1c85d27ecb380","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/e3c1c85d27ecb380","status":"passed","time":{"start":1728058343877,"stop":1728058345231,"duration":1354}},{"uid":"c193c0bd69c1040b","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/c193c0bd69c1040b","status":"passed","time":{"start":1728026250984,"stop":1728026251839,"duration":855}},{"uid":"c399fa3bdeb1a7c","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/c399fa3bdeb1a7c","status":"passed","time":{"start":1728034820988,"stop":1728034821724,"duration":736}},{"uid":"e998304afc7f1d70","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/e998304afc7f1d70","status":"passed","time":{"start":1728027909907,"stop":1728027910631,"duration":724}},{"uid":"2c85a102832147e9","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/2c85a102832147e9","status":"passed","time":{"start":1728034820988,"stop":1728034821724,"duration":736}},{"uid":"89ce246319a8a08e","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/89ce246319a8a08e","status":"passed","time":{"start":1728048748240,"stop":1728048749550,"duration":1310}},{"uid":"55b4aedb71eef717","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/55b4aedb71eef717","status":"passed","time":{"start":1728034820988,"stop":1728034821724,"duration":736}},{"uid":"a7a599d5c09ee871","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/a7a599d5c09ee871","status":"passed","time":{"start":1728027909907,"stop":1728027910631,"duration":724}},{"uid":"b3a2f64f39815685","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/b3a2f64f39815685","status":"passed","time":{"start":1728026250984,"stop":1728026251839,"duration":855}},{"uid":"4bdd22ad143d2c5c","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/4bdd22ad143d2c5c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728023764857,"stop":1728023764857,"duration":0}},{"uid":"ccc1e00a2c78a6cd","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/ccc1e00a2c78a6cd","status":"passed","time":{"start":1727990317840,"stop":1727990318551,"duration":711}},{"uid":"11722c9972d80e1b","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/11722c9972d80e1b","status":"passed","time":{"start":1727989613907,"stop":1727989614558,"duration":651}},{"uid":"355751501fad60d5","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/355751501fad60d5","status":"passed","time":{"start":1727986519742,"stop":1727986520555,"duration":813}},{"uid":"54b5f0f1e1be6a94","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/54b5f0f1e1be6a94","status":"passed","time":{"start":1727983936550,"stop":1727983937368,"duration":818}},{"uid":"75a9e9e75a521c76","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/75a9e9e75a521c76","status":"passed","time":{"start":1727977263107,"stop":1727977263956,"duration":849}},{"uid":"231532653ac568e6","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/231532653ac568e6","status":"passed","time":{"start":1727965064293,"stop":1727965065998,"duration":1705}},{"uid":"ba68172a4862bd87","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/ba68172a4862bd87","status":"passed","time":{"start":1727973578582,"stop":1727973579234,"duration":652}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"b22fbeebac5c346e.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}