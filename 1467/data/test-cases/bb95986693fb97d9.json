{"uid":"bb95986693fb97d9","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"7b5bd2e87b0538b1f5ac1141f1902779","time":{"start":1727475506212,"stop":1727475520058,"duration":13846},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff842db050>\ndevice = <golioth.golioth.Device object at 0xffff842b0490>\nproject = <golioth.golioth.Project object at 0xffff84212710>\nreleases = {'test_blocks': Release <66f72f290e704510295c8ec8, release_tags=[], device_tags=['66f72f280e704510295c8ec4'], artifact..., release_tags=[], device_tags=['66f72f280e704510295c8ec4'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727475450453,"stop":1727475450454,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727475450455,"stop":1727475450455,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727475450456,"stop":1727475450456,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727475450457,"stop":1727475450458,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727475450459,"stop":1727475450459,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727475450460,"stop":1727475450460,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727475450461,"stop":1727475450461,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727475450462,"stop":1727475450462,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727475450463,"stop":1727475450463,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727475450464,"stop":1727475450464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727475450465,"stop":1727475450465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727475450466,"stop":1727475450466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727475450467,"stop":1727475491194,"duration":40727},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727475491196,"stop":1727475491664,"duration":468},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727475491665,"stop":1727475492505,"duration":840},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727475492506,"stop":1727475495212,"duration":2706},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727475495212,"stop":1727475495780,"duration":568},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727475495781,"stop":1727475496540,"duration":759},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727475496540,"stop":1727475498140,"duration":1600},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727475506209,"stop":1727475506209,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff842db050>\ndevice = <golioth.golioth.Device object at 0xffff842b0490>\nproject = <golioth.golioth.Project object at 0xffff84212710>\nreleases = {'test_blocks': Release <66f72f290e704510295c8ec8, release_tags=[], device_tags=['66f72f280e704510295c8ec4'], artifact..., release_tags=[], device_tags=['66f72f280e704510295c8ec4'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"ba1d8a6d6274ce8f","name":"stdout","source":"ba1d8a6d6274ce8f.txt","type":"text/plain","size":881}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727475520219,"stop":1727475521075,"duration":856},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727475521077,"stop":1727475522551,"duration":1474},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727475522553,"stop":1727475523329,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727475523331,"stop":1727475523331,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727475523333,"stop":1727475523333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727475523335,"stop":1727475523770,"duration":435},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727475523773,"stop":1727475523773,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727475523775,"stop":1727475523778,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"40d0a5f8502d"},{"name":"thread","value":"245-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":24,"unknown":0,"total":29},"items":[{"uid":"9154fcbd08805a1a","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/9154fcbd08805a1a","status":"passed","time":{"start":1727460796558,"stop":1727460874616,"duration":78058}},{"uid":"c3bc70405f2441bb","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/c3bc70405f2441bb","status":"passed","time":{"start":1727460796558,"stop":1727460874616,"duration":78058}},{"uid":"770c6c9e8835297f","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/770c6c9e8835297f","status":"passed","time":{"start":1727457725987,"stop":1727457803456,"duration":77469}},{"uid":"ae59c1cc735f0cd5","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/ae59c1cc735f0cd5","status":"passed","time":{"start":1727393010208,"stop":1727393087718,"duration":77510}},{"uid":"d33fd002e5a7005e","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/d33fd002e5a7005e","status":"passed","time":{"start":1727387294067,"stop":1727387371622,"duration":77555}},{"uid":"817732af3155f2dc","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/817732af3155f2dc","status":"passed","time":{"start":1727452931226,"stop":1727453008793,"duration":77567}},{"uid":"434e74290565085b","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/434e74290565085b","status":"passed","time":{"start":1727397097162,"stop":1727397174756,"duration":77594}},{"uid":"4263b1565bfe1301","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/4263b1565bfe1301","status":"passed","time":{"start":1727393010208,"stop":1727393087718,"duration":77510}},{"uid":"6a8a913ae1239518","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/6a8a913ae1239518","status":"passed","time":{"start":1727386658550,"stop":1727386736355,"duration":77805}},{"uid":"6302d763b7ff345","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/6302d763b7ff345","status":"passed","time":{"start":1727387294067,"stop":1727387371622,"duration":77555}},{"uid":"25c4f49c2e5184cd","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/25c4f49c2e5184cd","status":"passed","time":{"start":1727383763641,"stop":1727383841133,"duration":77492}},{"uid":"e8de855f842225ee","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/e8de855f842225ee","status":"passed","time":{"start":1727381090670,"stop":1727381168095,"duration":77425}},{"uid":"a756d5c4951b3083","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/a756d5c4951b3083","status":"passed","time":{"start":1727378467647,"stop":1727378545721,"duration":78074}},{"uid":"3050113efdc4c6c3","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/3050113efdc4c6c3","status":"passed","time":{"start":1727373941229,"stop":1727374018785,"duration":77556}},{"uid":"8c1a422600ee3f8f","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/8c1a422600ee3f8f","status":"passed","time":{"start":1727370576386,"stop":1727370653856,"duration":77470}},{"uid":"a723d3e3851621d8","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/a723d3e3851621d8","status":"passed","time":{"start":1727367150305,"stop":1727367227748,"duration":77443}},{"uid":"8fafcd3bf396220","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/8fafcd3bf396220","status":"passed","time":{"start":1727361765682,"stop":1727361844210,"duration":78528}},{"uid":"f0c188c6a0233ca7","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/f0c188c6a0233ca7","status":"failed","statusDetails":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","time":{"start":1727362625591,"stop":1727362667492,"duration":41901}},{"uid":"3346ce5d94652910","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/3346ce5d94652910","status":"passed","time":{"start":1727359102029,"stop":1727359180083,"duration":78054}},{"uid":"5fd91b9b83c7d74a","reportUrl":"https://golioth.github.io/allure-reports/1432//#testresult/5fd91b9b83c7d74a","status":"passed","time":{"start":1727313149093,"stop":1727313226603,"duration":77510}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"bb95986693fb97d9.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}