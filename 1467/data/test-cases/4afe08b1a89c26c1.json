{"uid":"4afe08b1a89c26c1","name":"test_float_return","fullName":"tests.hil.tests.rpc.test_rpc#test_float_return","historyId":"af8563b86c45d8e9c8a5e0894d4dc4a6","time":{"start":1727476729064,"stop":1727476734478,"duration":5414},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa2705b90>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa26e3f90>\ndevice = <golioth.golioth.Device object at 0xffffa2705ad0>\n\n    async def test_float_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"float\")\n\ntests/hil/tests/rpc/test_rpc.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa2705b90>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727476672482,"stop":1727476672483,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727476672483,"stop":1727476672484,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727476672484,"stop":1727476672484,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727476672485,"stop":1727476672485,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727476672486,"stop":1727476672487,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727476672486,"stop":1727476672486,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727476672487,"stop":1727476672487,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727476672488,"stop":1727476672488,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727476672488,"stop":1727476672488,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727476672489,"stop":1727476672489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727476672489,"stop":1727476672489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727476672490,"stop":1727476672490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727476672490,"stop":1727476672970,"duration":480},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727476672971,"stop":1727476687674,"duration":14703},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727476687676,"stop":1727476688801,"duration":1125},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727476688801,"stop":1727476702883,"duration":14082},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727476802162,"stop":1727476802162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727476802164,"stop":1727476802745,"duration":581},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727476802748,"stop":1727476802784,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727476802786,"stop":1727476802789,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"e5c4c84988bd"},{"name":"thread","value":"303-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":21,"unknown":0,"total":29},"items":[{"uid":"d99474fbb0bdfdbb","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/d99474fbb0bdfdbb","status":"passed","time":{"start":1727461866687,"stop":1727461870678,"duration":3991}},{"uid":"693c458dc811e62d","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/693c458dc811e62d","status":"passed","time":{"start":1727461866687,"stop":1727461870678,"duration":3991}},{"uid":"af33b58be031846a","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/af33b58be031846a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727458496337,"stop":1727458496337,"duration":0}},{"uid":"8d3e99498f3864d1","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/8d3e99498f3864d1","status":"passed","time":{"start":1727455566050,"stop":1727455567045,"duration":995}},{"uid":"77cbd94f8b4ad5e3","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/77cbd94f8b4ad5e3","status":"passed","time":{"start":1727457067488,"stop":1727457068727,"duration":1239}},{"uid":"7c7286be45a1d2f4","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/7c7286be45a1d2f4","status":"passed","time":{"start":1727454036818,"stop":1727454038047,"duration":1229}},{"uid":"1fef96db4c8e4e24","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/1fef96db4c8e4e24","status":"passed","time":{"start":1727398799591,"stop":1727398800895,"duration":1304}},{"uid":"bae30a2527e6cd8b","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/bae30a2527e6cd8b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727394015461,"stop":1727394015461,"duration":0}},{"uid":"224b93a3701cc4c4","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/224b93a3701cc4c4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727389459040,"stop":1727389459040,"duration":0}},{"uid":"6072e77e976f34a","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/6072e77e976f34a","status":"passed","time":{"start":1727389713018,"stop":1727389714259,"duration":1241}},{"uid":"44ff197d9021eddc","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/44ff197d9021eddc","status":"passed","time":{"start":1727385801944,"stop":1727385802686,"duration":742}},{"uid":"c8dbc4ef9b7455b1","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/c8dbc4ef9b7455b1","status":"passed","time":{"start":1727382389535,"stop":1727382390729,"duration":1194}},{"uid":"cc2e83dc148b22a0","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/cc2e83dc148b22a0","status":"passed","time":{"start":1727380046535,"stop":1727380047528,"duration":993}},{"uid":"498d5ac5f11c9f8e","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/498d5ac5f11c9f8e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727376167700,"stop":1727376167700,"duration":0}},{"uid":"d6e9f524d69b8836","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/d6e9f524d69b8836","status":"passed","time":{"start":1727372369084,"stop":1727372370313,"duration":1229}},{"uid":"7242fb33670cc712","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/7242fb33670cc712","status":"passed","time":{"start":1727368859003,"stop":1727368859745,"duration":742}},{"uid":"77154dc191c836b5","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/77154dc191c836b5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727364780382,"stop":1727364780382,"duration":0}},{"uid":"f427a785614abd9e","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/f427a785614abd9e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727364873136,"stop":1727364873136,"duration":0}},{"uid":"d961fcb0d793a977","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/d961fcb0d793a977","status":"passed","time":{"start":1727360157074,"stop":1727360158395,"duration":1321}},{"uid":"1d2b9426c5335b2f","reportUrl":"https://golioth.github.io/allure-reports/1432//#testresult/1d2b9426c5335b2f","status":"passed","time":{"start":1727314861809,"stop":1727314862834,"duration":1025}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"4afe08b1a89c26c1.json","parameterValues":["'nrf9160dk'","'zephyr'"]}