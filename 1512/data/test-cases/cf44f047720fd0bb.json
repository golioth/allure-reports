{"uid":"cf44f047720fd0bb","name":"test_int_too_small","fullName":"tests.hil.tests.settings.test_settings#test_int_too_small","historyId":"93b38f713b3d7f50664a8548eb6ac95a","time":{"start":1727794499002,"stop":1727794511889,"duration":12887},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa1c6a4d0>\ndevice = <golioth.golioth.Device object at 0xffffa1c430d0>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa1c430d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727794403723,"stop":1727794403723,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727794403724,"stop":1727794403725,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727794403726,"stop":1727794403726,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727794403727,"stop":1727794403727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727794403728,"stop":1727794403728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727794403729,"stop":1727794403730,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727794403730,"stop":1727794403731,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727794403732,"stop":1727794403732,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727794403733,"stop":1727794403733,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727794403734,"stop":1727794403735,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727794403734,"stop":1727794403734,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727794403735,"stop":1727794403735,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727794403736,"stop":1727794404167,"duration":431},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727794404168,"stop":1727794453532,"duration":49364},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727794453533,"stop":1727794454576,"duration":1043},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727794454577,"stop":1727794471188,"duration":16611},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa1c6a4d0>\ndevice = <golioth.golioth.Device object at 0xffffa1c430d0>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa1c430d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"f15059ba05a4cf89","name":"stdout","source":"f15059ba05a4cf89.txt","type":"text/plain","size":2059}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727794672520,"stop":1727794672521,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727794672526,"stop":1727794673017,"duration":491},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727794673020,"stop":1727794673028,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727794673030,"stop":1727794673032,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"231843ca93d3"},{"name":"thread","value":"259-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":49,"unknown":0,"total":50},"items":[{"uid":"44b6ee14f56b111f","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/44b6ee14f56b111f","status":"passed","time":{"start":1727785470196,"stop":1727785483093,"duration":12897}},{"uid":"76656d0180ac2a18","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/76656d0180ac2a18","status":"passed","time":{"start":1727782655167,"stop":1727782668040,"duration":12873}},{"uid":"eb3cbd9c3f662f48","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/eb3cbd9c3f662f48","status":"passed","time":{"start":1727772598698,"stop":1727772611659,"duration":12961}},{"uid":"af80febcae958f6e","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/af80febcae958f6e","status":"passed","time":{"start":1727778183024,"stop":1727778195854,"duration":12830}},{"uid":"a81fc5ee747dc07a","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/a81fc5ee747dc07a","status":"passed","time":{"start":1727774706012,"stop":1727774718841,"duration":12829}},{"uid":"4ee96adb25e29bcb","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/4ee96adb25e29bcb","status":"passed","time":{"start":1727772598698,"stop":1727772611659,"duration":12961}},{"uid":"f22c385032e7cd1f","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/f22c385032e7cd1f","status":"passed","time":{"start":1727767856298,"stop":1727767869140,"duration":12842}},{"uid":"a0bdc7a9fcb02c67","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/a0bdc7a9fcb02c67","status":"passed","time":{"start":1727766992666,"stop":1727767005886,"duration":13220}},{"uid":"7900aec7d181a728","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/7900aec7d181a728","status":"passed","time":{"start":1727762401902,"stop":1727762415011,"duration":13109}},{"uid":"79a01b05fd4042cd","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/79a01b05fd4042cd","status":"passed","time":{"start":1727761494154,"stop":1727761509868,"duration":15714}},{"uid":"ecd8e8babfcd85e6","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/ecd8e8babfcd85e6","status":"passed","time":{"start":1727758550609,"stop":1727758563393,"duration":12784}},{"uid":"bf0d8d0252af903f","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/bf0d8d0252af903f","status":"passed","time":{"start":1727743103671,"stop":1727743116932,"duration":13261}},{"uid":"eac27587f1789d07","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/eac27587f1789d07","status":"passed","time":{"start":1727730696896,"stop":1727730709911,"duration":13015}},{"uid":"996fecb736906de0","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/996fecb736906de0","status":"passed","time":{"start":1727656600965,"stop":1727656613875,"duration":12910}},{"uid":"d9ea4c712271d859","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/d9ea4c712271d859","status":"passed","time":{"start":1727570282558,"stop":1727570295485,"duration":12927}},{"uid":"7249dca5f68ea8a2","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/7249dca5f68ea8a2","status":"passed","time":{"start":1727543269789,"stop":1727543282720,"duration":12931}},{"uid":"50d51d722c258648","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/50d51d722c258648","status":"passed","time":{"start":1727542380701,"stop":1727542393531,"duration":12830}},{"uid":"d849cadaf95c4df5","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/d849cadaf95c4df5","status":"passed","time":{"start":1727541486328,"stop":1727541499952,"duration":13624}},{"uid":"429eafffc8f50d4d","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/429eafffc8f50d4d","status":"passed","time":{"start":1727483775214,"stop":1727483788079,"duration":12865}},{"uid":"d676b4171232b404","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/d676b4171232b404","status":"passed","time":{"start":1727475828072,"stop":1727475841181,"duration":13109}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"cf44f047720fd0bb.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}