{"uid":"80fcf57b175c0558","name":"test_bool_return","fullName":"tests.hil.tests.rpc.test_rpc#test_bool_return","historyId":"50db862bc4248984919783f22a8fc56e","time":{"start":1727794600183,"stop":1727794605540,"duration":5357},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff9285e390>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff926d4c10>\ndevice = <golioth.golioth.Device object at 0xffff926d5210>\n\n    async def test_bool_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"bool\")\n\ntests/hil/tests/rpc/test_rpc.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff9285e390>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727794510785,"stop":1727794510785,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727794510786,"stop":1727794510786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727794510787,"stop":1727794510787,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727794510788,"stop":1727794510788,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727794510789,"stop":1727794510789,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727794510790,"stop":1727794510791,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727794510790,"stop":1727794510790,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727794510791,"stop":1727794510791,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727794510792,"stop":1727794510792,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727794510793,"stop":1727794510793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727794510793,"stop":1727794510793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727794510794,"stop":1727794510794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727794510794,"stop":1727794511189,"duration":395},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727794511189,"stop":1727794562589,"duration":51400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727794562590,"stop":1727794563712,"duration":1122},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727794563713,"stop":1727794573831,"duration":10118},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727794636909,"stop":1727794636910,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727794636912,"stop":1727794637365,"duration":453},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727794637367,"stop":1727794637368,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727794637370,"stop":1727794637373,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"20535f1687c9"},{"name":"thread","value":"252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":43,"unknown":0,"total":46},"items":[{"uid":"aba86826fc75fb21","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/aba86826fc75fb21","status":"passed","time":{"start":1727786125561,"stop":1727786127056,"duration":1495}},{"uid":"4875e944d87d7ee4","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/4875e944d87d7ee4","status":"passed","time":{"start":1727782339905,"stop":1727782340817,"duration":912}},{"uid":"48f2dc8ef805f1be","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/48f2dc8ef805f1be","status":"passed","time":{"start":1727780636219,"stop":1727780637719,"duration":1500}},{"uid":"12c432d1ef4bd338","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/12c432d1ef4bd338","status":"passed","time":{"start":1727778841268,"stop":1727778842770,"duration":1502}},{"uid":"397fec8580a2b122","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/397fec8580a2b122","status":"passed","time":{"start":1727775357053,"stop":1727775358553,"duration":1500}},{"uid":"4d5b1112abd870cd","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/4d5b1112abd870cd","status":"passed","time":{"start":1727768071592,"stop":1727768073719,"duration":2127}},{"uid":"2338322dc76d826d","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/2338322dc76d826d","status":"passed","time":{"start":1727767517792,"stop":1727767519017,"duration":1225}},{"uid":"8fc2ecf2baef5d27","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/8fc2ecf2baef5d27","status":"passed","time":{"start":1727762315477,"stop":1727762316725,"duration":1248}},{"uid":"be20f661148dede4","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/be20f661148dede4","status":"passed","time":{"start":1727742988365,"stop":1727742990119,"duration":1754}},{"uid":"7c4f54bcd04ab01","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/7c4f54bcd04ab01","status":"passed","time":{"start":1727730625690,"stop":1727730627715,"duration":2025}},{"uid":"bcf51ba4e283548c","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/bcf51ba4e283548c","status":"passed","time":{"start":1727656541390,"stop":1727656543872,"duration":2482}},{"uid":"4722406c077012b0","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/4722406c077012b0","status":"passed","time":{"start":1727570186985,"stop":1727570188453,"duration":1468}},{"uid":"36fe8fff0330002f","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/36fe8fff0330002f","status":"passed","time":{"start":1727543908546,"stop":1727543909561,"duration":1015}},{"uid":"e7b6e36efd77d624","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/e7b6e36efd77d624","status":"passed","time":{"start":1727542310643,"stop":1727542311664,"duration":1021}},{"uid":"bd7a83d3628dcff2","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/bd7a83d3628dcff2","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1727541417307,"stop":1727541417307,"duration":0}},{"uid":"8a8591d37ebdba89","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/8a8591d37ebdba89","status":"passed","time":{"start":1727483626155,"stop":1727483628428,"duration":2273}},{"uid":"2a21ad541a526643","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/2a21ad541a526643","status":"passed","time":{"start":1727475738114,"stop":1727475739335,"duration":1221}},{"uid":"3253941ddc8eee93","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/3253941ddc8eee93","status":"passed","time":{"start":1727461012626,"stop":1727461013672,"duration":1046}},{"uid":"c1890b3f590eccf5","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/c1890b3f590eccf5","status":"passed","time":{"start":1727461012626,"stop":1727461013672,"duration":1046}},{"uid":"f88648d8e94ba39e","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/f88648d8e94ba39e","status":"passed","time":{"start":1727455623957,"stop":1727455625458,"duration":1501}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"80fcf57b175c0558.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}