{"uid":"20fc7c5ded6586fe","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"fa8c1766fb90779ba45428eac4722ac6","time":{"start":1728483393257,"stop":1728483406829,"duration":13572},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb6799fd0>\ndevice = <golioth.golioth.Device object at 0xffffb675d750>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffb675d750>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728483348848,"stop":1728483348848,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728483348849,"stop":1728483348849,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728483348850,"stop":1728483348850,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728483348851,"stop":1728483348852,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728483348851,"stop":1728483348851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728483348852,"stop":1728483348852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728483348852,"stop":1728483348852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728483348853,"stop":1728483348853,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728483348853,"stop":1728483348853,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728483348854,"stop":1728483348854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728483348855,"stop":1728483348855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728483348856,"stop":1728483348856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728483348857,"stop":1728483349248,"duration":391},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728483349249,"stop":1728483375185,"duration":25936},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728483375186,"stop":1728483376060,"duration":874},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728483376061,"stop":1728483388101,"duration":12040},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb6799fd0>\ndevice = <golioth.golioth.Device object at 0xffffb675d750>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffb675d750>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"54880a7178295a63","name":"stdout","source":"54880a7178295a63.txt","type":"text/plain","size":3426}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728483549158,"stop":1728483549159,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728483549164,"stop":1728483549679,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728483549681,"stop":1728483549682,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728483549685,"stop":1728483549687,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"307ed0c9b5fd"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":1,"skipped":0,"passed":109,"unknown":0,"total":124},"items":[{"uid":"58e9cf0293dfe93e","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/58e9cf0293dfe93e","status":"passed","time":{"start":1728434115396,"stop":1728434128351,"duration":12955}},{"uid":"3518de5989ef6e7c","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/3518de5989ef6e7c","status":"passed","time":{"start":1728424709235,"stop":1728424722929,"duration":13694}},{"uid":"72946613459edeaa","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/72946613459edeaa","status":"passed","time":{"start":1728330736879,"stop":1728330750380,"duration":13501}},{"uid":"449f5c7bb0636fb6","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/449f5c7bb0636fb6","status":"passed","time":{"start":1728326721814,"stop":1728326734496,"duration":12682}},{"uid":"e8e564a7387333b0","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/e8e564a7387333b0","status":"passed","time":{"start":1728338846869,"stop":1728338859992,"duration":13123}},{"uid":"a0c0da098907b415","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/a0c0da098907b415","status":"passed","time":{"start":1728399331924,"stop":1728399346625,"duration":14701}},{"uid":"8b5c6210738cd9ea","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/8b5c6210738cd9ea","status":"passed","time":{"start":1728338846869,"stop":1728338859992,"duration":13123}},{"uid":"110def741a74295e","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/110def741a74295e","status":"passed","time":{"start":1728347832274,"stop":1728347845067,"duration":12793}},{"uid":"b6093c247d48c750","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/b6093c247d48c750","status":"passed","time":{"start":1728340243434,"stop":1728340256418,"duration":12984}},{"uid":"8df3dccb242711e0","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/8df3dccb242711e0","status":"passed","time":{"start":1728338846869,"stop":1728338859992,"duration":13123}},{"uid":"30b2d2af3b0a183f","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/30b2d2af3b0a183f","status":"passed","time":{"start":1728335802658,"stop":1728335816110,"duration":13452}},{"uid":"161ac2ab89eadd04","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/161ac2ab89eadd04","status":"passed","time":{"start":1728316684269,"stop":1728316701691,"duration":17422}},{"uid":"a8778f7d9a1678f","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/a8778f7d9a1678f","status":"passed","time":{"start":1728321112464,"stop":1728321125360,"duration":12896}},{"uid":"b750f326d0e322b8","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/b750f326d0e322b8","status":"passed","time":{"start":1728321112464,"stop":1728321125360,"duration":12896}},{"uid":"1c4b617bd9b72e73","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/1c4b617bd9b72e73","status":"passed","time":{"start":1728316684269,"stop":1728316701691,"duration":17422}},{"uid":"10f82ab50b39bf7c","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/10f82ab50b39bf7c","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728312378526,"stop":1728312391559,"duration":13033}},{"uid":"19ed665f88ff3177","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/19ed665f88ff3177","status":"passed","time":{"start":1728126927431,"stop":1728126940901,"duration":13470}},{"uid":"44168f87d898d3cf","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/44168f87d898d3cf","status":"passed","time":{"start":1728122304884,"stop":1728122318061,"duration":13177}},{"uid":"2411fe4c252e5188","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/2411fe4c252e5188","status":"passed","time":{"start":1728261403029,"stop":1728261415762,"duration":12733}},{"uid":"aea9627ffd3b59e1","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/aea9627ffd3b59e1","status":"passed","time":{"start":1728124403779,"stop":1728124416668,"duration":12889}}]},"tags":["mikes_orange_pi","esp-idf","anyio","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"20fc7c5ded6586fe.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}