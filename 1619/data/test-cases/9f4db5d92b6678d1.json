{"uid":"9f4db5d92b6678d1","name":"test_block_operations","fullName":"tests.hil.tests.ota.test_ota#test_block_operations","historyId":"167251c5eff20d228cebcf5f002e91ea","time":{"start":1728483931181,"stop":1728483973962,"duration":42781},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 141443.84487375402\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffff91d3be90>\nproject = <golioth.golioth.Project object at 0xffff91b89b50>\nreleases = {'test_blocks': Release <670692573174be2c999a8886, release_tags=[], device_tags=['670692553174be2c999a8883'], artifact..., release_tags=[], device_tags=['670692553174be2c999a8883'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_block_operations(board, project, releases):\n        await project.releases.rollout_set(releases[\"test_blocks\"].id, True)\n        assert None != await board.wait_for_regex_in_line(f\"golioth_ota_size_to_nblocks: {TEST_BLOCK_CNT + 1}\", timeout_s=12)\n    \n        # Test NULL client\n    \n        assert None != await board.wait_for_regex_in_line(\"Block sync failed: 5\", timeout_s=12)\n    \n        # Test block download\n    \n        assert None != await board.wait_for_regex_in_line(\"Received block 0\", timeout_s=4)\n        assert None != await board.wait_for_regex_in_line(\"is_last: 0\", timeout_s=4)\n        assert None != await board.wait_for_regex_in_line(\"Received block 1\", timeout_s=4)\n>       assert None != await board.wait_for_regex_in_line(\"is_last: 1\", timeout_s=40)\n\ntests/hil/tests/ota/test_ota.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 141443.84487375402\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"board_name","time":{"start":1728483874493,"stop":1728483874494,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1728483874493,"stop":1728483874493,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728483874494,"stop":1728483874494,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728483874495,"stop":1728483874495,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728483874496,"stop":1728483874496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728483874497,"stop":1728483874497,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728483874498,"stop":1728483874498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728483874499,"stop":1728483874499,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728483874500,"stop":1728483874500,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728483874500,"stop":1728483874501,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728483874501,"stop":1728483874501,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728483874501,"stop":1728483874501,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728483874502,"stop":1728483893529,"duration":19027},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728483893530,"stop":1728483894018,"duration":488},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728483894019,"stop":1728483894869,"duration":850},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728483894869,"stop":1728483924483,"duration":29614},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1728483924485,"stop":1728483924995,"duration":510},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1728483924995,"stop":1728483925814,"duration":819},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1728483925814,"stop":1728483927482,"duration":1668},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1728483931178,"stop":1728483931179,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 141443.84487375402\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <rak5010.RAK5010 object at 0xffff91d3be90>\nproject = <golioth.golioth.Project object at 0xffff91b89b50>\nreleases = {'test_blocks': Release <670692573174be2c999a8886, release_tags=[], device_tags=['670692553174be2c999a8883'], artifact..., release_tags=[], device_tags=['670692553174be2c999a8883'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_block_operations(board, project, releases):\n        await project.releases.rollout_set(releases[\"test_blocks\"].id, True)\n        assert None != await board.wait_for_regex_in_line(f\"golioth_ota_size_to_nblocks: {TEST_BLOCK_CNT + 1}\", timeout_s=12)\n    \n        # Test NULL client\n    \n        assert None != await board.wait_for_regex_in_line(\"Block sync failed: 5\", timeout_s=12)\n    \n        # Test block download\n    \n        assert None != await board.wait_for_regex_in_line(\"Received block 0\", timeout_s=4)\n        assert None != await board.wait_for_regex_in_line(\"is_last: 0\", timeout_s=4)\n        assert None != await board.wait_for_regex_in_line(\"Received block 1\", timeout_s=4)\n>       assert None != await board.wait_for_regex_in_line(\"is_last: 1\", timeout_s=40)\n\ntests/hil/tests/ota/test_ota.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 141443.84487375402\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"6b23d22bcc972a56","name":"stdout","source":"6b23d22bcc972a56.txt","type":"text/plain","size":4041}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1728483974580,"stop":1728483975477,"duration":897},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1728483997398,"stop":1728483998827,"duration":1429},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1728483998830,"stop":1728483999552,"duration":722},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1728483999554,"stop":1728483999555,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728483999556,"stop":1728483999557,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728483999559,"stop":1728483999973,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728483999975,"stop":1728483999975,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728483999977,"stop":1728484005143,"duration":5166},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"1a68851c5d9c"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":114,"unknown":0,"total":121},"items":[{"uid":"848587968dd609ec","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/848587968dd609ec","status":"passed","time":{"start":1728434010373,"stop":1728434021139,"duration":10766}},{"uid":"694f34d56524b6e2","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/694f34d56524b6e2","status":"passed","time":{"start":1728424636353,"stop":1728424647013,"duration":10660}},{"uid":"761f034ac08af542","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/761f034ac08af542","status":"passed","time":{"start":1728331026701,"stop":1728331037779,"duration":11078}},{"uid":"a8d828b2f395facf","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/a8d828b2f395facf","status":"passed","time":{"start":1728326625759,"stop":1728326639927,"duration":14168}},{"uid":"b2879675c9c4ab21","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/b2879675c9c4ab21","status":"passed","time":{"start":1728339478865,"stop":1728339494376,"duration":15511}},{"uid":"61032b52345db62d","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/61032b52345db62d","status":"passed","time":{"start":1728399804114,"stop":1728399817206,"duration":13092}},{"uid":"c8b08d1848152406","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/c8b08d1848152406","status":"passed","time":{"start":1728339478865,"stop":1728339494376,"duration":15511}},{"uid":"6a81658cd74438f3","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/6a81658cd74438f3","status":"passed","time":{"start":1728348493568,"stop":1728348504362,"duration":10794}},{"uid":"3f470849fc9ee02e","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/3f470849fc9ee02e","status":"passed","time":{"start":1728340767838,"stop":1728340779633,"duration":11795}},{"uid":"4cab92c10317d2b4","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/4cab92c10317d2b4","status":"passed","time":{"start":1728339478865,"stop":1728339494376,"duration":15511}},{"uid":"d95465998c880a23","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/d95465998c880a23","status":"passed","time":{"start":1728335737007,"stop":1728335748292,"duration":11285}},{"uid":"880133a442f75721","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/880133a442f75721","status":"passed","time":{"start":1728316973238,"stop":1728316984898,"duration":11660}},{"uid":"f244a308ff44f5ad","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/f244a308ff44f5ad","status":"passed","time":{"start":1728319015274,"stop":1728319025503,"duration":10229}},{"uid":"a646e08a77d0984d","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/a646e08a77d0984d","status":"passed","time":{"start":1728319015274,"stop":1728319025503,"duration":10229}},{"uid":"858414124450518a","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/858414124450518a","status":"passed","time":{"start":1728316973238,"stop":1728316984898,"duration":11660}},{"uid":"c7b4a549c5a5dd43","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/c7b4a549c5a5dd43","status":"passed","time":{"start":1728312913331,"stop":1728312925126,"duration":11795}},{"uid":"4d9519ab24965366","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/4d9519ab24965366","status":"passed","time":{"start":1728132821217,"stop":1728132835006,"duration":13789}},{"uid":"91e16d0f6e34cab5","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/91e16d0f6e34cab5","status":"passed","time":{"start":1728305491965,"stop":1728305510604,"duration":18639}},{"uid":"e383d9d7a2419e46","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/e383d9d7a2419e46","status":"passed","time":{"start":1728261225809,"stop":1728261236635,"duration":10826}},{"uid":"b7ce769877f1552","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/b7ce769877f1552","status":"passed","time":{"start":1728126608240,"stop":1728126622213,"duration":13973}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"9f4db5d92b6678d1.json","parameterValues":["'rak5010'","'zephyr'"]}