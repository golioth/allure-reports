{"uid":"8a6ff4753a9f8796","name":"test_observation_repeat_restart","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_repeat_restart","historyId":"c96172a93787f73c6d68c1d665ffe297","time":{"start":1727926904715,"stop":1727926910145,"duration":5430},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff90a95450>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffff90a73e90>\ndevice = <golioth.golioth.Device object at 0xffff90a94790>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n>           rsp = await device.rpc.disconnect()\n\ntests/hil/tests/rpc/test_rpc.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff90a95450>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727926858476,"stop":1727926858477,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727926858477,"stop":1727926858477,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727926858478,"stop":1727926858478,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727926858479,"stop":1727926858479,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727926858479,"stop":1727926858479,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727926858480,"stop":1727926858480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727926858480,"stop":1727926858480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727926858481,"stop":1727926858481,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727926858481,"stop":1727926858481,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727926858482,"stop":1727926858482,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727926858483,"stop":1727926858483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727926858484,"stop":1727926858484,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727926858485,"stop":1727926859061,"duration":576},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727926859062,"stop":1727926873754,"duration":14692},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727926873757,"stop":1727926874893,"duration":1136},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727926874894,"stop":1727926884542,"duration":9648},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727926917616,"stop":1727926917616,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727926917618,"stop":1727926918203,"duration":585},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727926918206,"stop":1727926918242,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727926918244,"stop":1727926918246,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"232d34b558dc"},{"name":"thread","value":"301-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":38,"unknown":0,"total":60},"items":[{"uid":"3ec84685750123bf","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/3ec84685750123bf","status":"passed","time":{"start":1727916453953,"stop":1727916486915,"duration":32962}},{"uid":"a2b8f46d5ac22460","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/a2b8f46d5ac22460","status":"passed","time":{"start":1727907806543,"stop":1727907835511,"duration":28968}},{"uid":"36fd28254a6d06ec","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/36fd28254a6d06ec","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727833202978,"stop":1727833208408,"duration":5430}},{"uid":"ffe186743465bd7a","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/ffe186743465bd7a","status":"passed","time":{"start":1727830077901,"stop":1727830108801,"duration":30900}},{"uid":"325e05d6437fe2d6","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/325e05d6437fe2d6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727814293596,"stop":1727814293596,"duration":0}},{"uid":"a920da78b65a1a11","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/a920da78b65a1a11","status":"passed","time":{"start":1727815651874,"stop":1727815684404,"duration":32530}},{"uid":"b6090be632c75e9f","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/b6090be632c75e9f","status":"passed","time":{"start":1727798257695,"stop":1727798287033,"duration":29338}},{"uid":"c3e530779e506ad","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/c3e530779e506ad","status":"passed","time":{"start":1727810849472,"stop":1727810886413,"duration":36941}},{"uid":"87749658841e0d6e","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/87749658841e0d6e","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727806432343,"stop":1727806437785,"duration":5442}},{"uid":"ce8d1a562f87f77d","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/ce8d1a562f87f77d","status":"passed","time":{"start":1727798257695,"stop":1727798287033,"duration":29338}},{"uid":"1c7ebb5549c8e473","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/1c7ebb5549c8e473","status":"passed","time":{"start":1727797442248,"stop":1727797471690,"duration":29442}},{"uid":"7d972fee02f393cf","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/7d972fee02f393cf","status":"passed","time":{"start":1727789187921,"stop":1727789219768,"duration":31847}},{"uid":"9df9a099d1b0bb5","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/9df9a099d1b0bb5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784985292,"stop":1727784985292,"duration":0}},{"uid":"366ef9a94852668b","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/366ef9a94852668b","status":"passed","time":{"start":1727774426896,"stop":1727774457257,"duration":30361}},{"uid":"b300e72a807951be","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/b300e72a807951be","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727779579258,"stop":1727779579258,"duration":0}},{"uid":"518af5ac51a9e364","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/518af5ac51a9e364","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727777110768,"stop":1727777126472,"duration":15704}},{"uid":"d18b3bd2ab4912b8","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/d18b3bd2ab4912b8","status":"passed","time":{"start":1727774426896,"stop":1727774457257,"duration":30361}},{"uid":"69bb26429d4e8b2c","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/69bb26429d4e8b2c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727771139124,"stop":1727771139124,"duration":0}},{"uid":"35940c289675b5fd","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/35940c289675b5fd","status":"passed","time":{"start":1727768942929,"stop":1727768972953,"duration":30024}},{"uid":"23ab9651f02da7b0","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/23ab9651f02da7b0","status":"passed","time":{"start":1727764670317,"stop":1727764705672,"duration":35355}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"8a6ff4753a9f8796.json","parameterValues":["'nrf9160dk'","'zephyr'"]}