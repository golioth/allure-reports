{"uid":"d5bf5e3182ebfe20","name":"test_bool_return","fullName":"tests.hil.tests.rpc.test_rpc#test_bool_return","historyId":"50db862bc4248984919783f22a8fc56e","time":{"start":1728088414904,"stop":1728088420307,"duration":5403},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff93358990>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff931b3d50>\ndevice = <golioth.golioth.Device object at 0xffff931d5410>\n\n    async def test_bool_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"bool\")\n\ntests/hil/tests/rpc/test_rpc.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff93358990>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728088327539,"stop":1728088327539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728088327540,"stop":1728088327540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728088327541,"stop":1728088327541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728088327542,"stop":1728088327542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728088327543,"stop":1728088327544,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728088327543,"stop":1728088327543,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728088327544,"stop":1728088327544,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728088327545,"stop":1728088327545,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728088327545,"stop":1728088327546,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728088327545,"stop":1728088327545,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728088327546,"stop":1728088327546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728088327546,"stop":1728088327546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728088327547,"stop":1728088327983,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728088327984,"stop":1728088379422,"duration":51438},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728088379423,"stop":1728088380518,"duration":1095},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728088380519,"stop":1728088389940,"duration":9421},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728088474027,"stop":1728088474027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728088474029,"stop":1728088474411,"duration":382},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728088474413,"stop":1728088474414,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728088474417,"stop":1728088474419,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"1d3d0cc2fdaa"},{"name":"thread","value":"252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":83,"unknown":0,"total":92},"items":[{"uid":"317c89fbfcc0c7b2","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/317c89fbfcc0c7b2","status":"passed","time":{"start":1728080483549,"stop":1728080484664,"duration":1115}},{"uid":"3f60f9ec0fb20925","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/3f60f9ec0fb20925","status":"passed","time":{"start":1728073395909,"stop":1728073397407,"duration":1498}},{"uid":"fe9f264a6e0f7b25","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/fe9f264a6e0f7b25","status":"passed","time":{"start":1728069707087,"stop":1728069708338,"duration":1251}},{"uid":"ed3b01204d467450","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/ed3b01204d467450","status":"passed","time":{"start":1728065954334,"stop":1728065955833,"duration":1499}},{"uid":"283c61bcc0e991a9","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/283c61bcc0e991a9","status":"passed","time":{"start":1728058149694,"stop":1728058151195,"duration":1501}},{"uid":"aec60f20ef5d7f7d","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/aec60f20ef5d7f7d","status":"passed","time":{"start":1728026062832,"stop":1728026064051,"duration":1219}},{"uid":"3c91c6edf592f776","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/3c91c6edf592f776","status":"passed","time":{"start":1728034622921,"stop":1728034624171,"duration":1250}},{"uid":"f41c77e23d345d05","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/f41c77e23d345d05","status":"passed","time":{"start":1728027711448,"stop":1728027712699,"duration":1251}},{"uid":"42a3934631b82516","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/42a3934631b82516","status":"passed","time":{"start":1728034622921,"stop":1728034624171,"duration":1250}},{"uid":"91b59b3021ed188e","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/91b59b3021ed188e","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1728048571134,"stop":1728048571134,"duration":0}},{"uid":"aa7872e1aeaa2c3c","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/aa7872e1aeaa2c3c","status":"passed","time":{"start":1728034622921,"stop":1728034624171,"duration":1250}},{"uid":"5cc22582a81a94b9","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/5cc22582a81a94b9","status":"passed","time":{"start":1728027711448,"stop":1728027712699,"duration":1251}},{"uid":"1ce2207c1c75d8d0","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/1ce2207c1c75d8d0","status":"passed","time":{"start":1728026062832,"stop":1728026064051,"duration":1219}},{"uid":"1ca5296afb70db18","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/1ca5296afb70db18","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728023575018,"stop":1728023575018,"duration":0}},{"uid":"88ac8f91fd632641","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/88ac8f91fd632641","status":"passed","time":{"start":1727990127091,"stop":1727990128560,"duration":1469}},{"uid":"481a57858899f1f7","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/481a57858899f1f7","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727989394999,"stop":1727989400427,"duration":5428}},{"uid":"b4dad48bed32ff58","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/b4dad48bed32ff58","status":"passed","time":{"start":1727986295482,"stop":1727986296703,"duration":1221}},{"uid":"d21c5c2db3ddd326","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/d21c5c2db3ddd326","status":"passed","time":{"start":1727983727445,"stop":1727983728458,"duration":1013}},{"uid":"178d3a5defc7297b","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/178d3a5defc7297b","status":"passed","time":{"start":1727977052437,"stop":1727977053936,"duration":1499}},{"uid":"d128a59a6df39c93","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/d128a59a6df39c93","status":"passed","time":{"start":1727964824544,"stop":1727964825878,"duration":1334}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"d5bf5e3182ebfe20.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}