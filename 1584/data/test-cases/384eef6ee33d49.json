{"uid":"384eef6ee33d49","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1728088297948,"stop":1728088320449,"duration":22501},"status":"failed","statusMessage":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9a00a7d0>\ndevice = <golioth.golioth.Device object at 0xffff99fd79d0>\nproject = <golioth.golioth.Project object at 0xffff9a139310>\nreleases = {'test_blocks': Release <670088df1b3c084061cd15cd, release_tags=[], device_tags=['670088dd1b3c084061cd15ca'], artifact..., release_tags=[], device_tags=['670088dd1b3c084061cd15ca'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 0\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728088224139,"stop":1728088224139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728088224140,"stop":1728088224140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728088224141,"stop":1728088224141,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728088224142,"stop":1728088224142,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728088224142,"stop":1728088224142,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728088224143,"stop":1728088224143,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728088224144,"stop":1728088224144,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728088224144,"stop":1728088224144,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728088224145,"stop":1728088224145,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728088224145,"stop":1728088224145,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728088224146,"stop":1728088224146,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728088224146,"stop":1728088224146,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728088224147,"stop":1728088275712,"duration":51565},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728088275714,"stop":1728088276169,"duration":455},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728088276170,"stop":1728088277013,"duration":843},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728088277013,"stop":1728088284976,"duration":7963},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1728088284977,"stop":1728088285531,"duration":554},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1728088285531,"stop":1728088286318,"duration":787},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1728088286319,"stop":1728088288020,"duration":1701},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1728088297945,"stop":1728088297945,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9a00a7d0>\ndevice = <golioth.golioth.Device object at 0xffff99fd79d0>\nproject = <golioth.golioth.Project object at 0xffff9a139310>\nreleases = {'test_blocks': Release <670088df1b3c084061cd15cd, release_tags=[], device_tags=['670088dd1b3c084061cd15ca'], artifact..., release_tags=[], device_tags=['670088dd1b3c084061cd15ca'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 0\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"e58623111933b4e9","name":"stdout","source":"e58623111933b4e9.txt","type":"text/plain","size":1217}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1728088320492,"stop":1728088321514,"duration":1022},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1728088321517,"stop":1728088323022,"duration":1505},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1728088323024,"stop":1728088323858,"duration":834},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1728088323860,"stop":1728088323860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728088323862,"stop":1728088323862,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728088323864,"stop":1728088324324,"duration":460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728088324327,"stop":1728088324327,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728088324329,"stop":1728088324332,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"1d3d0cc2fdaa"},{"name":"thread","value":"247-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":10,"skipped":0,"passed":59,"unknown":0,"total":92},"items":[{"uid":"c6068289312cda87","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/c6068289312cda87","status":"failed","statusDetails":"AssertionError: assert 8 == 7\n +  where 8 = int('8')","time":{"start":1728080357216,"stop":1728080420153,"duration":62937}},{"uid":"6d494e02b90b714f","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/6d494e02b90b714f","status":"passed","time":{"start":1728073266489,"stop":1728073347282,"duration":80793}},{"uid":"e75f93ddcd9458c8","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/e75f93ddcd9458c8","status":"passed","time":{"start":1728069577921,"stop":1728069658606,"duration":80685}},{"uid":"785dafa8f87017dd","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/785dafa8f87017dd","status":"passed","time":{"start":1728065824704,"stop":1728065905839,"duration":81135}},{"uid":"66fd562bcffb95cc","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/66fd562bcffb95cc","status":"passed","time":{"start":1728058020975,"stop":1728058101491,"duration":80516}},{"uid":"70b2e9c20dad97b8","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/70b2e9c20dad97b8","status":"passed","time":{"start":1728025932976,"stop":1728026012883,"duration":79907}},{"uid":"2555eae3bb942bf7","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/2555eae3bb942bf7","status":"passed","time":{"start":1728034493933,"stop":1728034573760,"duration":79827}},{"uid":"45bedae1eeb8cded","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/45bedae1eeb8cded","status":"passed","time":{"start":1728027572052,"stop":1728027651897,"duration":79845}},{"uid":"6fca4c807f5f959a","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/6fca4c807f5f959a","status":"passed","time":{"start":1728034493933,"stop":1728034573760,"duration":79827}},{"uid":"8ee77cc10af1dac7","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/8ee77cc10af1dac7","status":"passed","time":{"start":1728048472304,"stop":1728048549844,"duration":77540}},{"uid":"d5967e6cba0b44a3","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/d5967e6cba0b44a3","status":"passed","time":{"start":1728034493933,"stop":1728034573760,"duration":79827}},{"uid":"1e4b39b6689ec7d0","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/1e4b39b6689ec7d0","status":"passed","time":{"start":1728027572052,"stop":1728027651897,"duration":79845}},{"uid":"434d15d8241d42f3","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/434d15d8241d42f3","status":"passed","time":{"start":1728025932976,"stop":1728026012883,"duration":79907}},{"uid":"f6ee25a9345f9d41","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/f6ee25a9345f9d41","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728023405762,"stop":1728023405762,"duration":0}},{"uid":"ec17d794441393f3","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/ec17d794441393f3","status":"passed","time":{"start":1727989997280,"stop":1727990077274,"duration":79994}},{"uid":"39fc7d2dd2792aef","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/39fc7d2dd2792aef","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1727989287160,"stop":1727989306875,"duration":19715}},{"uid":"f2cca8ac5021d37a","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/f2cca8ac5021d37a","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727986213531,"stop":1727986234246,"duration":20715}},{"uid":"2c533adfe80011a0","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/2c533adfe80011a0","status":"passed","time":{"start":1727983589294,"stop":1727983666323,"duration":77029}},{"uid":"c5b5f6161dc78dda","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/c5b5f6161dc78dda","status":"passed","time":{"start":1727976922350,"stop":1727977003392,"duration":81042}},{"uid":"7bcb6a09d180abbb","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/7bcb6a09d180abbb","status":"passed","time":{"start":1727964685560,"stop":1727964762599,"duration":77039}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"384eef6ee33d49.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}