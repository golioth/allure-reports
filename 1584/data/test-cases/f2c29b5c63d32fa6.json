{"uid":"f2c29b5c63d32fa6","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"9e71d39341bcf45922b5bb6a4bc2bdd4","time":{"start":1728088467525,"stop":1728088472862,"duration":5337},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff93358990>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff931b3d50>\ndevice = <golioth.golioth.Device object at 0xffff931d5410>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff93358990>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728088327539,"stop":1728088327539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728088327540,"stop":1728088327540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728088327541,"stop":1728088327541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728088327542,"stop":1728088327542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728088327543,"stop":1728088327544,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728088327543,"stop":1728088327543,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728088327544,"stop":1728088327544,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728088327545,"stop":1728088327545,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728088327545,"stop":1728088327546,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728088327545,"stop":1728088327545,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728088327546,"stop":1728088327546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728088327546,"stop":1728088327546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728088327547,"stop":1728088327983,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728088327984,"stop":1728088379422,"duration":51438},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728088379423,"stop":1728088380518,"duration":1095},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728088380519,"stop":1728088389940,"duration":9421},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728088474027,"stop":1728088474027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728088474029,"stop":1728088474411,"duration":382},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728088474413,"stop":1728088474414,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728088474417,"stop":1728088474419,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"1d3d0cc2fdaa"},{"name":"thread","value":"252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":78,"unknown":0,"total":92},"items":[{"uid":"eca16a7a35070e5e","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/eca16a7a35070e5e","status":"passed","time":{"start":1728080509436,"stop":1728080527894,"duration":18458}},{"uid":"83b048e47056ad18","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/83b048e47056ad18","status":"passed","time":{"start":1728073432239,"stop":1728073451016,"duration":18777}},{"uid":"c91392e24d145c05","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/c91392e24d145c05","status":"passed","time":{"start":1728069763444,"stop":1728069782470,"duration":19026}},{"uid":"a4b1c0e9ad0cdcce","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/a4b1c0e9ad0cdcce","status":"passed","time":{"start":1728065991221,"stop":1728066009979,"duration":18758}},{"uid":"97312607cc7e705e","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/97312607cc7e705e","status":"passed","time":{"start":1728058185581,"stop":1728058203824,"duration":18243}},{"uid":"3776f54b91ca58d8","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/3776f54b91ca58d8","status":"passed","time":{"start":1728026098143,"stop":1728026116669,"duration":18526}},{"uid":"5ab4898a96dd6faa","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/5ab4898a96dd6faa","status":"passed","time":{"start":1728034670277,"stop":1728034689034,"duration":18757}},{"uid":"5ced27798a811fd8","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/5ced27798a811fd8","status":"passed","time":{"start":1728027757844,"stop":1728027776587,"duration":18743}},{"uid":"4d1c5795ca2ce48","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/4d1c5795ca2ce48","status":"passed","time":{"start":1728034670277,"stop":1728034689034,"duration":18757}},{"uid":"8608703c891a673d","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/8608703c891a673d","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1728048576472,"stop":1728048576472,"duration":0}},{"uid":"fa73e9779021d214","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/fa73e9779021d214","status":"passed","time":{"start":1728034670277,"stop":1728034689034,"duration":18757}},{"uid":"154fd9bbb847d63c","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/154fd9bbb847d63c","status":"passed","time":{"start":1728027757844,"stop":1728027776587,"duration":18743}},{"uid":"bc26603b7cd520ba","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/bc26603b7cd520ba","status":"passed","time":{"start":1728026098143,"stop":1728026116669,"duration":18526}},{"uid":"4c1dbc1ddb2b1cbb","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/4c1dbc1ddb2b1cbb","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728023576710,"stop":1728023576710,"duration":0}},{"uid":"a9ab758f74f428e9","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/a9ab758f74f428e9","status":"passed","time":{"start":1727990163224,"stop":1727990181753,"duration":18529}},{"uid":"4fff40ab353cdaa8","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/4fff40ab353cdaa8","status":"passed","time":{"start":1727989429540,"stop":1727989449098,"duration":19558}},{"uid":"236f4578b7b7d118","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/236f4578b7b7d118","status":"passed","time":{"start":1727986339822,"stop":1727986357834,"duration":18012}},{"uid":"fbc19503ecc188dc","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/fbc19503ecc188dc","status":"passed","time":{"start":1727983759407,"stop":1727983777611,"duration":18204}},{"uid":"1130a80dfd6e3096","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/1130a80dfd6e3096","status":"passed","time":{"start":1727977089577,"stop":1727977108091,"duration":18514}},{"uid":"d53fac5214bf7aa6","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/d53fac5214bf7aa6","status":"passed","time":{"start":1727964857934,"stop":1727964876247,"duration":18313}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"f2c29b5c63d32fa6.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}