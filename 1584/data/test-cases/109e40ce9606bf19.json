{"uid":"109e40ce9606bf19","name":"test_int_return","fullName":"tests.hil.tests.rpc.test_rpc#test_int_return","historyId":"82a23f67814f95739a9601f44769297b","time":{"start":1728088401861,"stop":1728088407235,"duration":5374},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff93358990>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff931b3d50>\ndevice = <golioth.golioth.Device object at 0xffff931d5410>\n\n    async def test_int_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"int\")\n\ntests/hil/tests/rpc/test_rpc.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff93358990>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728088327539,"stop":1728088327539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728088327540,"stop":1728088327540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728088327541,"stop":1728088327541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728088327542,"stop":1728088327542,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728088327543,"stop":1728088327544,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728088327543,"stop":1728088327543,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728088327544,"stop":1728088327544,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728088327545,"stop":1728088327545,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728088327545,"stop":1728088327546,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728088327545,"stop":1728088327545,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728088327546,"stop":1728088327546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728088327546,"stop":1728088327546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728088327547,"stop":1728088327983,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728088327984,"stop":1728088379422,"duration":51438},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728088379423,"stop":1728088380518,"duration":1095},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728088380519,"stop":1728088389940,"duration":9421},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728088474027,"stop":1728088474027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728088474029,"stop":1728088474411,"duration":382},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728088474413,"stop":1728088474414,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728088474417,"stop":1728088474419,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"1d3d0cc2fdaa"},{"name":"thread","value":"252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":85,"unknown":0,"total":92},"items":[{"uid":"f6e4e8f95b841bbb","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/f6e4e8f95b841bbb","status":"passed","time":{"start":1728080479378,"stop":1728080481285,"duration":1907}},{"uid":"685e6b7675629298","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/685e6b7675629298","status":"passed","time":{"start":1728073391685,"stop":1728073392892,"duration":1207}},{"uid":"89fc4bb415b94d55","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/89fc4bb415b94d55","status":"passed","time":{"start":1728069702855,"stop":1728069704076,"duration":1221}},{"uid":"310072b4fea4e211","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/310072b4fea4e211","status":"passed","time":{"start":1728065950107,"stop":1728065951567,"duration":1460}},{"uid":"5789dc4e1b48a57f","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/5789dc4e1b48a57f","status":"passed","time":{"start":1728058145484,"stop":1728058146930,"duration":1446}},{"uid":"a33b02b395c23cf","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/a33b02b395c23cf","status":"passed","time":{"start":1728026058299,"stop":1728026059792,"duration":1493}},{"uid":"662af66e23bed16e","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/662af66e23bed16e","status":"passed","time":{"start":1728034618684,"stop":1728034620150,"duration":1466}},{"uid":"1ccb1f44c96e7eb2","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/1ccb1f44c96e7eb2","status":"passed","time":{"start":1728027706969,"stop":1728027708432,"duration":1463}},{"uid":"6dff9b87864dc654","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/6dff9b87864dc654","status":"passed","time":{"start":1728034618684,"stop":1728034620150,"duration":1466}},{"uid":"adfaeea7ae930068","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/adfaeea7ae930068","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1728048567773,"stop":1728048567773,"duration":0}},{"uid":"e948322b5e615ff4","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/e948322b5e615ff4","status":"passed","time":{"start":1728034618684,"stop":1728034620150,"duration":1466}},{"uid":"8278221c8f28ecd3","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/8278221c8f28ecd3","status":"passed","time":{"start":1728027706969,"stop":1728027708432,"duration":1463}},{"uid":"fa0dae8804513191","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/fa0dae8804513191","status":"passed","time":{"start":1728026058299,"stop":1728026059792,"duration":1493}},{"uid":"92def8bc50e57195","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/92def8bc50e57195","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728023573946,"stop":1728023573946,"duration":0}},{"uid":"47a9625cb1375d22","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/47a9625cb1375d22","status":"passed","time":{"start":1727990122812,"stop":1727990124308,"duration":1496}},{"uid":"4e4bb143bf8782b2","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/4e4bb143bf8782b2","status":"passed","time":{"start":1727989389743,"stop":1727989391210,"duration":1467}},{"uid":"7d25c20de8329cdc","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/7d25c20de8329cdc","status":"passed","time":{"start":1727986292206,"stop":1727986293436,"duration":1230}},{"uid":"49ebfeca2f464c66","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/49ebfeca2f464c66","status":"passed","time":{"start":1727983724169,"stop":1727983725180,"duration":1011}},{"uid":"4291be4014e065bb","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/4291be4014e065bb","status":"passed","time":{"start":1727977048208,"stop":1727977049424,"duration":1216}},{"uid":"4b246c761acb7734","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/4b246c761acb7734","status":"passed","time":{"start":1727964820361,"stop":1727964822280,"duration":1919}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"109e40ce9606bf19.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}