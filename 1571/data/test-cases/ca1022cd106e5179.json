{"uid":"ca1022cd106e5179","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"9ea8ee677231e39a8691323ca77f58b7","time":{"start":1728023991697,"stop":1728024094084,"duration":102387},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa2cfa190>\ndevice = <golioth.golioth.Device object at 0xffffa2cd82d0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1728023982040,"stop":1728023982040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728023982041,"stop":1728023982041,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728023982041,"stop":1728023982041,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1728023982042,"stop":1728023982042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728023982042,"stop":1728023982042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1728023982043,"stop":1728023982046,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728023982046,"stop":1728023982047,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728023982047,"stop":1728023982047,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728023982048,"stop":1728023982491,"duration":443},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728023982492,"stop":1728023983366,"duration":874},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1728023983367,"stop":1728023991137,"duration":7770},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1728023991138,"stop":1728023991694,"duration":556},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa2cfa190>\ndevice = <golioth.golioth.Device object at 0xffffa2cd82d0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"75a6e5de1db641f8","name":"log","source":"75a6e5de1db641f8.txt","type":"text/plain","size":20600}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1728024094372,"stop":1728024094387,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728024094389,"stop":1728024095018,"duration":629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728024095020,"stop":1728024095022,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1728024095027,"stop":1728024095027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.mimxrt1024_evk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"5ba6c6e0e96f"},{"name":"thread","value":"597-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"3646014ec3b8c1ac","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1728023864656,"stop":1728023977388,"duration":112732}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":7,"skipped":0,"passed":74,"unknown":0,"total":82},"items":[{"uid":"c1ee9f7b7d0a4d04","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/c1ee9f7b7d0a4d04","status":"passed","time":{"start":1728003562990,"stop":1728003586381,"duration":23391}},{"uid":"d44fde2f8bad5af0","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/d44fde2f8bad5af0","status":"passed","time":{"start":1727994085131,"stop":1727994109758,"duration":24627}},{"uid":"d0659e93f0a4251d","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/d0659e93f0a4251d","status":"passed","time":{"start":1727993727202,"stop":1727993751611,"duration":24409}},{"uid":"f7c1c75ab8b4a142","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/f7c1c75ab8b4a142","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1727988900917,"stop":1727989013768,"duration":112851}},{"uid":"52591e9d5b758c33","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/52591e9d5b758c33","status":"passed","time":{"start":1727984987081,"stop":1727985007346,"duration":20265}},{"uid":"fcb5547e31687ebc","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/fcb5547e31687ebc","status":"passed","time":{"start":1727979881729,"stop":1727979906465,"duration":24736}},{"uid":"ae1742ccfaa50eea","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/ae1742ccfaa50eea","status":"passed","time":{"start":1727966638130,"stop":1727966663134,"duration":25004}},{"uid":"f039507cefe2dd54","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/f039507cefe2dd54","status":"passed","time":{"start":1727975157960,"stop":1727975178273,"duration":20313}},{"uid":"ce71f962919fd1b","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/ce71f962919fd1b","status":"passed","time":{"start":1727972265944,"stop":1727972289274,"duration":23330}},{"uid":"2ee4e5cd99104495","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/2ee4e5cd99104495","status":"passed","time":{"start":1727970905668,"stop":1727970930231,"duration":24563}},{"uid":"5b7d7a16b05ec0ef","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/5b7d7a16b05ec0ef","status":"passed","time":{"start":1727966638130,"stop":1727966663134,"duration":25004}},{"uid":"83f8864a0c0bd35e","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/83f8864a0c0bd35e","status":"passed","time":{"start":1727959536862,"stop":1727959556757,"duration":19895}},{"uid":"37cfe49d90da39b4","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/37cfe49d90da39b4","status":"passed","time":{"start":1727958075102,"stop":1727958099451,"duration":24349}},{"uid":"20fa809ceb567cd8","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/20fa809ceb567cd8","status":"passed","time":{"start":1727954898920,"stop":1727954923555,"duration":24635}},{"uid":"d01797e448438179","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/d01797e448438179","status":"passed","time":{"start":1727908294521,"stop":1727908314073,"duration":19552}},{"uid":"ef0c9dba75a4811c","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/ef0c9dba75a4811c","status":"passed","time":{"start":1727932626784,"stop":1727932646357,"duration":19573}},{"uid":"d50c5a25ee67f8cc","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/d50c5a25ee67f8cc","status":"passed","time":{"start":1727949842168,"stop":1727949866547,"duration":24379}},{"uid":"7861a95c3fc23277","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/7861a95c3fc23277","status":"passed","time":{"start":1727947799612,"stop":1727947823014,"duration":23402}},{"uid":"c56279c92f55fbf5","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/c56279c92f55fbf5","status":"passed","time":{"start":1727947654997,"stop":1727947679323,"duration":24326}},{"uid":"3458d23c16818b90","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/3458d23c16818b90","status":"passed","time":{"start":1727834098972,"stop":1727834122381,"duration":23409}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"ca1022cd106e5179.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}