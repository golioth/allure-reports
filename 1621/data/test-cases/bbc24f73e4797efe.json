{"uid":"bbc24f73e4797efe","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1728491471934,"stop":1728491543086,"duration":71152},"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff9b0dbf50>\ndevice = <golioth.golioth.Device object at 0xffff9af93710>\nproject = <golioth.golioth.Project object at 0xffff9b408bd0>\nreleases = {'test_blocks': Release <6706afc53174be2c999a8bd5, release_tags=[], device_tags=['6706afc33174be2c999a8bd2'], artifact..., release_tags=[], device_tags=['6706afc33174be2c999a8bd2'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n>           await device.refresh()\n\ntests/hil/tests/ota/test_ota.py:184: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:405: in refresh\n    resp = await c.get(self.base_url)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728491413140,"stop":1728491413140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728491413141,"stop":1728491413141,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728491413141,"stop":1728491413142,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728491413142,"stop":1728491413142,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728491413143,"stop":1728491413143,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728491413144,"stop":1728491413145,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728491413144,"stop":1728491413144,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728491413145,"stop":1728491413145,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728491413145,"stop":1728491413146,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728491413146,"stop":1728491413146,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728491413147,"stop":1728491413148,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728491413148,"stop":1728491413149,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728491413150,"stop":1728491452865,"duration":39715},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728491452867,"stop":1728491453591,"duration":724},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728491453591,"stop":1728491454762,"duration":1171},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728491454763,"stop":1728491458071,"duration":3308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1728491458072,"stop":1728491458823,"duration":751},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1728491458824,"stop":1728491459696,"duration":872},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1728491459697,"stop":1728491462074,"duration":2377},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1728491471931,"stop":1728491471932,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff9b0dbf50>\ndevice = <golioth.golioth.Device object at 0xffff9af93710>\nproject = <golioth.golioth.Project object at 0xffff9b408bd0>\nreleases = {'test_blocks': Release <6706afc53174be2c999a8bd5, release_tags=[], device_tags=['6706afc33174be2c999a8bd2'], artifact..., release_tags=[], device_tags=['6706afc33174be2c999a8bd2'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n>           await device.refresh()\n\ntests/hil/tests/ota/test_ota.py:184: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:405: in refresh\n    resp = await c.get(self.base_url)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectError","steps":[],"attachments":[{"uid":"7be2f8aec47c9fe3","name":"stdout","source":"7be2f8aec47c9fe3.txt","type":"text/plain","size":2601}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1728491544086,"stop":1728491545648,"duration":1562},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1728491545650,"stop":1728491547520,"duration":1870},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1728491547524,"stop":1728491548405,"duration":881},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1728491548408,"stop":1728491548408,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728491548409,"stop":1728491548410,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728491548412,"stop":1728491549030,"duration":618},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728491549033,"stop":1728491549033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728491549035,"stop":1728491549045,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"59690194c50e"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":12,"skipped":0,"passed":82,"unknown":0,"total":122},"items":[{"uid":"e5a6785a016440a9","reportUrl":"https://golioth.github.io/allure-reports/1619//#testresult/e5a6785a016440a9","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1728483246070,"stop":1728483260115,"duration":14045}},{"uid":"ae856f62bf4cdc16","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/ae856f62bf4cdc16","status":"passed","time":{"start":1728433963323,"stop":1728434040403,"duration":77080}},{"uid":"b0a84dce561db2d5","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/b0a84dce561db2d5","status":"passed","time":{"start":1728424582480,"stop":1728424659924,"duration":77444}},{"uid":"ac9958de96f8bbfd","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/ac9958de96f8bbfd","status":"passed","time":{"start":1728330217052,"stop":1728330294387,"duration":77335}},{"uid":"812eb4388a457b5c","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/812eb4388a457b5c","status":"passed","time":{"start":1728327194069,"stop":1728327275262,"duration":81193}},{"uid":"9f010bacc25d4a6","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/9f010bacc25d4a6","status":"passed","time":{"start":1728338778244,"stop":1728338859624,"duration":81380}},{"uid":"e4b936dd374038a3","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/e4b936dd374038a3","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1728399090179,"stop":1728399110904,"duration":20725}},{"uid":"68b8d768b03e845e","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/68b8d768b03e845e","status":"passed","time":{"start":1728338778244,"stop":1728338859624,"duration":81380}},{"uid":"8847af46d370eaf0","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/8847af46d370eaf0","status":"passed","time":{"start":1728347673032,"stop":1728347750141,"duration":77109}},{"uid":"f24afd9289e0873e","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/f24afd9289e0873e","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1728339597687,"stop":1728339610952,"duration":13265}},{"uid":"9861263b76fb6082","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/9861263b76fb6082","status":"passed","time":{"start":1728338778244,"stop":1728338859624,"duration":81380}},{"uid":"c2f2916d9df84f8d","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/c2f2916d9df84f8d","status":"passed","time":{"start":1728335639122,"stop":1728335716539,"duration":77417}},{"uid":"318b5bf0acd086f3","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/318b5bf0acd086f3","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1728328002336,"stop":1728328016101,"duration":13765}},{"uid":"b1dddccbdcf5452c","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/b1dddccbdcf5452c","status":"passed","time":{"start":1728319731891,"stop":1728319813140,"duration":81249}},{"uid":"28768bd34112f29b","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/28768bd34112f29b","status":"passed","time":{"start":1728319731891,"stop":1728319813140,"duration":81249}},{"uid":"698be19e15388343","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/698be19e15388343","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1728316224159,"stop":1728316237293,"duration":13134}},{"uid":"cc2f30e38011cc2b","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/cc2f30e38011cc2b","status":"passed","time":{"start":1728312338846,"stop":1728312416146,"duration":77300}},{"uid":"dda61e95266f70d4","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/dda61e95266f70d4","status":"passed","time":{"start":1728125342500,"stop":1728125421599,"duration":79099}},{"uid":"2cf89f0e8a7a61bb","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/2cf89f0e8a7a61bb","status":"passed","time":{"start":1728122495117,"stop":1728122573177,"duration":78060}},{"uid":"687990f98e9556f2","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/687990f98e9556f2","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1728261237255,"stop":1728261280637,"duration":43382}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"bbc24f73e4797efe.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}