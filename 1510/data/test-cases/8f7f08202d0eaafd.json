{"uid":"8f7f08202d0eaafd","name":"test_set_int_range_out_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_out_min","historyId":"26b31750bba7ecf0de2d339827310676","time":{"start":1727787245923,"stop":1727787258851,"duration":12928},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8742a350>\ndevice = <golioth.golioth.Device object at 0xffff874009d0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff874009d0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727787144192,"stop":1727787144193,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727787144193,"stop":1727787144193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727787144194,"stop":1727787144194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727787144195,"stop":1727787144195,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727787144196,"stop":1727787144196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727787144197,"stop":1727787144197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727787144198,"stop":1727787144198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727787144198,"stop":1727787144198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727787144199,"stop":1727787144199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727787144200,"stop":1727787144200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727787144201,"stop":1727787144201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727787144201,"stop":1727787144201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727787144202,"stop":1727787144608,"duration":406},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727787144609,"stop":1727787189917,"duration":45308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727787189919,"stop":1727787190844,"duration":925},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727787190845,"stop":1727787204914,"duration":14069},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8742a350>\ndevice = <golioth.golioth.Device object at 0xffff874009d0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff874009d0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"5fb395200df9d845","name":"stdout","source":"5fb395200df9d845.txt","type":"text/plain","size":65}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727787351374,"stop":1727787351374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727787351376,"stop":1727787351804,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727787351808,"stop":1727787351810,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727787351814,"stop":1727787351818,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"0a7a2625345e"},{"name":"thread","value":"255-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":46,"unknown":0,"total":47},"items":[{"uid":"f30b30818fa7036a","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/f30b30818fa7036a","status":"passed","time":{"start":1727783465866,"stop":1727783478633,"duration":12767}},{"uid":"8ebfda50c33acb54","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/8ebfda50c33acb54","status":"passed","time":{"start":1727782032539,"stop":1727782046241,"duration":13702}},{"uid":"b4d34e2106c543c0","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/b4d34e2106c543c0","status":"passed","time":{"start":1727779101897,"stop":1727779114828,"duration":12931}},{"uid":"dcaf16ff29f1bf97","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/dcaf16ff29f1bf97","status":"passed","time":{"start":1727775898870,"stop":1727775911755,"duration":12885}},{"uid":"d807798963ee54aa","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/d807798963ee54aa","status":"passed","time":{"start":1727768788570,"stop":1727768801959,"duration":13389}},{"uid":"99384086275cea8b","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/99384086275cea8b","status":"passed","time":{"start":1727766971519,"stop":1727766984690,"duration":13171}},{"uid":"ed29f4c6b9f1b921","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/ed29f4c6b9f1b921","status":"passed","time":{"start":1727762919150,"stop":1727762932036,"duration":12886}},{"uid":"48e8f463328da028","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/48e8f463328da028","status":"passed","time":{"start":1727761666738,"stop":1727761679960,"duration":13222}},{"uid":"99f4cc81d2f174eb","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/99f4cc81d2f174eb","status":"passed","time":{"start":1727758636331,"stop":1727758650258,"duration":13927}},{"uid":"f0e56f0c3a825e9a","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/f0e56f0c3a825e9a","status":"passed","time":{"start":1727743170458,"stop":1727743183735,"duration":13277}},{"uid":"e5c62f285fb78c8d","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/e5c62f285fb78c8d","status":"passed","time":{"start":1727730715051,"stop":1727730729244,"duration":14193}},{"uid":"bae86992e8367de5","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/bae86992e8367de5","status":"passed","time":{"start":1727656679297,"stop":1727656692716,"duration":13419}},{"uid":"66d0b357d78a2b38","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/66d0b357d78a2b38","status":"passed","time":{"start":1727570346887,"stop":1727570359728,"duration":12841}},{"uid":"e51c2c55da4d7a67","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/e51c2c55da4d7a67","status":"passed","time":{"start":1727543672401,"stop":1727543685141,"duration":12740}},{"uid":"8b1bac96dafca803","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/8b1bac96dafca803","status":"passed","time":{"start":1727542531527,"stop":1727542544298,"duration":12771}},{"uid":"1b8a982292176de4","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/1b8a982292176de4","status":"passed","time":{"start":1727541480053,"stop":1727541492883,"duration":12830}},{"uid":"920bce6d5a912cc4","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/920bce6d5a912cc4","status":"passed","time":{"start":1727483666007,"stop":1727483678779,"duration":12772}},{"uid":"625377314a9bb239","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/625377314a9bb239","status":"passed","time":{"start":1727475737100,"stop":1727475749946,"duration":12846}},{"uid":"65348693146239eb","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/65348693146239eb","status":"passed","time":{"start":1727461055284,"stop":1727461068201,"duration":12917}},{"uid":"ecd6379b6b69fc7c","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/ecd6379b6b69fc7c","status":"passed","time":{"start":1727461055284,"stop":1727461068201,"duration":12917}}]},"tags":["esp-idf","anyio","esp32_devkitc_wrover_espidf","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"8f7f08202d0eaafd.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}