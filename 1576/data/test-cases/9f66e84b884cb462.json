{"uid":"9f66e84b884cb462","name":"test_cancel_all","fullName":"tests.hil.tests.settings.test_settings#test_cancel_all","historyId":"a9587ca9ad8f2de8bc72f20482399f28","time":{"start":1728050692008,"stop":1728050697138,"duration":5130},"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n../../../.local/lib/python3.10/site-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/lib/python3.10/site-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n../../../.local/lib/python3.10/site-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n../../../.local/lib/python3.10/site-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n../../../.local/lib/python3.10/site-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n../../../.local/lib/python3.10/site-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n../../../.local/lib/python3.10/site-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n../../../.local/lib/python3.10/site-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n../../../.local/lib/python3.10/site-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n../../../.local/lib/python3.10/site-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.10/contextlib.py:153: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n../../../.local/lib/python3.10/site-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <linuxboard.LinuxBoard object at 0x7f0f6ceb2020>\ndevice = <golioth.golioth.Device object at 0x7f0f6cefcd60>\n\n    async def test_cancel_all(board, device):\n        # Cancel all settings\n>       await device.settings.set('TEST_CANCEL', True)\n\ntests/hil/tests/settings/test_settings.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/lib/python3.10/site-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n../../../.local/lib/python3.10/site-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n../../../.local/lib/python3.10/site-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n../../../.local/lib/python3.10/site-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n../../../.local/lib/python3.10/site-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1814: in get\n    return await self.request(\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n../../../.local/lib/python3.10/site-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.10/contextlib.py:153: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n../../../.local/lib/python3.10/site-packages/httpx/_transports/default.py:89: ReadTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"baud","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728050565345,"stop":1728050565593,"duration":248},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728050565593,"stop":1728050566151,"duration":558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728050565593,"stop":1728050565593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728050566151,"stop":1728050574159,"duration":8008},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1728050737432,"stop":1728050737687,"duration":255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728050737432,"stop":1728050737432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728050737688,"stop":1728050737690,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728050737690,"stop":1728050737691,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"linux"},{"name":"tag","value":"linux"},{"name":"parentSuite","value":"hil.linux.linux"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"fv-az1215-241"},{"name":"thread","value":"3498-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'linux'"},{"name":"platform_name","value":"'linux'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"354d563f150dd071","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728022141829,"stop":1728022141829,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":81,"unknown":0,"total":88},"items":[{"uid":"34ab27ce0958ce03","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/34ab27ce0958ce03","status":"passed","time":{"start":1728048063166,"stop":1728048093594,"duration":30428}},{"uid":"ecc23a1c68dd91b1","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/ecc23a1c68dd91b1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728022141829,"stop":1728022141829,"duration":0}},{"uid":"e45eed13c589d902","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/e45eed13c589d902","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728021492186,"stop":1728021492186,"duration":0}},{"uid":"b539a52c2716fff1","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/b539a52c2716fff1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728021223947,"stop":1728021223947,"duration":0}},{"uid":"6edf13fcefcb1d0d","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/6edf13fcefcb1d0d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728020912472,"stop":1728020912472,"duration":0}},{"uid":"fcee709978fbd3b6","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/fcee709978fbd3b6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728020365891,"stop":1728020365891,"duration":0}},{"uid":"41c701c59a247cb8","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/41c701c59a247cb8","status":"passed","time":{"start":1728001515126,"stop":1728001547379,"duration":32253}},{"uid":"8fe699b2523f0c9c","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/8fe699b2523f0c9c","status":"passed","time":{"start":1727986247061,"stop":1727986279439,"duration":32378}},{"uid":"8f18b24a6b5c2e46","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/8f18b24a6b5c2e46","status":"passed","time":{"start":1727986141525,"stop":1727986175387,"duration":33862}},{"uid":"8ac0d0f5ed1be62a","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/8ac0d0f5ed1be62a","status":"passed","time":{"start":1727984501692,"stop":1727984533124,"duration":31432}},{"uid":"7527d177cdc3dfa2","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/7527d177cdc3dfa2","status":"passed","time":{"start":1727975206770,"stop":1727975235573,"duration":28803}},{"uid":"fbf1eae3fc214c1e","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/fbf1eae3fc214c1e","status":"passed","time":{"start":1727970086069,"stop":1727970120345,"duration":34276}},{"uid":"fc5442802d8d552a","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/fc5442802d8d552a","status":"passed","time":{"start":1727969689699,"stop":1727969719129,"duration":29430}},{"uid":"4c3bdff30d984f2e","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/4c3bdff30d984f2e","status":"passed","time":{"start":1727968002816,"stop":1727968033405,"duration":30589}},{"uid":"7e6271ae7b77943a","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/7e6271ae7b77943a","status":"passed","time":{"start":1727965462106,"stop":1727965490575,"duration":28469}},{"uid":"967b90039c4c8585","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/967b90039c4c8585","status":"passed","time":{"start":1727965056624,"stop":1727965086161,"duration":29537}},{"uid":"ba6cc2860664ae37","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/ba6cc2860664ae37","status":"passed","time":{"start":1727964479928,"stop":1727964509553,"duration":29625}},{"uid":"3a9fecfb1f7ad42a","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/3a9fecfb1f7ad42a","status":"passed","time":{"start":1727956435987,"stop":1727956468285,"duration":32298}},{"uid":"31f1f1a7666d547c","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/31f1f1a7666d547c","status":"passed","time":{"start":1727942690951,"stop":1727942721344,"duration":30393}},{"uid":"7557b21055550b3a","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/7557b21055550b3a","status":"passed","time":{"start":1727943037561,"stop":1727943070531,"duration":32970}}]},"tags":["linux","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"9f66e84b884cb462.json","parameterValues":["'linux'","'linux'"]}