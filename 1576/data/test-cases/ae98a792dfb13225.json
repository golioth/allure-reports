{"uid":"ae98a792dfb13225","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"ee936b7d181ae9cc4057b23c9f7088a4","time":{"start":1728035013151,"stop":1728035018657,"duration":5506},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff996341d0>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff99483c50>\ndevice = <golioth.golioth.Device object at 0xffff994b6c90>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff996341d0>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728034938845,"stop":1728034938846,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728034938846,"stop":1728034938847,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728034938848,"stop":1728034938848,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728034938849,"stop":1728034938849,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728034938850,"stop":1728034938850,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728034938851,"stop":1728034938851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728034938852,"stop":1728034938852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728034938853,"stop":1728034938853,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728034938854,"stop":1728034938854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728034938854,"stop":1728034938855,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728034938855,"stop":1728034938855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728034938856,"stop":1728034938856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728034938856,"stop":1728034939297,"duration":441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728034939298,"stop":1728034980408,"duration":41110},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728034980409,"stop":1728034981446,"duration":1037},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728034981447,"stop":1728035010338,"duration":28891},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728035086718,"stop":1728035086718,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728035086723,"stop":1728035087236,"duration":513},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728035087238,"stop":1728035087240,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728035087242,"stop":1728035087244,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"6234fcf29604"},{"name":"thread","value":"270-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":13,"skipped":0,"passed":69,"unknown":0,"total":82},"items":[{"uid":"f5f728ce6ceff443","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/f5f728ce6ceff443","status":"passed","time":{"start":1728026897661,"stop":1728026899226,"duration":1565}},{"uid":"34adbc028a74fab8","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/34adbc028a74fab8","status":"passed","time":{"start":1728025153805,"stop":1728025155442,"duration":1637}},{"uid":"4d4fdc9698f6b08d","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/4d4fdc9698f6b08d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728021308460,"stop":1728021308460,"duration":0}},{"uid":"367b5ec8c6824c73","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/367b5ec8c6824c73","status":"passed","time":{"start":1728002174890,"stop":1728002176428,"duration":1538}},{"uid":"2ad185fb1ded44cb","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/2ad185fb1ded44cb","status":"passed","time":{"start":1727990501187,"stop":1727990502810,"duration":1623}},{"uid":"7887501f61f6f6ba","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/7887501f61f6f6ba","status":"passed","time":{"start":1727991493984,"stop":1727991495603,"duration":1619}},{"uid":"e3591d79dd02f5da","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/e3591d79dd02f5da","status":"passed","time":{"start":1727987459085,"stop":1727987460672,"duration":1587}},{"uid":"bdebed89df5f03ee","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/bdebed89df5f03ee","status":"passed","time":{"start":1727985572506,"stop":1727985574242,"duration":1736}},{"uid":"838a7e670700d412","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/838a7e670700d412","status":"passed","time":{"start":1727979007653,"stop":1727979009358,"duration":1705}},{"uid":"7a9396cd4c295e4c","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/7a9396cd4c295e4c","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727977148152,"stop":1727977153477,"duration":5325}},{"uid":"463375c16eecf7ce","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/463375c16eecf7ce","status":"passed","time":{"start":1727974482257,"stop":1727974485052,"duration":2795}},{"uid":"20026fb96ff3735c","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/20026fb96ff3735c","status":"passed","time":{"start":1727970322308,"stop":1727970323857,"duration":1549}},{"uid":"48a89f0c2eed8b06","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/48a89f0c2eed8b06","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727965393369,"stop":1727965398702,"duration":5333}},{"uid":"ff126a870b4f5bf1","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/ff126a870b4f5bf1","status":"passed","time":{"start":1727959597148,"stop":1727959598716,"duration":1568}},{"uid":"a2a97af46d640259","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/a2a97af46d640259","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727957340558,"stop":1727957345911,"duration":5353}},{"uid":"353cb66169305c4c","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/353cb66169305c4c","status":"passed","time":{"start":1727955475008,"stop":1727955476640,"duration":1632}},{"uid":"46dce87fcbfb3827","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/46dce87fcbfb3827","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727952474736,"stop":1727952480051,"duration":5315}},{"uid":"656bbb13bda9a4f4","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/656bbb13bda9a4f4","status":"passed","time":{"start":1727951836427,"stop":1727951837948,"duration":1521}},{"uid":"2849367bef95da31","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/2849367bef95da31","status":"passed","time":{"start":1727947582573,"stop":1727947583719,"duration":1146}},{"uid":"22ee08cd924aee28","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/22ee08cd924aee28","status":"passed","time":{"start":1727944759348,"stop":1727944760878,"duration":1530}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"ae98a792dfb13225.json","parameterValues":["'rak5010'","'zephyr'"]}