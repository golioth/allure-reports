{"uid":"14781378d7db6834","name":"test_wrong_type","fullName":"tests.hil.tests.settings.test_settings#test_wrong_type","historyId":"748738c82574d130ec468c9971ff324b","time":{"start":1728050686740,"stop":1728050691885,"duration":5145},"status":"broken","statusMessage":"httpx.ReadTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n../../../.local/lib/python3.10/site-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.local/lib/python3.10/site-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n../../../.local/lib/python3.10/site-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n../../../.local/lib/python3.10/site-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n../../../.local/lib/python3.10/site-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n../../../.local/lib/python3.10/site-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n../../../.local/lib/python3.10/site-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n../../../.local/lib/python3.10/site-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n../../../.local/lib/python3.10/site-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n../../../.local/lib/python3.10/site-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.10/contextlib.py:153: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n../../../.local/lib/python3.10/site-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\ndevice = <golioth.golioth.Device object at 0x7f0f6cefcd60>\n\n    async def test_wrong_type(device):\n>       await assert_settings_error(device, 'TEST_WRONG_TYPE', VALUE_FORMAT_NOT_VALID)\n\ntests/hil/tests/settings/test_settings.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/hil/tests/settings/test_settings.py:45: in assert_settings_error\n    await device.refresh()\n../../../.local/lib/python3.10/site-packages/golioth/golioth.py:405: in refresh\n    resp = await c.get(self.base_url)\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1814: in get\n    return await self.request(\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n../../../.local/lib/python3.10/site-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n../../../.local/lib/python3.10/site-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.10/contextlib.py:153: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n../../../.local/lib/python3.10/site-packages/httpx/_transports/default.py:89: ReadTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"baud","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728050565344,"stop":1728050565344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728050565345,"stop":1728050565593,"duration":248},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728050565345,"stop":1728050565345,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728050565593,"stop":1728050566151,"duration":558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728050565593,"stop":1728050565593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728050566151,"stop":1728050574159,"duration":8008},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1728050737432,"stop":1728050737687,"duration":255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728050737432,"stop":1728050737432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728050737688,"stop":1728050737690,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728050737690,"stop":1728050737691,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"linux"},{"name":"tag","value":"linux"},{"name":"parentSuite","value":"hil.linux.linux"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"fv-az1215-241"},{"name":"thread","value":"3498-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'linux'"},{"name":"platform_name","value":"'linux'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"cb0073cf0fe4759e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728022141774,"stop":1728022141774,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":81,"unknown":0,"total":88},"items":[{"uid":"db746cf7689126ab","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/db746cf7689126ab","status":"passed","time":{"start":1728048062397,"stop":1728048063165,"duration":768}},{"uid":"40c70e6c4af53f09","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/40c70e6c4af53f09","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728022141774,"stop":1728022141774,"duration":0}},{"uid":"d225b21bfc872b7e","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/d225b21bfc872b7e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728021492138,"stop":1728021492138,"duration":0}},{"uid":"4b259c70e21be060","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/4b259c70e21be060","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728021223891,"stop":1728021223891,"duration":0}},{"uid":"c54b34dd05e4335a","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/c54b34dd05e4335a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728020912401,"stop":1728020912401,"duration":0}},{"uid":"427e08028f5138fd","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/427e08028f5138fd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728020365835,"stop":1728020365835,"duration":0}},{"uid":"7dfe2b88f762aca","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/7dfe2b88f762aca","status":"passed","time":{"start":1728001512973,"stop":1728001515124,"duration":2151}},{"uid":"2b37dcfad65ec571","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/2b37dcfad65ec571","status":"passed","time":{"start":1727986244677,"stop":1727986247059,"duration":2382}},{"uid":"d5efdf322e2a2d14","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/d5efdf322e2a2d14","status":"passed","time":{"start":1727986140733,"stop":1727986141523,"duration":790}},{"uid":"8130121d09d00e1c","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/8130121d09d00e1c","status":"passed","time":{"start":1727984501144,"stop":1727984501690,"duration":546}},{"uid":"1b3a3ec73491a727","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/1b3a3ec73491a727","status":"passed","time":{"start":1727975206324,"stop":1727975206769,"duration":445}},{"uid":"c22be6d1693c2eca","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/c22be6d1693c2eca","status":"passed","time":{"start":1727970085127,"stop":1727970086067,"duration":940}},{"uid":"c7e1c8e446cf43d8","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/c7e1c8e446cf43d8","status":"passed","time":{"start":1727969689179,"stop":1727969689697,"duration":518}},{"uid":"7500690d9922e407","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/7500690d9922e407","status":"passed","time":{"start":1727968002052,"stop":1727968002815,"duration":763}},{"uid":"148dd3368c134b87","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/148dd3368c134b87","status":"passed","time":{"start":1727965461503,"stop":1727965462104,"duration":601}},{"uid":"3af8db79a4ea48b4","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/3af8db79a4ea48b4","status":"passed","time":{"start":1727965056058,"stop":1727965056622,"duration":564}},{"uid":"bc591dd63dc75db6","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/bc591dd63dc75db6","status":"passed","time":{"start":1727964479373,"stop":1727964479926,"duration":553}},{"uid":"17fbe03613fa2865","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/17fbe03613fa2865","status":"passed","time":{"start":1727956435157,"stop":1727956435986,"duration":829}},{"uid":"396eeebd36b1469c","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/396eeebd36b1469c","status":"passed","time":{"start":1727942690017,"stop":1727942690950,"duration":933}},{"uid":"893e9491dc280e8c","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/893e9491dc280e8c","status":"passed","time":{"start":1727943036640,"stop":1727943037559,"duration":919}}]},"tags":["linux","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"14781378d7db6834.json","parameterValues":["'linux'","'linux'"]}