{"uid":"b940ac378995c7bc","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"efe21cbbb5934f0489b65e4b580675bb","time":{"start":1727543254962,"stop":1727543298612,"duration":43650},"status":"failed","statusMessage":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","statusTrace":"board = <rak5010.RAK5010 object at 0xffffa35ac9d0>\ndevice = <golioth.golioth.Device object at 0xffffa35b8750>\nproject = <golioth.golioth.Project object at 0xffffa36d6590>\nreleases = {'test_blocks': Release <66f837c20e704510295c95c2, release_tags=[], device_tags=['66f837c00e704510295c95bd'], artifact..., release_tags=[], device_tags=['66f837c00e704510295c95bd'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 5 == 4\nE            +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727543159852,"stop":1727543159852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727543159852,"stop":1727543159853,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727543159853,"stop":1727543159854,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727543159854,"stop":1727543159854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727543159855,"stop":1727543159855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727543159855,"stop":1727543159855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727543159856,"stop":1727543159856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727543159856,"stop":1727543159856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727543159857,"stop":1727543159857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727543159857,"stop":1727543159857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727543159857,"stop":1727543159858,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727543159858,"stop":1727543159859,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727543159859,"stop":1727543201040,"duration":41181},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727543201041,"stop":1727543201557,"duration":516},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727543201557,"stop":1727543202393,"duration":836},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727543202394,"stop":1727543231622,"duration":29228},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727543231623,"stop":1727543232128,"duration":505},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727543232129,"stop":1727543232914,"duration":785},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727543232914,"stop":1727543234457,"duration":1543},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727543254959,"stop":1727543254959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","statusTrace":"board = <rak5010.RAK5010 object at 0xffffa35ac9d0>\ndevice = <golioth.golioth.Device object at 0xffffa35b8750>\nproject = <golioth.golioth.Project object at 0xffffa36d6590>\nreleases = {'test_blocks': Release <66f837c20e704510295c95c2, release_tags=[], device_tags=['66f837c00e704510295c95bd'], artifact..., release_tags=[], device_tags=['66f837c00e704510295c95bd'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 5 == 4\nE            +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"880f3ea668eb5848","name":"stdout","source":"880f3ea668eb5848.txt","type":"text/plain","size":2620}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727543298746,"stop":1727543299614,"duration":868},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727543299617,"stop":1727543301052,"duration":1435},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727543301054,"stop":1727543301847,"duration":793},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727543301849,"stop":1727543301850,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727543301851,"stop":1727543301851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727543301853,"stop":1727543302268,"duration":415},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727543302270,"stop":1727543302270,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727543302272,"stop":1727543302276,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"575c5229e168"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":2,"skipped":0,"passed":25,"unknown":0,"total":31},"items":[{"uid":"6f387eaf01fceb67","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/6f387eaf01fceb67","status":"failed","statusDetails":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","time":{"start":1727541327404,"stop":1727541386770,"duration":59366}},{"uid":"ecf4cf56ff44ea51","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/ecf4cf56ff44ea51","status":"passed","time":{"start":1727483597187,"stop":1727483679648,"duration":82461}},{"uid":"6fcd8410efe5af17","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/6fcd8410efe5af17","status":"passed","time":{"start":1727475681472,"stop":1727475763824,"duration":82352}},{"uid":"e0bf96491bf8c3e","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/e0bf96491bf8c3e","status":"passed","time":{"start":1727461576378,"stop":1727461658287,"duration":81909}},{"uid":"6ea9beab74a230ed","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/6ea9beab74a230ed","status":"passed","time":{"start":1727461576378,"stop":1727461658287,"duration":81909}},{"uid":"e60c78ecc2210f7c","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/e60c78ecc2210f7c","status":"passed","time":{"start":1727458722312,"stop":1727458804723,"duration":82411}},{"uid":"81f89906e399f0b4","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/81f89906e399f0b4","status":"passed","time":{"start":1727456124282,"stop":1727456206527,"duration":82245}},{"uid":"e10b9ba92defab31","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/e10b9ba92defab31","status":"passed","time":{"start":1727456952504,"stop":1727457034420,"duration":81916}},{"uid":"29f5a99dcbdb1b47","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/29f5a99dcbdb1b47","status":"passed","time":{"start":1727453906640,"stop":1727453988527,"duration":81887}},{"uid":"9b5184de23ddc592","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/9b5184de23ddc592","status":"passed","time":{"start":1727397884092,"stop":1727397967096,"duration":83004}},{"uid":"b830461ca5e325c6","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/b830461ca5e325c6","status":"passed","time":{"start":1727393963968,"stop":1727394046769,"duration":82801}},{"uid":"d1c55082e71b61d0","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/d1c55082e71b61d0","status":"failed","statusDetails":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","time":{"start":1727388761560,"stop":1727388806125,"duration":44565}},{"uid":"1cc711c4f62cc1bf","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/1cc711c4f62cc1bf","status":"passed","time":{"start":1727388206615,"stop":1727388288530,"duration":81915}},{"uid":"a69cf5557b3997d4","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/a69cf5557b3997d4","status":"passed","time":{"start":1727384822116,"stop":1727384904085,"duration":81969}},{"uid":"d30b96d88adc9d03","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/d30b96d88adc9d03","status":"failed","statusDetails":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","time":{"start":1727381613078,"stop":1727381641398,"duration":28320}},{"uid":"8abbcee76e86ad8b","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/8abbcee76e86ad8b","status":"passed","time":{"start":1727379306983,"stop":1727379390615,"duration":83632}},{"uid":"fbb54adf2232017b","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/fbb54adf2232017b","status":"passed","time":{"start":1727376533463,"stop":1727376615437,"duration":81974}},{"uid":"36c3863cd333af9f","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/36c3863cd333af9f","status":"passed","time":{"start":1727371347601,"stop":1727371430134,"duration":82533}},{"uid":"843f8d59cda716cb","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/843f8d59cda716cb","status":"passed","time":{"start":1727367158206,"stop":1727367240040,"duration":81834}},{"uid":"d1e886890f995d65","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/d1e886890f995d65","status":"passed","time":{"start":1727363028532,"stop":1727363110618,"duration":82086}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"b940ac378995c7bc.json","parameterValues":["'rak5010'","'zephyr'"]}