{"uid":"d2e5692c5c0a82f0","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"29965a84c7f143cf4efad9827e24c81d","time":{"start":1727541370052,"stop":1727541383364,"duration":13312},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffffa3477e10>\ndevice = <golioth.golioth.Device object at 0xffffa346e610>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa346e610>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727541332900,"stop":1727541332900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727541332901,"stop":1727541332901,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727541332902,"stop":1727541332902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727541332902,"stop":1727541332902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727541332903,"stop":1727541332903,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727541332903,"stop":1727541332903,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727541332904,"stop":1727541332904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727541332904,"stop":1727541332904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727541332905,"stop":1727541332906,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727541332905,"stop":1727541332905,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727541332906,"stop":1727541332907,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727541332907,"stop":1727541332907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727541332908,"stop":1727541333311,"duration":403},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727541333312,"stop":1727541346062,"duration":12750},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727541346064,"stop":1727541346971,"duration":907},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727541346972,"stop":1727541360637,"duration":13665},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffffa3477e10>\ndevice = <golioth.golioth.Device object at 0xffffa346e610>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa346e610>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"126ab7faf2ab9feb","name":"stdout","source":"126ab7faf2ab9feb.txt","type":"text/plain","size":3783}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727541524745,"stop":1727541524745,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727541524751,"stop":1727541525221,"duration":470},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727541525224,"stop":1727541525225,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727541525228,"stop":1727541525230,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"7b041e664f9f"},{"name":"thread","value":"310-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":27,"unknown":0,"total":30},"items":[{"uid":"68ddf3b39916958b","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/68ddf3b39916958b","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1727483732393,"stop":1727483732393,"duration":0}},{"uid":"22b59ba780957841","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/22b59ba780957841","status":"passed","time":{"start":1727475728533,"stop":1727475741317,"duration":12784}},{"uid":"86b06d82d8eb377","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/86b06d82d8eb377","status":"passed","time":{"start":1727460999380,"stop":1727461011974,"duration":12594}},{"uid":"92ce94acd92e8769","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/92ce94acd92e8769","status":"passed","time":{"start":1727460999380,"stop":1727461011974,"duration":12594}},{"uid":"c9c8655cf345db8c","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/c9c8655cf345db8c","status":"passed","time":{"start":1727458677508,"stop":1727458690219,"duration":12711}},{"uid":"fb113508068c0dc7","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/fb113508068c0dc7","status":"passed","time":{"start":1727393544473,"stop":1727393557312,"duration":12839}},{"uid":"749a0dccfa98b072","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/749a0dccfa98b072","status":"passed","time":{"start":1727387471343,"stop":1727387484067,"duration":12724}},{"uid":"f592bb010fd39f9c","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/f592bb010fd39f9c","status":"passed","time":{"start":1727363833670,"stop":1727363847149,"duration":13479}},{"uid":"327fc97cf2300a21","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/327fc97cf2300a21","status":"passed","time":{"start":1727393544473,"stop":1727393557312,"duration":12839}},{"uid":"954cfe71284a6bb7","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/954cfe71284a6bb7","status":"passed","time":{"start":1727388216558,"stop":1727388229189,"duration":12631}},{"uid":"d8798f8da88e5c15","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/d8798f8da88e5c15","status":"passed","time":{"start":1727387471343,"stop":1727387484067,"duration":12724}},{"uid":"d04865e0edeff84c","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/d04865e0edeff84c","status":"passed","time":{"start":1727384331919,"stop":1727384344567,"duration":12648}},{"uid":"e869885283fc6ada","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/e869885283fc6ada","status":"passed","time":{"start":1727381980282,"stop":1727381992974,"duration":12692}},{"uid":"ce6e6fb0a31302ea","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/ce6e6fb0a31302ea","status":"passed","time":{"start":1727378728779,"stop":1727378742968,"duration":14189}},{"uid":"1e677ff2fb695fa","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/1e677ff2fb695fa","status":"passed","time":{"start":1727360057429,"stop":1727360072023,"duration":14594}},{"uid":"63305bccae3df835","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/63305bccae3df835","status":"passed","time":{"start":1727371369665,"stop":1727371382490,"duration":12825}},{"uid":"8a81479366eff9bf","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/8a81479366eff9bf","status":"passed","time":{"start":1727366666723,"stop":1727366680092,"duration":13369}},{"uid":"d10b90fbfd65b1cd","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/d10b90fbfd65b1cd","status":"passed","time":{"start":1727362953515,"stop":1727362966357,"duration":12842}},{"uid":"2359fbbff035a3","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/2359fbbff035a3","status":"passed","time":{"start":1727363833670,"stop":1727363847149,"duration":13479}},{"uid":"85ffc6a3da46bfd3","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/85ffc6a3da46bfd3","status":"passed","time":{"start":1727360057429,"stop":1727360072023,"duration":14594}}]},"tags":["mikes_orange_pi","nrf52840dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"d2e5692c5c0a82f0.json","parameterValues":["'nrf52840dk'","'zephyr'"]}