{"uid":"de22d0a45e832438","name":"test_set_int","fullName":"tests.hil.tests.settings.test_settings#test_set_int","historyId":"c87c56f688b9d80528bb0fffbcd73dc2","time":{"start":1727945558061,"stop":1727945571349,"duration":13288},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 197149.5123681604\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff8866ad90>\ndevice = <golioth.golioth.Device object at 0xffff88641050>\n\n    async def test_set_int(board, device):\n        await device.settings.set('TEST_INT', 42)\n    \n>       assert None != await board.wait_for_regex_in_line('Received test_int: 42', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 197149.5123681604\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727945509257,"stop":1727945509258,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727945509258,"stop":1727945509259,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727945509259,"stop":1727945509260,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727945509260,"stop":1727945509261,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727945509261,"stop":1727945509261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727945509262,"stop":1727945509263,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727945509262,"stop":1727945509262,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727945509263,"stop":1727945509263,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727945509264,"stop":1727945509264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727945509265,"stop":1727945509265,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727945509266,"stop":1727945509267,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727945509266,"stop":1727945509266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727945509267,"stop":1727945509686,"duration":419},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727945509687,"stop":1727945531580,"duration":21893},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727945531582,"stop":1727945535822,"duration":4240},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727945535822,"stop":1727945558052,"duration":22230},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 197149.5123681604\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff8866ad90>\ndevice = <golioth.golioth.Device object at 0xffff88641050>\n\n    async def test_set_int(board, device):\n        await device.settings.set('TEST_INT', 42)\n    \n>       assert None != await board.wait_for_regex_in_line('Received test_int: 42', timeout_s=10)\n\ntests/hil/tests/settings/test_settings.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 197149.5123681604\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"fb00aac049f5af7b","name":"stdout","source":"fb00aac049f5af7b.txt","type":"text/plain","size":14153}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727945737201,"stop":1727945737202,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727945737207,"stop":1727945738024,"duration":817},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727945738026,"stop":1727945738027,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727945738029,"stop":1727945738031,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"bd4265325565"},{"name":"thread","value":"261-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":34,"skipped":0,"passed":29,"unknown":0,"total":63},"items":[{"uid":"3e022399a2bb9770","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/3e022399a2bb9770","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1727942354262,"stop":1727942354262,"duration":0}},{"uid":"c65d9a506b2ea2a9","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/c65d9a506b2ea2a9","status":"passed","time":{"start":1727932411681,"stop":1727932417192,"duration":5511}},{"uid":"35a293c1f137c9f2","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/35a293c1f137c9f2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727926763859,"stop":1727926763859,"duration":0}},{"uid":"46cae3ec516dc3b6","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/46cae3ec516dc3b6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727916481521,"stop":1727916481521,"duration":0}},{"uid":"aaffae17afd2564d","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/aaffae17afd2564d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727907440255,"stop":1727907440255,"duration":0}},{"uid":"49cfd7562b1519c5","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/49cfd7562b1519c5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727832706786,"stop":1727832706786,"duration":0}},{"uid":"148a61c87e13ea0f","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/148a61c87e13ea0f","status":"passed","time":{"start":1727830119662,"stop":1727830124294,"duration":4632}},{"uid":"416e09fb8e2f36b7","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/416e09fb8e2f36b7","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727812674226,"stop":1727812674226,"duration":0}},{"uid":"2bd7f383b48cf862","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/2bd7f383b48cf862","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727814830252,"stop":1727814830252,"duration":0}},{"uid":"794424471a74e344","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/794424471a74e344","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727811317602,"stop":1727811317602,"duration":0}},{"uid":"d385b787e2bb990f","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/d385b787e2bb990f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727810143662,"stop":1727810143662,"duration":0}},{"uid":"d5932cc4bdc70d0","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/d5932cc4bdc70d0","status":"passed","time":{"start":1727806435984,"stop":1727806442101,"duration":6117}},{"uid":"cfcf5856eb9c2bff","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/cfcf5856eb9c2bff","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727797503189,"stop":1727797503189,"duration":0}},{"uid":"576374b1607c900e","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/576374b1607c900e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727795546840,"stop":1727795546840,"duration":0}},{"uid":"bce466937323d11e","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/bce466937323d11e","status":"passed","time":{"start":1727788278252,"stop":1727788283753,"duration":5501}},{"uid":"e51e2c41397cb44e","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/e51e2c41397cb44e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784137999,"stop":1727784137999,"duration":0}},{"uid":"144198b09fd9ab75","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/144198b09fd9ab75","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727782691743,"stop":1727782691743,"duration":0}},{"uid":"91076bd872dc4d9d","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/91076bd872dc4d9d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727778231985,"stop":1727778231985,"duration":0}},{"uid":"8657fbec95781d3e","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/8657fbec95781d3e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727776560316,"stop":1727776560316,"duration":0}},{"uid":"7e3b8fe7a93ad8d7","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/7e3b8fe7a93ad8d7","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727773785466,"stop":1727773785466,"duration":0}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"de22d0a45e832438.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}