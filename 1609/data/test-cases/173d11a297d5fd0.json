{"uid":"173d11a297d5fd0","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"cb1422e4370021e6294c8318ca9786ac","time":{"start":1728336624353,"stop":1728336645005,"duration":20652},"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff9a75bd90>\ndevice = <golioth.golioth.Device object at 0xffff9a730890>\nproject = <golioth.golioth.Project object at 0xffff9a768a90>\nreleases = {'test_blocks': Release <670452e9d2eae3be22ac8397, release_tags=[], device_tags=['670452e8d2eae3be22ac8394'], artifact..., release_tags=[], device_tags=['670452e8d2eae3be22ac8394'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728336565304,"stop":1728336565305,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728336565305,"stop":1728336565305,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728336565306,"stop":1728336565306,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728336565307,"stop":1728336565307,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728336565308,"stop":1728336565309,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728336565308,"stop":1728336565308,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728336565309,"stop":1728336565309,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728336565310,"stop":1728336565310,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728336565310,"stop":1728336565311,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728336565311,"stop":1728336565311,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728336565312,"stop":1728336565312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728336565313,"stop":1728336565313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728336565313,"stop":1728336607571,"duration":42258},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728336607573,"stop":1728336608057,"duration":484},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728336608058,"stop":1728336608941,"duration":883},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728336608942,"stop":1728336615605,"duration":6663},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1728336615607,"stop":1728336616099,"duration":492},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1728336616100,"stop":1728336616841,"duration":741},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1728336616842,"stop":1728336618430,"duration":1588},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1728336624350,"stop":1728336624350,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff9a75bd90>\ndevice = <golioth.golioth.Device object at 0xffff9a730890>\nproject = <golioth.golioth.Project object at 0xffff9a768a90>\nreleases = {'test_blocks': Release <670452e9d2eae3be22ac8397, release_tags=[], device_tags=['670452e8d2eae3be22ac8394'], artifact..., release_tags=[], device_tags=['670452e8d2eae3be22ac8394'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"7fc1ade830e8384e","name":"stdout","source":"7fc1ade830e8384e.txt","type":"text/plain","size":1587}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1728336645188,"stop":1728336646084,"duration":896},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1728336646086,"stop":1728336647594,"duration":1508},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1728336647597,"stop":1728336648344,"duration":747},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1728336648346,"stop":1728336648346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728336648348,"stop":1728336648348,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728336648350,"stop":1728336648734,"duration":384},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728336648737,"stop":1728336648737,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728336648739,"stop":1728336648742,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"ea6f7ccf0877"},{"name":"thread","value":"238-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":21,"skipped":0,"passed":84,"unknown":0,"total":112},"items":[{"uid":"e316850af9ca1ae7","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/e316850af9ca1ae7","status":"passed","time":{"start":1728327278327,"stop":1728327355454,"duration":77127}},{"uid":"ff2ae34ae305e37a","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/ff2ae34ae305e37a","status":"passed","time":{"start":1728320289894,"stop":1728320367169,"duration":77275}},{"uid":"55d4791f2ffd927b","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/55d4791f2ffd927b","status":"passed","time":{"start":1728320289894,"stop":1728320367169,"duration":77275}},{"uid":"d53c350ec92c1361","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/d53c350ec92c1361","status":"passed","time":{"start":1728317059392,"stop":1728317136546,"duration":77154}},{"uid":"7e767121234646bc","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/7e767121234646bc","status":"passed","time":{"start":1728313079378,"stop":1728313156483,"duration":77105}},{"uid":"fbc860b950425b6d","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/fbc860b950425b6d","status":"passed","time":{"start":1728131143955,"stop":1728131221201,"duration":77246}},{"uid":"63cb21b2eeee43fa","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/63cb21b2eeee43fa","status":"passed","time":{"start":1728306076097,"stop":1728306153486,"duration":77389}},{"uid":"96c849407a403ea4","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/96c849407a403ea4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728262029283,"stop":1728262029283,"duration":0}},{"uid":"3fb0977b94bc71b8","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/3fb0977b94bc71b8","status":"passed","time":{"start":1728127463021,"stop":1728127540424,"duration":77403}},{"uid":"f2df92455d6f740c","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/f2df92455d6f740c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728175881088,"stop":1728175881088,"duration":0}},{"uid":"5567a68f2495b22","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/5567a68f2495b22","status":"passed","time":{"start":1728065042199,"stop":1728065119669,"duration":77470}},{"uid":"12eafdd88c274b3d","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/12eafdd88c274b3d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728129642514,"stop":1728129642514,"duration":0}},{"uid":"b6b2bff4ac7fd88","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/b6b2bff4ac7fd88","status":"passed","time":{"start":1728131143955,"stop":1728131221201,"duration":77246}},{"uid":"7de0c85223533e97","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/7de0c85223533e97","status":"passed","time":{"start":1728123518456,"stop":1728123595733,"duration":77277}},{"uid":"acc618f376af6fab","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/acc618f376af6fab","status":"passed","time":{"start":1728123252791,"stop":1728123329971,"duration":77180}},{"uid":"44c3c2ac00ed5b01","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/44c3c2ac00ed5b01","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728120761754,"stop":1728120761754,"duration":0}},{"uid":"6e66a63164b4ea08","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/6e66a63164b4ea08","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728120470343,"stop":1728120470343,"duration":0}},{"uid":"d502395dacdace97","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/d502395dacdace97","status":"passed","time":{"start":1728089139859,"stop":1728089221589,"duration":81730}},{"uid":"e93845f9be2947fe","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/e93845f9be2947fe","status":"passed","time":{"start":1728081099064,"stop":1728081177406,"duration":78342}},{"uid":"83a2aeb544f80155","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/83a2aeb544f80155","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728074444844,"stop":1728074444844,"duration":0}}]},"tags":["anyio","mikes_testbench","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"173d11a297d5fd0.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}