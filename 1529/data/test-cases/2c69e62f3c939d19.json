{"uid":"2c69e62f3c939d19","name":"test_many_args","fullName":"tests.hil.tests.rpc.test_rpc#test_many_args","historyId":"b16b878450b332b60ff5f4528b53d266","time":{"start":1727944206964,"stop":1727944212362,"duration":5398},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff9306ab90>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff93033f10>\ndevice = <golioth.golioth.Device object at 0xffff9303fa50>\n\n    async def test_many_args(board, device):\n>       await device.rpc.no_response(1,2,3,4,5,6,7,8,9)\n\ntests/hil/tests/rpc/test_rpc.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff9306ab90>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727944130255,"stop":1727944130255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727944130256,"stop":1727944130257,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727944130258,"stop":1727944130259,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727944130258,"stop":1727944130258,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727944130260,"stop":1727944130260,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727944130261,"stop":1727944130261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727944130262,"stop":1727944130262,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727944130263,"stop":1727944130263,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727944130264,"stop":1727944130264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727944130265,"stop":1727944130265,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727944130265,"stop":1727944130265,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727944130266,"stop":1727944130266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727944130267,"stop":1727944130750,"duration":483},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727944130751,"stop":1727944182205,"duration":51454},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727944182206,"stop":1727944183088,"duration":882},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727944183089,"stop":1727944193766,"duration":10677},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727944285141,"stop":1727944285141,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727944285143,"stop":1727944285611,"duration":468},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727944285613,"stop":1727944285615,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727944285617,"stop":1727944285619,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"15eceaf614a8"},{"name":"thread","value":"252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":58,"unknown":0,"total":61},"items":[{"uid":"6f30c331887b259f","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/6f30c331887b259f","status":"passed","time":{"start":1727943503800,"stop":1727943505015,"duration":1215}},{"uid":"8fcd36a0740651c9","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/8fcd36a0740651c9","status":"passed","time":{"start":1727831672379,"stop":1727831673396,"duration":1017}},{"uid":"45893c46d2f90eff","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/45893c46d2f90eff","status":"passed","time":{"start":1727926037986,"stop":1727926039208,"duration":1222}},{"uid":"213257858d672f8e","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/213257858d672f8e","status":"passed","time":{"start":1727926037986,"stop":1727926039208,"duration":1222}},{"uid":"593937160604edff","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/593937160604edff","status":"passed","time":{"start":1727915707138,"stop":1727915708048,"duration":910}},{"uid":"b38681e7c3810749","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/b38681e7c3810749","status":"passed","time":{"start":1727906950029,"stop":1727906951251,"duration":1222}},{"uid":"f408a36d618896d3","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/f408a36d618896d3","status":"passed","time":{"start":1727831672379,"stop":1727831673396,"duration":1017}},{"uid":"657fd66c9bc47672","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/657fd66c9bc47672","status":"passed","time":{"start":1727829220376,"stop":1727829221620,"duration":1244}},{"uid":"6cea9ff57e1f4b12","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/6cea9ff57e1f4b12","status":"passed","time":{"start":1727801669220,"stop":1727801670720,"duration":1500}},{"uid":"64a656de683a5a3c","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/64a656de683a5a3c","status":"passed","time":{"start":1727813246945,"stop":1727813248447,"duration":1502}},{"uid":"e207fca0965ca174","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/e207fca0965ca174","status":"passed","time":{"start":1727795501627,"stop":1727795502540,"duration":913}},{"uid":"985b1bfecf99b33b","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/985b1bfecf99b33b","status":"passed","time":{"start":1727809408517,"stop":1727809409531,"duration":1014}},{"uid":"5860f3a5efce594d","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/5860f3a5efce594d","status":"passed","time":{"start":1727805518608,"stop":1727805519830,"duration":1222}},{"uid":"2b9ab9cede6cbe56","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/2b9ab9cede6cbe56","status":"passed","time":{"start":1727795501627,"stop":1727795502540,"duration":913}},{"uid":"e6a43f979ba6577a","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/e6a43f979ba6577a","status":"passed","time":{"start":1727794587164,"stop":1727794590642,"duration":3478}},{"uid":"2b5caab02e8f3aad","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/2b5caab02e8f3aad","status":"passed","time":{"start":1727786119795,"stop":1727786121296,"duration":1501}},{"uid":"3c5f8ae09a52703d","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/3c5f8ae09a52703d","status":"passed","time":{"start":1727782335407,"stop":1727782336628,"duration":1221}},{"uid":"8dced0e7c25753f3","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/8dced0e7c25753f3","status":"passed","time":{"start":1727780630453,"stop":1727780631986,"duration":1533}},{"uid":"b35faafd37379331","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/b35faafd37379331","status":"passed","time":{"start":1727778835761,"stop":1727778837012,"duration":1251}},{"uid":"1884668772c59a8d","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/1884668772c59a8d","status":"passed","time":{"start":1727775351530,"stop":1727775352778,"duration":1248}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"2c69e62f3c939d19.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}