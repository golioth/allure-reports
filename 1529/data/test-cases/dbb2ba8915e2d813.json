{"uid":"dbb2ba8915e2d813","name":"test_object_return","fullName":"tests.hil.tests.rpc.test_rpc#test_object_return","historyId":"7bf2975296763950b7fd0c24fc890a63","time":{"start":1727945671397,"stop":1727945676771,"duration":5374},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff85ed40d0>\nmethod = 'object_return_type', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff85d23590>\ndevice = <golioth.golioth.Device object at 0xffff85d47b10>\n\n    async def test_object_return(board, device):\n>       rsp = await device.rpc.object_return_type()\n\ntests/hil/tests/rpc/test_rpc.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff85ed40d0>\nmethod = 'object_return_type', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727945612794,"stop":1727945612794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727945612795,"stop":1727945612795,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727945612796,"stop":1727945612796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727945612796,"stop":1727945612796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727945612797,"stop":1727945612797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727945612797,"stop":1727945612797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727945612798,"stop":1727945612798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727945612798,"stop":1727945612798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727945612799,"stop":1727945612799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727945612800,"stop":1727945612800,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727945612801,"stop":1727945612801,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727945612801,"stop":1727945612801,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727945612802,"stop":1727945613324,"duration":522},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727945613325,"stop":1727945655299,"duration":41974},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727945655301,"stop":1727945656706,"duration":1405},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727945656707,"stop":1727945663330,"duration":6623},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727945740022,"stop":1727945740022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727945740025,"stop":1727945740513,"duration":488},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727945740515,"stop":1727945740516,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727945740519,"stop":1727945740521,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"cf8ee202ffab"},{"name":"thread","value":"250-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":32,"skipped":0,"passed":32,"unknown":0,"total":64},"items":[{"uid":"196f435a0356e17e","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/196f435a0356e17e","status":"passed","time":{"start":1727945454777,"stop":1727945455268,"duration":491}},{"uid":"fd208b7f070e654e","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/fd208b7f070e654e","status":"passed","time":{"start":1727942298824,"stop":1727942299313,"duration":489}},{"uid":"c4d9964e612d2ecd","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/c4d9964e612d2ecd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727932351057,"stop":1727932351057,"duration":0}},{"uid":"3b8ce3d42662176e","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/3b8ce3d42662176e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727926757441,"stop":1727926757441,"duration":0}},{"uid":"8ed384d43ff46c86","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/8ed384d43ff46c86","status":"passed","time":{"start":1727916423469,"stop":1727916424205,"duration":736}},{"uid":"5ebcac079c4517b2","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/5ebcac079c4517b2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727907433780,"stop":1727907433780,"duration":0}},{"uid":"c8f77ac6fdc83a1f","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/c8f77ac6fdc83a1f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727832700347,"stop":1727832700347,"duration":0}},{"uid":"35e1ec3662e15d09","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/35e1ec3662e15d09","status":"passed","time":{"start":1727830007680,"stop":1727830008423,"duration":743}},{"uid":"ac92338bc3b384eb","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/ac92338bc3b384eb","status":"passed","time":{"start":1727812618388,"stop":1727812618878,"duration":490}},{"uid":"9e1e5ddb35d1ba13","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/9e1e5ddb35d1ba13","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727814823847,"stop":1727814823847,"duration":0}},{"uid":"739de8c6a413bc90","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/739de8c6a413bc90","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727811311160,"stop":1727811311160,"duration":0}},{"uid":"a76a4790d1e0d750","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/a76a4790d1e0d750","status":"passed","time":{"start":1727810089307,"stop":1727810090048,"duration":741}},{"uid":"f4a285cbd6e8872c","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/f4a285cbd6e8872c","status":"passed","time":{"start":1727806325526,"stop":1727806326270,"duration":744}},{"uid":"95f1b0a4a2856076","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/95f1b0a4a2856076","status":"passed","time":{"start":1727797447702,"stop":1727797448445,"duration":743}},{"uid":"e6d68e42e080d1c7","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/e6d68e42e080d1c7","status":"passed","time":{"start":1727795492165,"stop":1727795492673,"duration":508}},{"uid":"8cb6b8497734e89b","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/8cb6b8497734e89b","status":"passed","time":{"start":1727788186536,"stop":1727788187277,"duration":741}},{"uid":"7e65e3641ab53de9","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/7e65e3641ab53de9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784131583,"stop":1727784131583,"duration":0}},{"uid":"7e7037e0b880dc58","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/7e7037e0b880dc58","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727782685318,"stop":1727782685318,"duration":0}},{"uid":"4e8df0ac7c9d71f6","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/4e8df0ac7c9d71f6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727778225577,"stop":1727778225577,"duration":0}},{"uid":"911a32855a43d908","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/911a32855a43d908","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727776553907,"stop":1727776553907,"duration":0}}]},"tags":["anyio","mikes_testbench","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"dbb2ba8915e2d813.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}