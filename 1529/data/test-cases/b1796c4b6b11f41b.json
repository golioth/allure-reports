{"uid":"b1796c4b6b11f41b","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"efe21cbbb5934f0489b65e4b580675bb","time":{"start":1727944678689,"stop":1727944701251,"duration":22562},"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <rak5010.RAK5010 object at 0xffffa457b750>\ndevice = <golioth.golioth.Device object at 0xffffa4579b90>\nproject = <golioth.golioth.Project object at 0xffffa44b2710>\nreleases = {'test_blocks': Release <66fe57d22860a8ee0e301a0a, release_tags=[], device_tags=['66fe57d12860a8ee0e301a07'], artifact..., release_tags=[], device_tags=['66fe57d12860a8ee0e301a07'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"board_name","time":{"start":1727944607921,"stop":1727944607922,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1727944607921,"stop":1727944607921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727944607922,"stop":1727944607922,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727944607923,"stop":1727944607923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727944607924,"stop":1727944607924,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727944607925,"stop":1727944607925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727944607925,"stop":1727944607925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727944607926,"stop":1727944607926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727944607926,"stop":1727944607926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727944607927,"stop":1727944607927,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727944607927,"stop":1727944607927,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727944607928,"stop":1727944607928,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727944607928,"stop":1727944626939,"duration":19011},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727944626940,"stop":1727944627411,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727944627412,"stop":1727944628256,"duration":844},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727944628257,"stop":1727944656451,"duration":28194},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727944656452,"stop":1727944656974,"duration":522},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727944656975,"stop":1727944657830,"duration":855},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727944657831,"stop":1727944659364,"duration":1533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727944678686,"stop":1727944678687,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <rak5010.RAK5010 object at 0xffffa457b750>\ndevice = <golioth.golioth.Device object at 0xffffa4579b90>\nproject = <golioth.golioth.Project object at 0xffffa44b2710>\nreleases = {'test_blocks': Release <66fe57d22860a8ee0e301a0a, release_tags=[], device_tags=['66fe57d12860a8ee0e301a07'], artifact..., release_tags=[], device_tags=['66fe57d12860a8ee0e301a07'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"78e679b340460dcb","name":"stdout","source":"78e679b340460dcb.txt","type":"text/plain","size":1612}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727944701419,"stop":1727944702299,"duration":880},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727944702301,"stop":1727944703778,"duration":1477},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727944703780,"stop":1727944704535,"duration":755},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727944704537,"stop":1727944704537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727944704539,"stop":1727944704539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727944704541,"stop":1727944704977,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727944704980,"stop":1727944704980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727944704981,"stop":1727944704990,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"125efb6ea352"},{"name":"thread","value":"262-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":7,"skipped":0,"passed":50,"unknown":0,"total":62},"items":[{"uid":"4aa19b82d9c52d3c","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/4aa19b82d9c52d3c","status":"passed","time":{"start":1727944625772,"stop":1727944709018,"duration":83246}},{"uid":"dc98f32da59a1484","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/dc98f32da59a1484","status":"passed","time":{"start":1727943202276,"stop":1727943285634,"duration":83358}},{"uid":"e60013329034c595","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/e60013329034c595","status":"passed","time":{"start":1727933162139,"stop":1727933244445,"duration":82306}},{"uid":"28ce4f6f26f963eb","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/28ce4f6f26f963eb","status":"passed","time":{"start":1727925969237,"stop":1727926051262,"duration":82025}},{"uid":"f3779a15b5a4863a","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/f3779a15b5a4863a","status":"passed","time":{"start":1727915638716,"stop":1727915722772,"duration":84056}},{"uid":"a959c8395d7574b","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/a959c8395d7574b","status":"passed","time":{"start":1727906690664,"stop":1727906777762,"duration":87098}},{"uid":"33088ffd61ac7c37","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/33088ffd61ac7c37","status":"passed","time":{"start":1727832479400,"stop":1727832561250,"duration":81850}},{"uid":"2ca803f0c09c1068","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/2ca803f0c09c1068","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'","time":{"start":1727829814075,"stop":1727829814075,"duration":0}},{"uid":"aefe8476c61edf4c","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/aefe8476c61edf4c","status":"passed","time":{"start":1727802216995,"stop":1727802299083,"duration":82088}},{"uid":"5751097d5c27d0b7","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/5751097d5c27d0b7","status":"passed","time":{"start":1727815017412,"stop":1727815099837,"duration":82425}},{"uid":"b709a56fbeda466e","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/b709a56fbeda466e","status":"passed","time":{"start":1727811578160,"stop":1727811660288,"duration":82128}},{"uid":"9776763734590925","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/9776763734590925","status":"passed","time":{"start":1727810820243,"stop":1727810903646,"duration":83403}},{"uid":"8190ed9ee0fbfca3","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/8190ed9ee0fbfca3","status":"passed","time":{"start":1727806145104,"stop":1727806227318,"duration":82214}},{"uid":"59c292ba02db324f","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/59c292ba02db324f","status":"passed","time":{"start":1727796608443,"stop":1727796691668,"duration":83225}},{"uid":"a79e5862be8cb137","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/a79e5862be8cb137","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727795047157,"stop":1727795132615,"duration":85458}},{"uid":"a2c686958b701786","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/a2c686958b701786","status":"passed","time":{"start":1727789837436,"stop":1727789919745,"duration":82309}},{"uid":"bbcbd7daa952be20","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/bbcbd7daa952be20","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727785239741,"stop":1727785239741,"duration":0}},{"uid":"54d78cb92cc33bdb","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/54d78cb92cc33bdb","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784233124,"stop":1727784233124,"duration":0}},{"uid":"409f136e3bba3601","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/409f136e3bba3601","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727779830649,"stop":1727779830649,"duration":0}},{"uid":"7fc33f4ccfa9e6de","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/7fc33f4ccfa9e6de","status":"passed","time":{"start":1727776631952,"stop":1727776714293,"duration":82341}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"b1796c4b6b11f41b.json","parameterValues":["'rak5010'","'zephyr'"]}