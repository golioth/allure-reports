{"uid":"5b5e19435fd80ba7","name":"test_set_int_range_out_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_out_min","historyId":"c2044a44affa44a6054bb6d6ddcfd33a","time":{"start":1727944402390,"stop":1727944415243,"duration":12853},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9f32a650>\ndevice = <golioth.golioth.Device object at 0xffff9f2a2bd0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff9f2a2bd0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727944288901,"stop":1727944288902,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727944288902,"stop":1727944288902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727944288903,"stop":1727944288903,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727944288904,"stop":1727944288904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727944288905,"stop":1727944288906,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727944288905,"stop":1727944288905,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727944288906,"stop":1727944288907,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727944288907,"stop":1727944288907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727944288908,"stop":1727944288908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727944288909,"stop":1727944288910,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727944288909,"stop":1727944288909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727944288910,"stop":1727944289351,"duration":441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727944288910,"stop":1727944288910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727944289352,"stop":1727944340674,"duration":51322},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727944340676,"stop":1727944341649,"duration":973},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727944341649,"stop":1727944358007,"duration":16358},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9f32a650>\ndevice = <golioth.golioth.Device object at 0xffff9f2a2bd0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff9f2a2bd0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"f4edbacfab3df2a9","name":"stdout","source":"f4edbacfab3df2a9.txt","type":"text/plain","size":1354}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727944517996,"stop":1727944517996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727944518001,"stop":1727944518516,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727944518518,"stop":1727944518520,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727944518522,"stop":1727944518524,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"15eceaf614a8"},{"name":"thread","value":"260-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":1,"skipped":0,"passed":55,"unknown":0,"total":61},"items":[{"uid":"9458c35212fb7b34","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/9458c35212fb7b34","status":"passed","time":{"start":1727943667026,"stop":1727943681146,"duration":14120}},{"uid":"187c0ef31de4f8f3","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/187c0ef31de4f8f3","status":"passed","time":{"start":1727831833828,"stop":1727831847476,"duration":13648}},{"uid":"351affad0dc3e7ce","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/351affad0dc3e7ce","status":"passed","time":{"start":1727926207051,"stop":1727926220762,"duration":13711}},{"uid":"7b3d2fe3a7ffc938","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/7b3d2fe3a7ffc938","status":"passed","time":{"start":1727926207051,"stop":1727926220762,"duration":13711}},{"uid":"76683b52c2f46ba4","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/76683b52c2f46ba4","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1727915825945,"stop":1727915825945,"duration":0}},{"uid":"af9816115ea21267","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/af9816115ea21267","status":"passed","time":{"start":1727907122167,"stop":1727907136292,"duration":14125}},{"uid":"3e08f88e2034ce56","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/3e08f88e2034ce56","status":"passed","time":{"start":1727831833828,"stop":1727831847476,"duration":13648}},{"uid":"e77760d0e562d6f0","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/e77760d0e562d6f0","status":"passed","time":{"start":1727829382400,"stop":1727829396724,"duration":14324}},{"uid":"15ce1751046fd847","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/15ce1751046fd847","status":"passed","time":{"start":1727801829990,"stop":1727801843367,"duration":13377}},{"uid":"3739b1dd8bf6bce4","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/3739b1dd8bf6bce4","status":"passed","time":{"start":1727813393758,"stop":1727813406626,"duration":12868}},{"uid":"cbfffe9da6792d21","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/cbfffe9da6792d21","status":"passed","time":{"start":1727795680834,"stop":1727795694541,"duration":13707}},{"uid":"b4b0a685913ca51d","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/b4b0a685913ca51d","status":"passed","time":{"start":1727809577685,"stop":1727809591498,"duration":13813}},{"uid":"456e2d0e854ed8e3","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/456e2d0e854ed8e3","status":"passed","time":{"start":1727805695148,"stop":1727805709577,"duration":14429}},{"uid":"4695fecf877ce218","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/4695fecf877ce218","status":"passed","time":{"start":1727795680834,"stop":1727795694541,"duration":13707}},{"uid":"f96f70806b46fd45","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/f96f70806b46fd45","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1727794808329,"stop":1727794821694,"duration":13365}},{"uid":"8e0d753be2203b4a","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/8e0d753be2203b4a","status":"passed","time":{"start":1727786270475,"stop":1727786283348,"duration":12873}},{"uid":"60ce6ef96434105d","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/60ce6ef96434105d","status":"passed","time":{"start":1727782499450,"stop":1727782512851,"duration":13401}},{"uid":"25c2675ad8808f12","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/25c2675ad8808f12","status":"passed","time":{"start":1727780777253,"stop":1727780790105,"duration":12852}},{"uid":"f11f067015225ab7","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/f11f067015225ab7","status":"passed","time":{"start":1727778984096,"stop":1727778997117,"duration":13021}},{"uid":"7be1656f83b79e5f","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/7be1656f83b79e5f","status":"passed","time":{"start":1727775499771,"stop":1727775512817,"duration":13046}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"5b5e19435fd80ba7.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}