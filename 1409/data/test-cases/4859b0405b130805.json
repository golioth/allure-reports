{"uid":"4859b0405b130805","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"728c1ad8cfe5fc9c60fb1445998f2048","time":{"start":1727054854393,"stop":1727054878177,"duration":23784},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 1 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff8204d9d0>\ndevice = <golioth.golioth.Device object at 0xffff81ec4f50>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 1 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"hil_board","time":{"start":1727054824368,"stop":1727054824368,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"add_allure_report_parent_suite","time":{"start":1727054824369,"stop":1727054824369,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1727054824369,"stop":1727054824370,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727054824370,"stop":1727054824370,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727054824370,"stop":1727054824371,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727054824371,"stop":1727054824372,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"runner_name","time":{"start":1727054824371,"stop":1727054824371,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1727054824372,"stop":1727054824375,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1727054824372,"stop":1727054824372,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727054824376,"stop":1727054824376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727054824376,"stop":1727054824377,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727054824377,"stop":1727054824962,"duration":585},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727054824963,"stop":1727054825946,"duration":983},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"add_allure_report_device_and_platform","time":{"start":1727054825947,"stop":1727054825947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1727054825948,"stop":1727054853309,"duration":27361},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1727054853310,"stop":1727054854387,"duration":1077},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 1 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff8204d9d0>\ndevice = <golioth.golioth.Device object at 0xffff81ec4f50>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 1 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"c548dcb1f891b55c","name":"log","source":"c548dcb1f891b55c.txt","type":"text/plain","size":18802}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1727054878349,"stop":1727054878389,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727054878392,"stop":1727054879034,"duration":642},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727054879036,"stop":1727054879038,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1727054879043,"stop":1727054879043,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"aacd372cb550"},{"name":"thread","value":"929-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c5783e5dd9e62cb","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 1 == 3","time":{"start":1727054794767,"stop":1727054820008,"duration":25241}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":10,"unknown":0,"total":12},"items":[{"uid":"8da2c89b3da9dd07","reportUrl":"https://golioth.github.io/allure-reports/1408//#testresult/8da2c89b3da9dd07","status":"passed","time":{"start":1726968695839,"stop":1726968724140,"duration":28301}},{"uid":"4b155a570d2b76ab","reportUrl":"https://golioth.github.io/allure-reports/1407//#testresult/4b155a570d2b76ab","status":"passed","time":{"start":1726884303326,"stop":1726884328598,"duration":25272}},{"uid":"fb74fd28eb8e9c70","reportUrl":"https://golioth.github.io/allure-reports/1406//#testresult/fb74fd28eb8e9c70","status":"passed","time":{"start":1726881596075,"stop":1726881628917,"duration":32842}},{"uid":"265cda1c7f4cf89f","reportUrl":"https://golioth.github.io/allure-reports/1405//#testresult/265cda1c7f4cf89f","status":"passed","time":{"start":1726873599950,"stop":1726873622104,"duration":22154}},{"uid":"a2f7851462d7a4c6","reportUrl":"https://golioth.github.io/allure-reports/1404//#testresult/a2f7851462d7a4c6","status":"passed","time":{"start":1726870132059,"stop":1726870157625,"duration":25566}},{"uid":"301c0b957639a7c8","reportUrl":"https://golioth.github.io/allure-reports/1403//#testresult/301c0b957639a7c8","status":"passed","time":{"start":1726867589961,"stop":1726867614318,"duration":24357}},{"uid":"86dae6aaa7d08372","reportUrl":"https://golioth.github.io/allure-reports/1402//#testresult/86dae6aaa7d08372","status":"passed","time":{"start":1726864780107,"stop":1726864802308,"duration":22201}},{"uid":"877dc2babd681d77","reportUrl":"https://golioth.github.io/allure-reports/1400//#testresult/877dc2babd681d77","status":"passed","time":{"start":1726857029033,"stop":1726857052011,"duration":22978}},{"uid":"c4290aa5219b1922","reportUrl":"https://golioth.github.io/allure-reports/1396//#testresult/c4290aa5219b1922","status":"passed","time":{"start":1726849142099,"stop":1726849165270,"duration":23171}},{"uid":"ff31f4184bee9569","reportUrl":"https://golioth.github.io/allure-reports/1391//#testresult/ff31f4184bee9569","status":"passed","time":{"start":1726800656308,"stop":1726800701692,"duration":45384}},{"uid":"c4bd12c236fb4e1e","reportUrl":"https://golioth.github.io/allure-reports/1388//#testresult/c4bd12c236fb4e1e","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1726791868284,"stop":1726791981106,"duration":112822}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"4859b0405b130805.json","parameterValues":["'nrf9160dk'","'zephyr'"]}