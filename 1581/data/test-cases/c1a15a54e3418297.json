{"uid":"c1a15a54e3418297","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1728068795670,"stop":1728068825053,"duration":29383},"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb43bc7d0>\ndevice = <golioth.golioth.Device object at 0xffffb4410390>\nproject = <golioth.golioth.Project object at 0xffffb55b5f90>\nreleases = {'test_blocks': Release <67003cab1b3c084061cd0f35, release_tags=[], device_tags=['67003ca91b3c084061cd0f30'], artifact..., release_tags=[], device_tags=['67003ca91b3c084061cd0f30'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728068710336,"stop":1728068710336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728068710337,"stop":1728068710337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728068710338,"stop":1728068710339,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728068710338,"stop":1728068710338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728068710339,"stop":1728068710339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728068710340,"stop":1728068710340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728068710340,"stop":1728068710341,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728068710341,"stop":1728068710341,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728068710341,"stop":1728068710342,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728068710342,"stop":1728068710343,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728068710343,"stop":1728068710343,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728068710344,"stop":1728068710344,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728068710345,"stop":1728068760197,"duration":49852},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728068760199,"stop":1728068760698,"duration":499},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728068760699,"stop":1728068761627,"duration":928},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728068761628,"stop":1728068776409,"duration":14781},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1728068776410,"stop":1728068776991,"duration":581},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1728068776992,"stop":1728068777815,"duration":823},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1728068777815,"stop":1728068779557,"duration":1742},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1728068795667,"stop":1728068795668,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb43bc7d0>\ndevice = <golioth.golioth.Device object at 0xffffb4410390>\nproject = <golioth.golioth.Project object at 0xffffb55b5f90>\nreleases = {'test_blocks': Release <67003cab1b3c084061cd0f35, release_tags=[], device_tags=['67003ca91b3c084061cd0f30'], artifact..., release_tags=[], device_tags=['67003ca91b3c084061cd0f30'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"65eb4425177a4db4","name":"stdout","source":"65eb4425177a4db4.txt","type":"text/plain","size":1355}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1728068825250,"stop":1728068826304,"duration":1054},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1728068826306,"stop":1728068827969,"duration":1663},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1728068827971,"stop":1728068828798,"duration":827},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1728068828800,"stop":1728068828800,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728068828802,"stop":1728068828802,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728068828804,"stop":1728068829238,"duration":434},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728068829240,"stop":1728068829240,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728068829242,"stop":1728068829249,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"fa5049f443a0"},{"name":"thread","value":"246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":6,"skipped":0,"passed":76,"unknown":0,"total":95},"items":[{"uid":"c60f8a3c122e56f9","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/c60f8a3c122e56f9","status":"passed","time":{"start":1728064989361,"stop":1728065070042,"duration":80681}},{"uid":"2cd2842131c02929","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/2cd2842131c02929","status":"passed","time":{"start":1728057183468,"stop":1728057264884,"duration":81416}},{"uid":"4120b4ce5bb92767","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/4120b4ce5bb92767","status":"passed","time":{"start":1728058826610,"stop":1728058907184,"duration":80574}},{"uid":"f37995452c0a6dc5","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/f37995452c0a6dc5","status":"passed","time":{"start":1728053372609,"stop":1728053453326,"duration":80717}},{"uid":"de304f2599639e11","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/de304f2599639e11","status":"passed","time":{"start":1728055156203,"stop":1728055236322,"duration":80119}},{"uid":"28a17a95240c0b08","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/28a17a95240c0b08","status":"passed","time":{"start":1728053372609,"stop":1728053453326,"duration":80717}},{"uid":"c0cfac9d5c040ee1","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/c0cfac9d5c040ee1","status":"passed","time":{"start":1728048420632,"stop":1728048499813,"duration":79181}},{"uid":"3a6b89fa933dfcde","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/3a6b89fa933dfcde","status":"failed","statusDetails":"AssertionError: assert 6 == 5\n +  where 6 = int('6')","time":{"start":1728033687396,"stop":1728033738130,"duration":50734}},{"uid":"53eff0ed6a88ec1d","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/53eff0ed6a88ec1d","status":"passed","time":{"start":1728026741162,"stop":1728026820811,"duration":79649}},{"uid":"8d964943883ab7e6","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/8d964943883ab7e6","status":"failed","statusDetails":"AssertionError: assert 8 == 7\n +  where 8 = int('8')","time":{"start":1728025118317,"stop":1728025183768,"duration":65451}},{"uid":"8bdd7f07c0f6ec72","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/8bdd7f07c0f6ec72","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728023297965,"stop":1728023297965,"duration":0}},{"uid":"29dc69bf5cba29ce","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/29dc69bf5cba29ce","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728020967155,"stop":1728020967155,"duration":0}},{"uid":"e4bfa0151ed889ba","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/e4bfa0151ed889ba","status":"passed","time":{"start":1728001882875,"stop":1728001964124,"duration":81249}},{"uid":"97515c27ae5bd3f6","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/97515c27ae5bd3f6","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727989427007,"stop":1727989447692,"duration":20685}},{"uid":"92fda0dffd8f29a8","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/92fda0dffd8f29a8","status":"passed","time":{"start":1727989163708,"stop":1727989244344,"duration":80636}},{"uid":"f11976e39406463c","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/f11976e39406463c","status":"failed","statusDetails":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","time":{"start":1727986174749,"stop":1727986234738,"duration":59989}},{"uid":"27da25a1397c040a","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/27da25a1397c040a","status":"passed","time":{"start":1727983716377,"stop":1727983797464,"duration":81087}},{"uid":"4c3fbcf33e7621c9","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/4c3fbcf33e7621c9","status":"passed","time":{"start":1727976081237,"stop":1727976162068,"duration":80831}},{"uid":"60796132b6929e25","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/60796132b6929e25","status":"passed","time":{"start":1727964640423,"stop":1727964721274,"duration":80851}},{"uid":"92f169d1c8ef51a9","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/92f169d1c8ef51a9","status":"passed","time":{"start":1727972354284,"stop":1727972435104,"duration":80820}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"c1a15a54e3418297.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}