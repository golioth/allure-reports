{"uid":"869b0a0ead451be3","name":"test_float_return","fullName":"tests.hil.tests.rpc.test_rpc#test_float_return","historyId":"01cfb64ecfcd6cde7d12f5bcbf88f897","time":{"start":1728316322539,"stop":1728316327899,"duration":5360},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffaaba62d0>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffaabba750>\ndevice = <golioth.golioth.Device object at 0xffffaaba4810>\n\n    async def test_float_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"float\")\n\ntests/hil/tests/rpc/test_rpc.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffaaba62d0>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728316244026,"stop":1728316244026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728316244027,"stop":1728316244027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728316244028,"stop":1728316244028,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728316244029,"stop":1728316244029,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728316244030,"stop":1728316244031,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728316244030,"stop":1728316244030,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728316244031,"stop":1728316244032,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728316244032,"stop":1728316244032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728316244033,"stop":1728316244034,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728316244033,"stop":1728316244033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728316244034,"stop":1728316244034,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728316244035,"stop":1728316244035,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728316244036,"stop":1728316244528,"duration":492},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728316244529,"stop":1728316296208,"duration":51679},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728316296210,"stop":1728316297204,"duration":994},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728316297205,"stop":1728316305877,"duration":8672},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728316391924,"stop":1728316391925,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728316391930,"stop":1728316392417,"duration":487},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728316392419,"stop":1728316392420,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728316392422,"stop":1728316392425,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"01d3152ab9ba"},{"name":"thread","value":"251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":101,"unknown":0,"total":106},"items":[{"uid":"fab72015c3aff491","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/fab72015c3aff491","status":"passed","time":{"start":1728312460752,"stop":1728312461971,"duration":1219}},{"uid":"2a0de4fb5843ba64","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/2a0de4fb5843ba64","status":"passed","time":{"start":1728125468733,"stop":1728125470204,"duration":1471}},{"uid":"dcfa766d84817c3","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/dcfa766d84817c3","status":"passed","time":{"start":1728122616895,"stop":1728122618142,"duration":1247}},{"uid":"e5c39978b495b4a6","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/e5c39978b495b4a6","status":"passed","time":{"start":1728261345616,"stop":1728261346636,"duration":1020}},{"uid":"22d8bca4eeb9b0bb","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/22d8bca4eeb9b0bb","status":"passed","time":{"start":1728123875050,"stop":1728123876517,"duration":1467}},{"uid":"6934e63780de7057","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/6934e63780de7057","status":"passed","time":{"start":1728175031918,"stop":1728175033840,"duration":1922}},{"uid":"a21cccb15a94161e","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/a21cccb15a94161e","status":"passed","time":{"start":1728064314682,"stop":1728064315910,"duration":1228}},{"uid":"58d1c41961bf0786","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/58d1c41961bf0786","status":"passed","time":{"start":1728128407082,"stop":1728128408060,"duration":978}},{"uid":"36d3898f9fc9c9f4","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/36d3898f9fc9c9f4","status":"passed","time":{"start":1728125468733,"stop":1728125470204,"duration":1471}},{"uid":"1bb1a62cf53de548","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/1bb1a62cf53de548","status":"passed","time":{"start":1728122616895,"stop":1728122618142,"duration":1247}},{"uid":"d6c79179dcf2fe9d","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/d6c79179dcf2fe9d","status":"passed","time":{"start":1728121737261,"stop":1728121738254,"duration":993}},{"uid":"cb6fdeeff0f296f5","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/cb6fdeeff0f296f5","status":"passed","time":{"start":1728058148214,"stop":1728058149684,"duration":1470}},{"uid":"24cfd54ecdab803b","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/24cfd54ecdab803b","status":"passed","time":{"start":1728026061549,"stop":1728026062806,"duration":1257}},{"uid":"604bb1750044826b","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/604bb1750044826b","status":"passed","time":{"start":1728088412390,"stop":1728088414878,"duration":2488}},{"uid":"c4e90d422f4787a8","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/c4e90d422f4787a8","status":"passed","time":{"start":1728080482525,"stop":1728080483539,"duration":1014}},{"uid":"48fab1e368646360","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/48fab1e368646360","status":"passed","time":{"start":1728073394429,"stop":1728073395899,"duration":1470}},{"uid":"1376995601088b5a","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/1376995601088b5a","status":"passed","time":{"start":1728069705607,"stop":1728069707077,"duration":1470}},{"uid":"617b1980e8347ab3","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/617b1980e8347ab3","status":"passed","time":{"start":1728065953104,"stop":1728065954323,"duration":1219}},{"uid":"842b0d2e9be2b77f","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/842b0d2e9be2b77f","status":"passed","time":{"start":1728058148214,"stop":1728058149684,"duration":1470}},{"uid":"e4bea4ebaef78839","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/e4bea4ebaef78839","status":"passed","time":{"start":1728026061549,"stop":1728026062806,"duration":1257}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"869b0a0ead451be3.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}