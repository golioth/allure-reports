{"uid":"cb52e46cb8ce7fc9","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"c24c9ea14e94690f05bf86748c5128c2","time":{"start":1728316473001,"stop":1728316487463,"duration":14462},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa9d9a710>\ndevice = <golioth.golioth.Device object at 0xffffa9dc3190>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa9dc3190>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728316395672,"stop":1728316395672,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728316395673,"stop":1728316395673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728316395674,"stop":1728316395674,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728316395675,"stop":1728316395675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728316395676,"stop":1728316395676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728316395677,"stop":1728316395677,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728316395677,"stop":1728316395677,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728316395678,"stop":1728316395678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728316395678,"stop":1728316395678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728316395679,"stop":1728316395679,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728316395679,"stop":1728316395680,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728316395680,"stop":1728316396072,"duration":392},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728316395680,"stop":1728316395680,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728316396073,"stop":1728316447596,"duration":51523},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728316447598,"stop":1728316448617,"duration":1019},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728316448618,"stop":1728316466512,"duration":17894},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa9d9a710>\ndevice = <golioth.golioth.Device object at 0xffffa9dc3190>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa9dc3190>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"169de0c45cc4292c","name":"stdout","source":"169de0c45cc4292c.txt","type":"text/plain","size":3967}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728316645033,"stop":1728316645033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728316645039,"stop":1728316645480,"duration":441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728316645482,"stop":1728316645483,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728316645485,"stop":1728316645488,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"01d3152ab9ba"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":2,"skipped":0,"passed":74,"unknown":0,"total":106},"items":[{"uid":"5cfe39ac959ba03e","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/5cfe39ac959ba03e","status":"passed","time":{"start":1728312563382,"stop":1728312576703,"duration":13321}},{"uid":"b3b4d10a2157c309","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/b3b4d10a2157c309","status":"passed","time":{"start":1728125572449,"stop":1728125585315,"duration":12866}},{"uid":"cb62aff39e5d954d","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/cb62aff39e5d954d","status":"passed","time":{"start":1728122719264,"stop":1728122732101,"duration":12837}},{"uid":"16fe9eda78f0b9ed","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/16fe9eda78f0b9ed","status":"passed","time":{"start":1728261466077,"stop":1728261479958,"duration":13881}},{"uid":"2e4b3ef69dd28d96","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/2e4b3ef69dd28d96","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728123979476,"stop":1728123992567,"duration":13091}},{"uid":"9783257498d17f48","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/9783257498d17f48","status":"passed","time":{"start":1728175153862,"stop":1728175169216,"duration":15354}},{"uid":"1d210c36edb75a9f","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/1d210c36edb75a9f","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728064420267,"stop":1728064433646,"duration":13379}},{"uid":"117ee4129bf22362","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/117ee4129bf22362","status":"passed","time":{"start":1728128506562,"stop":1728128519464,"duration":12902}},{"uid":"8eef91671a2a956e","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/8eef91671a2a956e","status":"passed","time":{"start":1728125572449,"stop":1728125585315,"duration":12866}},{"uid":"34fb7635f573ffb","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/34fb7635f573ffb","status":"passed","time":{"start":1728122719264,"stop":1728122732101,"duration":12837}},{"uid":"32ec95f21719e041","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/32ec95f21719e041","status":"passed","time":{"start":1728121861796,"stop":1728121875880,"duration":14084}},{"uid":"f553eb4b69a942e7","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/f553eb4b69a942e7","status":"passed","time":{"start":1728058251867,"stop":1728058264758,"duration":12891}},{"uid":"5c1f4b961fa979fa","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/5c1f4b961fa979fa","status":"passed","time":{"start":1728026164909,"stop":1728026178020,"duration":13111}},{"uid":"7cb127931621cff2","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/7cb127931621cff2","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728088556375,"stop":1728088570159,"duration":13784}},{"uid":"3d355e16f267829d","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/3d355e16f267829d","status":"passed","time":{"start":1728080600927,"stop":1728080616569,"duration":15642}},{"uid":"9fd692936cb369d7","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/9fd692936cb369d7","status":"passed","time":{"start":1728073501102,"stop":1728073514168,"duration":13066}},{"uid":"9e8e1346489e0020","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/9e8e1346489e0020","status":"passed","time":{"start":1728069830525,"stop":1728069843444,"duration":12919}},{"uid":"bfd8d5e7378c7540","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/bfd8d5e7378c7540","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728066060195,"stop":1728066073136,"duration":12941}},{"uid":"8ee01c2179c2cc56","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/8ee01c2179c2cc56","status":"passed","time":{"start":1728058251867,"stop":1728058264758,"duration":12891}},{"uid":"29d9a57dfd458d8b","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/29d9a57dfd458d8b","status":"passed","time":{"start":1728026164909,"stop":1728026178020,"duration":13111}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"cb52e46cb8ce7fc9.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}