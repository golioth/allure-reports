{"uid":"8abd1b9a8ed07e4e","name":"test_invalid_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_invalid_arg","historyId":"2cb625b1f8491fe01ea76860d1514c51","time":{"start":1728328107926,"stop":1728328113353,"duration":5427},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffb1a2e950>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffb189afd0>\ndevice = <golioth.golioth.Device object at 0xffffb1884bd0>\n\n    async def test_invalid_arg(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           rsp = await device.rpc.basic_return_type(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffb1a2e950>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1728328022886,"stop":1728328022887,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728328022887,"stop":1728328022888,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728328022888,"stop":1728328022888,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728328022889,"stop":1728328022889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728328022890,"stop":1728328022890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728328022890,"stop":1728328022891,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728328022891,"stop":1728328022891,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728328022892,"stop":1728328022892,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728328022892,"stop":1728328022893,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728328022893,"stop":1728328022893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728328022893,"stop":1728328022893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728328022894,"stop":1728328023306,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728328022894,"stop":1728328022894,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728328023307,"stop":1728328074915,"duration":51608},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728328074916,"stop":1728328076019,"duration":1103},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728328076019,"stop":1728328083180,"duration":7161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728328162381,"stop":1728328162382,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728328162387,"stop":1728328162807,"duration":420},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728328162809,"stop":1728328162810,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728328162812,"stop":1728328162815,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"7f614ccd101e"},{"name":"thread","value":"250-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e529c94948a740ef","status":"passed","time":{"start":1728316337484,"stop":1728316341865,"duration":4381}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":100,"unknown":0,"total":109},"items":[{"uid":"d9e52b4f0bc7d304","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/d9e52b4f0bc7d304","status":"passed","time":{"start":1728319870338,"stop":1728319871673,"duration":1335}},{"uid":"d34713085fb65afd","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/d34713085fb65afd","status":"passed","time":{"start":1728319870338,"stop":1728319871673,"duration":1335}},{"uid":"4efe2685a2dabc97","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/4efe2685a2dabc97","status":"passed","time":{"start":1728316337484,"stop":1728316341865,"duration":4381}},{"uid":"2010f66ed43791f9","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/2010f66ed43791f9","status":"passed","time":{"start":1728312469609,"stop":1728312470737,"duration":1128}},{"uid":"c819088aa785c0ff","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/c819088aa785c0ff","status":"passed","time":{"start":1728125478354,"stop":1728125479719,"duration":1365}},{"uid":"50b67716f2415ce","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/50b67716f2415ce","status":"passed","time":{"start":1728122625530,"stop":1728122626406,"duration":876}},{"uid":"5ff4825c7b68dd78","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/5ff4825c7b68dd78","status":"passed","time":{"start":1728261354467,"stop":1728261356153,"duration":1686}},{"uid":"1635a0f86c6ad501","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/1635a0f86c6ad501","status":"passed","time":{"start":1728123884418,"stop":1728123885784,"duration":1366}},{"uid":"addd10709549bc85","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/addd10709549bc85","status":"passed","time":{"start":1728175041399,"stop":1728175043159,"duration":1760}},{"uid":"541a94569c0ee9c1","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/541a94569c0ee9c1","status":"passed","time":{"start":1728064323791,"stop":1728064325196,"duration":1405}},{"uid":"fa4e05a35a97af24","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/fa4e05a35a97af24","status":"passed","time":{"start":1728128415694,"stop":1728128417099,"duration":1405}},{"uid":"d4af0f25ac2e8b81","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/d4af0f25ac2e8b81","status":"passed","time":{"start":1728125478354,"stop":1728125479719,"duration":1365}},{"uid":"8280e41c2447c1fb","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/8280e41c2447c1fb","status":"passed","time":{"start":1728122625530,"stop":1728122626406,"duration":876}},{"uid":"99141c1302ddf824","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/99141c1302ddf824","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1728121746000,"stop":1728121751451,"duration":5451}},{"uid":"46ccb94c4ae0a5d7","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/46ccb94c4ae0a5d7","status":"passed","time":{"start":1728058157583,"stop":1728058159207,"duration":1624}},{"uid":"4e06de861e9cb93d","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/4e06de861e9cb93d","status":"passed","time":{"start":1728026070838,"stop":1728026072067,"duration":1229}},{"uid":"b867495ff55fd7f0","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/b867495ff55fd7f0","status":"passed","time":{"start":1728088430091,"stop":1728088432196,"duration":2105}},{"uid":"43ea38bbb202009f","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/43ea38bbb202009f","status":"passed","time":{"start":1728080491315,"stop":1728080493064,"duration":1749}},{"uid":"4b53cbd9ad8af33e","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/4b53cbd9ad8af33e","status":"passed","time":{"start":1728073403816,"stop":1728073405415,"duration":1599}},{"uid":"d06e8388d9d4462f","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/d06e8388d9d4462f","status":"passed","time":{"start":1728069714975,"stop":1728069716341,"duration":1366}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"8abd1b9a8ed07e4e.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}