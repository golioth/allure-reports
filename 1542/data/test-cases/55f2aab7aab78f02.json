{"uid":"55f2aab7aab78f02","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"efe21cbbb5934f0489b65e4b580675bb","time":{"start":1727965277913,"stop":1727965306847,"duration":28934},"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <rak5010.RAK5010 object at 0xffff91f6ad10>\ndevice = <golioth.golioth.Device object at 0xffff91eefd50>\nproject = <golioth.golioth.Project object at 0xffff91f6bd90>\nreleases = {'test_blocks': Release <66fea84e2860a8ee0e302c7d, release_tags=[], device_tags=['66fea84d2860a8ee0e302c7a'], artifact..., release_tags=[], device_tags=['66fea84d2860a8ee0e302c7a'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727965188545,"stop":1727965188546,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727965188546,"stop":1727965188547,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727965188547,"stop":1727965188547,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727965188548,"stop":1727965188548,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727965188548,"stop":1727965188548,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727965188549,"stop":1727965188549,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727965188549,"stop":1727965188549,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727965188550,"stop":1727965188550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727965188550,"stop":1727965188550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727965188551,"stop":1727965188551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727965188552,"stop":1727965188552,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727965188552,"stop":1727965188553,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727965188553,"stop":1727965229731,"duration":41178},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727965229733,"stop":1727965230291,"duration":558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727965230292,"stop":1727965231121,"duration":829},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727965231122,"stop":1727965260295,"duration":29173},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727965260297,"stop":1727965260794,"duration":497},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727965260795,"stop":1727965261644,"duration":849},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727965261645,"stop":1727965263193,"duration":1548},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727965277910,"stop":1727965277910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <rak5010.RAK5010 object at 0xffff91f6ad10>\ndevice = <golioth.golioth.Device object at 0xffff91eefd50>\nproject = <golioth.golioth.Project object at 0xffff91f6bd90>\nreleases = {'test_blocks': Release <66fea84e2860a8ee0e302c7d, release_tags=[], device_tags=['66fea84d2860a8ee0e302c7a'], artifact..., release_tags=[], device_tags=['66fea84d2860a8ee0e302c7a'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"dda0878f45783278","name":"stdout","source":"dda0878f45783278.txt","type":"text/plain","size":1921}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727965307024,"stop":1727965307959,"duration":935},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727965307961,"stop":1727965309458,"duration":1497},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727965309461,"stop":1727965310269,"duration":808},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727965310272,"stop":1727965310272,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727965310273,"stop":1727965310274,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727965310276,"stop":1727965310768,"duration":492},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727965310771,"stop":1727965310771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727965310773,"stop":1727965310777,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"a07310f9e8e9"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":7,"skipped":0,"passed":56,"unknown":0,"total":69},"items":[{"uid":"887eb24974cfcf5","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/887eb24974cfcf5","status":"passed","time":{"start":1727959432112,"stop":1727959515009,"duration":82897}},{"uid":"3d97918d96a34cac","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/3d97918d96a34cac","status":"passed","time":{"start":1727957198287,"stop":1727957282208,"duration":83921}},{"uid":"4874e06d7a6a819f","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/4874e06d7a6a819f","status":"passed","time":{"start":1727955332442,"stop":1727955416539,"duration":84097}},{"uid":"e602af0857dfd507","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/e602af0857dfd507","status":"passed","time":{"start":1727952328334,"stop":1727952410606,"duration":82272}},{"uid":"7702420bbf49306e","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/7702420bbf49306e","status":"passed","time":{"start":1727951664556,"stop":1727951756544,"duration":91988}},{"uid":"5b718fee7e79d151","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/5b718fee7e79d151","status":"passed","time":{"start":1727947417505,"stop":1727947499407,"duration":81902}},{"uid":"b1796c4b6b11f41b","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/b1796c4b6b11f41b","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727944678689,"stop":1727944701251,"duration":22562}},{"uid":"4aa19b82d9c52d3c","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/4aa19b82d9c52d3c","status":"passed","time":{"start":1727944625772,"stop":1727944709018,"duration":83246}},{"uid":"dc98f32da59a1484","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/dc98f32da59a1484","status":"passed","time":{"start":1727943202276,"stop":1727943285634,"duration":83358}},{"uid":"e60013329034c595","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/e60013329034c595","status":"passed","time":{"start":1727933162139,"stop":1727933244445,"duration":82306}},{"uid":"28ce4f6f26f963eb","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/28ce4f6f26f963eb","status":"passed","time":{"start":1727925969237,"stop":1727926051262,"duration":82025}},{"uid":"f3779a15b5a4863a","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/f3779a15b5a4863a","status":"passed","time":{"start":1727915638716,"stop":1727915722772,"duration":84056}},{"uid":"a959c8395d7574b","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/a959c8395d7574b","status":"passed","time":{"start":1727906690664,"stop":1727906777762,"duration":87098}},{"uid":"33088ffd61ac7c37","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/33088ffd61ac7c37","status":"passed","time":{"start":1727832479400,"stop":1727832561250,"duration":81850}},{"uid":"2ca803f0c09c1068","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/2ca803f0c09c1068","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'","time":{"start":1727829814075,"stop":1727829814075,"duration":0}},{"uid":"aefe8476c61edf4c","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/aefe8476c61edf4c","status":"passed","time":{"start":1727802216995,"stop":1727802299083,"duration":82088}},{"uid":"5751097d5c27d0b7","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/5751097d5c27d0b7","status":"passed","time":{"start":1727815017412,"stop":1727815099837,"duration":82425}},{"uid":"b709a56fbeda466e","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/b709a56fbeda466e","status":"passed","time":{"start":1727811578160,"stop":1727811660288,"duration":82128}},{"uid":"9776763734590925","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/9776763734590925","status":"passed","time":{"start":1727810820243,"stop":1727810903646,"duration":83403}},{"uid":"8190ed9ee0fbfca3","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/8190ed9ee0fbfca3","status":"passed","time":{"start":1727806145104,"stop":1727806227318,"duration":82214}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"55f2aab7aab78f02.json","parameterValues":["'rak5010'","'zephyr'"]}