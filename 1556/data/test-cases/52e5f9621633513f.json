{"uid":"52e5f9621633513f","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"fa8c1766fb90779ba45428eac4722ac6","time":{"start":1727979063383,"stop":1727979077801,"duration":14418},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb341a910>\ndevice = <golioth.golioth.Device object at 0xffffb33f2390>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffb33f2390>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727978990894,"stop":1727978990894,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727978990895,"stop":1727978990896,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727978990895,"stop":1727978990895,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727978990896,"stop":1727978990896,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727978990896,"stop":1727978990896,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727978990897,"stop":1727978990897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727978990897,"stop":1727978990897,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727978990898,"stop":1727978990898,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727978990898,"stop":1727978990898,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727978990899,"stop":1727978990899,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727978990900,"stop":1727978990900,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727978990901,"stop":1727978990901,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727978990902,"stop":1727978991406,"duration":504},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727978991407,"stop":1727979038150,"duration":46743},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727979038152,"stop":1727979039218,"duration":1066},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727979039219,"stop":1727979053632,"duration":14413},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb341a910>\ndevice = <golioth.golioth.Device object at 0xffffb33f2390>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffb33f2390>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"490fdfa033219d8a","name":"stdout","source":"490fdfa033219d8a.txt","type":"text/plain","size":3169}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727979226792,"stop":1727979226792,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727979226794,"stop":1727979227362,"duration":568},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727979227365,"stop":1727979227366,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727979227368,"stop":1727979227371,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"7955881217e8"},{"name":"thread","value":"257-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":67,"unknown":0,"total":74},"items":[{"uid":"baef61c5e178e172","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/baef61c5e178e172","status":"passed","time":{"start":1727964863307,"stop":1727964876022,"duration":12715}},{"uid":"5bad9b5a4dd7909d","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/5bad9b5a4dd7909d","status":"passed","time":{"start":1727973633019,"stop":1727973646139,"duration":13120}},{"uid":"db12b440de5facf6","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/db12b440de5facf6","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1727969667111,"stop":1727969681984,"duration":14873}},{"uid":"859323dbc75670bb","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/859323dbc75670bb","status":"passed","time":{"start":1727968006205,"stop":1727968019869,"duration":13664}},{"uid":"652f6b227daffe31","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/652f6b227daffe31","status":"passed","time":{"start":1727964863307,"stop":1727964876022,"duration":12715}},{"uid":"5dbc89f68d3e9947","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/5dbc89f68d3e9947","status":"passed","time":{"start":1727962055260,"stop":1727962068936,"duration":13676}},{"uid":"7aaa14dc2115a7f","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/7aaa14dc2115a7f","status":"passed","time":{"start":1727957902914,"stop":1727957915929,"duration":13015}},{"uid":"1677a2f2ad92c45a","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/1677a2f2ad92c45a","status":"passed","time":{"start":1727956292947,"stop":1727956306005,"duration":13058}},{"uid":"86b9dbb203eabcad","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/86b9dbb203eabcad","status":"passed","time":{"start":1727906737310,"stop":1727906750456,"duration":13146}},{"uid":"7122d8b3d76198d3","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/7122d8b3d76198d3","status":"passed","time":{"start":1727926058293,"stop":1727926072345,"duration":14052}},{"uid":"91946a276517b50f","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/91946a276517b50f","status":"passed","time":{"start":1727943949446,"stop":1727943962412,"duration":12966}},{"uid":"576347cedc37c171","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/576347cedc37c171","status":"passed","time":{"start":1727943451242,"stop":1727943464208,"duration":12966}},{"uid":"cc81796bbc03f8b1","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/cc81796bbc03f8b1","status":"passed","time":{"start":1727832021668,"stop":1727832034436,"duration":12768}},{"uid":"6ae4de4e56b1c46c","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/6ae4de4e56b1c46c","status":"passed","time":{"start":1727926058293,"stop":1727926072345,"duration":14052}},{"uid":"df3cc5c593fdffad","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/df3cc5c593fdffad","status":"passed","time":{"start":1727926058293,"stop":1727926072345,"duration":14052}},{"uid":"c3db073064700d35","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/c3db073064700d35","status":"passed","time":{"start":1727915719188,"stop":1727915731966,"duration":12778}},{"uid":"e7d0d775918f1be1","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/e7d0d775918f1be1","status":"passed","time":{"start":1727906737310,"stop":1727906750456,"duration":13146}},{"uid":"ca887d9c2f396fa1","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/ca887d9c2f396fa1","status":"passed","time":{"start":1727832021668,"stop":1727832034436,"duration":12768}},{"uid":"437479902fcce78b","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/437479902fcce78b","status":"passed","time":{"start":1727829302852,"stop":1727829315993,"duration":13141}},{"uid":"c220abcf0d057818","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/c220abcf0d057818","status":"passed","time":{"start":1727801354825,"stop":1727801367613,"duration":12788}}]},"tags":["esp-idf","anyio","esp32_devkitc_wrover_espidf","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"52e5f9621633513f.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}