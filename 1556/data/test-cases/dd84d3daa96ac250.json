{"uid":"dd84d3daa96ac250","name":"test_int_return","fullName":"tests.hil.tests.rpc.test_rpc#test_int_return","historyId":"81ed5e1629ffa0ab58448237ffa0dcb5","time":{"start":1727979011023,"stop":1727979016400,"duration":5377},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa64d5810>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffffa64d4a90>\ndevice = <golioth.golioth.Device object at 0xffffa64d5d90>\n\n    async def test_int_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"int\")\n\ntests/hil/tests/rpc/test_rpc.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa64d5810>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727978955735,"stop":1727978955735,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727978955736,"stop":1727978955737,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727978955736,"stop":1727978955736,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727978955737,"stop":1727978955737,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727978955738,"stop":1727978955738,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727978955739,"stop":1727978955739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727978955739,"stop":1727978955740,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727978955740,"stop":1727978955740,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727978955740,"stop":1727978955740,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727978955741,"stop":1727978955741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727978955741,"stop":1727978955741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727978955742,"stop":1727978955742,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727978955742,"stop":1727978956216,"duration":474},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727978956217,"stop":1727978975195,"duration":18978},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727978975196,"stop":1727978976392,"duration":1196},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727978976392,"stop":1727979005611,"duration":29219},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727979051296,"stop":1727979051296,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727979051298,"stop":1727979051931,"duration":633},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727979051933,"stop":1727979051950,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727979051952,"stop":1727979051954,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"677b01933fd4"},{"name":"thread","value":"275-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":66,"unknown":0,"total":73},"items":[{"uid":"26b01160c9d9430a","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/26b01160c9d9430a","status":"passed","time":{"start":1727977157810,"stop":1727977159024,"duration":1214}},{"uid":"ca43c93b32e440a1","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/ca43c93b32e440a1","status":"passed","time":{"start":1727974486702,"stop":1727974487627,"duration":925}},{"uid":"c7ef0e2c492fa505","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/c7ef0e2c492fa505","status":"passed","time":{"start":1727970325516,"stop":1727970326551,"duration":1035}},{"uid":"3f5bd8e47ada2d9f","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/3f5bd8e47ada2d9f","status":"passed","time":{"start":1727965402162,"stop":1727965403157,"duration":995}},{"uid":"2a0cf65e3e104d71","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/2a0cf65e3e104d71","status":"passed","time":{"start":1727959600375,"stop":1727959601549,"duration":1174}},{"uid":"6970e5939755f818","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/6970e5939755f818","status":"passed","time":{"start":1727957349725,"stop":1727957350593,"duration":868}},{"uid":"755f606fd136367f","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/755f606fd136367f","status":"passed","time":{"start":1727955478292,"stop":1727955479260,"duration":968}},{"uid":"75447f833d3a665","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/75447f833d3a665","status":"passed","time":{"start":1727952484544,"stop":1727952485514,"duration":970}},{"uid":"d39108ae9a60d645","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/d39108ae9a60d645","status":"passed","time":{"start":1727951839568,"stop":1727951840668,"duration":1100}},{"uid":"cff1b6f54cd85ae6","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/cff1b6f54cd85ae6","status":"passed","time":{"start":1727947590244,"stop":1727947591464,"duration":1220}},{"uid":"e3006e4aed1ac127","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/e3006e4aed1ac127","status":"passed","time":{"start":1727944762492,"stop":1727944763592,"duration":1100}},{"uid":"d03becebfed12b27","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/d03becebfed12b27","status":"passed","time":{"start":1727944793209,"stop":1727944793932,"duration":723}},{"uid":"5498d09c2db02d72","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/5498d09c2db02d72","status":"passed","time":{"start":1727943347036,"stop":1727943348054,"duration":1018}},{"uid":"133ec36a43c82897","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/133ec36a43c82897","status":"passed","time":{"start":1727933335654,"stop":1727933336560,"duration":906}},{"uid":"46859e7e336dbc28","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/46859e7e336dbc28","status":"passed","time":{"start":1727926141014,"stop":1727926141948,"duration":934}},{"uid":"a1277e56b3757f2c","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/a1277e56b3757f2c","status":"passed","time":{"start":1727915806588,"stop":1727915807796,"duration":1208}},{"uid":"e10bc99ba79601c7","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/e10bc99ba79601c7","status":"passed","time":{"start":1727906862062,"stop":1727906863148,"duration":1086}},{"uid":"4d55b73b4228f480","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/4d55b73b4228f480","status":"passed","time":{"start":1727832651548,"stop":1727832652357,"duration":809}},{"uid":"afe985a7d82d7991","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/afe985a7d82d7991","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'","time":{"start":1727829832552,"stop":1727829832552,"duration":0}},{"uid":"e255e081611d25d6","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/e255e081611d25d6","status":"passed","time":{"start":1727802362289,"stop":1727802363168,"duration":879}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"dd84d3daa96ac250.json","parameterValues":["'rak5010'","'zephyr'"]}