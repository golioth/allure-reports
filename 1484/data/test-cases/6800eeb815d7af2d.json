{"uid":"6800eeb815d7af2d","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"467e555cbdae75d46aefa9c64cb6440a","time":{"start":1727765891318,"stop":1727765944316,"duration":52998},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa087e090>\ndevice = <golioth.golioth.Device object at 0xffffa0839f90>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1727765854689,"stop":1727765854689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727765854690,"stop":1727765854691,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727765854690,"stop":1727765854690,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727765854691,"stop":1727765854691,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1727765854692,"stop":1727765854695,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1727765854692,"stop":1727765854692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727765854696,"stop":1727765854696,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727765854696,"stop":1727765854696,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727765854697,"stop":1727765855174,"duration":477},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727765855174,"stop":1727765856113,"duration":939},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1727765856114,"stop":1727765890699,"duration":34585},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1727765890699,"stop":1727765891315,"duration":616},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa087e090>\ndevice = <golioth.golioth.Device object at 0xffffa0839f90>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"f8d23471f260f848","name":"log","source":"f8d23471f260f848.txt","type":"text/plain","size":121195}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1727765944481,"stop":1727765944494,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727765944496,"stop":1727765944915,"duration":419},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727765944917,"stop":1727765944920,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1727765944925,"stop":1727765944925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"23bed0b1fa3c"},{"name":"thread","value":"598-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b3a96f259262b49c","status":"passed","time":{"start":1727765797299,"stop":1727765850635,"duration":53336}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":39,"unknown":0,"total":40},"items":[{"uid":"229efe2b264eaad4","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/229efe2b264eaad4","status":"passed","time":{"start":1727764775115,"stop":1727764828015,"duration":52900}},{"uid":"e00f070d8d0f8a6c","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/e00f070d8d0f8a6c","status":"passed","time":{"start":1727760922071,"stop":1727760975551,"duration":53480}},{"uid":"d410d2839927464f","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/d410d2839927464f","status":"passed","time":{"start":1727745190749,"stop":1727745243897,"duration":53148}},{"uid":"180c405bac7c2760","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/180c405bac7c2760","status":"passed","time":{"start":1727732478936,"stop":1727732532038,"duration":53102}},{"uid":"eeaf2651959a96cc","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/eeaf2651959a96cc","status":"passed","time":{"start":1727658857578,"stop":1727658910419,"duration":52841}},{"uid":"8016abd60bab6c1e","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/8016abd60bab6c1e","status":"passed","time":{"start":1727572449488,"stop":1727572502762,"duration":53274}},{"uid":"f45090278929ef7e","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/f45090278929ef7e","status":"passed","time":{"start":1727547656645,"stop":1727547709303,"duration":52658}},{"uid":"e6318307a604a8b5","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/e6318307a604a8b5","status":"passed","time":{"start":1727544881417,"stop":1727544941322,"duration":59905}},{"uid":"fe4fbda3485bbec","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/fe4fbda3485bbec","status":"passed","time":{"start":1727544611191,"stop":1727544664280,"duration":53089}},{"uid":"4f8e8127a440953c","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/4f8e8127a440953c","status":"passed","time":{"start":1727485964365,"stop":1727486017743,"duration":53378}},{"uid":"958b46b77f7a12e6","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/958b46b77f7a12e6","status":"passed","time":{"start":1727477442541,"stop":1727477495028,"duration":52487}},{"uid":"c080bba63d1537ca","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/c080bba63d1537ca","status":"passed","time":{"start":1727463205521,"stop":1727463258994,"duration":53473}},{"uid":"84f44831247b3d6a","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/84f44831247b3d6a","status":"passed","time":{"start":1727463205521,"stop":1727463258994,"duration":53473}},{"uid":"68d2fcba0688288b","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/68d2fcba0688288b","status":"passed","time":{"start":1727365892996,"stop":1727365945496,"duration":52500}},{"uid":"f53386fe0b46d663","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/f53386fe0b46d663","status":"passed","time":{"start":1727455643013,"stop":1727455697509,"duration":54496}},{"uid":"ce3ff90d258686fa","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/ce3ff90d258686fa","status":"passed","time":{"start":1727390950595,"stop":1727391003741,"duration":53146}},{"uid":"4f9d79896fad4edd","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/4f9d79896fad4edd","status":"passed","time":{"start":1727366744757,"stop":1727366799356,"duration":54599}},{"uid":"76f063a522b7b125","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/76f063a522b7b125","status":"passed","time":{"start":1727399327926,"stop":1727399420459,"duration":92533}},{"uid":"1f2e40e6d3a7fb97","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/1f2e40e6d3a7fb97","status":"passed","time":{"start":1727395375604,"stop":1727395428903,"duration":53299}},{"uid":"5ec41d095881810d","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/5ec41d095881810d","status":"passed","time":{"start":1727390542483,"stop":1727390595536,"duration":53053}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"6800eeb815d7af2d.json","parameterValues":["'rak5010'","'zephyr'"]}