{"uid":"d935c1372d413e00","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"ebde077b874ef5c350366edbe507b03b","time":{"start":1727764639461,"stop":1727764648967,"duration":9506},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffac8258d0>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffac9b3f10>\ndevice = <golioth.golioth.Device object at 0xffffac824090>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffac8258d0>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727764613809,"stop":1727764613809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727764613810,"stop":1727764613810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727764613811,"stop":1727764613812,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727764613811,"stop":1727764613811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727764613812,"stop":1727764613812,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727764613813,"stop":1727764613813,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727764613813,"stop":1727764613813,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727764613814,"stop":1727764613814,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727764613814,"stop":1727764613814,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727764613815,"stop":1727764613815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727764613816,"stop":1727764613816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727764613816,"stop":1727764613816,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727764613817,"stop":1727764614324,"duration":507},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727764614325,"stop":1727764629071,"duration":14746},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727764629074,"stop":1727764631096,"duration":2022},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727764631096,"stop":1727764635929,"duration":4833},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727764727758,"stop":1727764727758,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727764727763,"stop":1727764728263,"duration":500},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727764728265,"stop":1727764728288,"duration":23},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727764728291,"stop":1727764728293,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"82d685e83ccd"},{"name":"thread","value":"303-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":33,"unknown":0,"total":40},"items":[{"uid":"a4e9d56ebbbf3677","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/a4e9d56ebbbf3677","status":"passed","time":{"start":1727763709543,"stop":1727763711751,"duration":2208}},{"uid":"356a403b08c804b6","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/356a403b08c804b6","status":"passed","time":{"start":1727760242181,"stop":1727760244070,"duration":1889}},{"uid":"58be82b7b9c79408","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/58be82b7b9c79408","status":"passed","time":{"start":1727743795002,"stop":1727743796522,"duration":1520}},{"uid":"8f5ccdf504f7bd5f","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/8f5ccdf504f7bd5f","status":"passed","time":{"start":1727731455935,"stop":1727731457858,"duration":1923}},{"uid":"19d467477a11a10d","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/19d467477a11a10d","status":"passed","time":{"start":1727658149979,"stop":1727658151503,"duration":1524}},{"uid":"ecfdc136d4bbe1e5","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/ecfdc136d4bbe1e5","status":"passed","time":{"start":1727570944990,"stop":1727570946506,"duration":1516}},{"uid":"ff5680add1b17de","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/ff5680add1b17de","status":"passed","time":{"start":1727547793942,"stop":1727547796153,"duration":2211}},{"uid":"1e7693ac93889056","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/1e7693ac93889056","status":"passed","time":{"start":1727545446125,"stop":1727545447742,"duration":1617}},{"uid":"dce75600c7aa5b2e","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/dce75600c7aa5b2e","status":"passed","time":{"start":1727543171950,"stop":1727543173833,"duration":1883}},{"uid":"71d38535ca166598","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/71d38535ca166598","status":"passed","time":{"start":1727484569242,"stop":1727484570760,"duration":1518}},{"uid":"b97bbf7049840341","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/b97bbf7049840341","status":"passed","time":{"start":1727476710859,"stop":1727476713196,"duration":2337}},{"uid":"e447933efe5cff8a","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/e447933efe5cff8a","status":"passed","time":{"start":1727461860199,"stop":1727461862078,"duration":1879}},{"uid":"68eb07b77d068944","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/68eb07b77d068944","status":"passed","time":{"start":1727461860199,"stop":1727461862078,"duration":1879}},{"uid":"f9a1e4fe163e25e","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/f9a1e4fe163e25e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727458494810,"stop":1727458494810,"duration":0}},{"uid":"a966b7f36d69e909","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/a966b7f36d69e909","status":"passed","time":{"start":1727455556596,"stop":1727455558483,"duration":1887}},{"uid":"bab4b10798c8dc53","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/bab4b10798c8dc53","status":"passed","time":{"start":1727457062757,"stop":1727457064383,"duration":1626}},{"uid":"6bbf1572a9b674d6","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/6bbf1572a9b674d6","status":"passed","time":{"start":1727454031373,"stop":1727454032929,"duration":1556}},{"uid":"e8250179e2e177c6","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/e8250179e2e177c6","status":"passed","time":{"start":1727398791904,"stop":1727398793754,"duration":1850}},{"uid":"74263845f54d71a2","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/74263845f54d71a2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727394013927,"stop":1727394013927,"duration":0}},{"uid":"4fe6e84716058076","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/4fe6e84716058076","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727389457511,"stop":1727389457511,"duration":0}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"d935c1372d413e00.json","parameterValues":["'nrf9160dk'","'zephyr'"]}