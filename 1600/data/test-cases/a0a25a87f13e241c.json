{"uid":"a0a25a87f13e241c","name":"test_lightdb_deleted","fullName":"tests.hil.tests.lightdb.test_lightdb#test_lightdb_deleted","historyId":"03bd190306c2f2b42cb642b445211bd8","time":{"start":1728318569048,"stop":1728318576957,"duration":7909},"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\ndevice = <golioth.golioth.Device object at 0xffff8d960c50>\n\n    async def test_lightdb_deleted(device):\n        assert (await device.lightdb.get('hil/lightdb/to_delete/sync/true')) is None\n        assert (await device.lightdb.get('hil/lightdb/to_delete/sync/false')) is None\n        assert (await device.lightdb.get('hil/lightdb/to_delete/sync/int')) is None\n        assert (await device.lightdb.get('hil/lightdb/to_delete/sync/str')) is None\n        assert (await device.lightdb.get('hil/lightdb/to_delete/sync/obj')) is None\n    \n        assert (await device.lightdb.get('hil/lightdb/to_delete/async/true')) is None\n        assert (await device.lightdb.get('hil/lightdb/to_delete/async/false')) is None\n        assert (await device.lightdb.get('hil/lightdb/to_delete/async/int')) is None\n        assert (await device.lightdb.get('hil/lightdb/to_delete/async/str')) is None\n>       assert (await device.lightdb.get('hil/lightdb/to_delete/async/obj')) is None\n\ntests/hil/tests/lightdb/test_lightdb.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:520: in get\n    response = await c.get(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728318518943,"stop":1728318518944,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728318518945,"stop":1728318518945,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728318518945,"stop":1728318518946,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728318518946,"stop":1728318518946,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728318518947,"stop":1728318518947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728318518948,"stop":1728318518948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728318518949,"stop":1728318518949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728318518949,"stop":1728318518949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728318518950,"stop":1728318518951,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728318518950,"stop":1728318518950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728318518950,"stop":1728318518950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728318518951,"stop":1728318518951,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728318518951,"stop":1728318519614,"duration":663},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728318519615,"stop":1728318532329,"duration":12714},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728318532332,"stop":1728318533839,"duration":1507},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728318533839,"stop":1728318562653,"duration":28814},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728318591289,"stop":1728318591700,"duration":411},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728318591702,"stop":1728318592139,"duration":437},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728318592141,"stop":1728318592180,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728318592182,"stop":1728318592185,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"b75c0d204d2a"},{"name":"thread","value":"244-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":104,"unknown":0,"total":107},"items":[{"uid":"8b7b57d4ff29ea99","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/8b7b57d4ff29ea99","status":"passed","time":{"start":1728316166446,"stop":1728316172049,"duration":5603}},{"uid":"73208846980d96e","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/73208846980d96e","status":"passed","time":{"start":1728312304961,"stop":1728312308518,"duration":3557}},{"uid":"ecd4a07010c3217a","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/ecd4a07010c3217a","status":"passed","time":{"start":1728133395698,"stop":1728133399278,"duration":3580}},{"uid":"65d0f507cebfab33","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/65d0f507cebfab33","status":"passed","time":{"start":1728122847756,"stop":1728122851299,"duration":3543}},{"uid":"fa741aa6ae6976d5","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/fa741aa6ae6976d5","status":"passed","time":{"start":1728261843571,"stop":1728261847110,"duration":3539}},{"uid":"4cd9e0f6fd9c2cea","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/4cd9e0f6fd9c2cea","status":"passed","time":{"start":1728125906827,"stop":1728125910371,"duration":3544}},{"uid":"8e189b289ddfae9e","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/8e189b289ddfae9e","status":"passed","time":{"start":1728175457626,"stop":1728175461167,"duration":3541}},{"uid":"16476f99a7c37574","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/16476f99a7c37574","status":"passed","time":{"start":1728033595409,"stop":1728033599457,"duration":4048}},{"uid":"61982dfc30e9320f","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/61982dfc30e9320f","status":"passed","time":{"start":1728128175432,"stop":1728128178973,"duration":3541}},{"uid":"10b25a4902e4fa86","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/10b25a4902e4fa86","status":"passed","time":{"start":1728133395698,"stop":1728133399278,"duration":3580}},{"uid":"2adadc750077b558","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/2adadc750077b558","status":"passed","time":{"start":1728122847756,"stop":1728122851299,"duration":3543}},{"uid":"72a8e766ca7176cd","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/72a8e766ca7176cd","status":"passed","time":{"start":1728122357784,"stop":1728122362040,"duration":4256}},{"uid":"8d13ffda3846a9c1","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/8d13ffda3846a9c1","status":"passed","time":{"start":1728025201909,"stop":1728025205985,"duration":4076}},{"uid":"9334d11d8540b817","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/9334d11d8540b817","status":"passed","time":{"start":1728026000202,"stop":1728026004164,"duration":3962}},{"uid":"7341eb7bb5dab1da","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/7341eb7bb5dab1da","status":"passed","time":{"start":1728088255442,"stop":1728088260279,"duration":4837}},{"uid":"f7178d48d1705494","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/f7178d48d1705494","status":"passed","time":{"start":1728080251283,"stop":1728080255108,"duration":3825}},{"uid":"84f2c4fddb72d42f","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/84f2c4fddb72d42f","status":"passed","time":{"start":1728073707086,"stop":1728073710988,"duration":3902}},{"uid":"67b7314f84e9dd3f","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/67b7314f84e9dd3f","status":"passed","time":{"start":1728071113134,"stop":1728071117157,"duration":4023}},{"uid":"10d494eb0072165f","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/10d494eb0072165f","status":"passed","time":{"start":1728067337388,"stop":1728067341256,"duration":3868}},{"uid":"9ad4ec66fa953635","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/9ad4ec66fa953635","status":"passed","time":{"start":1728025201909,"stop":1728025205985,"duration":4076}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"a0a25a87f13e241c.json","parameterValues":["'nrf52840dk'","'zephyr'"]}