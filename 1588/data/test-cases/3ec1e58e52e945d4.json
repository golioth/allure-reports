{"uid":"3ec1e58e52e945d4","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6ece6f03e91be687a9089212ed56dba8","time":{"start":1728121534557,"stop":1728121556318,"duration":21761},"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <linuxboard.LinuxBoard object at 0x7f6ef1a40670>\ndevice = <golioth.golioth.Device object at 0x7f6ef1a41900>\nproject = <golioth.golioth.Project object at 0x7f6ef1a40400>\nreleases = {'test_blocks': Release <67010aba1b3c084061cd19dc, release_tags=[], device_tags=['67010ab91b3c084061cd19d9'], artifact..., release_tags=[], device_tags=['67010ab91b3c084061cd19d9'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_psk","time":{"start":1728121527026,"stop":1728121527026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728121527026,"stop":1728121527027,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1728121527026,"stop":1728121527026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728121527026,"stop":1728121527026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728121527026,"stop":1728121527026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728121527026,"stop":1728121527026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728121527026,"stop":1728121527026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728121527027,"stop":1728121527027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728121527027,"stop":1728121527027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728121527027,"stop":1728121527027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728121527027,"stop":1728121527027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728121527027,"stop":1728121527027,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728121527027,"stop":1728121527064,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728121527064,"stop":1728121527393,"duration":329},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728121527393,"stop":1728121528038,"duration":645},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728121528038,"stop":1728121528694,"duration":656},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1728121528695,"stop":1728121529080,"duration":385},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1728121529080,"stop":1728121529705,"duration":625},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1728121529705,"stop":1728121530618,"duration":913},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1728121534556,"stop":1728121534556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <linuxboard.LinuxBoard object at 0x7f6ef1a40670>\ndevice = <golioth.golioth.Device object at 0x7f6ef1a41900>\nproject = <golioth.golioth.Project object at 0x7f6ef1a40400>\nreleases = {'test_blocks': Release <67010aba1b3c084061cd19dc, release_tags=[], device_tags=['67010ab91b3c084061cd19d9'], artifact..., release_tags=[], device_tags=['67010ab91b3c084061cd19d9'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"5120e740bdc3e188","name":"stdout","source":"5120e740bdc3e188.txt","type":"text/plain","size":1866}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1728121556349,"stop":1728121557205,"duration":856},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1728121557206,"stop":1728121558100,"duration":894},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1728121558100,"stop":1728121558550,"duration":450},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1728121558551,"stop":1728121558551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1728121558551,"stop":1728121558551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728121558551,"stop":1728121558790,"duration":239},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728121558791,"stop":1728121558791,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728121558791,"stop":1728121558794,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"linux"},{"name":"tag","value":"linux"},{"name":"parentSuite","value":"hil.linux.linux"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"fv-az888-480"},{"name":"thread","value":"3729-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'linux'"},{"name":"platform_name","value":"'linux'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":7,"skipped":0,"passed":90,"unknown":0,"total":102},"items":[{"uid":"33e2a1360f88fa33","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/33e2a1360f88fa33","status":"passed","time":{"start":1728120935334,"stop":1728121011013,"duration":75679}},{"uid":"106ccc77b2a28ee0","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/106ccc77b2a28ee0","status":"passed","time":{"start":1728120676933,"stop":1728120752669,"duration":75736}},{"uid":"35aac9811c55be1a","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/35aac9811c55be1a","status":"passed","time":{"start":1728050552664,"stop":1728050628900,"duration":76236}},{"uid":"79808d9fcecd31e0","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/79808d9fcecd31e0","status":"passed","time":{"start":1728055572247,"stop":1728055648200,"duration":75953}},{"uid":"679855bf3c41d558","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/679855bf3c41d558","status":"passed","time":{"start":1728087831624,"stop":1728087907557,"duration":75933}},{"uid":"be709c976437e30c","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/be709c976437e30c","status":"passed","time":{"start":1728079846017,"stop":1728079921902,"duration":75885}},{"uid":"ebe823771ea0ec8d","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/ebe823771ea0ec8d","status":"passed","time":{"start":1728066493932,"stop":1728066570196,"duration":76264}},{"uid":"3a2889211b3746ac","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/3a2889211b3746ac","status":"passed","time":{"start":1728064055029,"stop":1728064130600,"duration":75571}},{"uid":"b74a55bc1cace32a","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/b74a55bc1cace32a","status":"passed","time":{"start":1728061398139,"stop":1728061474922,"duration":76783}},{"uid":"5319534a7f4f3416","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/5319534a7f4f3416","status":"passed","time":{"start":1728050552664,"stop":1728050628900,"duration":76236}},{"uid":"e58863ff9c1ff223","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/e58863ff9c1ff223","status":"passed","time":{"start":1728055572247,"stop":1728055648200,"duration":75953}},{"uid":"458cdc339b65b2d0","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/458cdc339b65b2d0","status":"passed","time":{"start":1728050566618,"stop":1728050642586,"duration":75968}},{"uid":"1d576d3395f22bdc","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/1d576d3395f22bdc","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1728050797817,"stop":1728050861497,"duration":63680}},{"uid":"759e4db9990f1fda","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/759e4db9990f1fda","status":"passed","time":{"start":1728050566618,"stop":1728050642586,"duration":75968}},{"uid":"885fbdba99b6717d","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/885fbdba99b6717d","status":"passed","time":{"start":1728047968139,"stop":1728048044089,"duration":75950}},{"uid":"a8298ebea6c3ab8c","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/a8298ebea6c3ab8c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728022120666,"stop":1728022120666,"duration":0}},{"uid":"b6abb8ee36d904d9","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/b6abb8ee36d904d9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728021484065,"stop":1728021484065,"duration":0}},{"uid":"e7b704b0bd2693bc","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/e7b704b0bd2693bc","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728021207626,"stop":1728021207626,"duration":0}},{"uid":"bc88ab646673a068","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/bc88ab646673a068","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728020908948,"stop":1728020908948,"duration":0}},{"uid":"807ca87598e2bff0","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/807ca87598e2bff0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728020364321,"stop":1728020364321,"duration":0}}]},"tags":["linux","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"3ec1e58e52e945d4.json","parameterValues":["'linux'","'linux'"]}