{"uid":"63386cdf31bd3626","name":"test_int_too_small","fullName":"tests.hil.tests.settings.test_settings#test_int_too_small","historyId":"069a84c9ea1ac9eee42b7a08261cade6","time":{"start":1728132651186,"stop":1728132656546,"duration":5360},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffb5898090>\ndevice = <golioth.golioth.Device object at 0xffffb5867390>\n\n    async def test_int_too_small(board, device):\n>       await device.settings.set('TEST_INT', -1*(2**33))\n\ntests/hil/tests/settings/test_settings.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728132583721,"stop":1728132583722,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728132583722,"stop":1728132583723,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728132583723,"stop":1728132583723,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728132583724,"stop":1728132583724,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728132583725,"stop":1728132583726,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728132583725,"stop":1728132583725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728132583726,"stop":1728132583726,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728132583727,"stop":1728132583727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728132583727,"stop":1728132583727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728132583728,"stop":1728132583728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728132583728,"stop":1728132583728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728132583729,"stop":1728132583729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728132583729,"stop":1728132584542,"duration":813},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728132584543,"stop":1728132599227,"duration":14684},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728132599228,"stop":1728132605479,"duration":6251},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728132605479,"stop":1728132631068,"duration":25589},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728132807068,"stop":1728132807069,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728132807074,"stop":1728132807896,"duration":822},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728132807899,"stop":1728132807928,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728132807931,"stop":1728132807933,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"056179870f1e"},{"name":"thread","value":"241-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":17,"skipped":0,"passed":74,"unknown":0,"total":93},"items":[{"uid":"5983ce4ab1dd58a3","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/5983ce4ab1dd58a3","status":"passed","time":{"start":1728124816797,"stop":1728124829622,"duration":12825}},{"uid":"253de341d409d02a","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/253de341d409d02a","status":"passed","time":{"start":1728124089585,"stop":1728124102323,"duration":12738}},{"uid":"f7b5d92be9c77988","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/f7b5d92be9c77988","status":"passed","time":{"start":1728051862718,"stop":1728051875663,"duration":12945}},{"uid":"40530550e1c4a5f6","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/40530550e1c4a5f6","status":"passed","time":{"start":1728060666115,"stop":1728060679192,"duration":13077}},{"uid":"1376c9c2e3ec1483","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/1376c9c2e3ec1483","status":"passed","time":{"start":1728089467328,"stop":1728089480181,"duration":12853}},{"uid":"6e05a307cbd188a4","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/6e05a307cbd188a4","status":"passed","time":{"start":1728081404988,"stop":1728081418493,"duration":13505}},{"uid":"e49a720ca4847efa","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/e49a720ca4847efa","status":"passed","time":{"start":1728074726510,"stop":1728074740525,"duration":14015}},{"uid":"16a7b3211b589099","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/16a7b3211b589099","status":"passed","time":{"start":1728072748920,"stop":1728072762835,"duration":13915}},{"uid":"a87033f805e18bd8","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/a87033f805e18bd8","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728067875787,"stop":1728067875787,"duration":0}},{"uid":"f51bf69a7d3f7989","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/f51bf69a7d3f7989","status":"passed","time":{"start":1728051862718,"stop":1728051875663,"duration":12945}},{"uid":"407425edf9a30975","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/407425edf9a30975","status":"passed","time":{"start":1728060666115,"stop":1728060679192,"duration":13077}},{"uid":"b1644271cb999913","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/b1644271cb999913","status":"passed","time":{"start":1728065682053,"stop":1728065696275,"duration":14222}},{"uid":"c8a7c32f61979c0c","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/c8a7c32f61979c0c","status":"passed","time":{"start":1728049582703,"stop":1728049596414,"duration":13711}},{"uid":"68881f7ade9f5c0b","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/68881f7ade9f5c0b","status":"passed","time":{"start":1728027947369,"stop":1728027960930,"duration":13561}},{"uid":"32da48236067b52b","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/32da48236067b52b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728022486830,"stop":1728022486830,"duration":0}},{"uid":"c4b3d9846a6bf242","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/c4b3d9846a6bf242","status":"passed","time":{"start":1728002889588,"stop":1728002903603,"duration":14015}},{"uid":"d034cf4bbd06fe47","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/d034cf4bbd06fe47","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727992415320,"stop":1727992415320,"duration":0}},{"uid":"59b47d42dceba807","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/59b47d42dceba807","status":"passed","time":{"start":1727992471526,"stop":1727992484770,"duration":13244}},{"uid":"4b5052231a39241a","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/4b5052231a39241a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727988216587,"stop":1727988216587,"duration":0}},{"uid":"c60129e058ca8d91","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/c60129e058ca8d91","status":"passed","time":{"start":1727984899252,"stop":1727984912366,"duration":13114}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"63386cdf31bd3626.json","parameterValues":["'nrf9160dk'","'zephyr'"]}