{"uid":"ba62c2f1c2e736ab","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1727766742030,"stop":1727766777753,"duration":35723},"status":"failed","statusMessage":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff80a1c890>\ndevice = <golioth.golioth.Device object at 0xffff80a71010>\nproject = <golioth.golioth.Project object at 0xffff81c15f90>\nreleases = {'test_blocks': Release <66fba0c69816a3c02f198c5b, release_tags=[], device_tags=['66fba0c49816a3c02f198c56'], artifact..., release_tags=[], device_tags=['66fba0c49816a3c02f198c56'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 4 == 3\nE            +  where 4 = int('4')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727766669079,"stop":1727766669080,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727766669080,"stop":1727766669080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727766669081,"stop":1727766669081,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727766669082,"stop":1727766669082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727766669082,"stop":1727766669082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727766669083,"stop":1727766669083,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727766669083,"stop":1727766669083,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727766669084,"stop":1727766669084,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727766669084,"stop":1727766669084,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727766669085,"stop":1727766669085,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727766669086,"stop":1727766669086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727766669087,"stop":1727766669087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727766669088,"stop":1727766718522,"duration":49434},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727766718524,"stop":1727766719043,"duration":519},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727766719044,"stop":1727766719990,"duration":946},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727766719991,"stop":1727766723957,"duration":3966},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727766723958,"stop":1727766724542,"duration":584},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727766724543,"stop":1727766725367,"duration":824},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727766725368,"stop":1727766727096,"duration":1728},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727766742027,"stop":1727766742028,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff80a1c890>\ndevice = <golioth.golioth.Device object at 0xffff80a71010>\nproject = <golioth.golioth.Project object at 0xffff81c15f90>\nreleases = {'test_blocks': Release <66fba0c69816a3c02f198c5b, release_tags=[], device_tags=['66fba0c49816a3c02f198c56'], artifact..., release_tags=[], device_tags=['66fba0c49816a3c02f198c56'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 4 == 3\nE            +  where 4 = int('4')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"332925f455b555a3","name":"stdout","source":"332925f455b555a3.txt","type":"text/plain","size":2157}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727766777927,"stop":1727766779001,"duration":1074},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727766779003,"stop":1727766780583,"duration":1580},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727766780585,"stop":1727766781415,"duration":830},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727766781417,"stop":1727766781417,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727766781419,"stop":1727766781419,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727766781421,"stop":1727766781835,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727766781837,"stop":1727766781837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727766781839,"stop":1727766781849,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"b773425a6b41"},{"name":"thread","value":"245-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":2,"skipped":0,"passed":37,"unknown":0,"total":42},"items":[{"uid":"82f2b2fb05ec021b","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/82f2b2fb05ec021b","status":"passed","time":{"start":1727762106832,"stop":1727762186308,"duration":79476}},{"uid":"d7fd61463f9e08a1","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/d7fd61463f9e08a1","status":"passed","time":{"start":1727761187245,"stop":1727761267780,"duration":80535}},{"uid":"3a5a37abed2571b1","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/3a5a37abed2571b1","status":"passed","time":{"start":1727758320987,"stop":1727758402081,"duration":81094}},{"uid":"780fb1ec0828ce8b","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/780fb1ec0828ce8b","status":"passed","time":{"start":1727742830525,"stop":1727742909583,"duration":79058}},{"uid":"d351a389becedb89","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/d351a389becedb89","status":"passed","time":{"start":1727730416679,"stop":1727730493493,"duration":76814}},{"uid":"92fcf543fad7fdd9","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/92fcf543fad7fdd9","status":"passed","time":{"start":1727656340895,"stop":1727656418232,"duration":77337}},{"uid":"57f9c4620cd7dc5e","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/57f9c4620cd7dc5e","status":"passed","time":{"start":1727570011718,"stop":1727570089112,"duration":77394}},{"uid":"e18a34c3d1810040","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/e18a34c3d1810040","status":"passed","time":{"start":1727542975420,"stop":1727543056651,"duration":81231}},{"uid":"6e46b4818815f92b","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/6e46b4818815f92b","status":"passed","time":{"start":1727542089054,"stop":1727542169046,"duration":79992}},{"uid":"2f1bb3e485dd7563","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/2f1bb3e485dd7563","status":"passed","time":{"start":1727541186897,"stop":1727541268948,"duration":82051}},{"uid":"181f7c79703b9b0d","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/181f7c79703b9b0d","status":"passed","time":{"start":1727483469825,"stop":1727483549925,"duration":80100}},{"uid":"b3fa57365997e11f","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/b3fa57365997e11f","status":"passed","time":{"start":1727475533536,"stop":1727475612932,"duration":79396}},{"uid":"291eec0a68ae7fbf","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/291eec0a68ae7fbf","status":"passed","time":{"start":1727460810508,"stop":1727460888849,"duration":78341}},{"uid":"6d77cef11a95b336","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/6d77cef11a95b336","status":"passed","time":{"start":1727460810508,"stop":1727460888849,"duration":78341}},{"uid":"dfcf94bb3d39a6cd","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/dfcf94bb3d39a6cd","status":"passed","time":{"start":1727362145993,"stop":1727362227041,"duration":81048}},{"uid":"588b3b7a8dc225d2","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/588b3b7a8dc225d2","status":"passed","time":{"start":1727453903146,"stop":1727453982433,"duration":79287}},{"uid":"b70d881839760b8a","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/b70d881839760b8a","status":"passed","time":{"start":1727386819743,"stop":1727386900349,"duration":80606}},{"uid":"154b2bea03ac9109","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/154b2bea03ac9109","status":"passed","time":{"start":1727453005095,"stop":1727453086217,"duration":81122}},{"uid":"5457e3f4830aa5c5","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/5457e3f4830aa5c5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727397057630,"stop":1727397138642,"duration":81012}},{"uid":"b1bfa43eb565768a","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/b1bfa43eb565768a","status":"passed","time":{"start":1727392575140,"stop":1727392655460,"duration":80320}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"ba62c2f1c2e736ab.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}