{"uid":"d44aa873ef70c2b1","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"7b5bd2e87b0538b1f5ac1141f1902779","time":{"start":1727766737692,"stop":1727766774899,"duration":37207},"status":"failed","statusMessage":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb6dfb710>\ndevice = <golioth.golioth.Device object at 0xffffb6dd0990>\nproject = <golioth.golioth.Project object at 0xffffb84bc110>\nreleases = {'test_blocks': Release <66fba0c39816a3c02f198c54, release_tags=[], device_tags=['66fba0c19816a3c02f198c51'], artifact..., release_tags=[], device_tags=['66fba0c19816a3c02f198c51'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 4 == 3\nE            +  where 4 = int('4')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727766691002,"stop":1727766691002,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727766691003,"stop":1727766691003,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727766691004,"stop":1727766691004,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727766691004,"stop":1727766691004,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727766691005,"stop":1727766691005,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727766691006,"stop":1727766691006,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727766691007,"stop":1727766691007,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727766691008,"stop":1727766691008,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727766691009,"stop":1727766691009,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727766691010,"stop":1727766691011,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727766691010,"stop":1727766691010,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727766691011,"stop":1727766691011,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727766691012,"stop":1727766716629,"duration":25617},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727766716631,"stop":1727766717185,"duration":554},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727766717186,"stop":1727766718191,"duration":1005},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727766718191,"stop":1727766721010,"duration":2819},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727766721011,"stop":1727766721579,"duration":568},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727766721580,"stop":1727766722386,"duration":806},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727766722387,"stop":1727766724255,"duration":1868},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727766737689,"stop":1727766737689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb6dfb710>\ndevice = <golioth.golioth.Device object at 0xffffb6dd0990>\nproject = <golioth.golioth.Project object at 0xffffb84bc110>\nreleases = {'test_blocks': Release <66fba0c39816a3c02f198c54, release_tags=[], device_tags=['66fba0c19816a3c02f198c51'], artifact..., release_tags=[], device_tags=['66fba0c19816a3c02f198c51'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 4 == 3\nE            +  where 4 = int('4')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"1ae66d8651f9ac30","name":"stdout","source":"1ae66d8651f9ac30.txt","type":"text/plain","size":1686}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727766775191,"stop":1727766776219,"duration":1028},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727766776221,"stop":1727766777938,"duration":1717},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727766777940,"stop":1727766778784,"duration":844},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727766778786,"stop":1727766778786,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727766778787,"stop":1727766778788,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727766778790,"stop":1727766779285,"duration":495},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727766779288,"stop":1727766779288,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727766779290,"stop":1727766779293,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"177b9888dac6"},{"name":"thread","value":"251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":35,"unknown":0,"total":41},"items":[{"uid":"4d7da57f2d3e89ee","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/4d7da57f2d3e89ee","status":"passed","time":{"start":1727762638397,"stop":1727762718293,"duration":79896}},{"uid":"2522eb522a3d835","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/2522eb522a3d835","status":"passed","time":{"start":1727761343447,"stop":1727761424148,"duration":80701}},{"uid":"de421bbbb8c710f4","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/de421bbbb8c710f4","status":"passed","time":{"start":1727758326446,"stop":1727758407362,"duration":80916}},{"uid":"df00f93adc8632d9","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/df00f93adc8632d9","status":"passed","time":{"start":1727742863131,"stop":1727742940677,"duration":77546}},{"uid":"d177721f2d4e2642","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/d177721f2d4e2642","status":"passed","time":{"start":1727730423014,"stop":1727730500483,"duration":77469}},{"uid":"3827f0f9bfc23d79","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/3827f0f9bfc23d79","status":"passed","time":{"start":1727656377023,"stop":1727656454888,"duration":77865}},{"uid":"335181ada7ad89df","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/335181ada7ad89df","status":"passed","time":{"start":1727570042252,"stop":1727570119672,"duration":77420}},{"uid":"598c70548cd9eec4","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/598c70548cd9eec4","status":"passed","time":{"start":1727543387053,"stop":1727543464554,"duration":77501}},{"uid":"145be54e0630ae56","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/145be54e0630ae56","status":"passed","time":{"start":1727542232467,"stop":1727542310072,"duration":77605}},{"uid":"eed042fe5bcf37e7","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/eed042fe5bcf37e7","status":"passed","time":{"start":1727541179324,"stop":1727541256994,"duration":77670}},{"uid":"2605ade144f7df5a","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/2605ade144f7df5a","status":"passed","time":{"start":1727483408230,"stop":1727483485721,"duration":77491}},{"uid":"bb95986693fb97d9","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/bb95986693fb97d9","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727475506212,"stop":1727475520058,"duration":13846}},{"uid":"9154fcbd08805a1a","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/9154fcbd08805a1a","status":"passed","time":{"start":1727460796558,"stop":1727460874616,"duration":78058}},{"uid":"c3bc70405f2441bb","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/c3bc70405f2441bb","status":"passed","time":{"start":1727460796558,"stop":1727460874616,"duration":78058}},{"uid":"770c6c9e8835297f","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/770c6c9e8835297f","status":"passed","time":{"start":1727457725987,"stop":1727457803456,"duration":77469}},{"uid":"ae59c1cc735f0cd5","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/ae59c1cc735f0cd5","status":"passed","time":{"start":1727393010208,"stop":1727393087718,"duration":77510}},{"uid":"d33fd002e5a7005e","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/d33fd002e5a7005e","status":"passed","time":{"start":1727387294067,"stop":1727387371622,"duration":77555}},{"uid":"817732af3155f2dc","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/817732af3155f2dc","status":"passed","time":{"start":1727452931226,"stop":1727453008793,"duration":77567}},{"uid":"434e74290565085b","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/434e74290565085b","status":"passed","time":{"start":1727397097162,"stop":1727397174756,"duration":77594}},{"uid":"4263b1565bfe1301","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/4263b1565bfe1301","status":"passed","time":{"start":1727393010208,"stop":1727393087718,"duration":77510}}]},"tags":["mikes_orange_pi","esp-idf","anyio","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"d44aa873ef70c2b1.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}