{"uid":"636223dd1877ac98","name":"test_lightdb_observed","fullName":"tests.hil.tests.lightdb.test_lightdb#test_lightdb_observed","historyId":"a348366fa0fadfcdff350a5d7aaf8d01","time":{"start":1728330097601,"stop":1728330123284,"duration":25683},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"self = <test_lightdb.ObserveTester object at 0xffffa6e8a6d0>, value = 21\ncontent_type = <Coap_Content_Type.CBOR: 2>\n\n    async def set(self, value: int, content_type: Coap_Content_Type):\n        self.events_count += 1\n    \n        if content_type == Coap_Content_Type.JSON:\n            observe_path = 'hil/lightdb/observed/int'\n        elif content_type == Coap_Content_Type.CBOR:\n            observe_path = 'hil/lightdb/observed/cbor/int'\n        else:\n            assert False\n    \n        await self.device.lightdb.set(observe_path, value)\n        with trio.fail_after(10):\n            count = None\n    \n            while count is None or count < self.events_count:\n                await trio.sleep(1)\n>               count = await self.device.lightdb.get('hil/lightdb/observed/events/count')\n\ntests/hil/tests/lightdb/test_lightdb.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:520: in get\n    response = await c.get(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:132: in connect_tcp\n    stream: trio.abc.Stream = await trio.open_tcp_stream(\n/usr/local/lib/python3.11/dist-packages/trio/_highlevel_open_tcp_stream.py:278: in open_tcp_stream\n    targets = await getaddrinfo(host, port, type=SOCK_STREAM)\n/usr/local/lib/python3.11/dist-packages/trio/_socket.py:211: in getaddrinfo\n    async with _try_sync(numeric_only_failure):\n/usr/local/lib/python3.11/dist-packages/trio/_socket.py:76: in __aenter__\n    await trio.lowlevel.checkpoint_if_cancelled()\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:2773: in checkpoint_if_cancelled\n    await _core.checkpoint()\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:2751: in checkpoint\n    await _core.wait_task_rescheduled(lambda _: _core.Abort.SUCCEEDED)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\ndevice = <golioth.golioth.Device object at 0xffffa6d309d0>\n\n    async def test_lightdb_observed(device):\n        ot = ObserveTester(device)\n    \n        await ot.set(15, Coap_Content_Type.JSON)\n        await ot.set(17, Coap_Content_Type.JSON)\n        await ot.set(19, Coap_Content_Type.CBOR)\n>       await ot.set(21, Coap_Content_Type.CBOR)\n\ntests/hil/tests/lightdb/test_lightdb.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/hil/tests/lightdb/test_lightdb.py:111: in set\n    with trio.fail_after(10):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 138152.14181556617\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728330010207,"stop":1728330010208,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728330010208,"stop":1728330010209,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728330010209,"stop":1728330010209,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728330010210,"stop":1728330010210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728330010211,"stop":1728330010211,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728330010212,"stop":1728330010212,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728330010213,"stop":1728330010213,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728330010214,"stop":1728330010214,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728330010214,"stop":1728330010214,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728330010215,"stop":1728330010215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728330010216,"stop":1728330010216,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728330010216,"stop":1728330010217,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728330010217,"stop":1728330010715,"duration":498},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728330010715,"stop":1728330060645,"duration":49930},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728330060647,"stop":1728330061786,"duration":1139},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728330061787,"stop":1728330086331,"duration":24544},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728330124770,"stop":1728330125347,"duration":577},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728330125349,"stop":1728330125976,"duration":627},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728330125978,"stop":1728330125986,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728330125988,"stop":1728330125990,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"6bfe3745be9a"},{"name":"thread","value":"235-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":120,"unknown":0,"total":124},"items":[{"uid":"c110ec17b0dd4f8f","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/c110ec17b0dd4f8f","status":"passed","time":{"start":1728326877960,"stop":1728326890061,"duration":12101}},{"uid":"3945a078902bf5c1","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/3945a078902bf5c1","status":"passed","time":{"start":1728338501141,"stop":1728338510831,"duration":9690}},{"uid":"8fc561b02fb7b008","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/8fc561b02fb7b008","status":"passed","time":{"start":1728398943695,"stop":1728398953106,"duration":9411}},{"uid":"391f2164b3ab979d","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/391f2164b3ab979d","status":"passed","time":{"start":1728338501141,"stop":1728338510831,"duration":9690}},{"uid":"f7e9a13750f0a56b","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/f7e9a13750f0a56b","status":"passed","time":{"start":1728347518630,"stop":1728347530792,"duration":12162}},{"uid":"2e13a5d3b9be5395","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/2e13a5d3b9be5395","status":"passed","time":{"start":1728339495973,"stop":1728339511077,"duration":15104}},{"uid":"2b4c517fd394acd6","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/2b4c517fd394acd6","status":"passed","time":{"start":1728338501141,"stop":1728338510831,"duration":9690}},{"uid":"583ad7d936ee85d7","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/583ad7d936ee85d7","status":"passed","time":{"start":1728335496866,"stop":1728335509142,"duration":12276}},{"uid":"b231f3cea908c717","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/b231f3cea908c717","status":"passed","time":{"start":1728316080099,"stop":1728316089591,"duration":9492}},{"uid":"77a639ebefb9d29a","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/77a639ebefb9d29a","status":"passed","time":{"start":1728318792783,"stop":1728318805137,"duration":12354}},{"uid":"9ca8a554c6548637","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/9ca8a554c6548637","status":"passed","time":{"start":1728318792783,"stop":1728318805137,"duration":12354}},{"uid":"4ecaab3d401401c9","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/4ecaab3d401401c9","status":"passed","time":{"start":1728316080099,"stop":1728316089591,"duration":9492}},{"uid":"ff5387500348b697","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/ff5387500348b697","status":"passed","time":{"start":1728311594323,"stop":1728311609495,"duration":15172}},{"uid":"1ec03c953acc2c5a","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/1ec03c953acc2c5a","status":"passed","time":{"start":1728305453350,"stop":1728305465564,"duration":12214}},{"uid":"dcfd23e41d0c76dc","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/dcfd23e41d0c76dc","status":"passed","time":{"start":1728121952915,"stop":1728121963356,"duration":10441}},{"uid":"126436d9265f039e","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/126436d9265f039e","status":"passed","time":{"start":1728261105350,"stop":1728261116457,"duration":11107}},{"uid":"470bc68372473363","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/470bc68372473363","status":"passed","time":{"start":1728122842465,"stop":1728122852691,"duration":10226}},{"uid":"ea882be4806234a9","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/ea882be4806234a9","status":"passed","time":{"start":1728174704017,"stop":1728174717500,"duration":13483}},{"uid":"9ff858d500f8b51b","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/9ff858d500f8b51b","status":"passed","time":{"start":1728063270697,"stop":1728063283875,"duration":13178}},{"uid":"1a1d27c76bcb818b","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/1a1d27c76bcb818b","status":"passed","time":{"start":1728128125249,"stop":1728128136879,"duration":11630}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"636223dd1877ac98.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}