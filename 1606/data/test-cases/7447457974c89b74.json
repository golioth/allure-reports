{"uid":"7447457974c89b74","name":"test_no_args","fullName":"tests.hil.tests.rpc.test_rpc#test_no_args","historyId":"8550db7a61e240971014d0cb2b88a59c","time":{"start":1728331200621,"stop":1728331205944,"duration":5323},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa3ec2590>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffffa3ece550>\ndevice = <golioth.golioth.Device object at 0xffffa3ec2ad0>\n\n    async def test_no_args(board, device):\n>       await device.rpc.no_response()\n\ntests/hil/tests/rpc/test_rpc.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa3ec2590>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728331127860,"stop":1728331127860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728331127861,"stop":1728331127862,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728331127861,"stop":1728331127861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728331127862,"stop":1728331127862,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728331127863,"stop":1728331127863,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728331127864,"stop":1728331127864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728331127865,"stop":1728331127865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728331127866,"stop":1728331127866,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728331127866,"stop":1728331127867,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728331127867,"stop":1728331127868,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728331127868,"stop":1728331127868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728331127869,"stop":1728331128304,"duration":435},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728331127869,"stop":1728331127869,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728331128304,"stop":1728331169340,"duration":41036},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728331169342,"stop":1728331170455,"duration":1113},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728331170455,"stop":1728331199544,"duration":29089},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728331272184,"stop":1728331272184,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728331272186,"stop":1728331272582,"duration":396},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728331272586,"stop":1728331272588,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728331272592,"stop":1728331272596,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"73938f235661"},{"name":"thread","value":"263-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":103,"unknown":0,"total":119},"items":[{"uid":"928a46adb2b2f9fc","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/928a46adb2b2f9fc","status":"passed","time":{"start":1728326803023,"stop":1728326804573,"duration":1550}},{"uid":"f61a7c0ea7cec078","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/f61a7c0ea7cec078","status":"passed","time":{"start":1728339657617,"stop":1728339658572,"duration":955}},{"uid":"248a6312379849de","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/248a6312379849de","status":"passed","time":{"start":1728399961121,"stop":1728399962072,"duration":951}},{"uid":"5e3a14e7de448e50","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/5e3a14e7de448e50","status":"passed","time":{"start":1728339657617,"stop":1728339658572,"duration":955}},{"uid":"39dea0374ade8e10","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/39dea0374ade8e10","status":"passed","time":{"start":1728348666205,"stop":1728348667765,"duration":1560}},{"uid":"bcecf42bdccf2a16","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/bcecf42bdccf2a16","status":"passed","time":{"start":1728340922330,"stop":1728340923283,"duration":953}},{"uid":"529ad63607a43290","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/529ad63607a43290","status":"passed","time":{"start":1728339657617,"stop":1728339658572,"duration":955}},{"uid":"aad5448205e7a7c8","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/aad5448205e7a7c8","status":"passed","time":{"start":1728335917078,"stop":1728335918606,"duration":1528}},{"uid":"f90e7aa55bbc9d1e","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/f90e7aa55bbc9d1e","status":"passed","time":{"start":1728317126067,"stop":1728317127022,"duration":955}},{"uid":"3372910dc53998d2","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/3372910dc53998d2","status":"passed","time":{"start":1728325351432,"stop":1728325352390,"duration":958}},{"uid":"62c5108bfe4a78e8","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/62c5108bfe4a78e8","status":"passed","time":{"start":1728319098996,"stop":1728319100523,"duration":1527}},{"uid":"dd45e821c53d02dc","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/dd45e821c53d02dc","status":"passed","time":{"start":1728317126067,"stop":1728317127022,"duration":955}},{"uid":"2e6557b8b7df4c32","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/2e6557b8b7df4c32","status":"passed","time":{"start":1728313067159,"stop":1728313068117,"duration":958}},{"uid":"9c4080939c78a0f9","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/9c4080939c78a0f9","status":"passed","time":{"start":1728133267778,"stop":1728133268734,"duration":956}},{"uid":"85fdbe0ec1678a90","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/85fdbe0ec1678a90","status":"passed","time":{"start":1728305652377,"stop":1728305653904,"duration":1527}},{"uid":"8611f6b8f98cfc3f","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/8611f6b8f98cfc3f","status":"passed","time":{"start":1728261378133,"stop":1728261379685,"duration":1552}},{"uid":"cb6f476f899165d9","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/cb6f476f899165d9","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1728126785908,"stop":1728126791225,"duration":5317}},{"uid":"2f07cad5dd3ec396","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/2f07cad5dd3ec396","status":"passed","time":{"start":1728175124338,"stop":1728175125868,"duration":1530}},{"uid":"fc3406a8309f2863","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/fc3406a8309f2863","status":"passed","time":{"start":1728066009523,"stop":1728066011100,"duration":1577}},{"uid":"9bb8d9105ed6bfcd","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/9bb8d9105ed6bfcd","status":"passed","time":{"start":1728129290035,"stop":1728129291599,"duration":1564}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"7447457974c89b74.json","parameterValues":["'rak5010'","'zephyr'"]}