{"uid":"1337ea8e69e11983","name":"test_string_return","fullName":"tests.hil.tests.rpc.test_rpc#test_string_return","historyId":"c8ffbf1cf83f873d11cb62962fc31f13","time":{"start":1727968946929,"stop":1727968952447,"duration":5518},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa1047090>\nmethod = 'basic_return_type', params = ('string',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa105bad0>\ndevice = <golioth.golioth.Device object at 0xffffa10450d0>\n\n    async def test_string_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"string\")\n\ntests/hil/tests/rpc/test_rpc.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa1047090>\nmethod = 'basic_return_type', params = ('string',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727968891451,"stop":1727968891452,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727968891452,"stop":1727968891452,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727968891453,"stop":1727968891453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727968891454,"stop":1727968891454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727968891455,"stop":1727968891455,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727968891456,"stop":1727968891456,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727968891457,"stop":1727968891457,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727968891457,"stop":1727968891458,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727968891458,"stop":1727968891458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727968891459,"stop":1727968891459,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727968891459,"stop":1727968891460,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727968891460,"stop":1727968892107,"duration":647},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727968891460,"stop":1727968891460,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727968892107,"stop":1727968931731,"duration":39624},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727968931732,"stop":1727968933445,"duration":1713},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727968933446,"stop":1727968937236,"duration":3790},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727969013968,"stop":1727969013968,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727969013971,"stop":1727969014574,"duration":603},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727969014576,"stop":1727969014581,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727969014583,"stop":1727969014586,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"4695dc87229b"},{"name":"thread","value":"265-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":65,"unknown":0,"total":70},"items":[{"uid":"9d15647e427edbbb","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/9d15647e427edbbb","status":"passed","time":{"start":1727968528805,"stop":1727968531811,"duration":3006}},{"uid":"cdbee6e4df07365d","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/cdbee6e4df07365d","status":"passed","time":{"start":1727964822290,"stop":1727964823311,"duration":1021}},{"uid":"c1acdfa9081923e1","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/c1acdfa9081923e1","status":"passed","time":{"start":1727959495040,"stop":1727959496538,"duration":1498}},{"uid":"cdda647d20ce4100","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/cdda647d20ce4100","status":"passed","time":{"start":1727956244032,"stop":1727956245532,"duration":1500}},{"uid":"e11393b32e0547e9","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/e11393b32e0547e9","status":"passed","time":{"start":1727955195846,"stop":1727955196858,"duration":1012}},{"uid":"58797d54883f0c28","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/58797d54883f0c28","status":"passed","time":{"start":1727951521603,"stop":1727951522603,"duration":1000}},{"uid":"333a417f909df418","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/333a417f909df418","status":"passed","time":{"start":1727926040237,"stop":1727926041252,"duration":1015}},{"uid":"c659427b143b7335","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/c659427b143b7335","status":"passed","time":{"start":1727945096395,"stop":1727945097394,"duration":999}},{"uid":"ede20a863b01271c","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/ede20a863b01271c","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727944219882,"stop":1727944225193,"duration":5311}},{"uid":"55c6094dbe5aa44a","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/55c6094dbe5aa44a","status":"passed","time":{"start":1727943506048,"stop":1727943507062,"duration":1014}},{"uid":"c2b7cfe187a4a7ef","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/c2b7cfe187a4a7ef","status":"passed","time":{"start":1727831674424,"stop":1727831675647,"duration":1223}},{"uid":"a81426d5ee6d8b5e","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/a81426d5ee6d8b5e","status":"passed","time":{"start":1727926040237,"stop":1727926041252,"duration":1015}},{"uid":"a6cbfa51485fd480","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/a6cbfa51485fd480","status":"passed","time":{"start":1727926040237,"stop":1727926041252,"duration":1015}},{"uid":"6e66c098f1d4c924","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/6e66c098f1d4c924","status":"passed","time":{"start":1727915709081,"stop":1727915710303,"duration":1222}},{"uid":"f7b44151741c7e82","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/f7b44151741c7e82","status":"passed","time":{"start":1727906953201,"stop":1727906954226,"duration":1025}},{"uid":"ac3dd0b6f94b89f4","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/ac3dd0b6f94b89f4","status":"passed","time":{"start":1727831674424,"stop":1727831675647,"duration":1223}},{"uid":"4af5debde6da9b0b","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/4af5debde6da9b0b","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727829223412,"stop":1727829228780,"duration":5368}},{"uid":"69aeb94e65760d7","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/69aeb94e65760d7","status":"passed","time":{"start":1727801672224,"stop":1727801673473,"duration":1249}},{"uid":"7bfe893d950e4361","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/7bfe893d950e4361","status":"passed","time":{"start":1727813249701,"stop":1727813251203,"duration":1502}},{"uid":"85c7f862e39ff028","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/85c7f862e39ff028","status":"passed","time":{"start":1727795503981,"stop":1727795509918,"duration":5937}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"1337ea8e69e11983.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}