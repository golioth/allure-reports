{"uid":"9ae1a370f0836067","name":"test_int_too_small","fullName":"tests.hil.tests.settings.test_settings#test_int_too_small","historyId":"93b38f713b3d7f50664a8548eb6ac95a","time":{"start":1727968791152,"stop":1727968811503,"duration":20351},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8bfab690>\ndevice = <golioth.golioth.Device object at 0xffff8bf23550>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8bf23550>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727968686308,"stop":1727968686309,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727968686309,"stop":1727968686310,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727968686310,"stop":1727968686310,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727968686311,"stop":1727968686311,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727968686312,"stop":1727968686312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727968686313,"stop":1727968686313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727968686314,"stop":1727968686314,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727968686315,"stop":1727968686315,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727968686316,"stop":1727968686316,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727968686317,"stop":1727968686318,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727968686317,"stop":1727968686317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727968686318,"stop":1727968686318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727968686319,"stop":1727968686808,"duration":489},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727968686809,"stop":1727968736639,"duration":49830},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727968736640,"stop":1727968738199,"duration":1559},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727968738199,"stop":1727968760245,"duration":22046},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8bfab690>\ndevice = <golioth.golioth.Device object at 0xffff8bf23550>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8bf23550>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"b7bbddd9c7630061","name":"stdout","source":"b7bbddd9c7630061.txt","type":"text/plain","size":2781}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727968989386,"stop":1727968989386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727968989390,"stop":1727968989845,"duration":455},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727968989847,"stop":1727968989852,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727968989855,"stop":1727968989857,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"9510ffc6750e"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":72,"unknown":0,"total":74},"items":[{"uid":"8c1e75f2c06354a2","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/8c1e75f2c06354a2","status":"passed","time":{"start":1727967880915,"stop":1727967893877,"duration":12962}},{"uid":"c2dd89cc9f865e43","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/c2dd89cc9f865e43","status":"passed","time":{"start":1727964935637,"stop":1727964949594,"duration":13957}},{"uid":"27d914328569af80","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/27d914328569af80","status":"passed","time":{"start":1727961538353,"stop":1727961551569,"duration":13216}},{"uid":"11d9ff2c86228f97","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/11d9ff2c86228f97","status":"passed","time":{"start":1727955582354,"stop":1727955595756,"duration":13402}},{"uid":"5018ac2104786c53","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/5018ac2104786c53","status":"passed","time":{"start":1727954690081,"stop":1727954703021,"duration":12940}},{"uid":"fd329b9ab9c11533","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/fd329b9ab9c11533","status":"passed","time":{"start":1727906829617,"stop":1727906842934,"duration":13317}},{"uid":"7c15ba018bba0c78","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/7c15ba018bba0c78","status":"passed","time":{"start":1727932523028,"stop":1727932536205,"duration":13177}},{"uid":"e528b9304bbaebc9","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/e528b9304bbaebc9","status":"passed","time":{"start":1727944496178,"stop":1727944509268,"duration":13090}},{"uid":"76af2f29dd5a2212","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/76af2f29dd5a2212","status":"passed","time":{"start":1727943646454,"stop":1727943659424,"duration":12970}},{"uid":"f5188919ffd01dbc","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/f5188919ffd01dbc","status":"passed","time":{"start":1727942789880,"stop":1727942802836,"duration":12956}},{"uid":"31cef2d00876ecdd","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/31cef2d00876ecdd","status":"passed","time":{"start":1727831844767,"stop":1727831857581,"duration":12814}},{"uid":"3948da719c86f3ee","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/3948da719c86f3ee","status":"passed","time":{"start":1727932523028,"stop":1727932536205,"duration":13177}},{"uid":"16e7130576861145","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/16e7130576861145","status":"passed","time":{"start":1727926062098,"stop":1727926075322,"duration":13224}},{"uid":"fc489ebeec58dd5c","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/fc489ebeec58dd5c","status":"passed","time":{"start":1727915789237,"stop":1727915803433,"duration":14196}},{"uid":"2201c84d372a3ee1","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/2201c84d372a3ee1","status":"passed","time":{"start":1727906829617,"stop":1727906842934,"duration":13317}},{"uid":"640db1a2dac74f73","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/640db1a2dac74f73","status":"passed","time":{"start":1727831844767,"stop":1727831857581,"duration":12814}},{"uid":"6e61c758d2d95322","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/6e61c758d2d95322","status":"passed","time":{"start":1727829383926,"stop":1727829397982,"duration":14056}},{"uid":"53df87dfd7acfbca","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/53df87dfd7acfbca","status":"passed","time":{"start":1727801000542,"stop":1727801013815,"duration":13273}},{"uid":"d49d4e7cf86caec1","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/d49d4e7cf86caec1","status":"passed","time":{"start":1727800076896,"stop":1727800089690,"duration":12794}},{"uid":"285d49caa2f1d0c1","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/285d49caa2f1d0c1","status":"passed","time":{"start":1727811469543,"stop":1727811482418,"duration":12875}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"9ae1a370f0836067.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}