{"uid":"76990cc0c101f500","name":"test_float_return","fullName":"tests.hil.tests.rpc.test_rpc#test_float_return","historyId":"01cfb64ecfcd6cde7d12f5bcbf88f897","time":{"start":1727968953499,"stop":1727968959081,"duration":5582},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa1047090>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa105bad0>\ndevice = <golioth.golioth.Device object at 0xffffa10450d0>\n\n    async def test_float_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"float\")\n\ntests/hil/tests/rpc/test_rpc.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa1047090>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727968891451,"stop":1727968891452,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727968891452,"stop":1727968891452,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727968891453,"stop":1727968891453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727968891454,"stop":1727968891454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727968891455,"stop":1727968891455,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727968891456,"stop":1727968891456,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727968891457,"stop":1727968891457,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727968891457,"stop":1727968891458,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727968891458,"stop":1727968891458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727968891459,"stop":1727968891459,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727968891459,"stop":1727968891460,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727968891460,"stop":1727968892107,"duration":647},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727968891460,"stop":1727968891460,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727968892107,"stop":1727968931731,"duration":39624},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727968931732,"stop":1727968933445,"duration":1713},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727968933446,"stop":1727968937236,"duration":3790},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727969013968,"stop":1727969013968,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727969013971,"stop":1727969014574,"duration":603},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727969014576,"stop":1727969014581,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727969014583,"stop":1727969014586,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"4695dc87229b"},{"name":"thread","value":"265-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":68,"unknown":0,"total":70},"items":[{"uid":"b32f295ab8b6616","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/b32f295ab8b6616","status":"passed","time":{"start":1727968531838,"stop":1727968533308,"duration":1470}},{"uid":"c33d519b8e053b8b","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/c33d519b8e053b8b","status":"passed","time":{"start":1727964823337,"stop":1727964824533,"duration":1196}},{"uid":"40dd26b7918c5ab0","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/40dd26b7918c5ab0","status":"passed","time":{"start":1727959496561,"stop":1727959497783,"duration":1222}},{"uid":"fb8a984e623e683","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/fb8a984e623e683","status":"passed","time":{"start":1727956245558,"stop":1727956246784,"duration":1226}},{"uid":"59c8b7a376d0e892","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/59c8b7a376d0e892","status":"passed","time":{"start":1727955196868,"stop":1727955198189,"duration":1321}},{"uid":"1f0030608afaa518","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/1f0030608afaa518","status":"passed","time":{"start":1727951522629,"stop":1727951524101,"duration":1472}},{"uid":"2e48c7deb70c14b3","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/2e48c7deb70c14b3","status":"passed","time":{"start":1727926041262,"stop":1727926042479,"duration":1217}},{"uid":"396d1a0821ca2a21","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/396d1a0821ca2a21","status":"passed","time":{"start":1727945097420,"stop":1727945098636,"duration":1216}},{"uid":"72ed53e112b7a20","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/72ed53e112b7a20","status":"passed","time":{"start":1727944226170,"stop":1727944228714,"duration":2544}},{"uid":"7e296363cddc1569","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/7e296363cddc1569","status":"passed","time":{"start":1727943507073,"stop":1727943508316,"duration":1243}},{"uid":"e315674ac13da53f","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/e315674ac13da53f","status":"passed","time":{"start":1727831675666,"stop":1727831676669,"duration":1003}},{"uid":"91b43466e6f50858","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/91b43466e6f50858","status":"passed","time":{"start":1727926041262,"stop":1727926042479,"duration":1217}},{"uid":"f9f4539a092b8b7b","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/f9f4539a092b8b7b","status":"passed","time":{"start":1727926041262,"stop":1727926042479,"duration":1217}},{"uid":"bc764dfbb4c430d0","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/bc764dfbb4c430d0","status":"passed","time":{"start":1727915710322,"stop":1727915711426,"duration":1104}},{"uid":"39bff6217e4f9bad","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/39bff6217e4f9bad","status":"passed","time":{"start":1727906954252,"stop":1727906955549,"duration":1297}},{"uid":"c3ca3f80b25f51a3","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/c3ca3f80b25f51a3","status":"passed","time":{"start":1727831675666,"stop":1727831676669,"duration":1003}},{"uid":"450c8e030040b2bc","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/450c8e030040b2bc","status":"passed","time":{"start":1727829229850,"stop":1727829232172,"duration":2322}},{"uid":"4292669256cc5e64","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/4292669256cc5e64","status":"passed","time":{"start":1727801673499,"stop":1727801674970,"duration":1471}},{"uid":"f473a26f8bfc9668","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/f473a26f8bfc9668","status":"passed","time":{"start":1727813251227,"stop":1727813252701,"duration":1474}},{"uid":"1e5739688ff0007a","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/1e5739688ff0007a","status":"passed","time":{"start":1727795509939,"stop":1727795511033,"duration":1094}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"76990cc0c101f500.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}