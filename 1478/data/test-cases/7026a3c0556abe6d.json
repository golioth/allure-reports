{"uid":"7026a3c0556abe6d","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1727760144065,"stop":1727760206136,"duration":62071},"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffb36ab990>\ndevice = <golioth.golioth.Device object at 0xffffb36aba50>\nproject = <golioth.golioth.Project object at 0xffffb4d50bd0>\nreleases = {'test_blocks': Release <66fb86fb9816a3c02f19821b, release_tags=[], device_tags=['66fb86f79816a3c02f198218'], artifact..., release_tags=[], device_tags=['66fb86f79816a3c02f198218'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n>           await device.refresh()\n\ntests/hil/tests/ota/test_ota.py:184: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:405: in refresh\n    resp = await c.get(self.base_url)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectError","flaky":true,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727760090087,"stop":1727760090087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727760090088,"stop":1727760090088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727760090089,"stop":1727760090089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727760090090,"stop":1727760090090,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727760090090,"stop":1727760090090,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727760090091,"stop":1727760090091,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727760090091,"stop":1727760090091,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727760090092,"stop":1727760090093,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727760090092,"stop":1727760090092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727760090094,"stop":1727760090094,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727760090095,"stop":1727760090095,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727760090096,"stop":1727760090096,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727760090097,"stop":1727760104893,"duration":14796},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727760104896,"stop":1727760105426,"duration":530},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727760105427,"stop":1727760106746,"duration":1319},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727760106747,"stop":1727760113379,"duration":6632},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727760113380,"stop":1727760118824,"duration":5444},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727760118826,"stop":1727760121184,"duration":2358},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727760121185,"stop":1727760123543,"duration":2358},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727760144061,"stop":1727760144062,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffb36ab990>\ndevice = <golioth.golioth.Device object at 0xffffb36aba50>\nproject = <golioth.golioth.Project object at 0xffffb4d50bd0>\nreleases = {'test_blocks': Release <66fb86fb9816a3c02f19821b, release_tags=[], device_tags=['66fb86f79816a3c02f198218'], artifact..., release_tags=[], device_tags=['66fb86f79816a3c02f198218'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n>           await device.refresh()\n\ntests/hil/tests/ota/test_ota.py:184: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:405: in refresh\n    resp = await c.get(self.base_url)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectError","steps":[],"attachments":[{"uid":"527d4420809244ad","name":"stdout","source":"527d4420809244ad.txt","type":"text/plain","size":3226}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727760207108,"stop":1727760208484,"duration":1376},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727760208487,"stop":1727760211015,"duration":2528},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727760211017,"stop":1727760212248,"duration":1231},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727760212251,"stop":1727760212251,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727760212252,"stop":1727760212253,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727760212255,"stop":1727760212878,"duration":623},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727760212880,"stop":1727760212880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727760212882,"stop":1727760212894,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"c3d0d5bc9469"},{"name":"thread","value":"284-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":12,"skipped":0,"passed":23,"unknown":0,"total":38},"items":[{"uid":"296679c0209e657d","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/296679c0209e657d","status":"passed","time":{"start":1727743678325,"stop":1727743766109,"duration":87784}},{"uid":"f3106ebecb0fcd36","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/f3106ebecb0fcd36","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727731397861,"stop":1727731417236,"duration":19375}},{"uid":"eca01dc58e79d622","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/eca01dc58e79d622","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727658020607,"stop":1727658106556,"duration":85949}},{"uid":"fdbd95d96d80c73c","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/fdbd95d96d80c73c","status":"passed","time":{"start":1727570835409,"stop":1727570917322,"duration":81913}},{"uid":"ec7fdc03ef7e3102","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/ec7fdc03ef7e3102","status":"passed","time":{"start":1727547676624,"stop":1727547759854,"duration":83230}},{"uid":"bc84344aa173c854","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/bc84344aa173c854","status":"passed","time":{"start":1727545332392,"stop":1727545416902,"duration":84510}},{"uid":"32a8bf1f59b4b51a","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/32a8bf1f59b4b51a","status":"passed","time":{"start":1727543053997,"stop":1727543136668,"duration":82671}},{"uid":"501ecc2f71bff6d9","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/501ecc2f71bff6d9","status":"passed","time":{"start":1727484456944,"stop":1727484540221,"duration":83277}},{"uid":"10f2cab75fc50a8c","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/10f2cab75fc50a8c","status":"passed","time":{"start":1727476579825,"stop":1727476663152,"duration":83327}},{"uid":"fbb0960bc073dcdf","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/fbb0960bc073dcdf","status":"passed","time":{"start":1727461744080,"stop":1727461827556,"duration":83476}},{"uid":"69838721c0536c25","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/69838721c0536c25","status":"passed","time":{"start":1727461744080,"stop":1727461827556,"duration":83476}},{"uid":"8a6d58cd6b3bec70","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/8a6d58cd6b3bec70","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727458352326,"stop":1727458352326,"duration":0}},{"uid":"ff9451eefb4f8050","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/ff9451eefb4f8050","status":"failed","statusDetails":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","time":{"start":1727455482519,"stop":1727455511313,"duration":28794}},{"uid":"4f23ca49840cb365","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/4f23ca49840cb365","status":"passed","time":{"start":1727456946460,"stop":1727457029960,"duration":83500}},{"uid":"58aa4ff7392f8914","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/58aa4ff7392f8914","status":"passed","time":{"start":1727453903754,"stop":1727453987716,"duration":83962}},{"uid":"305ef4c93fc0db17","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/305ef4c93fc0db17","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727398616886,"stop":1727398703035,"duration":86149}},{"uid":"2452512341339dd4","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/2452512341339dd4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727393872087,"stop":1727393872087,"duration":0}},{"uid":"2a53bf757d2decc5","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/2a53bf757d2decc5","status":"passed","time":{"start":1727389221902,"stop":1727389311784,"duration":89882}},{"uid":"db3a53deac101a8e","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/db3a53deac101a8e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727389670637,"stop":1727389670637,"duration":0}},{"uid":"226fa4967df857e6","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/226fa4967df857e6","status":"passed","time":{"start":1727385683440,"stop":1727385767384,"duration":83944}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"7026a3c0556abe6d.json","parameterValues":["'nrf9160dk'","'zephyr'"]}