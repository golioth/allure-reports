{"uid":"8498669ec6974af4","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"fa8c1766fb90779ba45428eac4722ac6","time":{"start":1727758591882,"stop":1727758605365,"duration":13483},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8cecad10>\ndevice = <golioth.golioth.Device object at 0xffff8d009750>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8d009750>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727758530331,"stop":1727758530331,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727758530332,"stop":1727758530332,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727758530333,"stop":1727758530333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727758530334,"stop":1727758530334,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727758530335,"stop":1727758530335,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727758530336,"stop":1727758530337,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727758530336,"stop":1727758530336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727758530337,"stop":1727758530337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727758530338,"stop":1727758530338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727758530339,"stop":1727758530339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727758530339,"stop":1727758530339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727758530340,"stop":1727758530777,"duration":437},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727758530340,"stop":1727758530340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727758530778,"stop":1727758571800,"duration":41022},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727758571802,"stop":1727758572820,"duration":1018},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727758572821,"stop":1727758586032,"duration":13211},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8cecad10>\ndevice = <golioth.golioth.Device object at 0xffff8d009750>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8d009750>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"a81679175bde56ef","name":"stdout","source":"a81679175bde56ef.txt","type":"text/plain","size":3169}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727758749783,"stop":1727758749783,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727758749787,"stop":1727758750314,"duration":527},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727758750316,"stop":1727758750317,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727758750319,"stop":1727758750322,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"758af1012dd7"},{"name":"thread","value":"259-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":34,"unknown":0,"total":38},"items":[{"uid":"d7afc0bfcddfa7fb","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/d7afc0bfcddfa7fb","status":"passed","time":{"start":1727743129969,"stop":1727743143305,"duration":13336}},{"uid":"3bafb7d69b80dfd7","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/3bafb7d69b80dfd7","status":"passed","time":{"start":1727730675645,"stop":1727730689223,"duration":13578}},{"uid":"9469d936a1433251","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/9469d936a1433251","status":"passed","time":{"start":1727656638503,"stop":1727656651858,"duration":13355}},{"uid":"c3fcd4f0d8c642d9","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/c3fcd4f0d8c642d9","status":"passed","time":{"start":1727570306681,"stop":1727570319460,"duration":12779}},{"uid":"fcb1ae271aa04057","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/fcb1ae271aa04057","status":"passed","time":{"start":1727543635885,"stop":1727543648840,"duration":12955}},{"uid":"e333f14960082b13","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/e333f14960082b13","status":"passed","time":{"start":1727542493630,"stop":1727542506447,"duration":12817}},{"uid":"cb9b5c22c4f2196c","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/cb9b5c22c4f2196c","status":"passed","time":{"start":1727541439506,"stop":1727541452863,"duration":13357}},{"uid":"aaccd7453c0f550","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/aaccd7453c0f550","status":"passed","time":{"start":1727483628001,"stop":1727483641602,"duration":13601}},{"uid":"5c2b9ed03f32563c","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/5c2b9ed03f32563c","status":"passed","time":{"start":1727475696666,"stop":1727475709683,"duration":13017}},{"uid":"2fe98cdd50aa6221","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/2fe98cdd50aa6221","status":"passed","time":{"start":1727461018003,"stop":1727461030844,"duration":12841}},{"uid":"3056146b01850b5","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/3056146b01850b5","status":"passed","time":{"start":1727461018003,"stop":1727461030844,"duration":12841}},{"uid":"549eb58513fe2df8","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/549eb58513fe2df8","status":"passed","time":{"start":1727457976345,"stop":1727457989184,"duration":12839}},{"uid":"ce5977dc8552f65a","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/ce5977dc8552f65a","status":"passed","time":{"start":1727393260752,"stop":1727393273329,"duration":12577}},{"uid":"10b7303b1f9a1f10","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/10b7303b1f9a1f10","status":"passed","time":{"start":1727387553618,"stop":1727387566674,"duration":13056}},{"uid":"dae390bbb667c820","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/dae390bbb667c820","status":"passed","time":{"start":1727453151978,"stop":1727453164758,"duration":12780}},{"uid":"c9e90df6d31d0d69","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/c9e90df6d31d0d69","status":"passed","time":{"start":1727397360084,"stop":1727397373361,"duration":13277}},{"uid":"7916583452ff613e","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/7916583452ff613e","status":"passed","time":{"start":1727393260752,"stop":1727393273329,"duration":12577}},{"uid":"ed86205da5605900","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/ed86205da5605900","status":"passed","time":{"start":1727386910190,"stop":1727386923157,"duration":12967}},{"uid":"9972e2b0509e13a3","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/9972e2b0509e13a3","status":"passed","time":{"start":1727387553618,"stop":1727387566674,"duration":13056}},{"uid":"8b14e2190ae8ff57","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/8b14e2190ae8ff57","status":"passed","time":{"start":1727384013124,"stop":1727384026089,"duration":12965}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"8498669ec6974af4.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}