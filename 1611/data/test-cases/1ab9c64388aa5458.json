{"uid":"1ab9c64388aa5458","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"904917f16e15151e1ed741401de93920","time":{"start":1728338844599,"stop":1728338857821,"duration":13222},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff953cacd0>\ndevice = <golioth.golioth.Device object at 0xffff96ac1f50>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff96ac1f50>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728338777398,"stop":1728338777398,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728338777399,"stop":1728338777399,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728338777400,"stop":1728338777400,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728338777400,"stop":1728338777400,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728338777401,"stop":1728338777401,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728338777401,"stop":1728338777401,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728338777402,"stop":1728338777402,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728338777402,"stop":1728338777402,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728338777403,"stop":1728338777403,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728338777403,"stop":1728338777404,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728338777405,"stop":1728338777405,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728338777406,"stop":1728338777406,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728338777406,"stop":1728338777820,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728338777820,"stop":1728338826222,"duration":48402},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728338826224,"stop":1728338827082,"duration":858},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728338827082,"stop":1728338838938,"duration":11856},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff953cacd0>\ndevice = <golioth.golioth.Device object at 0xffff96ac1f50>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff96ac1f50>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"21b00c9cd35fa70e","name":"stdout","source":"21b00c9cd35fa70e.txt","type":"text/plain","size":3568}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728338991507,"stop":1728338991507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728338991509,"stop":1728338991944,"duration":435},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728338991946,"stop":1728338991947,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728338991950,"stop":1728338991952,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"c03249b7596a"},{"name":"thread","value":"254-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":24,"broken":2,"skipped":0,"passed":94,"unknown":0,"total":120},"items":[{"uid":"6b183fa4c8b81ef","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/6b183fa4c8b81ef","status":"passed","time":{"start":1728347865489,"stop":1728347878439,"duration":12950}},{"uid":"61e3ada0456ef7cf","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/61e3ada0456ef7cf","status":"passed","time":{"start":1728339891912,"stop":1728339906597,"duration":14685}},{"uid":"4a946f1a25387cb1","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/4a946f1a25387cb1","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728338844599,"stop":1728338857821,"duration":13222}},{"uid":"e344eb29e6c464b2","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/e344eb29e6c464b2","status":"passed","time":{"start":1728335797050,"stop":1728335809793,"duration":12743}},{"uid":"1e37b6ee63f51551","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/1e37b6ee63f51551","status":"passed","time":{"start":1728316391637,"stop":1728316404377,"duration":12740}},{"uid":"cf17238eb430ec00","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/cf17238eb430ec00","status":"passed","time":{"start":1728319181227,"stop":1728319194161,"duration":12934}},{"uid":"b662cd732d844aae","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/b662cd732d844aae","status":"passed","time":{"start":1728319181227,"stop":1728319194161,"duration":12934}},{"uid":"bc907875f1980567","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/bc907875f1980567","status":"passed","time":{"start":1728316391637,"stop":1728316404377,"duration":12740}},{"uid":"9597e5f6f11a1234","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/9597e5f6f11a1234","status":"passed","time":{"start":1728311989641,"stop":1728312002908,"duration":13267}},{"uid":"4dd09d97e257668c","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/4dd09d97e257668c","status":"passed","time":{"start":1728305827396,"stop":1728305840441,"duration":13045}},{"uid":"ef3c643366305ee3","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/ef3c643366305ee3","status":"passed","time":{"start":1728122319053,"stop":1728122332242,"duration":13189}},{"uid":"68ec385924b64bb2","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/68ec385924b64bb2","status":"passed","time":{"start":1728261449189,"stop":1728261462548,"duration":13359}},{"uid":"eeb16845f8014c34","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/eeb16845f8014c34","status":"passed","time":{"start":1728123207206,"stop":1728123220344,"duration":13138}},{"uid":"54c508146bb0318e","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/54c508146bb0318e","status":"passed","time":{"start":1728175018076,"stop":1728175031089,"duration":13013}},{"uid":"b0ded09fc6239574","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/b0ded09fc6239574","status":"passed","time":{"start":1728063639213,"stop":1728063652032,"duration":12819}},{"uid":"237fe3235d36b3dc","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/237fe3235d36b3dc","status":"passed","time":{"start":1728128492768,"stop":1728128505948,"duration":13180}},{"uid":"24bb60dcc87b5891","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/24bb60dcc87b5891","status":"passed","time":{"start":1728124813021,"stop":1728124825856,"duration":12835}},{"uid":"980ff6d1e065207","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/980ff6d1e065207","status":"passed","time":{"start":1728122319053,"stop":1728122332242,"duration":13189}},{"uid":"7146289f9d4dd30f","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/7146289f9d4dd30f","status":"passed","time":{"start":1728121413335,"stop":1728121426666,"duration":13331}},{"uid":"dc00c6dc1ebd46bd","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/dc00c6dc1ebd46bd","status":"passed","time":{"start":1728057466416,"stop":1728057480851,"duration":14435}}]},"tags":["esp-idf","anyio","mikes_testbench","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"1ab9c64388aa5458.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}