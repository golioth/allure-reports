{"uid":"34cc1269a47e1bef","name":"test_observation_repeat_restart","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_repeat_restart","historyId":"c96172a93787f73c6d68c1d665ffe297","time":{"start":1727731486808,"stop":1727731492195,"duration":5387},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa8406010>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa841bd90>\ndevice = <golioth.golioth.Device object at 0xffffa8406250>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n>           rsp = await device.rpc.disconnect()\n\ntests/hil/tests/rpc/test_rpc.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa8406010>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727731429132,"stop":1727731429133,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727731429134,"stop":1727731429134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727731429134,"stop":1727731429134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727731429135,"stop":1727731429135,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727731429136,"stop":1727731429136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727731429136,"stop":1727731429137,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727731429137,"stop":1727731429137,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727731429138,"stop":1727731429138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727731429138,"stop":1727731429138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727731429139,"stop":1727731429139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727731429139,"stop":1727731429139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727731429139,"stop":1727731429140,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727731429140,"stop":1727731429580,"duration":440},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727731429581,"stop":1727731444258,"duration":14677},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727731444260,"stop":1727731445391,"duration":1131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727731445392,"stop":1727731452855,"duration":7463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727731499595,"stop":1727731499595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727731499597,"stop":1727731500056,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727731500058,"stop":1727731500075,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727731500077,"stop":1727731500079,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"a19816b89a5f"},{"name":"thread","value":"305-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":22,"unknown":0,"total":36},"items":[{"uid":"18266722dff4f64d","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/18266722dff4f64d","status":"passed","time":{"start":1727658165763,"stop":1727658197856,"duration":32093}},{"uid":"762808625f5d6274","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/762808625f5d6274","status":"passed","time":{"start":1727570959267,"stop":1727570988200,"duration":28933}},{"uid":"8fcdd492e606559e","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/8fcdd492e606559e","status":"passed","time":{"start":1727547815819,"stop":1727547846461,"duration":30642}},{"uid":"af29c30b2606c919","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/af29c30b2606c919","status":"passed","time":{"start":1727545461662,"stop":1727545496863,"duration":35201}},{"uid":"d866e5670b2c6957","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/d866e5670b2c6957","status":"passed","time":{"start":1727543188871,"stop":1727543218632,"duration":29761}},{"uid":"919bdaca48b9ae16","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/919bdaca48b9ae16","status":"passed","time":{"start":1727484588066,"stop":1727484620330,"duration":32264}},{"uid":"16d76b0eafeee981","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/16d76b0eafeee981","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727476756610,"stop":1727476771476,"duration":14866}},{"uid":"a9858a8653246b18","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/a9858a8653246b18","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727461884938,"stop":1727461890981,"duration":6043}},{"uid":"a75e8dd97692b671","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/a75e8dd97692b671","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727461884938,"stop":1727461890981,"duration":6043}},{"uid":"b70697f598dbd847","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/b70697f598dbd847","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727458498033,"stop":1727458498033,"duration":0}},{"uid":"70350d1fbc43e208","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/70350d1fbc43e208","status":"passed","time":{"start":1727455577596,"stop":1727455608886,"duration":31290}},{"uid":"a36c27a5becdc334","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/a36c27a5becdc334","status":"passed","time":{"start":1727457077505,"stop":1727457107960,"duration":30455}},{"uid":"2a415951562e58a7","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/2a415951562e58a7","status":"passed","time":{"start":1727454047891,"stop":1727454083219,"duration":35328}},{"uid":"b774506bd10cedfb","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/b774506bd10cedfb","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727398814133,"stop":1727399062324,"duration":248191}},{"uid":"ba7498af4584391a","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/ba7498af4584391a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727394017164,"stop":1727394017164,"duration":0}},{"uid":"613ef2b796b5c6af","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/613ef2b796b5c6af","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727389460739,"stop":1727389460739,"duration":0}},{"uid":"68eba174a57d40d0","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/68eba174a57d40d0","status":"passed","time":{"start":1727389724060,"stop":1727389756488,"duration":32428}},{"uid":"3ab6113e0c0773a6","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/3ab6113e0c0773a6","status":"passed","time":{"start":1727385812738,"stop":1727385847002,"duration":34264}},{"uid":"d39c76e78b5ca211","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/d39c76e78b5ca211","status":"passed","time":{"start":1727382403051,"stop":1727382433578,"duration":30527}},{"uid":"6846a359af07d769","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/6846a359af07d769","status":"passed","time":{"start":1727380056309,"stop":1727380085705,"duration":29396}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"34cc1269a47e1bef.json","parameterValues":["'nrf9160dk'","'zephyr'"]}