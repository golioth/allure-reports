{"uid":"e5252eb73c70e490","name":"test_bool_return","fullName":"tests.hil.tests.rpc.test_rpc#test_bool_return","historyId":"4bd073dd37f17c826cb12b43f0f8e242","time":{"start":1727731463427,"stop":1727731468880,"duration":5453},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa8406010>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa841bd90>\ndevice = <golioth.golioth.Device object at 0xffffa8406250>\n\n    async def test_bool_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"bool\")\n\ntests/hil/tests/rpc/test_rpc.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa8406010>\nmethod = 'basic_return_type', params = ('bool',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727731429132,"stop":1727731429133,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727731429134,"stop":1727731429134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727731429134,"stop":1727731429134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727731429135,"stop":1727731429135,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727731429136,"stop":1727731429136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727731429136,"stop":1727731429137,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727731429137,"stop":1727731429137,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727731429138,"stop":1727731429138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727731429138,"stop":1727731429138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727731429139,"stop":1727731429139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727731429139,"stop":1727731429139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727731429139,"stop":1727731429140,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727731429140,"stop":1727731429580,"duration":440},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727731429581,"stop":1727731444258,"duration":14677},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727731444260,"stop":1727731445391,"duration":1131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727731445392,"stop":1727731452855,"duration":7463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727731499595,"stop":1727731499595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727731499597,"stop":1727731500056,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727731500058,"stop":1727731500075,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727731500077,"stop":1727731500079,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"a19816b89a5f"},{"name":"thread","value":"305-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":28,"unknown":0,"total":36},"items":[{"uid":"b2a16224169e23da","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/b2a16224169e23da","status":"passed","time":{"start":1727658156492,"stop":1727658157740,"duration":1248}},{"uid":"c6582ed3e7327db6","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/c6582ed3e7327db6","status":"passed","time":{"start":1727570950498,"stop":1727570951238,"duration":740}},{"uid":"81d5dcc11b258ae2","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/81d5dcc11b258ae2","status":"passed","time":{"start":1727547803816,"stop":1727547804932,"duration":1116}},{"uid":"b62a661898ac2edd","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/b62a661898ac2edd","status":"passed","time":{"start":1727545452385,"stop":1727545453377,"duration":992}},{"uid":"2064d536375b73d","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/2064d536375b73d","status":"passed","time":{"start":1727543179672,"stop":1727543180868,"duration":1196}},{"uid":"996943cdeb9285dd","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/996943cdeb9285dd","status":"passed","time":{"start":1727484574751,"stop":1727484575747,"duration":996}},{"uid":"93be57927ac9f02a","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/93be57927ac9f02a","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727476735383,"stop":1727476740730,"duration":5347}},{"uid":"306452b5b31d0111","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/306452b5b31d0111","status":"passed","time":{"start":1727461870704,"stop":1727461875184,"duration":4480}},{"uid":"d8a2f1323446829e","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/d8a2f1323446829e","status":"passed","time":{"start":1727461870704,"stop":1727461875184,"duration":4480}},{"uid":"867a3c5d6e2afd94","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/867a3c5d6e2afd94","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727458496645,"stop":1727458496645,"duration":0}},{"uid":"ad7103e1a1bd3f83","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/ad7103e1a1bd3f83","status":"passed","time":{"start":1727455567065,"stop":1727455568295,"duration":1230}},{"uid":"4f98a95ea3ba3fc4","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/4f98a95ea3ba3fc4","status":"passed","time":{"start":1727457068737,"stop":1727457069481,"duration":744}},{"uid":"4a1df1b8eb49cf96","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/4a1df1b8eb49cf96","status":"passed","time":{"start":1727454038058,"stop":1727454039053,"duration":995}},{"uid":"1d36b35980875020","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/1d36b35980875020","status":"passed","time":{"start":1727398800906,"stop":1727398803373,"duration":2467}},{"uid":"d8790333832c501d","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/d8790333832c501d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727394015771,"stop":1727394015771,"duration":0}},{"uid":"66d3d87b0589f8e6","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/66d3d87b0589f8e6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727389459348,"stop":1727389459349,"duration":1}},{"uid":"e124f86fdf121ce7","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/e124f86fdf121ce7","status":"passed","time":{"start":1727389714269,"stop":1727389715515,"duration":1246}},{"uid":"621c4af01bcba313","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/621c4af01bcba313","status":"passed","time":{"start":1727385802696,"stop":1727385803688,"duration":992}},{"uid":"1ab50ce5277c7799","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/1ab50ce5277c7799","status":"passed","time":{"start":1727382390740,"stop":1727382392170,"duration":1430}},{"uid":"68b9e9b0df697a1d","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/68b9e9b0df697a1d","status":"passed","time":{"start":1727380047538,"stop":1727380048278,"duration":740}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"e5252eb73c70e490.json","parameterValues":["'nrf9160dk'","'zephyr'"]}