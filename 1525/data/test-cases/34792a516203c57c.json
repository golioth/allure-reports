{"uid":"34792a516203c57c","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1727907740920,"stop":1727907761814,"duration":20894},"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff97154ed0>\ndevice = <golioth.golioth.Device object at 0xffff9713ba10>\nproject = <golioth.golioth.Project object at 0xffff987e3990>\nreleases = {'test_blocks': Release <66fdc7892860a8ee0e300e66, release_tags=[], device_tags=['66fdc7872860a8ee0e300e63'], artifact..., release_tags=[], device_tags=['66fdc7872860a8ee0e300e63'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727907677264,"stop":1727907677264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727907677265,"stop":1727907677265,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727907677266,"stop":1727907677266,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727907677266,"stop":1727907677267,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727907677267,"stop":1727907677268,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727907677268,"stop":1727907677268,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727907677269,"stop":1727907677269,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727907677269,"stop":1727907677269,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727907677270,"stop":1727907677270,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727907677270,"stop":1727907677270,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727907677271,"stop":1727907677271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727907677271,"stop":1727907677271,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727907677272,"stop":1727907691988,"duration":14716},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727907691991,"stop":1727907692535,"duration":544},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727907692535,"stop":1727907693426,"duration":891},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727907693426,"stop":1727907718609,"duration":25183},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727907718612,"stop":1727907719051,"duration":439},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727907719052,"stop":1727907719920,"duration":868},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727907719921,"stop":1727907721944,"duration":2023},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727907740917,"stop":1727907740918,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff97154ed0>\ndevice = <golioth.golioth.Device object at 0xffff9713ba10>\nproject = <golioth.golioth.Project object at 0xffff987e3990>\nreleases = {'test_blocks': Release <66fdc7892860a8ee0e300e66, release_tags=[], device_tags=['66fdc7872860a8ee0e300e63'], artifact..., release_tags=[], device_tags=['66fdc7872860a8ee0e300e63'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"2d014f71b3a7fc7e","name":"stdout","source":"2d014f71b3a7fc7e.txt","type":"text/plain","size":1492}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727907761976,"stop":1727907762976,"duration":1000},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727907762978,"stop":1727907764536,"duration":1558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727907764538,"stop":1727907765296,"duration":758},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727907765298,"stop":1727907765299,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727907765300,"stop":1727907765301,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727907765303,"stop":1727907765718,"duration":415},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727907765721,"stop":1727907765721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727907765723,"stop":1727907765726,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"44df60bc9956"},{"name":"thread","value":"269-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":18,"skipped":0,"passed":35,"unknown":0,"total":58},"items":[{"uid":"c38d34064dbaffe8","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/c38d34064dbaffe8","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727833115050,"stop":1727833135466,"duration":20416}},{"uid":"daa2437bd6c9dc6e","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/daa2437bd6c9dc6e","status":"passed","time":{"start":1727829934273,"stop":1727830016898,"duration":82625}},{"uid":"ff7289ce1005084b","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/ff7289ce1005084b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727814104467,"stop":1727814145604,"duration":41137}},{"uid":"a06687f4289af1fc","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/a06687f4289af1fc","status":"passed","time":{"start":1727815504946,"stop":1727815589620,"duration":84674}},{"uid":"e2979a7acc338ae9","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/e2979a7acc338ae9","status":"passed","time":{"start":1727798116540,"stop":1727798199646,"duration":83106}},{"uid":"778fbccd6f74da59","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/778fbccd6f74da59","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727810782363,"stop":1727810803603,"duration":21240}},{"uid":"ee8578ce44159e1a","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/ee8578ce44159e1a","status":"passed","time":{"start":1727806257754,"stop":1727806354982,"duration":97228}},{"uid":"5e2f37aa560d112","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/5e2f37aa560d112","status":"passed","time":{"start":1727798116540,"stop":1727798199646,"duration":83106}},{"uid":"e446c830a0490f6e","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/e446c830a0490f6e","status":"passed","time":{"start":1727797309864,"stop":1727797392339,"duration":82475}},{"uid":"471ff88a6af3aa25","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/471ff88a6af3aa25","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727789053967,"stop":1727789053967,"duration":0}},{"uid":"f8029cdbbc9d3a2c","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/f8029cdbbc9d3a2c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784839967,"stop":1727784839967,"duration":0}},{"uid":"d56c43e7d4106080","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/d56c43e7d4106080","status":"passed","time":{"start":1727774290803,"stop":1727774374008,"duration":83205}},{"uid":"e3e6e1ecaa48d6db","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/e3e6e1ecaa48d6db","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727779433462,"stop":1727779433462,"duration":0}},{"uid":"5b399f16c779cc60","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/5b399f16c779cc60","status":"passed","time":{"start":1727776952964,"stop":1727777036515,"duration":83551}},{"uid":"d7b819096db5cca0","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/d7b819096db5cca0","status":"passed","time":{"start":1727774290803,"stop":1727774374008,"duration":83205}},{"uid":"fb1a06f2a7a19f52","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/fb1a06f2a7a19f52","status":"passed","time":{"start":1727770904035,"stop":1727770991048,"duration":87013}},{"uid":"182d7fb73a19ff3d","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/182d7fb73a19ff3d","status":"passed","time":{"start":1727768810725,"stop":1727768893461,"duration":82736}},{"uid":"7e6411170e27a587","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/7e6411170e27a587","status":"passed","time":{"start":1727764521607,"stop":1727764604671,"duration":83064}},{"uid":"2f4eca4804740cc0","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/2f4eca4804740cc0","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1727763596715,"stop":1727763674479,"duration":77764}},{"uid":"7026a3c0556abe6d","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/7026a3c0556abe6d","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1727760144065,"stop":1727760206136,"duration":62071}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"34792a516203c57c.json","parameterValues":["'nrf9160dk'","'zephyr'"]}