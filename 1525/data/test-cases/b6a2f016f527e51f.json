{"uid":"b6a2f016f527e51f","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1727906850899,"stop":1727906893184,"duration":42285},"status":"failed","statusMessage":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8b7da2d0>\ndevice = <golioth.golioth.Device object at 0xffff8b7413d0>\nproject = <golioth.golioth.Project object at 0xffff8b8db450>\nreleases = {'test_blocks': Release <66fdc4172860a8ee0e300e00, release_tags=[], device_tags=['66fdc4152860a8ee0e300dfd'], artifact..., release_tags=[], device_tags=['66fdc4152860a8ee0e300dfd'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 5 == 4\nE            +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727906791571,"stop":1727906791571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727906791571,"stop":1727906791572,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727906791572,"stop":1727906791572,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727906791573,"stop":1727906791574,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727906791573,"stop":1727906791573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727906791574,"stop":1727906791575,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727906791574,"stop":1727906791574,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727906791575,"stop":1727906791576,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727906791575,"stop":1727906791575,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727906791576,"stop":1727906791577,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727906791577,"stop":1727906791578,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727906791578,"stop":1727906791578,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727906791579,"stop":1727906831105,"duration":39526},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727906831107,"stop":1727906831738,"duration":631},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727906831739,"stop":1727906832951,"duration":1212},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727906832952,"stop":1727906836199,"duration":3247},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727906836200,"stop":1727906836727,"duration":527},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727906836728,"stop":1727906837645,"duration":917},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727906837646,"stop":1727906839720,"duration":2074},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727906850896,"stop":1727906850897,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8b7da2d0>\ndevice = <golioth.golioth.Device object at 0xffff8b7413d0>\nproject = <golioth.golioth.Project object at 0xffff8b8db450>\nreleases = {'test_blocks': Release <66fdc4172860a8ee0e300e00, release_tags=[], device_tags=['66fdc4152860a8ee0e300dfd'], artifact..., release_tags=[], device_tags=['66fdc4152860a8ee0e300dfd'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 5 == 4\nE            +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"55b979c31fafbd2","name":"stdout","source":"55b979c31fafbd2.txt","type":"text/plain","size":2481}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727906893375,"stop":1727906894637,"duration":1262},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727906894639,"stop":1727906896422,"duration":1783},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727906896424,"stop":1727906897296,"duration":872},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727906897298,"stop":1727906897298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727906897300,"stop":1727906897300,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727906897302,"stop":1727906897765,"duration":463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727906897768,"stop":1727906897768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727906897770,"stop":1727906897780,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"5eb833c77b11"},{"name":"thread","value":"261-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":8,"skipped":0,"passed":32,"unknown":0,"total":55},"items":[{"uid":"e1066e9cd74919fa","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/e1066e9cd74919fa","status":"passed","time":{"start":1727831539937,"stop":1727831616744,"duration":76807}},{"uid":"790af021e43a9d04","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/790af021e43a9d04","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1727829123314,"stop":1727829145602,"duration":22288}},{"uid":"949f3b408a018019","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/949f3b408a018019","status":"passed","time":{"start":1727801547083,"stop":1727801626841,"duration":79758}},{"uid":"558470ecc9f7eea0","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/558470ecc9f7eea0","status":"passed","time":{"start":1727813124443,"stop":1727813204032,"duration":79589}},{"uid":"e377971d6070e1b0","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/e377971d6070e1b0","status":"passed","time":{"start":1727795356149,"stop":1727795433531,"duration":77382}},{"uid":"f5b379086ad3eabe","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/f5b379086ad3eabe","status":"passed","time":{"start":1727809276036,"stop":1727809353034,"duration":76998}},{"uid":"4fa9dd1873db6536","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/4fa9dd1873db6536","status":"passed","time":{"start":1727805386698,"stop":1727805463433,"duration":76735}},{"uid":"7fbb413e705c4547","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/7fbb413e705c4547","status":"passed","time":{"start":1727795356149,"stop":1727795433531,"duration":77382}},{"uid":"d79a934aced66506","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/d79a934aced66506","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727794483178,"stop":1727794503544,"duration":20366}},{"uid":"ac441743f49d2cb0","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/ac441743f49d2cb0","status":"passed","time":{"start":1727785997299,"stop":1727786076941,"duration":79642}},{"uid":"c000804139febec4","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/c000804139febec4","status":"passed","time":{"start":1727782200704,"stop":1727782277955,"duration":77251}},{"uid":"21215e1c7d72fff5","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/21215e1c7d72fff5","status":"passed","time":{"start":1727780507498,"stop":1727780587452,"duration":79954}},{"uid":"f98b91404fb91241","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/f98b91404fb91241","status":"passed","time":{"start":1727778712731,"stop":1727778793402,"duration":80671}},{"uid":"7e472f1a883079a8","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/7e472f1a883079a8","status":"passed","time":{"start":1727775228328,"stop":1727775308921,"duration":80593}},{"uid":"ab144d301a166bb9","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/ab144d301a166bb9","status":"passed","time":{"start":1727767929372,"stop":1727768006692,"duration":77320}},{"uid":"5b8a7f2010ec544c","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/5b8a7f2010ec544c","status":"passed","time":{"start":1727767389091,"stop":1727767469064,"duration":79973}},{"uid":"c8b2ff0e7dd64715","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/c8b2ff0e7dd64715","status":"passed","time":{"start":1727762187286,"stop":1727762267922,"duration":80636}},{"uid":"57992c264d52cab1","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/57992c264d52cab1","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727742895793,"stop":1727742909970,"duration":14177}},{"uid":"8082f70b2f9e9056","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/8082f70b2f9e9056","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1727730521195,"stop":1727730558582,"duration":37387}},{"uid":"8d4f293e063c4909","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/8d4f293e063c4909","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1727656436694,"stop":1727656458966,"duration":22272}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"b6a2f016f527e51f.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}