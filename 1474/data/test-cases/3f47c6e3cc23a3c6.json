{"uid":"3f47c6e3cc23a3c6","name":"test_no_args","fullName":"tests.hil.tests.rpc.test_rpc#test_no_args","historyId":"8550db7a61e240971014d0cb2b88a59c","time":{"start":1727570987863,"stop":1727570993179,"duration":5316},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff7fbe0d10>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff7fbf7810>\ndevice = <golioth.golioth.Device object at 0xffff7fbe0750>\n\n    async def test_no_args(board, device):\n>       await device.rpc.no_response()\n\ntests/hil/tests/rpc/test_rpc.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff7fbe0d10>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727570936978,"stop":1727570936979,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727570936979,"stop":1727570936980,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727570936980,"stop":1727570936981,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727570936981,"stop":1727570936981,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727570936982,"stop":1727570936982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727570936982,"stop":1727570936982,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727570936983,"stop":1727570936983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727570936983,"stop":1727570936983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727570936984,"stop":1727570936984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727570936985,"stop":1727570936985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727570936986,"stop":1727570936986,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727570936987,"stop":1727570936987,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727570936988,"stop":1727570937396,"duration":408},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727570937397,"stop":1727570956381,"duration":18984},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727570956383,"stop":1727570957337,"duration":954},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727570957338,"stop":1727570986695,"duration":29357},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727571047009,"stop":1727571047009,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727571047011,"stop":1727571047371,"duration":360},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727571047373,"stop":1727571047422,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727571047424,"stop":1727571047426,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"10527def3907"},{"name":"thread","value":"278-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":28,"unknown":0,"total":33},"items":[{"uid":"4a9051945fe69087","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/4a9051945fe69087","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727546383717,"stop":1727546389036,"duration":5319}},{"uid":"c811aa86e6459552","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/c811aa86e6459552","status":"passed","time":{"start":1727543382070,"stop":1727543383809,"duration":1739}},{"uid":"e40811b35302a9d8","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/e40811b35302a9d8","status":"passed","time":{"start":1727541467084,"stop":1727541468646,"duration":1562}},{"uid":"7acbf0a0411d4249","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/7acbf0a0411d4249","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727483758870,"stop":1727483764192,"duration":5322}},{"uid":"cec5bba50a40ba0e","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/cec5bba50a40ba0e","status":"passed","time":{"start":1727475848692,"stop":1727475850253,"duration":1561}},{"uid":"b58ed453aec7368b","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/b58ed453aec7368b","status":"passed","time":{"start":1727461721156,"stop":1727461722720,"duration":1564}},{"uid":"6209ad2a1c311507","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/6209ad2a1c311507","status":"passed","time":{"start":1727461721156,"stop":1727461722720,"duration":1564}},{"uid":"4fbdae9bf6a74689","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/4fbdae9bf6a74689","status":"passed","time":{"start":1727458884687,"stop":1727458885644,"duration":957}},{"uid":"333a79711bbd69dc","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/333a79711bbd69dc","status":"passed","time":{"start":1727456285985,"stop":1727456286942,"duration":957}},{"uid":"f5ac8c00504a1d75","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/f5ac8c00504a1d75","status":"passed","time":{"start":1727457092811,"stop":1727457093768,"duration":957}},{"uid":"fe473e72e92e6081","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/fe473e72e92e6081","status":"passed","time":{"start":1727454073394,"stop":1727454074994,"duration":1600}},{"uid":"acbcefe9a45eebdc","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/acbcefe9a45eebdc","status":"passed","time":{"start":1727398024327,"stop":1727398025284,"duration":957}},{"uid":"cbecda079591d61","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/cbecda079591d61","status":"passed","time":{"start":1727394127179,"stop":1727394128721,"duration":1542}},{"uid":"9f7bdc9c8db64c1c","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/9f7bdc9c8db64c1c","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727388863374,"stop":1727388868690,"duration":5316}},{"uid":"b992ab9e3e453c5f","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/b992ab9e3e453c5f","status":"passed","time":{"start":1727388368000,"stop":1727388368958,"duration":958}},{"uid":"bc6fe1df8b6f7e1f","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/bc6fe1df8b6f7e1f","status":"passed","time":{"start":1727384983571,"stop":1727384984529,"duration":958}},{"uid":"ef474b81a1ac5d03","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/ef474b81a1ac5d03","status":"passed","time":{"start":1727381721231,"stop":1727381721938,"duration":707}},{"uid":"71c507648630db79","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/71c507648630db79","status":"passed","time":{"start":1727379448210,"stop":1727379449167,"duration":957}},{"uid":"255a6ac745a7c0a7","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/255a6ac745a7c0a7","status":"passed","time":{"start":1727376694428,"stop":1727376695385,"duration":957}},{"uid":"15d7c1c70642b027","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/15d7c1c70642b027","status":"passed","time":{"start":1727371487936,"stop":1727371488644,"duration":708}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"3f47c6e3cc23a3c6.json","parameterValues":["'rak5010'","'zephyr'"]}