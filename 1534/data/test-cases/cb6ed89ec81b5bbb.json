{"uid":"cb6ed89ec81b5bbb","name":"test_hello","fullName":"examples.esp_idf.hello.pytest.test_sample#test_hello","historyId":"b796c046ef6757d6b6c6436ab1db33bf","time":{"start":1727951988413,"stop":1727952009333,"duration":20920},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff861d1b50>\ndevice = <golioth.golioth.Device object at 0xffff860f5410>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727951937262,"stop":1727951937262,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727951937263,"stop":1727951937263,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727951937264,"stop":1727951937265,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727951937264,"stop":1727951937264,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727951937265,"stop":1727951937266,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727951937266,"stop":1727951937267,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727951937267,"stop":1727951937267,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727951937268,"stop":1727951937268,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727951937269,"stop":1727951937269,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727951937269,"stop":1727951937269,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727951937270,"stop":1727951937270,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727951937270,"stop":1727951937271,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727951937271,"stop":1727951986995,"duration":49724},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727951986996,"stop":1727951987537,"duration":541},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727951987538,"stop":1727951988409,"duration":871},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff861d1b50>\ndevice = <golioth.golioth.Device object at 0xffff860f5410>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","steps":[],"attachments":[{"uid":"cd4f7a8b83033f4b","name":"stdout","source":"cd4f7a8b83033f4b.txt","type":"text/plain","size":8305}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1727952009484,"stop":1727952009882,"duration":398},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727952009885,"stop":1727952009885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727952009887,"stop":1727952009894,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"1152e0608bfc"},{"name":"thread","value":"249-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":65,"unknown":0,"total":66},"items":[{"uid":"e4dbbc7d1c863232","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/e4dbbc7d1c863232","status":"passed","time":{"start":1727907228826,"stop":1727907248173,"duration":19347}},{"uid":"ff5f793d90609038","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/ff5f793d90609038","status":"passed","time":{"start":1727932048901,"stop":1727932068585,"duration":19684}},{"uid":"af29805ac44d67ee","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/af29805ac44d67ee","status":"passed","time":{"start":1727949233674,"stop":1727949254271,"duration":20597}},{"uid":"b4a6a12a2cac13","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/b4a6a12a2cac13","status":"passed","time":{"start":1727946206880,"stop":1727946226252,"duration":19372}},{"uid":"4111beddd93bce2e","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/4111beddd93bce2e","status":"passed","time":{"start":1727831651617,"stop":1727831669900,"duration":18283}},{"uid":"58e14e5792602d8b","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/58e14e5792602d8b","status":"passed","time":{"start":1727932048901,"stop":1727932068585,"duration":19684}},{"uid":"7b491af3c72d2464","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/7b491af3c72d2464","status":"passed","time":{"start":1727926471189,"stop":1727926491718,"duration":20529}},{"uid":"3b6befc9f07e08b6","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/3b6befc9f07e08b6","status":"passed","time":{"start":1727916193818,"stop":1727916212888,"duration":19070}},{"uid":"ff1946d86af3b608","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/ff1946d86af3b608","status":"passed","time":{"start":1727907228826,"stop":1727907248173,"duration":19347}},{"uid":"d99253703a1523cc","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/d99253703a1523cc","status":"passed","time":{"start":1727831651617,"stop":1727831669900,"duration":18283}},{"uid":"a52c794b5e7552cc","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/a52c794b5e7552cc","status":"passed","time":{"start":1727829787495,"stop":1727829805727,"duration":18232}},{"uid":"5ec27a57eddeb70b","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/5ec27a57eddeb70b","status":"passed","time":{"start":1727811864050,"stop":1727811883671,"duration":19621}},{"uid":"cb7d9af3e1329444","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/cb7d9af3e1329444","status":"passed","time":{"start":1727802158253,"stop":1727802177171,"duration":18918}},{"uid":"4529d1c8fda74328","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/4529d1c8fda74328","status":"passed","time":{"start":1727797711248,"stop":1727797730024,"duration":18776}},{"uid":"8b5fccdde353e9e2","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/8b5fccdde353e9e2","status":"passed","time":{"start":1727807224423,"stop":1727807254720,"duration":30297}},{"uid":"23b999dbcbfd4446","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/23b999dbcbfd4446","status":"passed","time":{"start":1727805202445,"stop":1727805221979,"duration":19534}},{"uid":"373b0a62a865900","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/373b0a62a865900","status":"passed","time":{"start":1727797711248,"stop":1727797730024,"duration":18776}},{"uid":"e3fb917a8e15634f","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/e3fb917a8e15634f","status":"passed","time":{"start":1727795802857,"stop":1727795821939,"duration":19082}},{"uid":"76c12226848ac9c6","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/76c12226848ac9c6","status":"passed","time":{"start":1727786597238,"stop":1727786615607,"duration":18369}},{"uid":"ea51e2df0103f917","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/ea51e2df0103f917","status":"passed","time":{"start":1727783057745,"stop":1727783076505,"duration":18760}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"cb6ed89ec81b5bbb.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}