{"uid":"743162e7c03e2fe8","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"29965a84c7f143cf4efad9827e24c81d","time":{"start":1728610999622,"stop":1728611012612,"duration":12990},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffff8bc5b710>\ndevice = <golioth.golioth.Device object at 0xffff8bc43610>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8bc43610>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728610964992,"stop":1728610964993,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728610964993,"stop":1728610964994,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728610964994,"stop":1728610964994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728610964995,"stop":1728610964995,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728610964996,"stop":1728610964997,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728610964996,"stop":1728610964996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728610964997,"stop":1728610964997,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728610964998,"stop":1728610964998,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728610964999,"stop":1728610965000,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728610965000,"stop":1728610965000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728610965001,"stop":1728610965001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728610965001,"stop":1728610965001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728610965002,"stop":1728610965391,"duration":389},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728610965392,"stop":1728610978103,"duration":12711},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728610978105,"stop":1728610979080,"duration":975},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728610979081,"stop":1728610992948,"duration":13867},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffff8bc5b710>\ndevice = <golioth.golioth.Device object at 0xffff8bc43610>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8bc43610>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"1dd5afcd33613e9","name":"stdout","source":"1dd5afcd33613e9.txt","type":"text/plain","size":2703}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728611156513,"stop":1728611156514,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728611156520,"stop":1728611157015,"duration":495},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728611157018,"stop":1728611157019,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728611157022,"stop":1728611157024,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"9458cd83f878"},{"name":"thread","value":"304-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":5,"skipped":0,"passed":123,"unknown":0,"total":130},"items":[{"uid":"94f4f81e40ad4c63","reportUrl":"https://golioth.github.io/allure-reports/1629//#testresult/94f4f81e40ad4c63","status":"passed","time":{"start":1728607669586,"stop":1728607682544,"duration":12958}},{"uid":"64c5f576eb32bf","reportUrl":"https://golioth.github.io/allure-reports/1626//#testresult/64c5f576eb32bf","status":"passed","time":{"start":1728582277995,"stop":1728582290996,"duration":13001}},{"uid":"57de19ed71e6025a","reportUrl":"https://golioth.github.io/allure-reports/1624//#testresult/57de19ed71e6025a","status":"passed","time":{"start":1728576437890,"stop":1728576453683,"duration":15793}},{"uid":"d0c418c8f0e69e1e","reportUrl":"https://golioth.github.io/allure-reports/1623//#testresult/d0c418c8f0e69e1e","status":"passed","time":{"start":1728566912171,"stop":1728566926157,"duration":13986}},{"uid":"aff8cdff4ff15c24","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/aff8cdff4ff15c24","status":"passed","time":{"start":1728491557703,"stop":1728491570578,"duration":12875}},{"uid":"80704afb306bec63","reportUrl":"https://golioth.github.io/allure-reports/1622//#testresult/80704afb306bec63","status":"passed","time":{"start":1728520589526,"stop":1728520603100,"duration":13574}},{"uid":"7cd17b6e16c9f58e","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/7cd17b6e16c9f58e","status":"passed","time":{"start":1728318812079,"stop":1728318824883,"duration":12804}},{"uid":"e0f21ad3183a4fed","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/e0f21ad3183a4fed","status":"passed","time":{"start":1728491557703,"stop":1728491570578,"duration":12875}},{"uid":"406705d3b9d54b4e","reportUrl":"https://golioth.github.io/allure-reports/1619//#testresult/406705d3b9d54b4e","status":"passed","time":{"start":1728483514342,"stop":1728483528422,"duration":14080}},{"uid":"157c9b74f7da2e8d","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/157c9b74f7da2e8d","status":"passed","time":{"start":1728434768928,"stop":1728434781789,"duration":12861}},{"uid":"720fa3f6bf11c557","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/720fa3f6bf11c557","status":"passed","time":{"start":1728425401132,"stop":1728425414012,"duration":12880}},{"uid":"e4c42722410995d0","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/e4c42722410995d0","status":"passed","time":{"start":1728330799713,"stop":1728330814369,"duration":14656}},{"uid":"b8ae0157e58643a3","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/b8ae0157e58643a3","status":"passed","time":{"start":1728326421859,"stop":1728326434605,"duration":12746}},{"uid":"fb7c2b70e0f152c6","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/fb7c2b70e0f152c6","status":"passed","time":{"start":1728339436357,"stop":1728339450036,"duration":13679}},{"uid":"f91df0763553cb8b","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/f91df0763553cb8b","status":"passed","time":{"start":1728399504894,"stop":1728399518028,"duration":13134}},{"uid":"6d402d5507042f02","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/6d402d5507042f02","status":"passed","time":{"start":1728339436357,"stop":1728339450036,"duration":13679}},{"uid":"d58ac21b193d5d78","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/d58ac21b193d5d78","status":"passed","time":{"start":1728347820993,"stop":1728347833927,"duration":12934}},{"uid":"757ccca038ffbcca","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/757ccca038ffbcca","status":"passed","time":{"start":1728340526989,"stop":1728340539841,"duration":12852}},{"uid":"8d5962a0e0afc429","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/8d5962a0e0afc429","status":"passed","time":{"start":1728339436357,"stop":1728339450036,"duration":13679}},{"uid":"db73249fd0037fae","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/db73249fd0037fae","status":"passed","time":{"start":1728336479763,"stop":1728336492799,"duration":13036}}]},"tags":["mikes_orange_pi","nrf52840dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"743162e7c03e2fe8.json","parameterValues":["'nrf52840dk'","'zephyr'"]}