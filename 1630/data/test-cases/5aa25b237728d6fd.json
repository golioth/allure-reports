{"uid":"5aa25b237728d6fd","name":"test_no_args","fullName":"tests.hil.tests.rpc.test_rpc#test_no_args","historyId":"8550db7a61e240971014d0cb2b88a59c","time":{"start":1728610833258,"stop":1728610838586,"duration":5328},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff931e21d0>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff931edb50>\ndevice = <golioth.golioth.Device object at 0xffff931e1d90>\n\n    async def test_no_args(board, device):\n>       await device.rpc.no_response()\n\ntests/hil/tests/rpc/test_rpc.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff931e21d0>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728610760383,"stop":1728610760384,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728610760384,"stop":1728610760384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728610760385,"stop":1728610760385,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728610760386,"stop":1728610760386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728610760387,"stop":1728610760387,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728610760388,"stop":1728610760388,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728610760389,"stop":1728610760390,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728610760389,"stop":1728610760389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728610760390,"stop":1728610760390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728610760391,"stop":1728610760391,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728610760392,"stop":1728610760392,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728610760393,"stop":1728610760393,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728610760394,"stop":1728610760801,"duration":407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728610760801,"stop":1728610801839,"duration":41038},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728610801841,"stop":1728610802808,"duration":967},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728610802809,"stop":1728610832234,"duration":29425},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728610907565,"stop":1728610907565,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728610907567,"stop":1728610907946,"duration":379},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728610907948,"stop":1728610907950,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728610907952,"stop":1728610907954,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"a90f77e1dffc"},{"name":"thread","value":"266-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":113,"unknown":0,"total":131},"items":[{"uid":"503eb89c174807dd","reportUrl":"https://golioth.github.io/allure-reports/1629//#testresult/503eb89c174807dd","status":"passed","time":{"start":1728607614231,"stop":1728607615790,"duration":1559}},{"uid":"2fd063c32e9001b1","reportUrl":"https://golioth.github.io/allure-reports/1626//#testresult/2fd063c32e9001b1","status":"passed","time":{"start":1728599665001,"stop":1728599665956,"duration":955}},{"uid":"141b9a86e457f21a","reportUrl":"https://golioth.github.io/allure-reports/1624//#testresult/141b9a86e457f21a","status":"passed","time":{"start":1728597467577,"stop":1728597469126,"duration":1549}},{"uid":"3c5bb3255a9a886c","reportUrl":"https://golioth.github.io/allure-reports/1623//#testresult/3c5bb3255a9a886c","status":"passed","time":{"start":1728596875314,"stop":1728596876270,"duration":956}},{"uid":"3e64902fddc3b4df","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/3e64902fddc3b4df","status":"passed","time":{"start":1728492241488,"stop":1728492242445,"duration":957}},{"uid":"aeb423e1584e1f5c","reportUrl":"https://golioth.github.io/allure-reports/1622//#testresult/aeb423e1584e1f5c","status":"passed","time":{"start":1728521163220,"stop":1728521164181,"duration":961}},{"uid":"bbb3e13f008c2328","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/bbb3e13f008c2328","status":"passed","time":{"start":1728494725883,"stop":1728494726839,"duration":956}},{"uid":"e3036bb9d082944c","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/e3036bb9d082944c","status":"passed","time":{"start":1728492241488,"stop":1728492242445,"duration":957}},{"uid":"7938eff0346c00de","reportUrl":"https://golioth.github.io/allure-reports/1619//#testresult/7938eff0346c00de","status":"passed","time":{"start":1728484058423,"stop":1728484059377,"duration":954}},{"uid":"d93fc5b04a3ac7bf","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/d93fc5b04a3ac7bf","status":"passed","time":{"start":1728434184728,"stop":1728434186263,"duration":1535}},{"uid":"44fd56931642ac50","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/44fd56931642ac50","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1728424809363,"stop":1728424814681,"duration":5318}},{"uid":"7447457974c89b74","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/7447457974c89b74","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1728331200621,"stop":1728331205944,"duration":5323}},{"uid":"928a46adb2b2f9fc","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/928a46adb2b2f9fc","status":"passed","time":{"start":1728326803023,"stop":1728326804573,"duration":1550}},{"uid":"f61a7c0ea7cec078","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/f61a7c0ea7cec078","status":"passed","time":{"start":1728339657617,"stop":1728339658572,"duration":955}},{"uid":"248a6312379849de","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/248a6312379849de","status":"passed","time":{"start":1728399961121,"stop":1728399962072,"duration":951}},{"uid":"5e3a14e7de448e50","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/5e3a14e7de448e50","status":"passed","time":{"start":1728339657617,"stop":1728339658572,"duration":955}},{"uid":"39dea0374ade8e10","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/39dea0374ade8e10","status":"passed","time":{"start":1728348666205,"stop":1728348667765,"duration":1560}},{"uid":"bcecf42bdccf2a16","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/bcecf42bdccf2a16","status":"passed","time":{"start":1728340922330,"stop":1728340923283,"duration":953}},{"uid":"529ad63607a43290","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/529ad63607a43290","status":"passed","time":{"start":1728339657617,"stop":1728339658572,"duration":955}},{"uid":"aad5448205e7a7c8","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/aad5448205e7a7c8","status":"passed","time":{"start":1728335917078,"stop":1728335918606,"duration":1528}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"5aa25b237728d6fd.json","parameterValues":["'rak5010'","'zephyr'"]}