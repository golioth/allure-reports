{"uid":"1ce94470f744aee3","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"e6176e7c51c2c639edadc3c78c5e69ff","time":{"start":1727774613677,"stop":1727774619007,"duration":5330},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa892ea50>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa8956f90>\ndevice = <golioth.golioth.Device object at 0xffffa892dc90>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa892ea50>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727774510904,"stop":1727774510904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727774510905,"stop":1727774510905,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727774510905,"stop":1727774510905,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727774510906,"stop":1727774510906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727774510907,"stop":1727774510907,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727774510908,"stop":1727774510908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727774510908,"stop":1727774510908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727774510909,"stop":1727774510909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727774510909,"stop":1727774510909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727774510910,"stop":1727774510910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727774510910,"stop":1727774510910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727774510911,"stop":1727774510911,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727774510911,"stop":1727774511369,"duration":458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727774511369,"stop":1727774560815,"duration":49446},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727774560817,"stop":1727774561853,"duration":1036},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727774561853,"stop":1727774565717,"duration":3864},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727774619996,"stop":1727774619996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727774619998,"stop":1727774620403,"duration":405},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727774620405,"stop":1727774620413,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727774620416,"stop":1727774620418,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"b7891f8167cf"},{"name":"thread","value":"250-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":42,"unknown":0,"total":45},"items":[{"uid":"271dc94a7094e20a","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/271dc94a7094e20a","status":"passed","time":{"start":1727772495262,"stop":1727772513760,"duration":18498}},{"uid":"5deef9b9822e0043","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/5deef9b9822e0043","status":"passed","time":{"start":1727767750137,"stop":1727767768922,"duration":18785}},{"uid":"8c3ef9c91f5b0662","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/8c3ef9c91f5b0662","status":"passed","time":{"start":1727766886020,"stop":1727766905047,"duration":19027}},{"uid":"24aacee2cb5f6bbc","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/24aacee2cb5f6bbc","status":"passed","time":{"start":1727762294955,"stop":1727762314213,"duration":19258}},{"uid":"e0f70f4d1c923eec","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/e0f70f4d1c923eec","status":"passed","time":{"start":1727761376244,"stop":1727761394773,"duration":18529}},{"uid":"536f204ce9453ec4","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/536f204ce9453ec4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727758475555,"stop":1727758475555,"duration":0}},{"uid":"c0c687e3ff0faca3","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/c0c687e3ff0faca3","status":"passed","time":{"start":1727743013223,"stop":1727743031499,"duration":18276}},{"uid":"dfec9f7da5d7c78f","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/dfec9f7da5d7c78f","status":"passed","time":{"start":1727730594104,"stop":1727730612381,"duration":18277}},{"uid":"155ec45696bc3d9","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/155ec45696bc3d9","status":"passed","time":{"start":1727656508289,"stop":1727656527569,"duration":19280}},{"uid":"e09e773f5c963136","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/e09e773f5c963136","status":"passed","time":{"start":1727570191997,"stop":1727570210264,"duration":18267}},{"uid":"d90bb506dec56e25","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/d90bb506dec56e25","status":"passed","time":{"start":1727543165080,"stop":1727543184852,"duration":19772}},{"uid":"873551141188c35f","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/873551141188c35f","status":"passed","time":{"start":1727542277529,"stop":1727542296319,"duration":18790}},{"uid":"5491ed141cf379d1","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/5491ed141cf379d1","status":"passed","time":{"start":1727541380621,"stop":1727541399386,"duration":18765}},{"uid":"1bad0c2edb371704","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/1bad0c2edb371704","status":"passed","time":{"start":1727483670331,"stop":1727483688655,"duration":18324}},{"uid":"6b4e449845849bff","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/6b4e449845849bff","status":"passed","time":{"start":1727475721983,"stop":1727475740789,"duration":18806}},{"uid":"3e5b2ad54c700ae5","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/3e5b2ad54c700ae5","status":"passed","time":{"start":1727460991068,"stop":1727461009347,"duration":18279}},{"uid":"3f4f6d1f12c1a03a","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/3f4f6d1f12c1a03a","status":"passed","time":{"start":1727460991068,"stop":1727461009347,"duration":18279}},{"uid":"cf1f5be58f6221af","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/cf1f5be58f6221af","status":"passed","time":{"start":1727362335518,"stop":1727362354285,"duration":18767}},{"uid":"69a975ce52be3461","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/69a975ce52be3461","status":"passed","time":{"start":1727454093984,"stop":1727454112758,"duration":18774}},{"uid":"dfcf17cec61833d5","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/dfcf17cec61833d5","status":"passed","time":{"start":1727387008245,"stop":1727387026776,"duration":18531}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"1ce94470f744aee3.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}