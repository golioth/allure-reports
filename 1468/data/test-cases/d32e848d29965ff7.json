{"uid":"d32e848d29965ff7","name":"test_no_args","fullName":"tests.hil.tests.rpc.test_rpc#test_no_args","historyId":"d873da0766249ea085d8a01e7bb56bb7","time":{"start":1727483592345,"stop":1727483597687,"duration":5342},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffb6921d90>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffb6923450>\ndevice = <golioth.golioth.Device object at 0xffffb6936fd0>\n\n    async def test_no_args(board, device):\n>       await device.rpc.no_response()\n\ntests/hil/tests/rpc/test_rpc.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffb6921d90>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727483528499,"stop":1727483528499,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727483528500,"stop":1727483528500,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727483528501,"stop":1727483528501,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727483528502,"stop":1727483528503,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727483528502,"stop":1727483528502,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727483528503,"stop":1727483528503,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727483528504,"stop":1727483528504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727483528504,"stop":1727483528504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727483528505,"stop":1727483528505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727483528505,"stop":1727483528505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727483528506,"stop":1727483528506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727483528506,"stop":1727483528506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727483528507,"stop":1727483528915,"duration":408},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727483528915,"stop":1727483580430,"duration":51515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727483580432,"stop":1727483581467,"duration":1035},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727483581468,"stop":1727483590614,"duration":9146},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727483669080,"stop":1727483669081,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727483669086,"stop":1727483669511,"duration":425},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727483669513,"stop":1727483669514,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727483669517,"stop":1727483669519,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"55e2976f5278"},{"name":"thread","value":"253-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":28,"unknown":0,"total":30},"items":[{"uid":"304ad10f0d9a2c9e","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/304ad10f0d9a2c9e","status":"passed","time":{"start":1727475731597,"stop":1727475732788,"duration":1191}},{"uid":"85a588e1ded67e80","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/85a588e1ded67e80","status":"passed","time":{"start":1727461005933,"stop":1727461007121,"duration":1188}},{"uid":"8a0a95197ff5340f","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/8a0a95197ff5340f","status":"passed","time":{"start":1727461005933,"stop":1727461007121,"duration":1188}},{"uid":"71d90fd15efb566d","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/71d90fd15efb566d","status":"passed","time":{"start":1727455615726,"stop":1727455616696,"duration":970}},{"uid":"90b43c5affc3af48","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/90b43c5affc3af48","status":"passed","time":{"start":1727454871011,"stop":1727454872479,"duration":1468}},{"uid":"1b4301e434d7396c","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/1b4301e434d7396c","status":"passed","time":{"start":1727387734778,"stop":1727387736062,"duration":1284}},{"uid":"4f474a075091f21b","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/4f474a075091f21b","status":"passed","time":{"start":1727362930462,"stop":1727362931757,"duration":1295}},{"uid":"a0b97fe461e2a442","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/a0b97fe461e2a442","status":"passed","time":{"start":1727397206498,"stop":1727397207463,"duration":965}},{"uid":"796bf9bd5e6435d3","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/796bf9bd5e6435d3","status":"passed","time":{"start":1727394228213,"stop":1727394232432,"duration":4219}},{"uid":"4b07ccf30c22cf23","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/4b07ccf30c22cf23","status":"passed","time":{"start":1727387620730,"stop":1727387622441,"duration":1711}},{"uid":"3d369055ffc338b8","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/3d369055ffc338b8","status":"passed","time":{"start":1727387734778,"stop":1727387736062,"duration":1284}},{"uid":"4e8b5ba878eb9284","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/4e8b5ba878eb9284","status":"passed","time":{"start":1727384107941,"stop":1727384109154,"duration":1213}},{"uid":"bb9841d6b5af9d60","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/bb9841d6b5af9d60","status":"passed","time":{"start":1727381351974,"stop":1727381354138,"duration":2164}},{"uid":"56a8c70913eafec8","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/56a8c70913eafec8","status":"passed","time":{"start":1727378645088,"stop":1727378646718,"duration":1630}},{"uid":"3273039566b89892","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/3273039566b89892","status":"passed","time":{"start":1727373975248,"stop":1727373976463,"duration":1215}},{"uid":"8d1d5de0475d27d8","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/8d1d5de0475d27d8","status":"passed","time":{"start":1727370806185,"stop":1727370807398,"duration":1213}},{"uid":"307a1dbed40e0912","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/307a1dbed40e0912","status":"passed","time":{"start":1727363979394,"stop":1727363980611,"duration":1217}},{"uid":"1a456be9bfa50b42","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/1a456be9bfa50b42","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1727362005022,"stop":1727362010365,"duration":5343}},{"uid":"53c3c8344fc94bcb","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/53c3c8344fc94bcb","status":"passed","time":{"start":1727362930462,"stop":1727362931757,"duration":1295}},{"uid":"a5def813e7c66c3d","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/a5def813e7c66c3d","status":"passed","time":{"start":1727359308915,"stop":1727359309692,"duration":777}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"d32e848d29965ff7.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}