{"uid":"591ad0c9f0821398","name":"test_int_too_small","fullName":"tests.hil.tests.settings.test_settings#test_int_too_small","historyId":"9a158ab876eb6bcacb2a056562120108","time":{"start":1727483761411,"stop":1727483774158,"duration":12747},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffae0ad7d0>\ndevice = <golioth.golioth.Device object at 0xffffadec1c10>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffadec1c10>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727483672836,"stop":1727483672837,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727483672837,"stop":1727483672837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727483672838,"stop":1727483672838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727483672839,"stop":1727483672839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727483672840,"stop":1727483672840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727483672841,"stop":1727483672841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727483672841,"stop":1727483672841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727483672842,"stop":1727483672842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727483672842,"stop":1727483672842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727483672843,"stop":1727483672843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727483672843,"stop":1727483672843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727483672844,"stop":1727483672844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727483672844,"stop":1727483673245,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727483673246,"stop":1727483724804,"duration":51558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727483724806,"stop":1727483725671,"duration":865},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727483725671,"stop":1727483743192,"duration":17521},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffae0ad7d0>\ndevice = <golioth.golioth.Device object at 0xffffadec1c10>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffadec1c10>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"b844e7c187c12013","name":"stdout","source":"b844e7c187c12013.txt","type":"text/plain","size":455}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727483889177,"stop":1727483889177,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727483889179,"stop":1727483889642,"duration":463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727483889645,"stop":1727483889646,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727483889648,"stop":1727483889650,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"55e2976f5278"},{"name":"thread","value":"260-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":25,"unknown":0,"total":30},"items":[{"uid":"2aac97cba6ff4d7f","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/2aac97cba6ff4d7f","status":"passed","time":{"start":1727475874411,"stop":1727475887918,"duration":13507}},{"uid":"e9c0e768ec9548c8","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/e9c0e768ec9548c8","status":"passed","time":{"start":1727461147729,"stop":1727461161129,"duration":13400}},{"uid":"1755d31ebeaf9e7c","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/1755d31ebeaf9e7c","status":"passed","time":{"start":1727461147729,"stop":1727461161129,"duration":13400}},{"uid":"d2d71f2d6ad9ec9a","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/d2d71f2d6ad9ec9a","status":"passed","time":{"start":1727455744867,"stop":1727455758139,"duration":13272}},{"uid":"4771995e0c7e3896","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/4771995e0c7e3896","status":"passed","time":{"start":1727454997415,"stop":1727455010309,"duration":12894}},{"uid":"dcec6d01a523d5dc","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/dcec6d01a523d5dc","status":"passed","time":{"start":1727387880861,"stop":1727387894162,"duration":13301}},{"uid":"a65bf3232c37ac86","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/a65bf3232c37ac86","status":"passed","time":{"start":1727363068056,"stop":1727363081458,"duration":13402}},{"uid":"ac40960f363f649d","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/ac40960f363f649d","status":"passed","time":{"start":1727397383432,"stop":1727397396251,"duration":12819}},{"uid":"884b164dcaa89bae","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/884b164dcaa89bae","status":"passed","time":{"start":1727394353367,"stop":1727394366682,"duration":13315}},{"uid":"37c7224f0f11164f","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/37c7224f0f11164f","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1727387751481,"stop":1727387764086,"duration":12605}},{"uid":"dbdf7f773dca1471","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/dbdf7f773dca1471","status":"passed","time":{"start":1727387880861,"stop":1727387894162,"duration":13301}},{"uid":"83d9f120652d5d34","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/83d9f120652d5d34","status":"passed","time":{"start":1727384223847,"stop":1727384237030,"duration":13183}},{"uid":"cc8e9922cd603608","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/cc8e9922cd603608","status":"passed","time":{"start":1727381494639,"stop":1727381507254,"duration":12615}},{"uid":"9ccfcefb9f4e1131","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/9ccfcefb9f4e1131","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1727378795185,"stop":1727378808129,"duration":12944}},{"uid":"2e73927a529467b5","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/2e73927a529467b5","status":"passed","time":{"start":1727374101025,"stop":1727374114278,"duration":13253}},{"uid":"480db8ac5b8be78d","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/480db8ac5b8be78d","status":"passed","time":{"start":1727370923333,"stop":1727370936130,"duration":12797}},{"uid":"d8b25de7ea89b974","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/d8b25de7ea89b974","status":"passed","time":{"start":1727364102662,"stop":1727364115542,"duration":12880}},{"uid":"7b688d33c93631fe","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/7b688d33c93631fe","status":"passed","time":{"start":1727362159117,"stop":1727362171646,"duration":12529}},{"uid":"5acc4c0c15620107","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/5acc4c0c15620107","status":"passed","time":{"start":1727363068056,"stop":1727363081458,"duration":13402}},{"uid":"7962a48d215cf4b7","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/7962a48d215cf4b7","status":"passed","time":{"start":1727359441043,"stop":1727359455305,"duration":14262}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"591ad0c9f0821398.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}