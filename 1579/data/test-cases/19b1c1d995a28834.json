{"uid":"19b1c1d995a28834","name":"test_set_int_range_out_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_out_min","historyId":"07d0dc80615924eee5c9ecd5a1c0b503","time":{"start":1728067198005,"stop":1728067211034,"duration":13029},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff8b838190>\ndevice = <golioth.golioth.Device object at 0xffff8b7c8710>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8b7c8710>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728067103234,"stop":1728067103234,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board_name","time":{"start":1728067103235,"stop":1728067103235,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"port","time":{"start":1728067103236,"stop":1728067103236,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"baud","time":{"start":1728067103237,"stop":1728067103237,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_ssid","time":{"start":1728067103237,"stop":1728067103237,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_psk","time":{"start":1728067103238,"stop":1728067103238,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"fw_image","time":{"start":1728067103239,"stop":1728067103239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"serial_number","time":{"start":1728067103239,"stop":1728067103239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"bmp_port","time":{"start":1728067103240,"stop":1728067103240,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device_name","time":{"start":1728067103241,"stop":1728067103241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_key","time":{"start":1728067103241,"stop":1728067103241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_url","time":{"start":1728067103242,"stop":1728067103242,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project","time":{"start":1728067103242,"stop":1728067103882,"duration":640},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board","time":{"start":1728067103883,"stop":1728067123399,"duration":19516},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device","time":{"start":1728067123400,"stop":1728067124441,"duration":1041},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1728067124442,"stop":1728067138335,"duration":13893},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff8b838190>\ndevice = <golioth.golioth.Device object at 0xffff8b7c8710>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8b7c8710>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"b4c54f246ab4e9f5","name":"stdout","source":"b4c54f246ab4e9f5.txt","type":"text/plain","size":617}],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1728067300109,"stop":1728067300110,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device::0","time":{"start":1728067300112,"stop":1728067300514,"duration":402},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board::0","time":{"start":1728067300516,"stop":1728067300518,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project::0","time":{"start":1728067300520,"stop":1728067300522,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"bcc60cbfb14f"},{"name":"thread","value":"230-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":3,"skipped":0,"passed":83,"unknown":0,"total":87},"items":[{"uid":"fdc4ee1d1bd49aa3","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/fdc4ee1d1bd49aa3","status":"passed","time":{"start":1728058551804,"stop":1728058565208,"duration":13404}},{"uid":"fe67b5ce6f13ae24","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/fe67b5ce6f13ae24","status":"passed","time":{"start":1728060022398,"stop":1728060036519,"duration":14121}},{"uid":"afcc1b2df1033ceb","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/afcc1b2df1033ceb","status":"passed","time":{"start":1728035278115,"stop":1728035291273,"duration":13158}},{"uid":"3bff50f6bddb8300","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/3bff50f6bddb8300","status":"passed","time":{"start":1728035278115,"stop":1728035291273,"duration":13158}},{"uid":"19d9e86990dbb3c4","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/19d9e86990dbb3c4","status":"passed","time":{"start":1728049351822,"stop":1728049365184,"duration":13362}},{"uid":"641413f8b52afbab","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/641413f8b52afbab","status":"passed","time":{"start":1728035278115,"stop":1728035291273,"duration":13158}},{"uid":"df766cf6ff1a952b","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/df766cf6ff1a952b","status":"passed","time":{"start":1728027040272,"stop":1728027053220,"duration":12948}},{"uid":"b9c931f0cd9d26e8","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/b9c931f0cd9d26e8","status":"passed","time":{"start":1728025636971,"stop":1728025650865,"duration":13894}},{"uid":"d60347e5243ceb73","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/d60347e5243ceb73","status":"passed","time":{"start":1728022405349,"stop":1728022419163,"duration":13814}},{"uid":"4e4c5730f1bb126f","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/4e4c5730f1bb126f","status":"passed","time":{"start":1728002795256,"stop":1728002808033,"duration":12777}},{"uid":"b2e27b26dc8fb9f5","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/b2e27b26dc8fb9f5","status":"passed","time":{"start":1727991441402,"stop":1727991455113,"duration":13711}},{"uid":"dc92df5f997785c5","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/dc92df5f997785c5","status":"passed","time":{"start":1727991672760,"stop":1727991685940,"duration":13180}},{"uid":"1573a498a063c17","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/1573a498a063c17","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1727987787212,"stop":1727987787212,"duration":0}},{"uid":"7346be1bce2e1819","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/7346be1bce2e1819","status":"passed","time":{"start":1727984688489,"stop":1727984702609,"duration":14120}},{"uid":"f494875c34fcdf9e","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/f494875c34fcdf9e","status":"passed","time":{"start":1727978313159,"stop":1727978326762,"duration":13603}},{"uid":"ae848b81ec25bcf8","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/ae848b81ec25bcf8","status":"passed","time":{"start":1727976518787,"stop":1727976531724,"duration":12937}},{"uid":"aaca29127ad982d3","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/aaca29127ad982d3","status":"passed","time":{"start":1727972874582,"stop":1727972888405,"duration":13823}},{"uid":"e84faf87ade25c29","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/e84faf87ade25c29","status":"passed","time":{"start":1727970428422,"stop":1727970441592,"duration":13170}},{"uid":"8051150e0dd85773","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/8051150e0dd85773","status":"passed","time":{"start":1727965582888,"stop":1727965596334,"duration":13446}},{"uid":"1f4e5af6d84d81f7","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/1f4e5af6d84d81f7","status":"passed","time":{"start":1727958730863,"stop":1727958744168,"duration":13305}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"19b1c1d995a28834.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}