{"uid":"f372120efe8a80b5","name":"test_set_int_range_out_max","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_out_max","historyId":"f90d3a45e0d06384e7885d3d20a07736","time":{"start":1728067211097,"stop":1728067223893,"duration":12796},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff8b838190>\ndevice = <golioth.golioth.Device object at 0xffff8b7c8710>\n\n    async def test_set_int_range_out_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 101)\n    \n        with pytest.raises(trio.TooSlowError):\n            assert None != await board.wait_for_regex_in_line('Received test_int_range: 101', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:140: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8b7c8710>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728067103234,"stop":1728067103234,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board_name","time":{"start":1728067103235,"stop":1728067103235,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"port","time":{"start":1728067103236,"stop":1728067103236,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"baud","time":{"start":1728067103237,"stop":1728067103237,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_ssid","time":{"start":1728067103237,"stop":1728067103237,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_psk","time":{"start":1728067103238,"stop":1728067103238,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"fw_image","time":{"start":1728067103239,"stop":1728067103239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"serial_number","time":{"start":1728067103239,"stop":1728067103239,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"bmp_port","time":{"start":1728067103240,"stop":1728067103240,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device_name","time":{"start":1728067103241,"stop":1728067103241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_key","time":{"start":1728067103241,"stop":1728067103241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_url","time":{"start":1728067103242,"stop":1728067103242,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project","time":{"start":1728067103242,"stop":1728067103882,"duration":640},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board","time":{"start":1728067103883,"stop":1728067123399,"duration":19516},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device","time":{"start":1728067123400,"stop":1728067124441,"duration":1041},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1728067124442,"stop":1728067138335,"duration":13893},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff8b838190>\ndevice = <golioth.golioth.Device object at 0xffff8b7c8710>\n\n    async def test_set_int_range_out_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 101)\n    \n        with pytest.raises(trio.TooSlowError):\n            assert None != await board.wait_for_regex_in_line('Received test_int_range: 101', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:140: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff8b7c8710>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"a95907de0cedf8bc","name":"stdout","source":"a95907de0cedf8bc.txt","type":"text/plain","size":772}],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1728067300109,"stop":1728067300110,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device::0","time":{"start":1728067300112,"stop":1728067300514,"duration":402},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board::0","time":{"start":1728067300516,"stop":1728067300518,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project::0","time":{"start":1728067300520,"stop":1728067300522,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"bcc60cbfb14f"},{"name":"thread","value":"230-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":3,"skipped":0,"passed":83,"unknown":0,"total":87},"items":[{"uid":"33980a86e800f666","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/33980a86e800f666","status":"passed","time":{"start":1728058565219,"stop":1728058578830,"duration":13611}},{"uid":"3d24301d8043d15f","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/3d24301d8043d15f","status":"passed","time":{"start":1728060036530,"stop":1728060050036,"duration":13506}},{"uid":"145057cb4f7916e0","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/145057cb4f7916e0","status":"passed","time":{"start":1728035291285,"stop":1728035304981,"duration":13696}},{"uid":"21a227e925f96b6e","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/21a227e925f96b6e","status":"passed","time":{"start":1728035291285,"stop":1728035304981,"duration":13696}},{"uid":"b1c65f804230272e","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/b1c65f804230272e","status":"passed","time":{"start":1728049365196,"stop":1728049378050,"duration":12854}},{"uid":"dbb1439c63727f5e","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/dbb1439c63727f5e","status":"passed","time":{"start":1728035291285,"stop":1728035304981,"duration":13696}},{"uid":"c3e49500b7ef618","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/c3e49500b7ef618","status":"passed","time":{"start":1728027053232,"stop":1728027066581,"duration":13349}},{"uid":"1a7a2f9ea0efcf0a","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/1a7a2f9ea0efcf0a","status":"passed","time":{"start":1728025650876,"stop":1728025663713,"duration":12837}},{"uid":"562335051e794483","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/562335051e794483","status":"passed","time":{"start":1728022419174,"stop":1728022432479,"duration":13305}},{"uid":"91bd4fd32455f3d7","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/91bd4fd32455f3d7","status":"passed","time":{"start":1728002808044,"stop":1728002820834,"duration":12790}},{"uid":"4b9addd418cf1d03","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/4b9addd418cf1d03","status":"passed","time":{"start":1727991455125,"stop":1727991468629,"duration":13504}},{"uid":"91b6408f8291a7b7","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/91b6408f8291a7b7","status":"passed","time":{"start":1727991685951,"stop":1727991698869,"duration":12918}},{"uid":"df5d134a0fc48b3","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/df5d134a0fc48b3","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1727987788184,"stop":1727987788184,"duration":0}},{"uid":"526d5f64563973a5","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/526d5f64563973a5","status":"passed","time":{"start":1727984702620,"stop":1727984716129,"duration":13509}},{"uid":"b4a15981c4047a17","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/b4a15981c4047a17","status":"passed","time":{"start":1727978326773,"stop":1727978339811,"duration":13038}},{"uid":"e283c8eff4749f72","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/e283c8eff4749f72","status":"passed","time":{"start":1727976531735,"stop":1727976544500,"duration":12765}},{"uid":"aec3e60ae1ec7f88","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/aec3e60ae1ec7f88","status":"passed","time":{"start":1727972888417,"stop":1727972901280,"duration":12863}},{"uid":"e8f4b2701bfbb1f8","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/e8f4b2701bfbb1f8","status":"passed","time":{"start":1727970441604,"stop":1727970455198,"duration":13594}},{"uid":"6ae0eaaf86d81507","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/6ae0eaaf86d81507","status":"passed","time":{"start":1727965596346,"stop":1727965610238,"duration":13892}},{"uid":"2946abb71d4c1311","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/2946abb71d4c1311","status":"passed","time":{"start":1727958744179,"stop":1727958757376,"duration":13197}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"f372120efe8a80b5.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}