{"uid":"28d0ccc89316a37f","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"805922d6f8e486f2169951f916b7199e","time":{"start":1728066589822,"stop":1728066611386,"duration":21564},"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff9f2c6d90>\ndevice = <golioth.golioth.Device object at 0xffff9f29dd50>\nproject = <golioth.golioth.Project object at 0xffff9f218bd0>\nreleases = {'test_blocks': Release <670034171b3c084061cd0e19, release_tags=[], device_tags=['670034151b3c084061cd0e16'], artifact..., release_tags=[], device_tags=['670034151b3c084061cd0e16'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728066555207,"stop":1728066555207,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"port","time":{"start":1728066555208,"stop":1728066555209,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board_name","time":{"start":1728066555208,"stop":1728066555208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"baud","time":{"start":1728066555209,"stop":1728066555209,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_ssid","time":{"start":1728066555210,"stop":1728066555210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"fw_image","time":{"start":1728066555211,"stop":1728066555212,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_psk","time":{"start":1728066555211,"stop":1728066555211,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"bmp_port","time":{"start":1728066555212,"stop":1728066555212,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"serial_number","time":{"start":1728066555212,"stop":1728066555212,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_key","time":{"start":1728066555213,"stop":1728066555213,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_url","time":{"start":1728066555213,"stop":1728066555213,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device_name","time":{"start":1728066555214,"stop":1728066555214,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board","time":{"start":1728066555214,"stop":1728066573413,"duration":18199},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project","time":{"start":1728066573415,"stop":1728066573936,"duration":521},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device","time":{"start":1728066573936,"stop":1728066575077,"duration":1141},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1728066575077,"stop":1728066580650,"duration":5573},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"artifacts","time":{"start":1728066580651,"stop":1728066581128,"duration":477},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"tag","time":{"start":1728066581129,"stop":1728066581968,"duration":839},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"releases","time":{"start":1728066581969,"stop":1728066583664,"duration":1695},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"releases_teardown","time":{"start":1728066589819,"stop":1728066589820,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff9f2c6d90>\ndevice = <golioth.golioth.Device object at 0xffff9f29dd50>\nproject = <golioth.golioth.Project object at 0xffff9f218bd0>\nreleases = {'test_blocks': Release <670034171b3c084061cd0e19, release_tags=[], device_tags=['670034151b3c084061cd0e16'], artifact..., release_tags=[], device_tags=['670034151b3c084061cd0e16'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"8cef0a5195391ca","name":"stdout","source":"8cef0a5195391ca.txt","type":"text/plain","size":1608}],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"releases_teardown::0","time":{"start":1728066611553,"stop":1728066612601,"duration":1048},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"releases::0","time":{"start":1728066612603,"stop":1728066614183,"duration":1580},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"tag::0","time":{"start":1728066614185,"stop":1728066615014,"duration":829},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"artifacts::0","time":{"start":1728066615017,"stop":1728066615017,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1728066615018,"stop":1728066615019,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device::0","time":{"start":1728066615021,"stop":1728066615473,"duration":452},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project::0","time":{"start":1728066615475,"stop":1728066615475,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board::0","time":{"start":1728066615477,"stop":1728066615481,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"f640e8f6adc1"},{"name":"thread","value":"232-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":8,"skipped":0,"passed":74,"unknown":0,"total":88},"items":[{"uid":"ed741b0d5c703ac1","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/ed741b0d5c703ac1","status":"passed","time":{"start":1728058272649,"stop":1728058351193,"duration":78544}},{"uid":"33aa6425615e7a8c","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/33aa6425615e7a8c","status":"passed","time":{"start":1728059743355,"stop":1728059820864,"duration":77509}},{"uid":"6baaed3830a90e9b","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/6baaed3830a90e9b","status":"passed","time":{"start":1728035024721,"stop":1728035101999,"duration":77278}},{"uid":"be08703daa5a906f","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/be08703daa5a906f","status":"passed","time":{"start":1728035024721,"stop":1728035101999,"duration":77278}},{"uid":"ebdb4f246431a279","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/ebdb4f246431a279","status":"passed","time":{"start":1728049100918,"stop":1728049178228,"duration":77310}},{"uid":"7b74360f2098ca3b","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/7b74360f2098ca3b","status":"passed","time":{"start":1728035024721,"stop":1728035101999,"duration":77278}},{"uid":"20543c56cf5b9f30","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/20543c56cf5b9f30","status":"passed","time":{"start":1728026724624,"stop":1728026801806,"duration":77182}},{"uid":"e2bd8327d6a2a81a","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/e2bd8327d6a2a81a","status":"passed","time":{"start":1728025300034,"stop":1728025377290,"duration":77256}},{"uid":"e01c37cad6c0e118","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/e01c37cad6c0e118","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728022099133,"stop":1728022099133,"duration":0}},{"uid":"182c1423ee2aa5c","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/182c1423ee2aa5c","status":"passed","time":{"start":1728002545234,"stop":1728002622375,"duration":77141}},{"uid":"6de32d4a53c3655e","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/6de32d4a53c3655e","status":"passed","time":{"start":1727991178414,"stop":1727991256046,"duration":77632}},{"uid":"af6f25434ccf26d0","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/af6f25434ccf26d0","status":"passed","time":{"start":1727991432305,"stop":1727991509558,"duration":77253}},{"uid":"dcc7ab0102a2c84f","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/dcc7ab0102a2c84f","status":"failed","statusDetails":"AssertionError: assert 6 == 5\n +  where 6 = int('6')","time":{"start":1727987603114,"stop":1727987652345,"duration":49231}},{"uid":"41cd3754997eedc2","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/41cd3754997eedc2","status":"passed","time":{"start":1727984409525,"stop":1727984487055,"duration":77530}},{"uid":"13b63c43b492d5d","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/13b63c43b492d5d","status":"passed","time":{"start":1727978046052,"stop":1727978123029,"duration":76977}},{"uid":"31878f12ed258c8b","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/31878f12ed258c8b","status":"passed","time":{"start":1727976262124,"stop":1727976339126,"duration":77002}},{"uid":"b111f3edf4d35892","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/b111f3edf4d35892","status":"passed","time":{"start":1727972572789,"stop":1727972649874,"duration":77085}},{"uid":"32cf1517794243b8","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/32cf1517794243b8","status":"passed","time":{"start":1727970172540,"stop":1727970251439,"duration":78899}},{"uid":"169c858c2d8b6d8b","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/169c858c2d8b6d8b","status":"broken","statusDetails":"pylink.errors.JLinkFlashException: Specified file could not be opened.","time":{"start":1727967847813,"stop":1727967847813,"duration":0}},{"uid":"b1fc99dba1a630d3","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/b1fc99dba1a630d3","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727965381123,"stop":1727965402147,"duration":21024}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"28d0ccc89316a37f.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}