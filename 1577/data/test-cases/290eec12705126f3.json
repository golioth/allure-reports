{"uid":"290eec12705126f3","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"fa8c1766fb90779ba45428eac4722ac6","time":{"start":1728048688818,"stop":1728048703543,"duration":14725},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8766bfd0>\ndevice = <golioth.golioth.Device object at 0xffff87646e50>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff87646e50>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728048625510,"stop":1728048625511,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728048625511,"stop":1728048625512,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728048625512,"stop":1728048625512,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728048625513,"stop":1728048625513,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728048625513,"stop":1728048625513,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728048625514,"stop":1728048625514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728048625514,"stop":1728048625514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728048625515,"stop":1728048625515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728048625515,"stop":1728048625515,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728048625516,"stop":1728048625516,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728048625517,"stop":1728048625517,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728048625518,"stop":1728048625518,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728048625518,"stop":1728048625958,"duration":440},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728048625958,"stop":1728048667141,"duration":41183},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728048667142,"stop":1728048668182,"duration":1040},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728048668182,"stop":1728048681343,"duration":13161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff8766bfd0>\ndevice = <golioth.golioth.Device object at 0xffff87646e50>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff87646e50>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"9559e9bbf984eeaa","name":"stdout","source":"9559e9bbf984eeaa.txt","type":"text/plain","size":3426}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728048840387,"stop":1728048840387,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728048840391,"stop":1728048840893,"duration":502},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728048840895,"stop":1728048840897,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728048840899,"stop":1728048840901,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"fc3d3d15e4c7"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":1,"skipped":0,"passed":75,"unknown":0,"total":85},"items":[{"uid":"4a06ebe86c8fdb8f","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/4a06ebe86c8fdb8f","status":"passed","time":{"start":1728036059457,"stop":1728036072433,"duration":12976}},{"uid":"ff8a31275f1c497","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/ff8a31275f1c497","status":"passed","time":{"start":1728028540335,"stop":1728028553206,"duration":12871}},{"uid":"b8d0353bada5e8a2","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/b8d0353bada5e8a2","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728026203054,"stop":1728026216160,"duration":13106}},{"uid":"d0772abeec71e08d","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/d0772abeec71e08d","status":"passed","time":{"start":1728024795743,"stop":1728024808636,"duration":12893}},{"uid":"e0175e1e6c7c1a1f","reportUrl":"https://golioth.github.io/allure-reports/1571//#testresult/e0175e1e6c7c1a1f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728021328449,"stop":1728021328449,"duration":0}},{"uid":"2ed27b7d98008002","reportUrl":"https://golioth.github.io/allure-reports/1570//#testresult/2ed27b7d98008002","status":"passed","time":{"start":1728002111503,"stop":1728002124462,"duration":12959}},{"uid":"8850bc472eb4f0ad","reportUrl":"https://golioth.github.io/allure-reports/1569//#testresult/8850bc472eb4f0ad","status":"passed","time":{"start":1727990380365,"stop":1727990393302,"duration":12937}},{"uid":"a414124e517a77f6","reportUrl":"https://golioth.github.io/allure-reports/1567//#testresult/a414124e517a77f6","status":"passed","time":{"start":1727990242515,"stop":1727990255610,"duration":13095}},{"uid":"29af2fcc5a4a1779","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/29af2fcc5a4a1779","status":"passed","time":{"start":1727987073033,"stop":1727987086341,"duration":13308}},{"uid":"5f965b136ce315bb","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/5f965b136ce315bb","status":"passed","time":{"start":1727984075868,"stop":1727984089295,"duration":13427}},{"uid":"52e5f9621633513f","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/52e5f9621633513f","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1727979063383,"stop":1727979077801,"duration":14418}},{"uid":"baef61c5e178e172","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/baef61c5e178e172","status":"passed","time":{"start":1727964863307,"stop":1727964876022,"duration":12715}},{"uid":"5bad9b5a4dd7909d","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/5bad9b5a4dd7909d","status":"passed","time":{"start":1727973633019,"stop":1727973646139,"duration":13120}},{"uid":"db12b440de5facf6","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/db12b440de5facf6","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1727969667111,"stop":1727969681984,"duration":14873}},{"uid":"859323dbc75670bb","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/859323dbc75670bb","status":"passed","time":{"start":1727968006205,"stop":1727968019869,"duration":13664}},{"uid":"652f6b227daffe31","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/652f6b227daffe31","status":"passed","time":{"start":1727964863307,"stop":1727964876022,"duration":12715}},{"uid":"5dbc89f68d3e9947","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/5dbc89f68d3e9947","status":"passed","time":{"start":1727962055260,"stop":1727962068936,"duration":13676}},{"uid":"7aaa14dc2115a7f","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/7aaa14dc2115a7f","status":"passed","time":{"start":1727957902914,"stop":1727957915929,"duration":13015}},{"uid":"1677a2f2ad92c45a","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/1677a2f2ad92c45a","status":"passed","time":{"start":1727956292947,"stop":1727956306005,"duration":13058}},{"uid":"86b9dbb203eabcad","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/86b9dbb203eabcad","status":"passed","time":{"start":1727906737310,"stop":1727906750456,"duration":13146}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"290eec12705126f3.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}