{"uid":"3688164cae17256f","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1728400605527,"stop":1728400628888,"duration":23361},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa7ab41d0>\ndevice = <golioth.golioth.Device object at 0xffffa7ab13d0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728400564207,"stop":1728400564208,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728400564208,"stop":1728400564208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728400564209,"stop":1728400564209,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728400564209,"stop":1728400564209,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1728400564210,"stop":1728400564210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1728400564210,"stop":1728400564212,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728400564213,"stop":1728400564213,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728400564214,"stop":1728400564741,"duration":527},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728400564214,"stop":1728400564214,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728400564742,"stop":1728400565564,"duration":822},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1728400565565,"stop":1728400604879,"duration":39314},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1728400604880,"stop":1728400605524,"duration":644},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa7ab41d0>\ndevice = <golioth.golioth.Device object at 0xffffa7ab13d0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"d536daa6ce89a9a5","name":"log","source":"d536daa6ce89a9a5.txt","type":"text/plain","size":33124}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1728400629188,"stop":1728400629224,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728400629226,"stop":1728400629625,"duration":399},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728400629627,"stop":1728400629630,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1728400629634,"stop":1728400629635,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"78caed356569"},{"name":"thread","value":"340-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":92,"unknown":0,"total":111},"items":[{"uid":"7a8474aecb16d3d7","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/7a8474aecb16d3d7","status":"passed","time":{"start":1728342356736,"stop":1728342375996,"duration":19260}},{"uid":"e670f6343142b9c","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/e670f6343142b9c","status":"passed","time":{"start":1728349322887,"stop":1728349363309,"duration":40422}},{"uid":"aff35d35c9a7afcc","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/aff35d35c9a7afcc","status":"passed","time":{"start":1728343770805,"stop":1728343810831,"duration":40026}},{"uid":"7c63e15d8cec3c55","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/7c63e15d8cec3c55","status":"passed","time":{"start":1728342356736,"stop":1728342375996,"duration":19260}},{"uid":"fafc8a5cee1d531","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/fafc8a5cee1d531","status":"passed","time":{"start":1728337330958,"stop":1728337371043,"duration":40085}},{"uid":"eddff60f634a05cb","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/eddff60f634a05cb","status":"passed","time":{"start":1728318132067,"stop":1728318172736,"duration":40669}},{"uid":"58dd9e2646748d2c","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/58dd9e2646748d2c","status":"passed","time":{"start":1728321212030,"stop":1728321253437,"duration":41407}},{"uid":"4596d0f7a51a9960","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/4596d0f7a51a9960","status":"passed","time":{"start":1728321212030,"stop":1728321253437,"duration":41407}},{"uid":"1ee51a084095c5dd","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/1ee51a084095c5dd","status":"passed","time":{"start":1728318132067,"stop":1728318172736,"duration":40669}},{"uid":"e2b3f8b1db31378e","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/e2b3f8b1db31378e","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1728314382771,"stop":1728314425741,"duration":42970}},{"uid":"8388d901230ab01e","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/8388d901230ab01e","status":"passed","time":{"start":1728130455505,"stop":1728130496124,"duration":40619}},{"uid":"278cbe78a8b6638a","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/278cbe78a8b6638a","status":"passed","time":{"start":1728125763721,"stop":1728125804731,"duration":41010}},{"uid":"ee4489883bc027d1","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/ee4489883bc027d1","status":"passed","time":{"start":1728263119282,"stop":1728263158985,"duration":39703}},{"uid":"fba1d23d09392ee","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/fba1d23d09392ee","status":"passed","time":{"start":1728176530575,"stop":1728176571220,"duration":40645}},{"uid":"f23753ec207b4306","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/f23753ec207b4306","status":"passed","time":{"start":1728132064239,"stop":1728132104797,"duration":40558}},{"uid":"8f607132e8a8a94","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/8f607132e8a8a94","status":"passed","time":{"start":1728130455505,"stop":1728130496124,"duration":40619}},{"uid":"4633ea975d4f3d61","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/4633ea975d4f3d61","status":"passed","time":{"start":1728125763721,"stop":1728125804731,"duration":41010}},{"uid":"ff1c2a77a5e68ad","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/ff1c2a77a5e68ad","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1728124778953,"stop":1728124822703,"duration":43750}},{"uid":"b4ee5975782513c0","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/b4ee5975782513c0","status":"passed","time":{"start":1728026982933,"stop":1728027023426,"duration":40493}},{"uid":"4e514026a93dbabe","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/4e514026a93dbabe","status":"passed","time":{"start":1728064552516,"stop":1728064592855,"duration":40339}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"3688164cae17256f.json","parameterValues":["'rak5010'","'zephyr'"]}