{"uid":"f11976e39406463c","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1727986174749,"stop":1727986234738,"duration":59989},"status":"failed","statusMessage":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffaa56b790>\ndevice = <golioth.golioth.Device object at 0xffffaa543dd0>\nproject = <golioth.golioth.Project object at 0xffffabc23050>\nreleases = {'test_blocks': Release <66fef9ec2860a8ee0e304238, release_tags=[], device_tags=['66fef9eb2860a8ee0e304233'], artifact..., release_tags=[], device_tags=['66fef9eb2860a8ee0e304233'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 7 == 6\nE            +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727986098765,"stop":1727986098765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727986098766,"stop":1727986098767,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727986098766,"stop":1727986098766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727986098767,"stop":1727986098767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727986098768,"stop":1727986098768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727986098768,"stop":1727986098768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727986098769,"stop":1727986098769,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727986098769,"stop":1727986098769,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727986098770,"stop":1727986098770,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727986098771,"stop":1727986098771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727986098772,"stop":1727986098772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727986098773,"stop":1727986098774,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727986098774,"stop":1727986148612,"duration":49838},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727986148614,"stop":1727986149153,"duration":539},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727986149153,"stop":1727986150060,"duration":907},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727986150061,"stop":1727986154186,"duration":4125},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727986154188,"stop":1727986154667,"duration":479},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727986154667,"stop":1727986155570,"duration":903},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727986155570,"stop":1727986157334,"duration":1764},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727986174746,"stop":1727986174747,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffaa56b790>\ndevice = <golioth.golioth.Device object at 0xffffaa543dd0>\nproject = <golioth.golioth.Project object at 0xffffabc23050>\nreleases = {'test_blocks': Release <66fef9ec2860a8ee0e304238, release_tags=[], device_tags=['66fef9eb2860a8ee0e304233'], artifact..., release_tags=[], device_tags=['66fef9eb2860a8ee0e304233'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 7 == 6\nE            +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"54d778a67e17e644","name":"stdout","source":"54d778a67e17e644.txt","type":"text/plain","size":2330}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727986234921,"stop":1727986236135,"duration":1214},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727986236138,"stop":1727986237952,"duration":1814},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727986237954,"stop":1727986238900,"duration":946},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727986238902,"stop":1727986238903,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727986238904,"stop":1727986238904,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727986238907,"stop":1727986239376,"duration":469},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727986239379,"stop":1727986239379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727986239381,"stop":1727986239388,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"20aec6ecc7ff"},{"name":"thread","value":"246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":4,"skipped":0,"passed":66,"unknown":0,"total":79},"items":[{"uid":"27da25a1397c040a","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/27da25a1397c040a","status":"passed","time":{"start":1727983716377,"stop":1727983797464,"duration":81087}},{"uid":"4c3fbcf33e7621c9","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/4c3fbcf33e7621c9","status":"passed","time":{"start":1727976081237,"stop":1727976162068,"duration":80831}},{"uid":"60796132b6929e25","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/60796132b6929e25","status":"passed","time":{"start":1727964640423,"stop":1727964721274,"duration":80851}},{"uid":"92f169d1c8ef51a9","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/92f169d1c8ef51a9","status":"passed","time":{"start":1727972354284,"stop":1727972435104,"duration":80820}},{"uid":"9f0393427a07f742","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/9f0393427a07f742","status":"failed","statusDetails":"AssertionError: assert 6 == 5\n +  where 6 = int('6')","time":{"start":1727968502230,"stop":1727968553463,"duration":51233}},{"uid":"7934fb0b00fa8530","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/7934fb0b00fa8530","status":"passed","time":{"start":1727967584258,"stop":1727967665088,"duration":80830}},{"uid":"91ef7e294410fdd7","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/91ef7e294410fdd7","status":"passed","time":{"start":1727964640423,"stop":1727964721274,"duration":80851}},{"uid":"3e97410e93b94956","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/3e97410e93b94956","status":"passed","time":{"start":1727961230807,"stop":1727961311547,"duration":80740}},{"uid":"227c7c8798066341","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/227c7c8798066341","status":"passed","time":{"start":1727955286919,"stop":1727955367203,"duration":80284}},{"uid":"5849903bd22ca4cd","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/5849903bd22ca4cd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727954389463,"stop":1727954474285,"duration":84822}},{"uid":"d1d56d5975c695f","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/d1d56d5975c695f","status":"passed","time":{"start":1727906531727,"stop":1727906612487,"duration":80760}},{"uid":"b0006daf0f32867e","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/b0006daf0f32867e","status":"passed","time":{"start":1727932241316,"stop":1727932318711,"duration":77395}},{"uid":"26227ce47492986","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/26227ce47492986","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727944256756,"stop":1727944273588,"duration":16832}},{"uid":"e83a134399442f40","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/e83a134399442f40","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727943407179,"stop":1727943427918,"duration":20739}},{"uid":"d089958d2a99d33d","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/d089958d2a99d33d","status":"passed","time":{"start":1727942478328,"stop":1727942558743,"duration":80415}},{"uid":"1cca893b4ff44e2e","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/1cca893b4ff44e2e","status":"passed","time":{"start":1727831564555,"stop":1727831641958,"duration":77403}},{"uid":"126f790c31a2217b","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/126f790c31a2217b","status":"passed","time":{"start":1727932241316,"stop":1727932318711,"duration":77395}},{"uid":"45b62037680e4c60","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/45b62037680e4c60","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727925818737,"stop":1727925839161,"duration":20424}},{"uid":"6f5834cd2dd2d9c4","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/6f5834cd2dd2d9c4","status":"passed","time":{"start":1727915486990,"stop":1727915568637,"duration":81647}},{"uid":"fda33434d229da4f","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/fda33434d229da4f","status":"passed","time":{"start":1727906531727,"stop":1727906612487,"duration":80760}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"f11976e39406463c.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}