{"uid":"1f80d1d42df02e61","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"ee936b7d181ae9cc4057b23c9f7088a4","time":{"start":1728326804602,"stop":1728326810080,"duration":5478},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff8fb64650>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff8fb56b10>\ndevice = <golioth.golioth.Device object at 0xffff8fb66090>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff8fb64650>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728326729869,"stop":1728326729869,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728326729870,"stop":1728326729871,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728326729872,"stop":1728326729872,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728326729873,"stop":1728326729873,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728326729874,"stop":1728326729875,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728326729876,"stop":1728326729876,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728326729877,"stop":1728326729877,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728326729878,"stop":1728326729879,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728326729880,"stop":1728326729880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728326729881,"stop":1728326729881,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728326729882,"stop":1728326729882,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728326729883,"stop":1728326729883,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728326729884,"stop":1728326730292,"duration":408},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728326730292,"stop":1728326771417,"duration":41125},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728326771418,"stop":1728326772273,"duration":855},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728326772274,"stop":1728326801912,"duration":29638},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728326855203,"stop":1728326855203,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728326855205,"stop":1728326855590,"duration":385},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728326855592,"stop":1728326855594,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728326855596,"stop":1728326855598,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"795295aafce6"},{"name":"thread","value":"264-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":102,"unknown":0,"total":118},"items":[{"uid":"e1baeda76504867c","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/e1baeda76504867c","status":"passed","time":{"start":1728339658584,"stop":1728339660160,"duration":1576}},{"uid":"c2af35f3c08d43c5","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/c2af35f3c08d43c5","status":"passed","time":{"start":1728399962083,"stop":1728399963593,"duration":1510}},{"uid":"70f265b75110b304","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/70f265b75110b304","status":"passed","time":{"start":1728339658584,"stop":1728339660160,"duration":1576}},{"uid":"3ca9d82a1ce3d530","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/3ca9d82a1ce3d530","status":"passed","time":{"start":1728348667796,"stop":1728348669405,"duration":1609}},{"uid":"f6f4f9cfa0b47da5","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/f6f4f9cfa0b47da5","status":"passed","time":{"start":1728340923295,"stop":1728340924812,"duration":1517}},{"uid":"b2e5ea864447296d","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/b2e5ea864447296d","status":"passed","time":{"start":1728339658584,"stop":1728339660160,"duration":1576}},{"uid":"d38f0adb0e22b86d","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/d38f0adb0e22b86d","status":"passed","time":{"start":1728335918617,"stop":1728335920156,"duration":1539}},{"uid":"a6c46242429c8196","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/a6c46242429c8196","status":"passed","time":{"start":1728317127033,"stop":1728317128572,"duration":1539}},{"uid":"57e294c5664fc323","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/57e294c5664fc323","status":"passed","time":{"start":1728325352402,"stop":1728325353947,"duration":1545}},{"uid":"a65fa77272402e31","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/a65fa77272402e31","status":"passed","time":{"start":1728319100552,"stop":1728319102180,"duration":1628}},{"uid":"f0bc64c8bb26059c","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/f0bc64c8bb26059c","status":"passed","time":{"start":1728317127033,"stop":1728317128572,"duration":1539}},{"uid":"6296bfd196b4884f","reportUrl":"https://golioth.github.io/allure-reports/1597//#testresult/6296bfd196b4884f","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1728313068131,"stop":1728313073493,"duration":5362}},{"uid":"6442888f237949dd","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/6442888f237949dd","status":"passed","time":{"start":1728133268746,"stop":1728133274121,"duration":5375}},{"uid":"de46939f54a61ae7","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/de46939f54a61ae7","status":"passed","time":{"start":1728305653934,"stop":1728305655564,"duration":1630}},{"uid":"2abcda46623c9ed4","reportUrl":"https://golioth.github.io/allure-reports/1591//#testresult/2abcda46623c9ed4","status":"passed","time":{"start":1728261379714,"stop":1728261381358,"duration":1644}},{"uid":"4d85e561c5fb14e6","reportUrl":"https://golioth.github.io/allure-reports/1587//#testresult/4d85e561c5fb14e6","status":"passed","time":{"start":1728126792370,"stop":1728126794759,"duration":2389}},{"uid":"5523f9d0a6ee3d04","reportUrl":"https://golioth.github.io/allure-reports/1590//#testresult/5523f9d0a6ee3d04","status":"passed","time":{"start":1728175125897,"stop":1728175127466,"duration":1569}},{"uid":"c45829dd58d3033e","reportUrl":"https://golioth.github.io/allure-reports/1575//#testresult/c45829dd58d3033e","status":"passed","time":{"start":1728066011129,"stop":1728066012745,"duration":1616}},{"uid":"bfa537262476c9a8","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/bfa537262476c9a8","status":"passed","time":{"start":1728129291628,"stop":1728129293260,"duration":1632}},{"uid":"585488413c6c794","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/585488413c6c794","status":"passed","time":{"start":1728133268746,"stop":1728133274121,"duration":5375}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"1f80d1d42df02e61.json","parameterValues":["'rak5010'","'zephyr'"]}