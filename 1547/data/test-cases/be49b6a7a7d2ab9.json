{"uid":"be49b6a7a7d2ab9","name":"test_int_too_small","fullName":"tests.hil.tests.settings.test_settings#test_int_too_small","historyId":"069a84c9ea1ac9eee42b7a08261cade6","time":{"start":1727974197998,"stop":1727974211616,"duration":13618},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffffbb9bb590>\ndevice = <golioth.golioth.Device object at 0xffffbb9b18d0>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffbb9b18d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727974144531,"stop":1727974144531,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727974144532,"stop":1727974144532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727974144532,"stop":1727974144533,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727974144533,"stop":1727974144533,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727974144534,"stop":1727974144534,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727974144534,"stop":1727974144535,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727974144535,"stop":1727974144535,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727974144536,"stop":1727974144536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727974144536,"stop":1727974144537,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727974144537,"stop":1727974144537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727974144537,"stop":1727974144537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727974144538,"stop":1727974144538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727974144538,"stop":1727974145052,"duration":514},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727974145052,"stop":1727974159911,"duration":14859},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727974159913,"stop":1727974160898,"duration":985},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727974160899,"stop":1727974178270,"duration":17371},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffffbb9bb590>\ndevice = <golioth.golioth.Device object at 0xffffbb9b18d0>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffbb9b18d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"80b0084e38cada5","name":"stdout","source":"80b0084e38cada5.txt","type":"text/plain","size":736}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1727974350721,"stop":1727974350721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727974350727,"stop":1727974351360,"duration":633},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727974351362,"stop":1727974351414,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727974351417,"stop":1727974351419,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"32e4ab015850"},{"name":"thread","value":"325-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":12,"skipped":0,"passed":56,"unknown":0,"total":70},"items":[{"uid":"ef0e6046dd7ca3bf","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/ef0e6046dd7ca3bf","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1727971596498,"stop":1727971609594,"duration":13096}},{"uid":"e66cc2608ab2d8d6","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/e66cc2608ab2d8d6","status":"passed","time":{"start":1727958834841,"stop":1727958848175,"duration":13334}},{"uid":"8c72cd7b11b3a291","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/8c72cd7b11b3a291","status":"passed","time":{"start":1727949014325,"stop":1727949027831,"duration":13506}},{"uid":"a5e4a9f06ea66b38","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/a5e4a9f06ea66b38","status":"passed","time":{"start":1727954452986,"stop":1727954467769,"duration":14783}},{"uid":"cedb37f854386815","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/cedb37f854386815","status":"passed","time":{"start":1727952913486,"stop":1727952926889,"duration":13403}},{"uid":"c98b85c5dbb7929b","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/c98b85c5dbb7929b","status":"passed","time":{"start":1727933284094,"stop":1727933298033,"duration":13939}},{"uid":"bcfe182e2ee5261d","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/bcfe182e2ee5261d","status":"passed","time":{"start":1727949014325,"stop":1727949027831,"duration":13506}},{"uid":"634637be5763f340","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/634637be5763f340","status":"passed","time":{"start":1727943116204,"stop":1727943129976,"duration":13772}},{"uid":"eb46c68e7a30211b","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/eb46c68e7a30211b","status":"passed","time":{"start":1727933284094,"stop":1727933298033,"duration":13939}},{"uid":"5211912107dd7f22","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/5211912107dd7f22","status":"passed","time":{"start":1727926979060,"stop":1727926992565,"duration":13505}},{"uid":"7fabadc0f5fc2e56","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/7fabadc0f5fc2e56","status":"passed","time":{"start":1727916570593,"stop":1727916584308,"duration":13715}},{"uid":"38252f31625b9493","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/38252f31625b9493","status":"passed","time":{"start":1727907907659,"stop":1727907920547,"duration":12888}},{"uid":"ed2c3b7583af3b5d","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/ed2c3b7583af3b5d","status":"passed","time":{"start":1727833275174,"stop":1727833288577,"duration":13403}},{"uid":"3d286ab34acb11e3","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/3d286ab34acb11e3","status":"passed","time":{"start":1727830201175,"stop":1727830215035,"duration":13860}},{"uid":"884f121f2975d8dd","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/884f121f2975d8dd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727814444628,"stop":1727814444628,"duration":0}},{"uid":"f55b3bf2c2787ff8","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/f55b3bf2c2787ff8","status":"passed","time":{"start":1727815761195,"stop":1727815773916,"duration":12721}},{"uid":"38799b867c05bcef","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/38799b867c05bcef","status":"passed","time":{"start":1727798364680,"stop":1727798378289,"duration":13609}},{"uid":"e5ff47692ddb5ede","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/e5ff47692ddb5ede","status":"passed","time":{"start":1727810959197,"stop":1727810971937,"duration":12740}},{"uid":"3a662c4a7a84f4a2","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/3a662c4a7a84f4a2","status":"passed","time":{"start":1727806522044,"stop":1727806537186,"duration":15142}},{"uid":"726564910dfc6248","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/726564910dfc6248","status":"passed","time":{"start":1727798364680,"stop":1727798378289,"duration":13609}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"be49b6a7a7d2ab9.json","parameterValues":["'nrf9160dk'","'zephyr'"]}