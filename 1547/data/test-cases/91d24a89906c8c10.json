{"uid":"91d24a89906c8c10","name":"test_float_return","fullName":"tests.hil.tests.rpc.test_rpc#test_float_return","historyId":"af8563b86c45d8e9c8a5e0894d4dc4a6","time":{"start":1727974033256,"stop":1727974038757,"duration":5501},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff86e95e10>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffff86e73f50>\ndevice = <golioth.golioth.Device object at 0xffff870281d0>\n\n    async def test_float_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"float\")\n\ntests/hil/tests/rpc/test_rpc.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff86e95e10>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727973971345,"stop":1727973971346,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727973971346,"stop":1727973971346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727973971347,"stop":1727973971347,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727973971348,"stop":1727973971348,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727973971349,"stop":1727973971349,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727973971349,"stop":1727973971349,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727973971350,"stop":1727973971351,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727973971350,"stop":1727973971350,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727973971351,"stop":1727973971352,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727973971351,"stop":1727973971351,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727973971352,"stop":1727973971352,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727973971352,"stop":1727973971352,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727973971353,"stop":1727973975980,"duration":4627},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727973975982,"stop":1727973990732,"duration":14750},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727973990735,"stop":1727973992134,"duration":1399},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727973992134,"stop":1727974017185,"duration":25051},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727974140662,"stop":1727974140662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727974140664,"stop":1727974141129,"duration":465},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727974141133,"stop":1727974141180,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727974141184,"stop":1727974141188,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"32e4ab015850"},{"name":"thread","value":"303-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":15,"skipped":0,"passed":55,"unknown":0,"total":70},"items":[{"uid":"865d454fddfc7000","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/865d454fddfc7000","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727971431051,"stop":1727971431051,"duration":0}},{"uid":"3f34ea870fec2fd1","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/3f34ea870fec2fd1","status":"passed","time":{"start":1727958724679,"stop":1727958725405,"duration":726}},{"uid":"6594966e1f5d55e9","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/6594966e1f5d55e9","status":"passed","time":{"start":1727948892899,"stop":1727948894504,"duration":1605}},{"uid":"ab9f88a61f812868","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/ab9f88a61f812868","status":"passed","time":{"start":1727954342852,"stop":1727954343593,"duration":741}},{"uid":"f94b501046864ba5","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/f94b501046864ba5","status":"passed","time":{"start":1727952787759,"stop":1727952788953,"duration":1194}},{"uid":"3a4335753bb9d449","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/3a4335753bb9d449","status":"passed","time":{"start":1727933159069,"stop":1727933160276,"duration":1207}},{"uid":"fd259c984df6fe84","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/fd259c984df6fe84","status":"passed","time":{"start":1727948892899,"stop":1727948894504,"duration":1605}},{"uid":"e786089ba4bed53a","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/e786089ba4bed53a","status":"passed","time":{"start":1727943014177,"stop":1727943014917,"duration":740}},{"uid":"db9f7004c8073ada","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/db9f7004c8073ada","status":"passed","time":{"start":1727933159069,"stop":1727933160276,"duration":1207}},{"uid":"cca27d4787237f8f","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/cca27d4787237f8f","status":"passed","time":{"start":1727926894190,"stop":1727926895488,"duration":1298}},{"uid":"95b1148aa058c8e7","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/95b1148aa058c8e7","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1727916426467,"stop":1727916431665,"duration":5198}},{"uid":"40cdd5ba6686ea83","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/40cdd5ba6686ea83","status":"passed","time":{"start":1727907794997,"stop":1727907795989,"duration":992}},{"uid":"c9b371d1dfb56a6c","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/c9b371d1dfb56a6c","status":"passed","time":{"start":1727833187962,"stop":1727833189860,"duration":1898}},{"uid":"89214553ee60116","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/89214553ee60116","status":"passed","time":{"start":1727830065098,"stop":1727830066600,"duration":1502}},{"uid":"8f337188bdbd408e","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/8f337188bdbd408e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727814291904,"stop":1727814291904,"duration":0}},{"uid":"a17b51c548e546a5","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/a17b51c548e546a5","status":"passed","time":{"start":1727815641845,"stop":1727815642840,"duration":995}},{"uid":"57cbe0c172deef4d","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/57cbe0c172deef4d","status":"passed","time":{"start":1727798244278,"stop":1727798245373,"duration":1095}},{"uid":"64b382b70b6ebd1d","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/64b382b70b6ebd1d","status":"passed","time":{"start":1727810836915,"stop":1727810837664,"duration":749}},{"uid":"bde0b5c3fe2259e9","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/bde0b5c3fe2259e9","status":"passed","time":{"start":1727806417590,"stop":1727806420865,"duration":3275}},{"uid":"d09b15f754222000","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/d09b15f754222000","status":"passed","time":{"start":1727798244278,"stop":1727798245373,"duration":1095}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"91d24a89906c8c10.json","parameterValues":["'nrf9160dk'","'zephyr'"]}