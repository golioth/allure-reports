{"uid":"976b33e5eae8dd70","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"760eff61a6b23948f80921df65cbf7f5","time":{"start":1728176648229,"stop":1728176656589,"duration":8360},"status":"failed","statusMessage":"AssertionError: assert 20.5 == 20.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff94529290>\ndevice = <golioth.golioth.Device object at 0xffff94520390>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 20.5 == 20.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728176637946,"stop":1728176637946,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728176637947,"stop":1728176637948,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728176637947,"stop":1728176637947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728176637948,"stop":1728176637948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1728176637949,"stop":1728176637951,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1728176637949,"stop":1728176637949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728176637952,"stop":1728176637953,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728176637952,"stop":1728176637952,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728176637953,"stop":1728176638706,"duration":753},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728176638707,"stop":1728176639848,"duration":1141},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1728176639848,"stop":1728176647672,"duration":7824},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1728176647672,"stop":1728176648226,"duration":554},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 20.5 == 20.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff94529290>\ndevice = <golioth.golioth.Device object at 0xffff94520390>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 20.5 == 20.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","steps":[],"attachments":[{"uid":"5c8338075c009c40","name":"log","source":"5c8338075c009c40.txt","type":"text/plain","size":15026}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1728176656880,"stop":1728176657190,"duration":310},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728176657192,"stop":1728176657741,"duration":549},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728176657743,"stop":1728176657745,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1728176657750,"stop":1728176657751,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"500e3d5c9a50"},{"name":"thread","value":"449-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":96,"unknown":0,"total":101},"items":[{"uid":"5ef7d54f614aec41","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/5ef7d54f614aec41","status":"passed","time":{"start":1728133570713,"stop":1728133592630,"duration":21917}},{"uid":"2334562e63ecfc8a","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/2334562e63ecfc8a","status":"passed","time":{"start":1728130435855,"stop":1728130458428,"duration":22573}},{"uid":"495932975674b3eb","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/495932975674b3eb","status":"passed","time":{"start":1728125779002,"stop":1728125803284,"duration":24282}},{"uid":"506143e7a5f5c68d","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/506143e7a5f5c68d","status":"passed","time":{"start":1728125069512,"stop":1728125094742,"duration":25230}},{"uid":"4f586b47170e399f","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/4f586b47170e399f","status":"passed","time":{"start":1728059109169,"stop":1728059128013,"duration":18844}},{"uid":"5c550cb5d49ecec6","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/5c550cb5d49ecec6","status":"passed","time":{"start":1728059613946,"stop":1728059637632,"duration":23686}},{"uid":"4c87e8ae3dc28b27","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/4c87e8ae3dc28b27","status":"passed","time":{"start":1728089959351,"stop":1728089982670,"duration":23319}},{"uid":"9e5451c66238685e","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/9e5451c66238685e","status":"passed","time":{"start":1728081795530,"stop":1728081819104,"duration":23574}},{"uid":"2141af51f63ed41c","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/2141af51f63ed41c","status":"passed","time":{"start":1728075312525,"stop":1728075336171,"duration":23646}},{"uid":"566caf4e0892c4e7","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/566caf4e0892c4e7","status":"passed","time":{"start":1728073123069,"stop":1728073145517,"duration":22448}},{"uid":"45c027699e0ba2e7","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/45c027699e0ba2e7","status":"passed","time":{"start":1728068867515,"stop":1728068891812,"duration":24297}},{"uid":"ae34a8d2fbbb7daf","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/ae34a8d2fbbb7daf","status":"passed","time":{"start":1728059109169,"stop":1728059128013,"duration":18844}},{"uid":"ee1797bc2e1cebd2","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/ee1797bc2e1cebd2","status":"passed","time":{"start":1728059613946,"stop":1728059637632,"duration":23686}},{"uid":"7b6f539190dc41e0","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/7b6f539190dc41e0","status":"passed","time":{"start":1728065987438,"stop":1728066010034,"duration":22596}},{"uid":"94f7a35c72432b6e","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/94f7a35c72432b6e","status":"passed","time":{"start":1728031883768,"stop":1728031907147,"duration":23379}},{"uid":"f1172e74302b2b0c","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/f1172e74302b2b0c","status":"passed","time":{"start":1728054837392,"stop":1728054860936,"duration":23544}},{"uid":"87e3b8afc071beaf","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/87e3b8afc071beaf","status":"passed","time":{"start":1728049979345,"stop":1728050002024,"duration":22679}},{"uid":"4a14e58b4f1b02d3","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/4a14e58b4f1b02d3","status":"passed","time":{"start":1728035821465,"stop":1728035843918,"duration":22453}},{"uid":"31e45b6c61ae8942","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/31e45b6c61ae8942","status":"passed","time":{"start":1728031883768,"stop":1728031907147,"duration":23379}},{"uid":"fb410255574f2ce2","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/fb410255574f2ce2","status":"failed","statusDetails":"AssertionError: assert 20.5 == 20.0","time":{"start":1728028577934,"stop":1728028586531,"duration":8597}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"976b33e5eae8dd70.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}