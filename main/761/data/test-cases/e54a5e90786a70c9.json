{"uid":"e54a5e90786a70c9","name":"test_lightdb_observe","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.observe.pytest.test_sample#test_lightdb_observe","historyId":"1ec1936b7990a0542c6cd1098cc4bb62","time":{"start":1760041511991,"stop":1760041511991,"duration":0},"status":"broken","statusMessage":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00'","statusTrace":"self = Serial<id=0xffffabd5e7a0, open=False>(port='/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n>           self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00'\n\n/root/venv/lib/python3.13/site-packages/serial/serialposix.py:322: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_lightdb_observe>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_zephyr_samples/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:62: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:91: in launch\n    self.connect()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:125: in connect\n    self._connect_device()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:145: in _connect_device\n    self._serial_connection = serial.Serial(\n/root/venv/lib/python3.13/site-packages/serial/serialutil.py:244: in __init__\n    self.open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Serial<id=0xffffabd5e7a0, open=False>(port='/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n            self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n        except OSError as msg:\n            self.fd = None\n>           raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\nE           serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00'\n\n/root/venv/lib/python3.13/site-packages/serial/serialposix.py:325: SerialException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760041511994,"stop":1760041511994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760041511995,"stop":1760041511996,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760041511995,"stop":1760041511995,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760041511996,"stop":1760041511996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1760041511997,"stop":1760041511997,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1760041511997,"stop":1760041511999,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760041512000,"stop":1760041512000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760041512000,"stop":1760041512000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760041512001,"stop":1760041512478,"duration":477},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760041512479,"stop":1760041513135,"duration":656},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1760041513135,"stop":1760041513239,"duration":104},"status":"broken","statusMessage":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00'\n","statusTrace":"  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 62, in dut\n    device_object.launch()\n    ~~~~~~~~~~~~~~~~~~~~^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py\", line 91, in launch\n    self.connect()\n    ~~~~~~~~~~~~^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py\", line 125, in connect\n    self._connect_device()\n    ~~~~~~~~~~~~~~~~~~~~^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py\", line 145, in _connect_device\n    self._serial_connection = serial.Serial(\n                              ~~~~~~~~~~~~~^\n        serial_name,\n        ^^^^^^^^^^^^\n    ...<4 lines>...\n        timeout=self.base_timeout,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/root/venv/lib/python3.13/site-packages/serial/serialutil.py\", line 244, in __init__\n    self.open()\n    ~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/serial/serialposix.py\", line 325, in open\n    raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00'","statusTrace":"self = Serial<id=0xffffabd5e7a0, open=False>(port='/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n>           self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00'\n\n/root/venv/lib/python3.13/site-packages/serial/serialposix.py:322: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_lightdb_observe>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_zephyr_samples/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:62: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:91: in launch\n    self.connect()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:125: in connect\n    self._connect_device()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:145: in _connect_device\n    self._serial_connection = serial.Serial(\n/root/venv/lib/python3.13/site-packages/serial/serialutil.py:244: in __init__\n    self.open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Serial<id=0xffffabd5e7a0, open=False>(port='/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n            self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n        except OSError as msg:\n            self.fd = None\n>           raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\nE           serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-SEGGER_J-Link_000960047329-if00'\n\n/root/venv/lib/python3.13/site-packages/serial/serialposix.py:325: SerialException","steps":[],"attachments":[{"uid":"616c6403b86dae1e","name":"log","source":"616c6403b86dae1e.txt","type":"text/plain","size":9881}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1760041513737,"stop":1760041514071,"duration":334},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760041514073,"stop":1760041514075,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1760041514080,"stop":1760041514080,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"7241b118df55"},{"name":"thread","value":"426-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.observe.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":15,"unknown":0,"total":17},"items":[{"uid":"6a7fd53c9f438ee0","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/6a7fd53c9f438ee0","status":"passed","time":{"start":1759994041983,"stop":1759994049645,"duration":7662}},{"uid":"a7109cea183671a3","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/a7109cea183671a3","status":"passed","time":{"start":1759972239779,"stop":1759972249725,"duration":9946}},{"uid":"4f48c3f48e2dbb13","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/4f48c3f48e2dbb13","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1759883584014,"stop":1759883598437,"duration":14423}},{"uid":"7187ee2c27614379","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/7187ee2c27614379","status":"passed","time":{"start":1759863735629,"stop":1759863743888,"duration":8259}},{"uid":"b5b390fa7ebbd766","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/b5b390fa7ebbd766","status":"passed","time":{"start":1759802570710,"stop":1759802579088,"duration":8378}},{"uid":"22cd2b3f24b6f0f6","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/22cd2b3f24b6f0f6","status":"passed","time":{"start":1759783522887,"stop":1759783534328,"duration":11441}},{"uid":"ca9bbe12dc207858","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/ca9bbe12dc207858","status":"passed","time":{"start":1759713117860,"stop":1759713129931,"duration":12071}},{"uid":"8210a89dc5d47c23","reportUrl":"https://golioth.github.io/allure-reports/main/741//#testresult/8210a89dc5d47c23","status":"passed","time":{"start":1759625205061,"stop":1759625215460,"duration":10399}},{"uid":"f7c44191178bac28","reportUrl":"https://golioth.github.io/allure-reports/main/740//#testresult/f7c44191178bac28","status":"passed","time":{"start":1759539705560,"stop":1759539716540,"duration":10980}},{"uid":"9081243e50500bc9","reportUrl":"https://golioth.github.io/allure-reports/main/738//#testresult/9081243e50500bc9","status":"passed","time":{"start":1759452705024,"stop":1759452714908,"duration":9884}},{"uid":"ec887888183cd687","reportUrl":"https://golioth.github.io/allure-reports/main/734//#testresult/ec887888183cd687","status":"passed","time":{"start":1759365803550,"stop":1759365813598,"duration":10048}},{"uid":"5f36ef4b1a049f1c","reportUrl":"https://golioth.github.io/allure-reports/main/733//#testresult/5f36ef4b1a049f1c","status":"passed","time":{"start":1759281269317,"stop":1759281279660,"duration":10343}},{"uid":"ec13e45a3cb572d2","reportUrl":"https://golioth.github.io/allure-reports/main/727//#testresult/ec13e45a3cb572d2","status":"passed","time":{"start":1759116223809,"stop":1759116233004,"duration":9195}},{"uid":"22a63c12a8b5c7b5","reportUrl":"https://golioth.github.io/allure-reports/main/725//#testresult/22a63c12a8b5c7b5","status":"passed","time":{"start":1759022466044,"stop":1759022476343,"duration":10299}},{"uid":"d56aff3a36a9ae51","reportUrl":"https://golioth.github.io/allure-reports/main/724//#testresult/d56aff3a36a9ae51","status":"passed","time":{"start":1758938319217,"stop":1758938401428,"duration":82211}},{"uid":"bcd77f4833c48f54","reportUrl":"https://golioth.github.io/allure-reports/main/719//#testresult/bcd77f4833c48f54","status":"passed","time":{"start":1758850807916,"stop":1758850818245,"duration":10329}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","zephyr"]},"source":"e54a5e90786a70c9.json","parameterValues":["'nrf9160dk'","'zephyr'"]}