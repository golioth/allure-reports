{
  "uid" : "2fb4a630715fefbb",
  "name" : "test_lightdb_set",
  "fullName" : "examples.esp_idf.lightdb.set.pytest.test_sample#test_lightdb_set",
  "historyId" : "3ee933dc6e207e3b2a3f4bea6c51db72",
  "time" : {
    "start" : 1733447280808,
    "stop" : 1733447296583,
    "duration" : 15775
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 200257.52440961983\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa550f590>\ndevice = <golioth.golioth.Device object at 0xffffa5553750>\n\n    async def test_lightdb_set(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            pattern = re.compile(fr\"Setting counter to {i}\")\n            await board.wait_for_regex_in_line(pattern, timeout_s=30.0)\n>           await board.wait_for_regex_in_line('Counter successfully set', timeout_s=5.0)\n\nexamples/esp_idf/lightdb/set/pytest/test_sample.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 200257.52440961983\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733447231997,
      "stop" : 1733447231997,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733447231996,
      "stop" : 1733447231996,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733447231994,
      "stop" : 1733447231994,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733447231996,
      "stop" : 1733447231997,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733447231995,
      "stop" : 1733447231996,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733447231999,
      "stop" : 1733447272240,
      "duration" : 40241
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733447231991,
      "stop" : 1733447231992,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733447231997,
      "stop" : 1733447231998,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733447231998,
      "stop" : 1733447231998,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733447231995,
      "stop" : 1733447231995,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733447231992,
      "stop" : 1733447231993,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733447231998,
      "stop" : 1733447231998,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733447231993,
      "stop" : 1733447231994,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733447278332,
      "stop" : 1733447280802,
      "duration" : 2470
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733447272241,
      "stop" : 1733447278331,
      "duration" : 6090
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 200257.52440961983\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa550f590>\ndevice = <golioth.golioth.Device object at 0xffffa5553750>\n\n    async def test_lightdb_set(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            pattern = re.compile(fr\"Setting counter to {i}\")\n            await board.wait_for_regex_in_line(pattern, timeout_s=30.0)\n>           await board.wait_for_regex_in_line('Counter successfully set', timeout_s=5.0)\n\nexamples/esp_idf/lightdb/set/pytest/test_sample.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 200257.52440961983\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "d4cb06298ff670e1",
      "name" : "stdout",
      "source" : "d4cb06298ff670e1.txt",
      "type" : "text/plain",
      "size" : 8251
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1733447297980,
      "stop" : 1733447297990,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733447297140,
      "stop" : 1733447297975,
      "duration" : 835
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733447297978,
      "stop" : 1733447297978,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "sample.esp-idf.esp32s3_devkitc_espidf"
  }, {
    "name" : "tag",
    "value" : "sams_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "916baecbb566"
  }, {
    "name" : "thread",
    "value" : "276-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "examples.esp_idf.lightdb.set.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32s3_devkitc_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 8,
        "skipped" : 0,
        "passed" : 77,
        "unknown" : 0,
        "total" : 85
      },
      "items" : [ {
        "uid" : "d315fed2da3ecf43",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1867/#testresult/d315fed2da3ecf43",
        "status" : "passed",
        "time" : {
          "start" : 1733410224651,
          "stop" : 1733410247329,
          "duration" : 22678
        }
      }, {
        "uid" : "f567388cb12bc4fc",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1866/#testresult/f567388cb12bc4fc",
        "status" : "passed",
        "time" : {
          "start" : 1733360614625,
          "stop" : 1733360643063,
          "duration" : 28438
        }
      }, {
        "uid" : "d1ec77fb2165898a",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1863/#testresult/d1ec77fb2165898a",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733274474746,
          "stop" : 1733274488991,
          "duration" : 14245
        }
      }, {
        "uid" : "2b1e62d44e087d81",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1859/#testresult/2b1e62d44e087d81",
        "status" : "passed",
        "time" : {
          "start" : 1733187959401,
          "stop" : 1733187981643,
          "duration" : 22242
        }
      }, {
        "uid" : "c225edc309df4782",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1858/#testresult/c225edc309df4782",
        "status" : "passed",
        "time" : {
          "start" : 1733162781445,
          "stop" : 1733162803459,
          "duration" : 22014
        }
      }, {
        "uid" : "38a60da2885298b4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1857//#testresult/38a60da2885298b4",
        "status" : "passed",
        "time" : {
          "start" : 1733101323480,
          "stop" : 1733101345497,
          "duration" : 22017
        }
      }, {
        "uid" : "93d98c8db133db31",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1856//#testresult/93d98c8db133db31",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733015421687,
          "stop" : 1733015432093,
          "duration" : 10406
        }
      }, {
        "uid" : "ea601be357fc4191",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1855//#testresult/ea601be357fc4191",
        "status" : "passed",
        "time" : {
          "start" : 1732928679821,
          "stop" : 1732928706325,
          "duration" : 26504
        }
      }, {
        "uid" : "ced238a58b39dc2c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1854//#testresult/ced238a58b39dc2c",
        "status" : "passed",
        "time" : {
          "start" : 1732842248004,
          "stop" : 1732842270069,
          "duration" : 22065
        }
      }, {
        "uid" : "d30b327f962d3e1b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1853//#testresult/d30b327f962d3e1b",
        "status" : "passed",
        "time" : {
          "start" : 1732755582483,
          "stop" : 1732755604094,
          "duration" : 21611
        }
      }, {
        "uid" : "d3b2b8b35c8c5d09",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1846//#testresult/d3b2b8b35c8c5d09",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732669147668,
          "stop" : 1732669160905,
          "duration" : 13237
        }
      }, {
        "uid" : "38ef475f69ba1266",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1845//#testresult/38ef475f69ba1266",
        "status" : "passed",
        "time" : {
          "start" : 1732643353161,
          "stop" : 1732643374581,
          "duration" : 21420
        }
      }, {
        "uid" : "2aee8d12a1d39122",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/2aee8d12a1d39122",
        "status" : "passed",
        "time" : {
          "start" : 1732568469973,
          "stop" : 1732568491773,
          "duration" : 21800
        }
      }, {
        "uid" : "509c912c950ec305",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/509c912c950ec305",
        "status" : "passed",
        "time" : {
          "start" : 1732568469973,
          "stop" : 1732568491773,
          "duration" : 21800
        }
      }, {
        "uid" : "2d39a23a0a6ec54e",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1843//#testresult/2d39a23a0a6ec54e",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732582923184,
          "stop" : 1732582937342,
          "duration" : 14158
        }
      }, {
        "uid" : "33a53c15f214b5ad",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/33a53c15f214b5ad",
        "status" : "passed",
        "time" : {
          "start" : 1732568469973,
          "stop" : 1732568491773,
          "duration" : 21800
        }
      }, {
        "uid" : "47b822fcdfc1d455",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/47b822fcdfc1d455",
        "status" : "passed",
        "time" : {
          "start" : 1732568469973,
          "stop" : 1732568491773,
          "duration" : 21800
        }
      }, {
        "uid" : "d327eee0d7b05c3b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/d327eee0d7b05c3b",
        "status" : "passed",
        "time" : {
          "start" : 1732568469973,
          "stop" : 1732568491773,
          "duration" : 21800
        }
      }, {
        "uid" : "6dbcc03a30fc0e82",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1838//#testresult/6dbcc03a30fc0e82",
        "status" : "passed",
        "time" : {
          "start" : 1732496326568,
          "stop" : 1732496349494,
          "duration" : 22926
        }
      }, {
        "uid" : "f88645019e31e8c6",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1837//#testresult/f88645019e31e8c6",
        "status" : "passed",
        "time" : {
          "start" : 1732410446424,
          "stop" : 1732410468910,
          "duration" : 22486
        }
      } ]
    },
    "tags" : [ "esp32s3_devkitc_espidf", "esp-idf", "anyio", "sams_orange_pi", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "2fb4a630715fefbb.json",
  "parameterValues" : [ "'esp32s3_devkitc_espidf'", "'esp-idf'" ]
}