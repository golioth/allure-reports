{
  "uid" : "90a81271f518252c",
  "name" : "test_hello",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello",
  "historyId" : "467e555cbdae75d46aefa9c64cb6440a",
  "time" : {
    "start" : 1733534015139,
    "stop" : 1733534068547,
    "duration" : 53408
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff810a7f90>\ndevice = <golioth.golioth.Device object at 0xffff81082c90>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "shell",
    "time" : {
      "start" : 1733534014485,
      "stop" : 1733534015136,
      "duration" : 651
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1733533978222,
      "stop" : 1733533978224,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733533978220,
      "stop" : 1733533978220,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733533978219,
      "stop" : 1733533978219,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733533978220,
      "stop" : 1733533978220,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733533978225,
      "stop" : 1733533978225,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1733533978221,
      "stop" : 1733533978222,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733533978226,
      "stop" : 1733533978651,
      "duration" : 425
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733533978652,
      "stop" : 1733533979533,
      "duration" : 881
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733533978221,
      "stop" : 1733533978221,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1733533979534,
      "stop" : 1733534014484,
      "duration" : 34950
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733533978225,
      "stop" : 1733533978225,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff810a7f90>\ndevice = <golioth.golioth.Device object at 0xffff81082c90>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cf44c3075a96a345",
      "name" : "log",
      "source" : "cf44c3075a96a345.txt",
      "type" : "text/plain",
      "size" : 32415
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device_object::0",
    "time" : {
      "start" : 1733534069143,
      "stop" : 1733534069143,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733534069136,
      "stop" : 1733534069138,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733534068750,
      "stop" : 1733534069133,
      "duration" : 383
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1733534068710,
      "stop" : 1733534068748,
      "duration" : 38
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "2d5a9c1adfcf"
  }, {
    "name" : "thread",
    "value" : "577-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "52206a5540744293",
      "status" : "passed",
      "time" : {
        "start" : 1733533798793,
        "stop" : 1733533852167,
        "duration" : 53374
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 13,
        "skipped" : 0,
        "passed" : 74,
        "unknown" : 0,
        "total" : 88
      },
      "items" : [ {
        "uid" : "741281e2d9c696ce",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1871/#testresult/741281e2d9c696ce",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733448184873,
          "stop" : 1733448297622,
          "duration" : 112749
        }
      }, {
        "uid" : "f346a263516cf526",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1867/#testresult/f346a263516cf526",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733410948899,
          "stop" : 1733411061649,
          "duration" : 112750
        }
      }, {
        "uid" : "60a9ec1332c52597",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1866/#testresult/60a9ec1332c52597",
        "status" : "passed",
        "time" : {
          "start" : 1733361188603,
          "stop" : 1733361242027,
          "duration" : 53424
        }
      }, {
        "uid" : "693a1cb94f558d82",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1863/#testresult/693a1cb94f558d82",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733274994013,
          "stop" : 1733275106699,
          "duration" : 112686
        }
      }, {
        "uid" : "ed36bb9b71943de4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1859/#testresult/ed36bb9b71943de4",
        "status" : "passed",
        "time" : {
          "start" : 1733188548158,
          "stop" : 1733188601665,
          "duration" : 53507
        }
      }, {
        "uid" : "3c84618d40665d7d",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1858/#testresult/3c84618d40665d7d",
        "status" : "passed",
        "time" : {
          "start" : 1733163291395,
          "stop" : 1733163344721,
          "duration" : 53326
        }
      }, {
        "uid" : "17536f9da8151730",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1857//#testresult/17536f9da8151730",
        "status" : "passed",
        "time" : {
          "start" : 1733102059514,
          "stop" : 1733102113345,
          "duration" : 53831
        }
      }, {
        "uid" : "e07b8ace5a714b5",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1856//#testresult/e07b8ace5a714b5",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1733016101281,
          "stop" : 1733016213969,
          "duration" : 112688
        }
      }, {
        "uid" : "73ed981ff3bdf697",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1855//#testresult/73ed981ff3bdf697",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1732929317378,
          "stop" : 1732929430071,
          "duration" : 112693
        }
      }, {
        "uid" : "1bde757642581693",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1854//#testresult/1bde757642581693",
        "status" : "passed",
        "time" : {
          "start" : 1732842840231,
          "stop" : 1732842893953,
          "duration" : 53722
        }
      }, {
        "uid" : "4920e653b4f65a1d",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1853//#testresult/4920e653b4f65a1d",
        "status" : "passed",
        "time" : {
          "start" : 1732756471183,
          "stop" : 1732756525090,
          "duration" : 53907
        }
      }, {
        "uid" : "2d7b9b3862de4660",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1846//#testresult/2d7b9b3862de4660",
        "status" : "passed",
        "time" : {
          "start" : 1732670078959,
          "stop" : 1732670133351,
          "duration" : 54392
        }
      }, {
        "uid" : "8122ef6af37006e9",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1845//#testresult/8122ef6af37006e9",
        "status" : "passed",
        "time" : {
          "start" : 1732644203622,
          "stop" : 1732644257766,
          "duration" : 54144
        }
      }, {
        "uid" : "3482a40faf79626c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/3482a40faf79626c",
        "status" : "passed",
        "time" : {
          "start" : 1732638993815,
          "stop" : 1732639047584,
          "duration" : 53769
        }
      }, {
        "uid" : "b4b864e622853742",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/b4b864e622853742",
        "status" : "passed",
        "time" : {
          "start" : 1732635067773,
          "stop" : 1732635120846,
          "duration" : 53073
        }
      }, {
        "uid" : "f94b0a65456f2821",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1843//#testresult/f94b0a65456f2821",
        "status" : "passed",
        "time" : {
          "start" : 1732583631577,
          "stop" : 1732583685371,
          "duration" : 53794
        }
      }, {
        "uid" : "19c9e447268f242c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/19c9e447268f242c",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1732580033289,
          "stop" : 1732580146055,
          "duration" : 112766
        }
      }, {
        "uid" : "69ff4fe4339b0820",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/69ff4fe4339b0820",
        "status" : "passed",
        "time" : {
          "start" : 1732576667033,
          "stop" : 1732576721416,
          "duration" : 54383
        }
      }, {
        "uid" : "5cadb84b7102abcc",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/5cadb84b7102abcc",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1732569140333,
          "stop" : 1732569253185,
          "duration" : 112852
        }
      }, {
        "uid" : "b9294d739b3535bd",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1838//#testresult/b9294d739b3535bd",
        "status" : "broken",
        "statusDetails" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
        "time" : {
          "start" : 1732497586025,
          "stop" : 1732497698712,
          "duration" : 112687
        }
      } ]
    },
    "tags" : [ "anyio", "mikes_testbench", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "90a81271f518252c.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}