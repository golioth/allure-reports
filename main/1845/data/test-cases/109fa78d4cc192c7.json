{"uid":"109fa78d4cc192c7","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1732643292989,"stop":1732643317458,"duration":24469},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa180ea90>\ndevice = <golioth.golioth.Device object at 0xffffa1869ad0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732643255036,"stop":1732643255036,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732643255037,"stop":1732643255037,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732643255037,"stop":1732643255037,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732643255038,"stop":1732643255038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732643255038,"stop":1732643255038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732643255039,"stop":1732643255041,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732643255042,"stop":1732643255042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732643255042,"stop":1732643255042,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732643255043,"stop":1732643255598,"duration":555},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732643255598,"stop":1732643256481,"duration":883},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732643256482,"stop":1732643292336,"duration":35854},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732643292337,"stop":1732643292986,"duration":649},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa180ea90>\ndevice = <golioth.golioth.Device object at 0xffffa1869ad0>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"237d8d53cb31900d","name":"log","source":"237d8d53cb31900d.txt","type":"text/plain","size":29693}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732643317677,"stop":1732643317691,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732643317693,"stop":1732643318566,"duration":873},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732643318568,"stop":1732643318570,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732643318575,"stop":1732643318575,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"59c7faecbd0a"},{"name":"thread","value":"342-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":23,"skipped":0,"passed":52,"unknown":0,"total":75},"items":[{"uid":"84dd4754054d9d2a","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/84dd4754054d9d2a","status":"passed","time":{"start":1732638410604,"stop":1732638429836,"duration":19232}},{"uid":"ff806671dd49c67","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/ff806671dd49c67","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732633876110,"stop":1732633968899,"duration":92789}},{"uid":"5d8319e3fb4f5e27","reportUrl":"https://golioth.github.io/allure-reports/main/1843//#testresult/5d8319e3fb4f5e27","status":"passed","time":{"start":1732582718472,"stop":1732582738169,"duration":19697}},{"uid":"cd46fe41e1ff3e60","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/cd46fe41e1ff3e60","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732578936513,"stop":1732579029199,"duration":92686}},{"uid":"e750492b720bf634","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/e750492b720bf634","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1732575764408,"stop":1732575786227,"duration":21819}},{"uid":"d083f02f3e68faf8","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/d083f02f3e68faf8","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732567862434,"stop":1732567955138,"duration":92704}},{"uid":"8e02882420768302","reportUrl":"https://golioth.github.io/allure-reports/main/1838//#testresult/8e02882420768302","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732496488845,"stop":1732496581634,"duration":92789}},{"uid":"57be053eeb811594","reportUrl":"https://golioth.github.io/allure-reports/main/1837//#testresult/57be053eeb811594","status":"passed","time":{"start":1732410284525,"stop":1732410304421,"duration":19896}},{"uid":"2c6060c9d2e83fdc","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/2c6060c9d2e83fdc","status":"passed","time":{"start":1732325022920,"stop":1732325043592,"duration":20672}},{"uid":"161cc0cab1f5e7ae","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/161cc0cab1f5e7ae","status":"passed","time":{"start":1732322103782,"stop":1732322124829,"duration":21047}},{"uid":"50fdf69b161f2946","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/50fdf69b161f2946","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732309629365,"stop":1732309722116,"duration":92751}},{"uid":"e9dc0fd9f84606c8","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/e9dc0fd9f84606c8","status":"passed","time":{"start":1732306545325,"stop":1732306564288,"duration":18963}},{"uid":"9c70011ed9de4a46","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/9c70011ed9de4a46","status":"passed","time":{"start":1732298462771,"stop":1732298482183,"duration":19412}},{"uid":"8067d297da4f6c81","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/8067d297da4f6c81","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732277531298,"stop":1732277623985,"duration":92687}},{"uid":"e1e3f54ad8643da2","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/e1e3f54ad8643da2","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732237268568,"stop":1732237361320,"duration":92752}},{"uid":"2d1ef0a862b4bdf0","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/2d1ef0a862b4bdf0","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732214128497,"stop":1732214221325,"duration":92828}},{"uid":"ea9ba5ea160568e8","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/ea9ba5ea160568e8","status":"passed","time":{"start":1732162001575,"stop":1732162022370,"duration":20795}},{"uid":"5aa5c358ef6c1c5","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/5aa5c358ef6c1c5","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732151718568,"stop":1732151811408,"duration":92840}},{"uid":"53f2477540c7be8e","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/53f2477540c7be8e","status":"passed","time":{"start":1732138867218,"stop":1732138886213,"duration":18995}},{"uid":"4d3a25bdcc7b819c","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/4d3a25bdcc7b819c","status":"passed","time":{"start":1732064174422,"stop":1732064193754,"duration":19332}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"109fa78d4cc192c7.json","parameterValues":["'rak5010'","'zephyr'"]}