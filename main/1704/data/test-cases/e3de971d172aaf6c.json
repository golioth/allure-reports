{"uid":"e3de971d172aaf6c","name":"test_string_return","fullName":"tests.hil.tests.rpc.test_rpc#test_string_return","historyId":"c8ffbf1cf83f873d11cb62962fc31f13","time":{"start":1730303295809,"stop":1730303301212,"duration":5403},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa01045d0>\nmethod = 'basic_return_type', params = ('string',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa008e7d0>\ndevice = <golioth.golioth.Device object at 0xffffa0104a90>\n\n    async def test_string_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"string\")\n\ntests/hil/tests/rpc/test_rpc.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa01045d0>\nmethod = 'basic_return_type', params = ('string',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730303225758,"stop":1730303225758,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board_name","time":{"start":1730303225759,"stop":1730303225759,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"port","time":{"start":1730303225760,"stop":1730303225760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"baud","time":{"start":1730303225761,"stop":1730303225762,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_ssid","time":{"start":1730303225763,"stop":1730303225763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_psk","time":{"start":1730303225764,"stop":1730303225764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"fw_image","time":{"start":1730303225764,"stop":1730303225764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"serial_number","time":{"start":1730303225765,"stop":1730303225765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"bmp_port","time":{"start":1730303225765,"stop":1730303225766,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device_name","time":{"start":1730303225766,"stop":1730303225766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_key","time":{"start":1730303225767,"stop":1730303225767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_url","time":{"start":1730303225767,"stop":1730303225767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project","time":{"start":1730303225768,"stop":1730303226644,"duration":876},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board","time":{"start":1730303226644,"stop":1730303278356,"duration":51712},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device","time":{"start":1730303278357,"stop":1730303279473,"duration":1116},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1730303279474,"stop":1730303285246,"duration":5772},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"setup::0","time":{"start":1730303367412,"stop":1730303367412,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device::0","time":{"start":1730303367414,"stop":1730303367815,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board::0","time":{"start":1730303367819,"stop":1730303367821,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project::0","time":{"start":1730303367825,"stop":1730303367829,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"7cc3b1e7b404"},{"name":"thread","value":"247-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":24,"unknown":0,"total":27},"items":[{"uid":"e72e3f6057c2e463","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/e72e3f6057c2e463","status":"passed","time":{"start":1730248363889,"stop":1730248364879,"duration":990}},{"uid":"a5a708e022b57b80","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/a5a708e022b57b80","status":"passed","time":{"start":1730162073757,"stop":1730162075004,"duration":1247}},{"uid":"921188cfb873c1a4","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/921188cfb873c1a4","status":"passed","time":{"start":1730075728625,"stop":1730075730605,"duration":1980}},{"uid":"fb687af4090f16bc","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/fb687af4090f16bc","status":"passed","time":{"start":1729989395545,"stop":1729989398053,"duration":2508}},{"uid":"8e4a61df96cea79","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/8e4a61df96cea79","status":"passed","time":{"start":1729902809805,"stop":1729902812068,"duration":2263}},{"uid":"55805868b08a8b07","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/55805868b08a8b07","status":"passed","time":{"start":1729816449719,"stop":1729816451695,"duration":1976}},{"uid":"299569e88f7e9c82","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/299569e88f7e9c82","status":"passed","time":{"start":1729729937961,"stop":1729729939215,"duration":1254}},{"uid":"739e16ad9a350253","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/739e16ad9a350253","status":"passed","time":{"start":1729645338773,"stop":1729645340273,"duration":1500}},{"uid":"204a3f3637cfa534","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/204a3f3637cfa534","status":"passed","time":{"start":1729557324975,"stop":1729557328414,"duration":3439}},{"uid":"1d7c8f11055c5232","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/1d7c8f11055c5232","status":"passed","time":{"start":1729470858641,"stop":1729470859905,"duration":1264}},{"uid":"e53eb736c28cdbe8","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/e53eb736c28cdbe8","status":"passed","time":{"start":1729384596847,"stop":1729384598066,"duration":1219}},{"uid":"56b9179210c1098c","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/56b9179210c1098c","status":"passed","time":{"start":1729368455184,"stop":1729368456683,"duration":1499}},{"uid":"8d97f30faaa05665","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/8d97f30faaa05665","status":"passed","time":{"start":1729361303131,"stop":1729361304383,"duration":1252}},{"uid":"860c08c86ecb3409","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/860c08c86ecb3409","status":"passed","time":{"start":1729297990103,"stop":1729297991603,"duration":1500}},{"uid":"66fa4abb356d571c","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/66fa4abb356d571c","status":"passed","time":{"start":1729211576668,"stop":1729211578180,"duration":1512}},{"uid":"b5626c5a450e44fb","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/b5626c5a450e44fb","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729202658630,"stop":1729202663940,"duration":5310}},{"uid":"fe0a34ca65f24327","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/fe0a34ca65f24327","status":"passed","time":{"start":1729109255570,"stop":1729109256790,"duration":1220}},{"uid":"ef789a6176884551","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/ef789a6176884551","status":"passed","time":{"start":1729038890189,"stop":1729038891413,"duration":1224}},{"uid":"14f2845271a73916","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/14f2845271a73916","status":"passed","time":{"start":1729024924462,"stop":1729024927430,"duration":2968}},{"uid":"7b18ee744902842b","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/7b18ee744902842b","status":"passed","time":{"start":1729006998157,"stop":1729006999464,"duration":1307}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"e3de971d172aaf6c.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}