{"uid":"4ab5e4338b07ea1f","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"805922d6f8e486f2169951f916b7199e","time":{"start":1730303938708,"stop":1730303997630,"duration":58922},"status":"failed","statusMessage":"AssertionError: assert 8 == 7\n +  where 8 = int('8')","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff84ad42d0>\ndevice = <golioth.golioth.Device object at 0xffff84ab8a10>\nproject = <golioth.golioth.Project object at 0xffff84ae3950>\nreleases = {'test_blocks': Release <672257af990e7ed8707e3bc2, release_tags=[], device_tags=['672257ad990e7ed8707e3bbd'], artifact..., release_tags=[], device_tags=['672257ad990e7ed8707e3bbd'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 8 == 7\nE            +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730303890720,"stop":1730303890720,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board_name","time":{"start":1730303890721,"stop":1730303890721,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"port","time":{"start":1730303890722,"stop":1730303890722,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"baud","time":{"start":1730303890724,"stop":1730303890724,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_ssid","time":{"start":1730303890725,"stop":1730303890725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_psk","time":{"start":1730303890726,"stop":1730303890726,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"fw_image","time":{"start":1730303890727,"stop":1730303890727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"serial_number","time":{"start":1730303890728,"stop":1730303890728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"bmp_port","time":{"start":1730303890729,"stop":1730303890729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_key","time":{"start":1730303890730,"stop":1730303890730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_url","time":{"start":1730303890731,"stop":1730303890731,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device_name","time":{"start":1730303890732,"stop":1730303890732,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board","time":{"start":1730303890733,"stop":1730303910769,"duration":20036},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project","time":{"start":1730303910771,"stop":1730303911367,"duration":596},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device","time":{"start":1730303911368,"stop":1730303912684,"duration":1316},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1730303912685,"stop":1730303916501,"duration":3816},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"artifacts","time":{"start":1730303916502,"stop":1730303917062,"duration":560},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"tag","time":{"start":1730303917063,"stop":1730303918013,"duration":950},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"releases","time":{"start":1730303918014,"stop":1730303919970,"duration":1956},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"releases_teardown","time":{"start":1730303938705,"stop":1730303938705,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 8 == 7\n +  where 8 = int('8')","statusTrace":"board = <mimxrt1024evk.MIMXRT1024EVK object at 0xffff84ad42d0>\ndevice = <golioth.golioth.Device object at 0xffff84ab8a10>\nproject = <golioth.golioth.Project object at 0xffff84ae3950>\nreleases = {'test_blocks': Release <672257af990e7ed8707e3bc2, release_tags=[], device_tags=['672257ad990e7ed8707e3bbd'], artifact..., release_tags=[], device_tags=['672257ad990e7ed8707e3bbd'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 8 == 7\nE            +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"dd53e178c31d7c77","name":"stdout","source":"dd53e178c31d7c77.txt","type":"text/plain","size":3227}],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"releases_teardown::0","time":{"start":1730303997730,"stop":1730303998905,"duration":1175},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"releases::0","time":{"start":1730303998908,"stop":1730304000648,"duration":1740},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"tag::0","time":{"start":1730304000650,"stop":1730304001694,"duration":1044},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"artifacts::0","time":{"start":1730304002212,"stop":1730304002212,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1730304002214,"stop":1730304002214,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device::0","time":{"start":1730304002216,"stop":1730304002738,"duration":522},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project::0","time":{"start":1730304002741,"stop":1730304002741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board::0","time":{"start":1730304002743,"stop":1730304002800,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"534ba656d7ea"},{"name":"thread","value":"280-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":2,"skipped":0,"passed":20,"unknown":0,"total":26},"items":[{"uid":"68eaa0ad2b73f2ab","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/68eaa0ad2b73f2ab","status":"passed","time":{"start":1730249065999,"stop":1730249143814,"duration":77815}},{"uid":"8e58ee02c9110cee","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/8e58ee02c9110cee","status":"passed","time":{"start":1730162640455,"stop":1730162717536,"duration":77081}},{"uid":"bcdb5e8cf0664703","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/bcdb5e8cf0664703","status":"passed","time":{"start":1730076410637,"stop":1730076488796,"duration":78159}},{"uid":"a3ff90869bc46dd6","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/a3ff90869bc46dd6","status":"passed","time":{"start":1729989920164,"stop":1729989997731,"duration":77567}},{"uid":"4f4387a7f5add36d","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/4f4387a7f5add36d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729903478515,"stop":1729903478515,"duration":0}},{"uid":"6a601b05b1e32a78","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/6a601b05b1e32a78","status":"passed","time":{"start":1729817106076,"stop":1729817183756,"duration":77680}},{"uid":"c9741b44d33a0a80","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/c9741b44d33a0a80","status":"passed","time":{"start":1729730575671,"stop":1729730652671,"duration":77000}},{"uid":"789124849f371b65","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/789124849f371b65","status":"failed","statusDetails":"AssertionError: assert 6 == 5\n +  where 6 = int('6')","time":{"start":1729643593567,"stop":1729643637521,"duration":43954}},{"uid":"9e754e58d50c28a","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/9e754e58d50c28a","status":"passed","time":{"start":1729557902158,"stop":1729557979786,"duration":77628}},{"uid":"b97e892ccd7bc96f","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/b97e892ccd7bc96f","status":"failed","statusDetails":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","time":{"start":1729471517061,"stop":1729471551556,"duration":34495}},{"uid":"ba9f0dcb81bb34aa","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/ba9f0dcb81bb34aa","status":"passed","time":{"start":1729385276210,"stop":1729385353664,"duration":77454}},{"uid":"b5970dcb852f4f9f","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/b5970dcb852f4f9f","status":"passed","time":{"start":1729369131769,"stop":1729369209991,"duration":78222}},{"uid":"bde9207985d6dff5","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/bde9207985d6dff5","status":"failed","statusDetails":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})","time":{"start":1729361937902,"stop":1729361937902,"duration":0}},{"uid":"1d61c59ebeef031a","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/1d61c59ebeef031a","status":"passed","time":{"start":1729298707706,"stop":1729298785846,"duration":78140}},{"uid":"c1a4f32d0e839baf","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/c1a4f32d0e839baf","status":"passed","time":{"start":1729212232501,"stop":1729212311839,"duration":79338}},{"uid":"555279a0244efa1e","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/555279a0244efa1e","status":"passed","time":{"start":1729129746808,"stop":1729129823963,"duration":77155}},{"uid":"a66b3298a8e31213","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/a66b3298a8e31213","status":"passed","time":{"start":1729109918221,"stop":1729109995911,"duration":77690}},{"uid":"5e33e50855478d9f","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/5e33e50855478d9f","status":"passed","time":{"start":1729039395601,"stop":1729039472617,"duration":77016}},{"uid":"ad993af35c84f13f","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/ad993af35c84f13f","status":"passed","time":{"start":1729025621323,"stop":1729025699637,"duration":78314}},{"uid":"81f6c4753ced60fa","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/81f6c4753ced60fa","status":"passed","time":{"start":1729007718884,"stop":1729007796256,"duration":77372}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"4ab5e4338b07ea1f.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}