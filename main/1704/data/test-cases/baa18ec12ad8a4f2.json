{"uid":"baa18ec12ad8a4f2","name":"test_no_args","fullName":"tests.hil.tests.rpc.test_rpc#test_no_args","historyId":"1feec8e854bd1aaadddf038368f581af","time":{"start":1730303295571,"stop":1730303300931,"duration":5360},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff87127ed0>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff870efdd0>\ndevice = <golioth.golioth.Device object at 0xffff87126f50>\n\n    async def test_no_args(board, device):\n>       await device.rpc.no_response()\n\ntests/hil/tests/rpc/test_rpc.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff87127ed0>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730303244182,"stop":1730303244182,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board_name","time":{"start":1730303244183,"stop":1730303244183,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"port","time":{"start":1730303244184,"stop":1730303244184,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"baud","time":{"start":1730303244185,"stop":1730303244185,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_ssid","time":{"start":1730303244186,"stop":1730303244186,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"wifi_psk","time":{"start":1730303244186,"stop":1730303244187,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"fw_image","time":{"start":1730303244187,"stop":1730303244188,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"serial_number","time":{"start":1730303244188,"stop":1730303244188,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"bmp_port","time":{"start":1730303244189,"stop":1730303244189,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device_name","time":{"start":1730303244189,"stop":1730303244190,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_url","time":{"start":1730303244190,"stop":1730303244190,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"api_key","time":{"start":1730303244190,"stop":1730303244190,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project","time":{"start":1730303244191,"stop":1730303244630,"duration":439},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board","time":{"start":1730303244631,"stop":1730303289886,"duration":45255},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device","time":{"start":1730303289888,"stop":1730303290866,"duration":978},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1730303290866,"stop":1730303294133,"duration":3267},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"setup::0","time":{"start":1730303358382,"stop":1730303358382,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"device::0","time":{"start":1730303358385,"stop":1730303358761,"duration":376},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"board::0","time":{"start":1730303358763,"stop":1730303358765,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"project::0","time":{"start":1730303358767,"stop":1730303358769,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"755baeec896b"},{"name":"thread","value":"246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":27,"unknown":0,"total":28},"items":[{"uid":"48d4d1e3071b7a58","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/48d4d1e3071b7a58","status":"passed","time":{"start":1730248430196,"stop":1730248431425,"duration":1229}},{"uid":"26127359c693c262","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/26127359c693c262","status":"passed","time":{"start":1730162080306,"stop":1730162081305,"duration":999}},{"uid":"95defaadec298583","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/95defaadec298583","status":"passed","time":{"start":1730075773572,"stop":1730075774815,"duration":1243}},{"uid":"b1fab167dcbb5a54","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/b1fab167dcbb5a54","status":"passed","time":{"start":1729989404856,"stop":1729989406336,"duration":1480}},{"uid":"88b211de9d715521","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/88b211de9d715521","status":"passed","time":{"start":1729902862872,"stop":1729902864091,"duration":1219}},{"uid":"296f8e73b8f8c502","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/296f8e73b8f8c502","status":"passed","time":{"start":1729816476030,"stop":1729816477260,"duration":1230}},{"uid":"df8e971c4935eb7a","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/df8e971c4935eb7a","status":"passed","time":{"start":1729730028593,"stop":1729730029604,"duration":1011}},{"uid":"89e84f8aa75a4909","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/89e84f8aa75a4909","status":"passed","time":{"start":1729643674790,"stop":1729643676022,"duration":1232}},{"uid":"ea142bb90035ac78","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/ea142bb90035ac78","status":"passed","time":{"start":1729557218810,"stop":1729557220038,"duration":1228}},{"uid":"e46affecccba37ec","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/e46affecccba37ec","status":"passed","time":{"start":1729470875964,"stop":1729470877193,"duration":1229}},{"uid":"dbfbfafed5cd2e01","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/dbfbfafed5cd2e01","status":"passed","time":{"start":1729384610952,"stop":1729384613382,"duration":2430}},{"uid":"bb2956e5c0357136","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/bb2956e5c0357136","status":"passed","time":{"start":1729368478561,"stop":1729368479790,"duration":1229}},{"uid":"b465017784e1a031","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/b465017784e1a031","status":"passed","time":{"start":1729361349085,"stop":1729361350056,"duration":971}},{"uid":"b09f6a3962afcc89","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/b09f6a3962afcc89","status":"passed","time":{"start":1729298001158,"stop":1729298002387,"duration":1229}},{"uid":"d070de8ffbf0ae82","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/d070de8ffbf0ae82","status":"passed","time":{"start":1729211604783,"stop":1729211606011,"duration":1228}},{"uid":"56108b4e18d04e8e","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/56108b4e18d04e8e","status":"passed","time":{"start":1729202688745,"stop":1729202689975,"duration":1230}},{"uid":"1bf9284b83c50482","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/1bf9284b83c50482","status":"passed","time":{"start":1729129205824,"stop":1729129206801,"duration":977}},{"uid":"c772cbdc7143c977","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/c772cbdc7143c977","status":"passed","time":{"start":1729109397904,"stop":1729109398872,"duration":968}},{"uid":"48c6d6ff69e8d647","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/48c6d6ff69e8d647","status":"passed","time":{"start":1729038802505,"stop":1729038803488,"duration":983}},{"uid":"7e69e1bba68047b6","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/7e69e1bba68047b6","status":"passed","time":{"start":1729025116272,"stop":1729025117443,"duration":1171}}]},"tags":["esp-idf","anyio","esp32_devkitc_wrover_espidf","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"baa18ec12ad8a4f2.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}