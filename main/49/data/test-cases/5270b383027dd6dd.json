{"uid":"5270b383027dd6dd","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1736577205675,"stop":1736577265434,"duration":59759},"status":"failed","statusMessage":"AssertionError: assert 9 == 7\n +  where 9 = int('9')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff94cf1d50>\ndevice = <golioth.golioth.Device object at 0xffff94e9b8d0>\nproject = <golioth.golioth.Project object at 0xffff94de7a90>\nreleases = {'test_blocks': Release <6782109a74b8809ed71a4547, release_tags=[], device_tags=['6782109874b8809ed71a4544'], artifact...ease_tags=[], device_tags=['6782109874b8809ed71a4544'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 9 == 7\nE                    +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1736577145369,"stop":1736577145369,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1736577145370,"stop":1736577145370,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1736577145371,"stop":1736577145372,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1736577145372,"stop":1736577145372,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736577145373,"stop":1736577145373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736577145373,"stop":1736577145373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1736577145374,"stop":1736577145374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1736577145374,"stop":1736577145374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736577145375,"stop":1736577145375,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1736577145375,"stop":1736577145375,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736577145376,"stop":1736577145376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736577145376,"stop":1736577145376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1736577145377,"stop":1736577170296,"duration":24919},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736577170298,"stop":1736577170978,"duration":680},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736577170979,"stop":1736577172260,"duration":1281},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736577172260,"stop":1736577175961,"duration":3701},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1736577175962,"stop":1736577176512,"duration":550},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1736577176513,"stop":1736577177374,"duration":861},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1736577177375,"stop":1736577179719,"duration":2344},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1736577205672,"stop":1736577205672,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 9 == 7\n +  where 9 = int('9')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff94cf1d50>\ndevice = <golioth.golioth.Device object at 0xffff94e9b8d0>\nproject = <golioth.golioth.Project object at 0xffff94de7a90>\nreleases = {'test_blocks': Release <6782109a74b8809ed71a4547, release_tags=[], device_tags=['6782109874b8809ed71a4544'], artifact...ease_tags=[], device_tags=['6782109874b8809ed71a4544'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 9 == 7\nE                    +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","steps":[],"attachments":[{"uid":"7d493c56e443864","name":"stdout","source":"7d493c56e443864.txt","type":"text/plain","size":853}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1736577265670,"stop":1736577266515,"duration":845},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1736577266517,"stop":1736577268576,"duration":2059},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1736577268578,"stop":1736577269486,"duration":908},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1736577269488,"stop":1736577269489,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1736577269490,"stop":1736577269490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1736577269492,"stop":1736577269932,"duration":440},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736577269934,"stop":1736577269934,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1736577269936,"stop":1736577269943,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"7baaf3de41ef"},{"name":"thread","value":"251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":44,"unknown":0,"total":46},"items":[{"uid":"1385b355264c9343","reportUrl":"https://golioth.github.io/allure-reports/main/48//#testresult/1385b355264c9343","status":"passed","time":{"start":1736555070980,"stop":1736555120742,"duration":49762}},{"uid":"1898972e76d01536","reportUrl":"https://golioth.github.io/allure-reports/main/45//#testresult/1898972e76d01536","status":"passed","time":{"start":1736468657317,"stop":1736468707890,"duration":50573}},{"uid":"e7a6cf28af04c69c","reportUrl":"https://golioth.github.io/allure-reports/main/44//#testresult/e7a6cf28af04c69c","status":"passed","time":{"start":1736456035305,"stop":1736456084990,"duration":49685}},{"uid":"b99dee6e5ee0fb3c","reportUrl":"https://golioth.github.io/allure-reports/main/34//#testresult/b99dee6e5ee0fb3c","status":"passed","time":{"start":1736382302420,"stop":1736382352185,"duration":49765}},{"uid":"b741610d157124e8","reportUrl":"https://golioth.github.io/allure-reports/main/28/#testresult/b741610d157124e8","status":"passed","time":{"start":1736296950134,"stop":1736296999998,"duration":49864}},{"uid":"64839841f7060890","reportUrl":"https://golioth.github.io/allure-reports/main/23/#testresult/64839841f7060890","status":"passed","time":{"start":1736265365462,"stop":1736265414999,"duration":49537}},{"uid":"cc44e320e644dec3","reportUrl":"https://golioth.github.io/allure-reports/main/21/#testresult/cc44e320e644dec3","status":"passed","time":{"start":1736209462019,"stop":1736209512141,"duration":50122}},{"uid":"7bd232d93bb1477","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/7bd232d93bb1477","status":"passed","time":{"start":1736182730767,"stop":1736182780310,"duration":49543}},{"uid":"104fd4cb2cf176c1","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/104fd4cb2cf176c1","status":"passed","time":{"start":1736182730767,"stop":1736182780310,"duration":49543}},{"uid":"75010145d7e490b3","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/75010145d7e490b3","status":"passed","time":{"start":1736182730767,"stop":1736182780310,"duration":49543}},{"uid":"c902d9515cf33344","reportUrl":"https://golioth.github.io/allure-reports/main/17/#testresult/c902d9515cf33344","status":"passed","time":{"start":1736123069112,"stop":1736123119164,"duration":50052}},{"uid":"43895ac56f847dbc","reportUrl":"https://golioth.github.io/allure-reports/main/16/#testresult/43895ac56f847dbc","status":"passed","time":{"start":1736036661971,"stop":1736036711640,"duration":49669}},{"uid":"3d7e9b0db7ef99ca","reportUrl":"https://golioth.github.io/allure-reports/main/15/#testresult/3d7e9b0db7ef99ca","status":"passed","time":{"start":1735950297136,"stop":1735950346922,"duration":49786}},{"uid":"7cbd0963d1b9caae","reportUrl":"https://golioth.github.io/allure-reports/main/8/#testresult/7cbd0963d1b9caae","status":"passed","time":{"start":1735863862168,"stop":1735863911347,"duration":49179}},{"uid":"b55a5c1f0639da80","reportUrl":"https://golioth.github.io/allure-reports/main/1991/#testresult/b55a5c1f0639da80","status":"passed","time":{"start":1735778700028,"stop":1735778749429,"duration":49401}},{"uid":"a70b332824a2d99e","reportUrl":"https://golioth.github.io/allure-reports/main/1990/#testresult/a70b332824a2d99e","status":"passed","time":{"start":1735692481598,"stop":1735692531561,"duration":49963}},{"uid":"19222020a2989fdb","reportUrl":"https://golioth.github.io/allure-reports/main/1984/#testresult/19222020a2989fdb","status":"passed","time":{"start":1735656727490,"stop":1735656775247,"duration":47757}},{"uid":"1cbde7a246bf71ce","reportUrl":"https://golioth.github.io/allure-reports/main/1983/#testresult/1cbde7a246bf71ce","status":"passed","time":{"start":1735605914501,"stop":1735605964146,"duration":49645}},{"uid":"5ae9a7a102339d16","reportUrl":"https://golioth.github.io/allure-reports/main/1980/#testresult/5ae9a7a102339d16","status":"passed","time":{"start":1735519603038,"stop":1735519651855,"duration":48817}},{"uid":"fbf6a8c3f00100d7","reportUrl":"https://golioth.github.io/allure-reports/main/1979/#testresult/fbf6a8c3f00100d7","status":"passed","time":{"start":1735433262044,"stop":1735433311641,"duration":49597}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","jons_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"5270b383027dd6dd.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}