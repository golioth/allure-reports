{
  "uid" : "e93c3e89519b0dc6",
  "name" : "test_hello",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello",
  "historyId" : "e43e30077c8654d0036bc169098990de",
  "time" : {
    "start" : 1734397794000,
    "stop" : 1734397818237,
    "duration" : 24237
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffb2590910>\ndevice = <golioth.golioth.Device object at 0xffffb2593250>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734397766371,
      "stop" : 1734397766371,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734397766815,
      "stop" : 1734397767659,
      "duration" : 844
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734397766373,
      "stop" : 1734397766373,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734397766377,
      "stop" : 1734397766377,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1734397766374,
      "stop" : 1734397766376,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734397766372,
      "stop" : 1734397766372,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734397766377,
      "stop" : 1734397766377,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1734397790838,
      "stop" : 1734397793993,
      "duration" : 3155
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1734397766373,
      "stop" : 1734397766373,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1734397767660,
      "stop" : 1734397790837,
      "duration" : 23177
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734397766372,
      "stop" : 1734397766372,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734397766378,
      "stop" : 1734397766814,
      "duration" : 436
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffb2590910>\ndevice = <golioth.golioth.Device object at 0xffffb2593250>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "abfa87babef7f60b",
      "name" : "log",
      "source" : "abfa87babef7f60b.txt",
      "type" : "text/plain",
      "size" : 18495
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1734397818427,
      "stop" : 1734397818833,
      "duration" : 406
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1734397818842,
      "stop" : 1734397818842,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1734397818415,
      "stop" : 1734397818425,
      "duration" : 10
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1734397818835,
      "stop" : 1734397818837,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "tims_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "3d13dc71dc2d"
  }, {
    "name" : "thread",
    "value" : "1031-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf52840dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "daf759c1c45dd34d",
      "status" : "failed",
      "statusDetails" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
      "time" : {
        "start" : 1734397735145,
        "stop" : 1734397761842,
        "duration" : 26697
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 11,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "ecadd4f14b7933d",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1935/#testresult/ecadd4f14b7933d",
        "status" : "passed",
        "time" : {
          "start" : 1734311463907,
          "stop" : 1734311487808,
          "duration" : 23901
        }
      }, {
        "uid" : "426b33ae79edbdfb",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1934/#testresult/426b33ae79edbdfb",
        "status" : "passed",
        "time" : {
          "start" : 1734225081976,
          "stop" : 1734225105744,
          "duration" : 23768
        }
      }, {
        "uid" : "6380757ce615fe07",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1933/#testresult/6380757ce615fe07",
        "status" : "passed",
        "time" : {
          "start" : 1734138468028,
          "stop" : 1734138491778,
          "duration" : 23750
        }
      }, {
        "uid" : "8568605789ef165b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1930/#testresult/8568605789ef165b",
        "status" : "passed",
        "time" : {
          "start" : 1734119200861,
          "stop" : 1734119224771,
          "duration" : 23910
        }
      }, {
        "uid" : "2196539c6758023f",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1929/#testresult/2196539c6758023f",
        "status" : "passed",
        "time" : {
          "start" : 1734052383567,
          "stop" : 1734052410292,
          "duration" : 26725
        }
      }, {
        "uid" : "e3d78ea73af5e201",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1924/#testresult/e3d78ea73af5e201",
        "status" : "passed",
        "time" : {
          "start" : 1734032832019,
          "stop" : 1734032855953,
          "duration" : 23934
        }
      }, {
        "uid" : "aa27fc0b3a6ad784",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1910/#testresult/aa27fc0b3a6ad784",
        "status" : "passed",
        "time" : {
          "start" : 1733997314692,
          "stop" : 1733997341553,
          "duration" : 26861
        }
      }, {
        "uid" : "aba995b8bfadba72",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1909/#testresult/aba995b8bfadba72",
        "status" : "passed",
        "time" : {
          "start" : 1733965606498,
          "stop" : 1733965630423,
          "duration" : 23925
        }
      }, {
        "uid" : "ca6e0bce837f2167",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1906/#testresult/ca6e0bce837f2167",
        "status" : "passed",
        "time" : {
          "start" : 1733954600080,
          "stop" : 1733954626690,
          "duration" : 26610
        }
      }, {
        "uid" : "a7721e3bc0d31493",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1894/#testresult/a7721e3bc0d31493",
        "status" : "passed",
        "time" : {
          "start" : 1733881145811,
          "stop" : 1733881172674,
          "duration" : 26863
        }
      }, {
        "uid" : "bfb41175987819bc",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1885/#testresult/bfb41175987819bc",
        "status" : "passed",
        "time" : {
          "start" : 1733857947495,
          "stop" : 1733857971248,
          "duration" : 23753
        }
      } ]
    },
    "tags" : [ "nrf52840dk", "anyio", "tims_orange_pi", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "e93c3e89519b0dc6.json",
  "parameterValues" : [ "'nrf52840dk'", "'zephyr'" ]
}