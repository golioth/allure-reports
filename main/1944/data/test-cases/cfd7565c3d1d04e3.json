{
  "uid" : "cfd7565c3d1d04e3",
  "name" : "test_hello",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello",
  "historyId" : "62f122e1e892b6a4ca7700385fbbf6dd",
  "time" : {
    "start" : 1734395401791,
    "stop" : 1734395423483,
    "duration" : 21692
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7fd654024110>\ndevice = <golioth.golioth.Device object at 0x7fd654013310>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "dut",
    "time" : {
      "start" : 1734395401742,
      "stop" : 1734395401771,
      "duration" : 29
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734395400917,
      "stop" : 1734395401742,
      "duration" : 825
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1734395401771,
      "stop" : 1734395401790,
      "duration" : 19
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734395400534,
      "stop" : 1734395400534,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734395400533,
      "stop" : 1734395400533,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1734395400532,
      "stop" : 1734395400533,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734395400531,
      "stop" : 1734395400531,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734395400531,
      "stop" : 1734395400531,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1734395400532,
      "stop" : 1734395400532,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734395400531,
      "stop" : 1734395400531,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734395400531,
      "stop" : 1734395400531,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734395400534,
      "stop" : 1734395400917,
      "duration" : 383
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7fd654024110>\ndevice = <golioth.golioth.Device object at 0x7fd654013310>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "cb5a452e886ea10a",
      "name" : "log",
      "source" : "cb5a452e886ea10a.txt",
      "type" : "text/plain",
      "size" : 15333
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "dut::0",
    "time" : {
      "start" : 1734395423624,
      "stop" : 1734395424126,
      "duration" : 502
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1734395424126,
      "stop" : 1734395424502,
      "duration" : 376
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1734395424504,
      "stop" : 1734395424504,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1734395424502,
      "stop" : 1734395424503,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "native_sim_32"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.native_sim_32"
  }, {
    "name" : "tag",
    "value" : "GitHub Actions 45"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "df83c67f6b4c"
  }, {
    "name" : "thread",
    "value" : "44796-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'native_sim_32'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "7f05a096c12fe22d",
      "status" : "passed",
      "time" : {
        "start" : 1734395398408,
        "stop" : 1734395420246,
        "duration" : 21838
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "7dc0a454db4db5db",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1935/#testresult/7dc0a454db4db5db",
        "status" : "passed",
        "time" : {
          "start" : 1734309067330,
          "stop" : 1734309089447,
          "duration" : 22117
        }
      }, {
        "uid" : "ea876977e82b557d",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1934/#testresult/ea876977e82b557d",
        "status" : "passed",
        "time" : {
          "start" : 1734222762650,
          "stop" : 1734222784288,
          "duration" : 21638
        }
      }, {
        "uid" : "ce5033abf6fd4e9e",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1933/#testresult/ce5033abf6fd4e9e",
        "status" : "passed",
        "time" : {
          "start" : 1734136216169,
          "stop" : 1734136237885,
          "duration" : 21716
        }
      }, {
        "uid" : "5ffc4cd76cf45daf",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1930/#testresult/5ffc4cd76cf45daf",
        "status" : "passed",
        "time" : {
          "start" : 1734116812122,
          "stop" : 1734116833762,
          "duration" : 21640
        }
      }, {
        "uid" : "a8a991dcfffbb784",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1929/#testresult/a8a991dcfffbb784",
        "status" : "passed",
        "time" : {
          "start" : 1734049816603,
          "stop" : 1734049837861,
          "duration" : 21258
        }
      }, {
        "uid" : "c9285c5d331a0f92",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1924/#testresult/c9285c5d331a0f92",
        "status" : "broken",
        "statusDetails" : "httpx.ReadTimeout",
        "time" : {
          "start" : 1734024026574,
          "stop" : 1734024052787,
          "duration" : 26213
        }
      }, {
        "uid" : "c80f041d6fd10de6",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1910/#testresult/c80f041d6fd10de6",
        "status" : "passed",
        "time" : {
          "start" : 1733995022430,
          "stop" : 1733995043857,
          "duration" : 21427
        }
      }, {
        "uid" : "c726e00c82c2d983",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1909/#testresult/c726e00c82c2d983",
        "status" : "passed",
        "time" : {
          "start" : 1733963407459,
          "stop" : 1733963429081,
          "duration" : 21622
        }
      }, {
        "uid" : "2c68a9ed8058c9ea",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1906/#testresult/2c68a9ed8058c9ea",
        "status" : "passed",
        "time" : {
          "start" : 1733944870161,
          "stop" : 1733944891573,
          "duration" : 21412
        }
      }, {
        "uid" : "85c524f4b7a3b268",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1894/#testresult/85c524f4b7a3b268",
        "status" : "passed",
        "time" : {
          "start" : 1733877009828,
          "stop" : 1733877031518,
          "duration" : 21690
        }
      }, {
        "uid" : "51cdbb0ae244cb68",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1885/#testresult/51cdbb0ae244cb68",
        "status" : "passed",
        "time" : {
          "start" : 1733853143227,
          "stop" : 1733853164990,
          "duration" : 21763
        }
      } ]
    },
    "tags" : [ "GitHub Actions 45", "anyio", "native_sim_32", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "cfd7565c3d1d04e3.json",
  "parameterValues" : [ "'native_sim_32'", "'zephyr'" ]
}