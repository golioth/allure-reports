{
  "uid" : "129f7811268d6518",
  "name" : "test_hello",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello",
  "historyId" : "d8989de114c223477a1d53d831d12112",
  "time" : {
    "start" : 1734395405612,
    "stop" : 1734395427249,
    "duration" : 21637
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7fad6c3a1e10>\ndevice = <golioth.golioth.Device object at 0x7fad6c394550>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "shell",
    "time" : {
      "start" : 1734395405557,
      "stop" : 1734395405611,
      "duration" : 54
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1734395404316,
      "stop" : 1734395404316,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1734395404316,
      "stop" : 1734395404316,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1734395404329,
      "stop" : 1734395404791,
      "duration" : 462
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1734395404315,
      "stop" : 1734395404315,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1734395404316,
      "stop" : 1734395404316,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1734395404791,
      "stop" : 1734395405538,
      "duration" : 747
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1734395404316,
      "stop" : 1734395404316,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1734395404329,
      "stop" : 1734395404329,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1734395404329,
      "stop" : 1734395404329,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1734395405538,
      "stop" : 1734395405557,
      "duration" : 19
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1734395404316,
      "stop" : 1734395404321,
      "duration" : 5
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0x7fad6c3a1e10>\ndevice = <golioth.golioth.Device object at 0x7fad6c394550>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a0465833ea37c583",
      "name" : "log",
      "source" : "a0465833ea37c583.txt",
      "type" : "text/plain",
      "size" : 15333
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1734395428215,
      "stop" : 1734395428216,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1734395427942,
      "stop" : 1734395428215,
      "duration" : 273
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1734395427408,
      "stop" : 1734395427941,
      "duration" : 533
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1734395428217,
      "stop" : 1734395428217,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "native_sim_64"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.native_sim_64"
  }, {
    "name" : "tag",
    "value" : "GitHub Actions 50"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "c634424b8974"
  }, {
    "name" : "thread",
    "value" : "44460-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'native_sim_64'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "c2ff804430a39186",
      "status" : "failed",
      "statusDetails" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
      "time" : {
        "start" : 1734395404109,
        "stop" : 1734395425780,
        "duration" : 21671
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 10,
        "unknown" : 0,
        "total" : 12
      },
      "items" : [ {
        "uid" : "e90c95e663a2556b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1935/#testresult/e90c95e663a2556b",
        "status" : "passed",
        "time" : {
          "start" : 1734309063425,
          "stop" : 1734309085148,
          "duration" : 21723
        }
      }, {
        "uid" : "a93c51c442cdcc42",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1934/#testresult/a93c51c442cdcc42",
        "status" : "passed",
        "time" : {
          "start" : 1734222760231,
          "stop" : 1734222781648,
          "duration" : 21417
        }
      }, {
        "uid" : "cbf1ef819c12efb7",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1933/#testresult/cbf1ef819c12efb7",
        "status" : "passed",
        "time" : {
          "start" : 1734136211804,
          "stop" : 1734136233446,
          "duration" : 21642
        }
      }, {
        "uid" : "5703ee725feeb616",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1930/#testresult/5703ee725feeb616",
        "status" : "passed",
        "time" : {
          "start" : 1734116820355,
          "stop" : 1734116841654,
          "duration" : 21299
        }
      }, {
        "uid" : "2ecb3c4f70aaefb2",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1929/#testresult/2ecb3c4f70aaefb2",
        "status" : "passed",
        "time" : {
          "start" : 1734049817211,
          "stop" : 1734049838808,
          "duration" : 21597
        }
      }, {
        "uid" : "2e74bdcca368cad0",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1924/#testresult/2e74bdcca368cad0",
        "status" : "broken",
        "statusDetails" : "httpx.ReadTimeout",
        "time" : {
          "start" : 1734024025022,
          "stop" : 1734024051194,
          "duration" : 26172
        }
      }, {
        "uid" : "f1f5d0048b878e97",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1910/#testresult/f1f5d0048b878e97",
        "status" : "passed",
        "time" : {
          "start" : 1733995020863,
          "stop" : 1733995042222,
          "duration" : 21359
        }
      }, {
        "uid" : "cc602b9a000a6ac2",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1909/#testresult/cc602b9a000a6ac2",
        "status" : "passed",
        "time" : {
          "start" : 1733963393813,
          "stop" : 1733963415213,
          "duration" : 21400
        }
      }, {
        "uid" : "4e442862a3f7a34a",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1906/#testresult/4e442862a3f7a34a",
        "status" : "passed",
        "time" : {
          "start" : 1733944872911,
          "stop" : 1733944894173,
          "duration" : 21262
        }
      }, {
        "uid" : "5efc8acf44864869",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1894/#testresult/5efc8acf44864869",
        "status" : "passed",
        "time" : {
          "start" : 1733877009552,
          "stop" : 1733877031080,
          "duration" : 21528
        }
      }, {
        "uid" : "ea869c17b41e2eac",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1885/#testresult/ea869c17b41e2eac",
        "status" : "passed",
        "time" : {
          "start" : 1733853154240,
          "stop" : 1733853175675,
          "duration" : 21435
        }
      } ]
    },
    "tags" : [ "native_sim_64", "anyio", "GitHub Actions 50", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "129f7811268d6518.json",
  "parameterValues" : [ "'native_sim_64'", "'zephyr'" ]
}