{"uid":"fd9d03e742f3a334","name":"test_lightdb_observed","fullName":"tests.hil.tests.lightdb.test_lightdb#test_lightdb_observed","historyId":"df02e267fa5d525d8e5c138e0fd333a2","time":{"start":1729817030027,"stop":1729817044137,"duration":14110},"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\ndevice = <golioth.golioth.Device object at 0xffff93ab7b10>\n\n    async def test_lightdb_observed(device):\n        ot = ObserveTester(device)\n    \n        await ot.set(15, Coap_Content_Type.JSON)\n        await ot.set(17, Coap_Content_Type.JSON)\n        await ot.set(19, Coap_Content_Type.CBOR)\n        await ot.set(21, Coap_Content_Type.CBOR)\n    \n        assert (await device.lightdb.get('hil/lightdb/observed/events/count')) == 5\n        assert (await device.lightdb.get('hil/lightdb/observed/events/0')) == 0 # Initial JSON value\n        assert (await device.lightdb.get('hil/lightdb/observed/events/1')) == 0 # Initial CBOR value\n>       assert (await device.lightdb.get('hil/lightdb/observed/events/2')) == 15\n\ntests/hil/tests/lightdb/test_lightdb.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:520: in get\n    response = await c.get(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729816964308,"stop":1729816964308,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729816964309,"stop":1729816964309,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729816964310,"stop":1729816964310,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729816964311,"stop":1729816964311,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729816964312,"stop":1729816964312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729816964313,"stop":1729816964313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729816964313,"stop":1729816964313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729816964314,"stop":1729816964314,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729816964315,"stop":1729816964315,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729816964316,"stop":1729816964317,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729816964316,"stop":1729816964316,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729816964317,"stop":1729816964317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729816964317,"stop":1729816968814,"duration":4497},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729816968816,"stop":1729816989121,"duration":20305},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729816989122,"stop":1729816990742,"duration":1620},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729816990742,"stop":1729817013740,"duration":22998},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1729817045109,"stop":1729817045712,"duration":603},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729817045714,"stop":1729817046250,"duration":536},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729817046252,"stop":1729817046307,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729817046309,"stop":1729817046312,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"e06fcf8629ee"},{"name":"thread","value":"263-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":18,"unknown":0,"total":20},"items":[{"uid":"eb7ec44c8c307bee","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/eb7ec44c8c307bee","status":"passed","time":{"start":1729730530743,"stop":1729730540650,"duration":9907}},{"uid":"af53c46563f99b40","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/af53c46563f99b40","status":"passed","time":{"start":1729643539936,"stop":1729643553344,"duration":13408}},{"uid":"2700d49c4818e1ec","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/2700d49c4818e1ec","status":"passed","time":{"start":1729557849391,"stop":1729557860660,"duration":11269}},{"uid":"d096e3dd5bf9e9c2","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/d096e3dd5bf9e9c2","status":"passed","time":{"start":1729471461557,"stop":1729471472884,"duration":11327}},{"uid":"326d4188abeeba3a","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/326d4188abeeba3a","status":"passed","time":{"start":1729385223077,"stop":1729385234202,"duration":11125}},{"uid":"2aca889752b53e23","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/2aca889752b53e23","status":"passed","time":{"start":1729369073482,"stop":1729369090965,"duration":17483}},{"uid":"dcfc94b5723d8e36","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/dcfc94b5723d8e36","status":"passed","time":{"start":1729361897327,"stop":1729361909679,"duration":12352}},{"uid":"d11fc37ce1756514","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/d11fc37ce1756514","status":"passed","time":{"start":1729298648376,"stop":1729298659077,"duration":10701}},{"uid":"1207fae50f12139e","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/1207fae50f12139e","status":"passed","time":{"start":1729212178499,"stop":1729212189420,"duration":10921}},{"uid":"ead233f1a283a2bd","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/ead233f1a283a2bd","status":"passed","time":{"start":1729129701536,"stop":1729129711106,"duration":9570}},{"uid":"34b8c09c6da9c949","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/34b8c09c6da9c949","status":"passed","time":{"start":1729109862305,"stop":1729109873941,"duration":11636}},{"uid":"d3d35aeb231c083a","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/d3d35aeb231c083a","status":"passed","time":{"start":1729039350458,"stop":1729039360212,"duration":9754}},{"uid":"fccb6ecf0cf30160","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/fccb6ecf0cf30160","status":"passed","time":{"start":1729025566995,"stop":1729025578036,"duration":11041}},{"uid":"b982c8f535c4a434","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/b982c8f535c4a434","status":"passed","time":{"start":1729007660848,"stop":1729007671789,"duration":10941}},{"uid":"7e28f81958c49c7e","reportUrl":"https://golioth.github.io/allure-reports/main/1636//#testresult/7e28f81958c49c7e","status":"passed","time":{"start":1728866782086,"stop":1728866791491,"duration":9405}},{"uid":"bbaa89debebe67d8","reportUrl":"https://golioth.github.io/allure-reports/main/1635//#testresult/bbaa89debebe67d8","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728780336331,"stop":1728780336331,"duration":0}},{"uid":"537127f7492cabb1","reportUrl":"https://golioth.github.io/allure-reports/main/1634//#testresult/537127f7492cabb1","status":"passed","time":{"start":1728693685253,"stop":1728693694668,"duration":9415}},{"uid":"30129a1c062bb297","reportUrl":"https://golioth.github.io/allure-reports/main/1633//#testresult/30129a1c062bb297","status":"passed","time":{"start":1728668471112,"stop":1728668482835,"duration":11723}},{"uid":"7b30ca1a7d374857","reportUrl":"https://golioth.github.io/allure-reports/main/1631//#testresult/7b30ca1a7d374857","status":"passed","time":{"start":1728662866573,"stop":1728662879946,"duration":13373}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"fd9d03e742f3a334.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}