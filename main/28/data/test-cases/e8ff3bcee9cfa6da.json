{"uid":"e8ff3bcee9cfa6da","name":"test_lightdb_observed","fullName":"tests.hil.tests.lightdb.test_lightdb#test_lightdb_observed","historyId":"4e4825ef6c6cad83726291c914df872a","time":{"start":1732321160711,"stop":1732321171149,"duration":10438},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"self = <test_lightdb.ObserveTester object at 0xffff99093550>, value = 15\ncontent_type = <Coap_Content_Type.JSON: 1>\n\n    async def set(self, value: int, content_type: Coap_Content_Type):\n        self.events_count += 1\n    \n        if content_type == Coap_Content_Type.JSON:\n            observe_path = 'hil/lightdb/observed/int'\n        elif content_type == Coap_Content_Type.CBOR:\n            observe_path = 'hil/lightdb/observed/cbor/int'\n        else:\n            assert False\n    \n        await self.device.lightdb.set(observe_path, value)\n        with trio.fail_after(10):\n            count = None\n    \n            while count is None or count < self.events_count:\n                await trio.sleep(1)\n>               count = await self.device.lightdb.get('hil/lightdb/observed/events/count')\n\ntests/hil/tests/lightdb/test_lightdb.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:520: in get\n    response = await c.get(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:132: in connect_tcp\n    stream: trio.abc.Stream = await trio.open_tcp_stream(\n/usr/local/lib/python3.11/dist-packages/trio/_highlevel_open_tcp_stream.py:278: in open_tcp_stream\n    targets = await getaddrinfo(host, port, type=SOCK_STREAM)\n/usr/local/lib/python3.11/dist-packages/trio/_socket.py:211: in getaddrinfo\n    async with _try_sync(numeric_only_failure):\n/usr/local/lib/python3.11/dist-packages/trio/_socket.py:76: in __aenter__\n    await trio.lowlevel.checkpoint_if_cancelled()\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:2773: in checkpoint_if_cancelled\n    await _core.checkpoint()\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:2751: in checkpoint\n    await _core.wait_task_rescheduled(lambda _: _core.Abort.SUCCEEDED)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\ndevice = <golioth.golioth.Device object at 0xffff97a07750>\n\n    async def test_lightdb_observed(device):\n        ot = ObserveTester(device)\n    \n>       await ot.set(15, Coap_Content_Type.JSON)\n\ntests/hil/tests/lightdb/test_lightdb.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/hil/tests/lightdb/test_lightdb.py:111: in set\n    with trio.fail_after(10):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 175934.12547911523\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732321035126,"stop":1732321035126,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732321035127,"stop":1732321035127,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732321035128,"stop":1732321035128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732321035128,"stop":1732321035129,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732321035129,"stop":1732321035130,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732321035130,"stop":1732321035130,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732321035131,"stop":1732321035131,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732321035131,"stop":1732321035131,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732321035132,"stop":1732321035132,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732321035132,"stop":1732321035132,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732321035133,"stop":1732321035133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732321035133,"stop":1732321035133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732321035134,"stop":1732321035579,"duration":445},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732321035579,"stop":1732321077160,"duration":41581},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732321077161,"stop":1732321078086,"duration":925},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732321078086,"stop":1732321150883,"duration":72797},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732321172573,"stop":1732321172973,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732321172975,"stop":1732321173402,"duration":427},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732321173404,"stop":1732321173405,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732321173408,"stop":1732321173410,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"83d9d5a173a1"},{"name":"thread","value":"242-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":58,"unknown":0,"total":65},"items":[{"uid":"5baa8c8b944ac751","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/5baa8c8b944ac751","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732308733976,"stop":1732308733976,"duration":0}},{"uid":"9f86668ca317d2e1","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/9f86668ca317d2e1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732305955819,"stop":1732305955819,"duration":0}},{"uid":"f10286309718ea3b","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/f10286309718ea3b","status":"passed","time":{"start":1732297529722,"stop":1732297541433,"duration":11711}},{"uid":"1df312828124b384","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/1df312828124b384","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732276680727,"stop":1732276680727,"duration":0}},{"uid":"7267d4fcf3de1b62","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/7267d4fcf3de1b62","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732236404379,"stop":1732236404379,"duration":0}},{"uid":"485770e6c24450a2","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/485770e6c24450a2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732213280386,"stop":1732213280386,"duration":0}},{"uid":"4d4e20d53e82b9ce","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/4d4e20d53e82b9ce","status":"passed","time":{"start":1732161050491,"stop":1732161070158,"duration":19667}},{"uid":"1b2c5548c9442598","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/1b2c5548c9442598","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732150762050,"stop":1732150762050,"duration":0}},{"uid":"32d8cd59de1b1eea","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/32d8cd59de1b1eea","status":"passed","time":{"start":1732137252948,"stop":1732137264150,"duration":11202}},{"uid":"1ea1c38e30fb64ee","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/1ea1c38e30fb64ee","status":"passed","time":{"start":1732063404241,"stop":1732063419662,"duration":15421}},{"uid":"fcb8ee94dc7eeb2e","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/fcb8ee94dc7eeb2e","status":"passed","time":{"start":1732058001949,"stop":1732058014143,"duration":12194}},{"uid":"d4e46e92fc8c862a","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/d4e46e92fc8c862a","status":"passed","time":{"start":1732036402935,"stop":1732036414212,"duration":11277}},{"uid":"1fed9ab1c60102cd","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/1fed9ab1c60102cd","status":"passed","time":{"start":1731977030474,"stop":1731977042112,"duration":11638}},{"uid":"3452325979130576","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/3452325979130576","status":"passed","time":{"start":1731966134026,"stop":1731966145634,"duration":11608}},{"uid":"3411cb6c59d637b8","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/3411cb6c59d637b8","status":"passed","time":{"start":1731890737339,"stop":1731890750437,"duration":13098}},{"uid":"7f0df50884aa2d1a","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/7f0df50884aa2d1a","status":"passed","time":{"start":1731804370507,"stop":1731804381697,"duration":11190}},{"uid":"13fbca4ac5110049","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/13fbca4ac5110049","status":"passed","time":{"start":1731717924085,"stop":1731717935277,"duration":11192}},{"uid":"c8499ba0d4fccf9d","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/c8499ba0d4fccf9d","status":"passed","time":{"start":1731631433539,"stop":1731631447837,"duration":14298}},{"uid":"d15f63a2e0ad1de1","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/d15f63a2e0ad1de1","status":"passed","time":{"start":1731606429689,"stop":1731606441493,"duration":11804}},{"uid":"d31813d0ec5ca347","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/d31813d0ec5ca347","status":"passed","time":{"start":1731565167256,"stop":1731565183980,"duration":16724}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"e8ff3bcee9cfa6da.json","parameterValues":["'rak5010'","'zephyr'"]}