{
  "uid" : "4a4dba932e0b9f6a",
  "name" : "test_lightdb_observe",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.observe.pytest.test_sample#test_lightdb_observe",
  "historyId" : "1ec1936b7990a0542c6cd1098cc4bb62",
  "time" : {
    "start" : 1736299852508,
    "stop" : 1736299945624,
    "duration" : 93116
  },
  "status" : "broken",
  "statusMessage" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffac7ffb50>\ndevice = <golioth.golioth.Device object at 0xffffac816e10>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_lightdb_observe(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n>       shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/observe/pytest/test_sample.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = HardwareAdapter(), regex = '.*Golioth CoAP client connected'\nnum_of_lines = None, timeout = 90.0, print_output = True\n\n    def readlines_until(\n            self,\n            regex: str | None = None,\n            num_of_lines: int | None = None,\n            timeout: float | None = None,\n            print_output: bool = True,\n    ) -> list[str]:\n        \"\"\"\n        Read available output lines produced by device from internal buffer\n        until following conditions:\n    \n        1. If regex is provided - read until regex regex is found in read\n           line (or until timeout).\n        2. If num_of_lines is provided - read until number of read lines is\n           equal to num_of_lines (or until timeout).\n        3. If none of above is provided - return immediately lines collected so\n           far in internal buffer.\n    \n        If timeout is not provided, then use base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if regex:\n            regex_compiled = re.compile(regex)\n        lines: list[str] = []\n        if regex or num_of_lines:\n            timeout_time: float = time.time() + timeout\n            while time.time() < timeout_time:\n                try:\n                    line = self.readline(0.1, print_output)\n                except TwisterHarnessTimeoutException:\n                    continue\n                lines.append(line)\n                if regex and regex_compiled.search(line):\n                    break\n                if num_of_lines and len(lines) == num_of_lines:\n                    break\n            else:\n                msg = 'Read from device timeout occurred'\n                logger.error(msg)\n>               raise TwisterHarnessTimeoutException(msg)\nE               twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:190: TwisterHarnessTimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "project",
    "time" : {
      "start" : 1736299823259,
      "stop" : 1736299823683,
      "duration" : 424
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736299823683,
      "stop" : 1736299824617,
      "duration" : 934
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736299823259,
      "stop" : 1736299823259,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736299823254,
      "stop" : 1736299823254,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1736299851435,
      "stop" : 1736299852506,
      "duration" : 1071
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1736299823254,
      "stop" : 1736299823254,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1736299823255,
      "stop" : 1736299823255,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736299823258,
      "stop" : 1736299823258,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1736299823253,
      "stop" : 1736299823253,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1736299824618,
      "stop" : 1736299851434,
      "duration" : 26816
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1736299823255,
      "stop" : 1736299823257,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736299823253,
      "stop" : 1736299823253,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffffac7ffb50>\ndevice = <golioth.golioth.Device object at 0xffffac816e10>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_lightdb_observe(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n>       shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/observe/pytest/test_sample.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = HardwareAdapter(), regex = '.*Golioth CoAP client connected'\nnum_of_lines = None, timeout = 90.0, print_output = True\n\n    def readlines_until(\n            self,\n            regex: str | None = None,\n            num_of_lines: int | None = None,\n            timeout: float | None = None,\n            print_output: bool = True,\n    ) -> list[str]:\n        \"\"\"\n        Read available output lines produced by device from internal buffer\n        until following conditions:\n    \n        1. If regex is provided - read until regex regex is found in read\n           line (or until timeout).\n        2. If num_of_lines is provided - read until number of read lines is\n           equal to num_of_lines (or until timeout).\n        3. If none of above is provided - return immediately lines collected so\n           far in internal buffer.\n    \n        If timeout is not provided, then use base_timeout.\n        \"\"\"\n        timeout = timeout or self.base_timeout\n        if regex:\n            regex_compiled = re.compile(regex)\n        lines: list[str] = []\n        if regex or num_of_lines:\n            timeout_time: float = time.time() + timeout\n            while time.time() < timeout_time:\n                try:\n                    line = self.readline(0.1, print_output)\n                except TwisterHarnessTimeoutException:\n                    continue\n                lines.append(line)\n                if regex and regex_compiled.search(line):\n                    break\n                if num_of_lines and len(lines) == num_of_lines:\n                    break\n            else:\n                msg = 'Read from device timeout occurred'\n                logger.error(msg)\n>               raise TwisterHarnessTimeoutException(msg)\nE               twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:190: TwisterHarnessTimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "1e9ad182742067f0",
      "name" : "log",
      "source" : "1e9ad182742067f0.txt",
      "type" : "text/plain",
      "size" : 18000
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1736299946308,
      "stop" : 1736299946311,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1736299945883,
      "stop" : 1736299946306,
      "duration" : 423
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1736299945872,
      "stop" : 1736299945881,
      "duration" : 9
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1736299946316,
      "stop" : 1736299946316,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "d3481828f539"
  }, {
    "name" : "thread",
    "value" : "799-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.observe.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf9160dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 38,
        "unknown" : 0,
        "total" : 41
      },
      "items" : [ {
        "uid" : "a78fd56688c0821d",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/23/#testresult/a78fd56688c0821d",
        "status" : "passed",
        "time" : {
          "start" : 1736272281999,
          "stop" : 1736272293024,
          "duration" : 11025
        }
      }, {
        "uid" : "84b0f3c1929fa195",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/21/#testresult/84b0f3c1929fa195",
        "status" : "passed",
        "time" : {
          "start" : 1736213123101,
          "stop" : 1736213138796,
          "duration" : 15695
        }
      }, {
        "uid" : "35b3a2c334dcf4fd",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/18/#testresult/35b3a2c334dcf4fd",
        "status" : "passed",
        "time" : {
          "start" : 1736192561310,
          "stop" : 1736192584826,
          "duration" : 23516
        }
      }, {
        "uid" : "1cba2c3d6c8cac55",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/18/#testresult/1cba2c3d6c8cac55",
        "status" : "passed",
        "time" : {
          "start" : 1736190611786,
          "stop" : 1736190622524,
          "duration" : 10738
        }
      }, {
        "uid" : "d92194dc18b62b0e",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/18/#testresult/d92194dc18b62b0e",
        "status" : "passed",
        "time" : {
          "start" : 1736186033282,
          "stop" : 1736186057881,
          "duration" : 24599
        }
      }, {
        "uid" : "c08217be20f7fecc",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/17/#testresult/c08217be20f7fecc",
        "status" : "passed",
        "time" : {
          "start" : 1736126333173,
          "stop" : 1736126362741,
          "duration" : 29568
        }
      }, {
        "uid" : "2a1bee90c3310584",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/16/#testresult/2a1bee90c3310584",
        "status" : "passed",
        "time" : {
          "start" : 1736039875864,
          "stop" : 1736039887753,
          "duration" : 11889
        }
      }, {
        "uid" : "e12da724e932dc82",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/15/#testresult/e12da724e932dc82",
        "status" : "passed",
        "time" : {
          "start" : 1735954229393,
          "stop" : 1735954270878,
          "duration" : 41485
        }
      }, {
        "uid" : "72eeabf29fd6405d",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/8/#testresult/72eeabf29fd6405d",
        "status" : "passed",
        "time" : {
          "start" : 1735868878130,
          "stop" : 1735868921341,
          "duration" : 43211
        }
      }, {
        "uid" : "9a284799cd27c53e",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1991/#testresult/9a284799cd27c53e",
        "status" : "passed",
        "time" : {
          "start" : 1735782115607,
          "stop" : 1735782125895,
          "duration" : 10288
        }
      }, {
        "uid" : "624f91314355cafa",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1990/#testresult/624f91314355cafa",
        "status" : "passed",
        "time" : {
          "start" : 1735695552647,
          "stop" : 1735695563311,
          "duration" : 10664
        }
      }, {
        "uid" : "ace948437a46d753",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1984/#testresult/ace948437a46d753",
        "status" : "passed",
        "time" : {
          "start" : 1735660485895,
          "stop" : 1735660515848,
          "duration" : 29953
        }
      }, {
        "uid" : "fcf097b4ec84d46c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1983/#testresult/fcf097b4ec84d46c",
        "status" : "passed",
        "time" : {
          "start" : 1735609067120,
          "stop" : 1735609077391,
          "duration" : 10271
        }
      }, {
        "uid" : "356cc6794f602477",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1980/#testresult/356cc6794f602477",
        "status" : "passed",
        "time" : {
          "start" : 1735523474618,
          "stop" : 1735523495854,
          "duration" : 21236
        }
      }, {
        "uid" : "1630361c81ecc89b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1979/#testresult/1630361c81ecc89b",
        "status" : "passed",
        "time" : {
          "start" : 1735436573677,
          "stop" : 1735436584344,
          "duration" : 10667
        }
      }, {
        "uid" : "b4ace9654c0e75d4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1978/#testresult/b4ace9654c0e75d4",
        "status" : "passed",
        "time" : {
          "start" : 1735350329528,
          "stop" : 1735350360538,
          "duration" : 31010
        }
      }, {
        "uid" : "e57294ad561d4c3b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1977/#testresult/e57294ad561d4c3b",
        "status" : "passed",
        "time" : {
          "start" : 1735263609768,
          "stop" : 1735263620690,
          "duration" : 10922
        }
      }, {
        "uid" : "8d89c20037afafad",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1976/#testresult/8d89c20037afafad",
        "status" : "passed",
        "time" : {
          "start" : 1735177077217,
          "stop" : 1735177088447,
          "duration" : 11230
        }
      }, {
        "uid" : "898e9f7231200fa1",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1975/#testresult/898e9f7231200fa1",
        "status" : "passed",
        "time" : {
          "start" : 1735091372062,
          "stop" : 1735091397277,
          "duration" : 25215
        }
      }, {
        "uid" : "730a4ff160d91d67",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1974/#testresult/730a4ff160d91d67",
        "status" : "passed",
        "time" : {
          "start" : 1735004202261,
          "stop" : 1735004212098,
          "duration" : 9837
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "nrf9160dk", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "4a4dba932e0b9f6a.json",
  "parameterValues" : [ "'nrf9160dk'", "'zephyr'" ]
}