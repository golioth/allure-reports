{"uid":"f835f189e7f46f52","name":"test_set_int_range","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range","historyId":"1c9cc6d3f972c7f01fd8e4b5afb14d8c","time":{"start":1732321613447,"stop":1732321613447,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 190636.05854716682\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffff9a823050>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff9914a690>\ndevice = <golioth.golioth.Device object at 0xffff9910d290>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 190636.05854716682\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732321444832,"stop":1732321444832,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732321444833,"stop":1732321444833,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732321444834,"stop":1732321444834,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732321444834,"stop":1732321444835,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732321444835,"stop":1732321444835,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732321444836,"stop":1732321444836,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732321444837,"stop":1732321444837,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732321444838,"stop":1732321444838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732321444839,"stop":1732321444840,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732321444839,"stop":1732321444839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732321444840,"stop":1732321444840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732321444841,"stop":1732321445307,"duration":466},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732321444841,"stop":1732321444841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732321445308,"stop":1732321483048,"duration":37740},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732321483050,"stop":1732321484090,"duration":1040},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732321484090,"stop":1732321612006,"duration":127916},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1732321618150,"stop":1732321618641,"duration":491},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732321618643,"stop":1732321618645,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732321618647,"stop":1732321618649,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"54df813530e9"},{"name":"thread","value":"255-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":50,"skipped":0,"passed":15,"unknown":0,"total":65},"items":[{"uid":"873cc3d67697cc4a","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/873cc3d67697cc4a","status":"passed","time":{"start":1732308953394,"stop":1732308957483,"duration":4089}},{"uid":"8ad859c34b3295c5","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/8ad859c34b3295c5","status":"passed","time":{"start":1732305541003,"stop":1732305544742,"duration":3739}},{"uid":"6ab2ae48bedc8b2f","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/6ab2ae48bedc8b2f","status":"passed","time":{"start":1732298231140,"stop":1732298234919,"duration":3779}},{"uid":"d2642c221e5d955b","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/d2642c221e5d955b","status":"passed","time":{"start":1732276954695,"stop":1732276958371,"duration":3676}},{"uid":"911d3d2105463c0a","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/911d3d2105463c0a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732236736417,"stop":1732236736417,"duration":0}},{"uid":"22ddc37368c98f1c","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/22ddc37368c98f1c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732212979219,"stop":1732212979219,"duration":0}},{"uid":"1d4ff0b39e554915","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/1d4ff0b39e554915","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732161377204,"stop":1732161377204,"duration":0}},{"uid":"b8f69879a8f3937a","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/b8f69879a8f3937a","status":"passed","time":{"start":1732151033667,"stop":1732151037795,"duration":4128}},{"uid":"e923a17c6add2aa6","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/e923a17c6add2aa6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732138511693,"stop":1732138511693,"duration":0}},{"uid":"7ace15e7e0ee1839","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/7ace15e7e0ee1839","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732063716989,"stop":1732063716989,"duration":0}},{"uid":"c5f2a5121167ceeb","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/c5f2a5121167ceeb","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732058110077,"stop":1732058110077,"duration":0}},{"uid":"514d2b9bfb6837c8","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/514d2b9bfb6837c8","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732036731055,"stop":1732036731056,"duration":1}},{"uid":"55fb456dce47138a","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/55fb456dce47138a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731977351707,"stop":1731977351707,"duration":0}},{"uid":"9881ac3bf5b7c7e2","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/9881ac3bf5b7c7e2","status":"passed","time":{"start":1731966430732,"stop":1731966434663,"duration":3931}},{"uid":"1c48b6344430abdd","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/1c48b6344430abdd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731891130996,"stop":1731891130996,"duration":0}},{"uid":"886ab10fb805a0","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/886ab10fb805a0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731804755190,"stop":1731804755190,"duration":0}},{"uid":"de876cfd9fbb2bbe","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/de876cfd9fbb2bbe","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731718357338,"stop":1731718357338,"duration":0}},{"uid":"946b28337e67e16a","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/946b28337e67e16a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731631716483,"stop":1731631716483,"duration":0}},{"uid":"5ad122cb8056adb3","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/5ad122cb8056adb3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731607625424,"stop":1731607625424,"duration":0}},{"uid":"6fdf5bfa1b1a684e","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/6fdf5bfa1b1a684e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731565560330,"stop":1731565560330,"duration":0}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"f835f189e7f46f52.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}