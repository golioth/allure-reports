{
  "uid" : "e24f3782e101d139",
  "name" : "test_connect",
  "fullName" : "tests.hil.tests.connection.test_connection#test_connect",
  "historyId" : "8dfe3099e9f008f0052c5c38f8dcf94a",
  "time" : {
    "start" : 1733704394308,
    "stop" : 1733704539610,
    "duration" : 145302
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 139982.7204814732\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffff90292150>\ndevice = <golioth.golioth.Device object at 0xffff901a8ed0>\n\n    async def test_connect(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Wait for reconnection after golioth_client_stop();\n        assert None != await board.wait_for_regex_in_line('Stopping client', timeout_s=15)\n        assert None != await board.wait_for_regex_in_line('Starting client', timeout_s=120)\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Wait for reconnection after golioth_client_destroy();\n        assert None != await board.wait_for_regex_in_line('Destroying client', timeout_s=15)\n>       assert None != await board.wait_for_regex_in_line('Starting client', timeout_s=120)\n\ntests/hil/tests/connection/test_connection.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 139982.7204814732\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "fw_image",
    "time" : {
      "start" : 1733704379491,
      "stop" : 1733704379491,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733704379492,
      "stop" : 1733704379492,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733704379489,
      "stop" : 1733704379489,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733704379493,
      "stop" : 1733704379494,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1733704379487,
      "stop" : 1733704379487,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733704379490,
      "stop" : 1733704379490,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733704379488,
      "stop" : 1733704379488,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733704379493,
      "stop" : 1733704379493,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733704379494,
      "stop" : 1733704379494,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733704379486,
      "stop" : 1733704379486,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733704379490,
      "stop" : 1733704379491,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733704393415,
      "stop" : 1733704394304,
      "duration" : 889
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733704379495,
      "stop" : 1733704392861,
      "duration" : 13366
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733704379494,
      "stop" : 1733704379494,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733704392864,
      "stop" : 1733704393414,
      "duration" : 550
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 139982.7204814732\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffff90292150>\ndevice = <golioth.golioth.Device object at 0xffff901a8ed0>\n\n    async def test_connect(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Wait for reconnection after golioth_client_stop();\n        assert None != await board.wait_for_regex_in_line('Stopping client', timeout_s=15)\n        assert None != await board.wait_for_regex_in_line('Starting client', timeout_s=120)\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Wait for reconnection after golioth_client_destroy();\n        assert None != await board.wait_for_regex_in_line('Destroying client', timeout_s=15)\n>       assert None != await board.wait_for_regex_in_line('Starting client', timeout_s=120)\n\ntests/hil/tests/connection/test_connection.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 139982.7204814732\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "542ebb303fffab59",
      "name" : "stdout",
      "source" : "542ebb303fffab59.txt",
      "type" : "text/plain",
      "size" : 6801
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1733704540252,
      "stop" : 1733704540647,
      "duration" : 395
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1733704540651,
      "stop" : 1733704540655,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733704540649,
      "stop" : 1733704540650,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.nrf52840dk"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_connection"
  }, {
    "name" : "host",
    "value" : "573de30cde75"
  }, {
    "name" : "thread",
    "value" : "244-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.connection.test_connection"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf52840dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 86,
        "unknown" : 0,
        "total" : 90
      },
      "items" : [ {
        "uid" : "57ddaf86d7a66d90",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1875/#testresult/57ddaf86d7a66d90",
        "status" : "passed",
        "time" : {
          "start" : 1733618072338,
          "stop" : 1733618108712,
          "duration" : 36374
        }
      }, {
        "uid" : "71df2ffe10501809",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1874/#testresult/71df2ffe10501809",
        "status" : "passed",
        "time" : {
          "start" : 1733531490031,
          "stop" : 1733531522997,
          "duration" : 32966
        }
      }, {
        "uid" : "e53cf77ab35b9c6f",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1871/#testresult/e53cf77ab35b9c6f",
        "status" : "passed",
        "time" : {
          "start" : 1733445104848,
          "stop" : 1733445137377,
          "duration" : 32529
        }
      }, {
        "uid" : "d86d459b38222409",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1867/#testresult/d86d459b38222409",
        "status" : "passed",
        "time" : {
          "start" : 1733408273143,
          "stop" : 1733408309502,
          "duration" : 36359
        }
      }, {
        "uid" : "be89ff0e335a7df4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1866/#testresult/be89ff0e335a7df4",
        "status" : "passed",
        "time" : {
          "start" : 1733358720952,
          "stop" : 1733358768755,
          "duration" : 47803
        }
      }, {
        "uid" : "21f986b4c44b2642",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1863/#testresult/21f986b4c44b2642",
        "status" : "passed",
        "time" : {
          "start" : 1733272312117,
          "stop" : 1733272360820,
          "duration" : 48703
        }
      }, {
        "uid" : "d96d80d7b5334ff3",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1859/#testresult/d96d80d7b5334ff3",
        "status" : "passed",
        "time" : {
          "start" : 1733185960602,
          "stop" : 1733185993018,
          "duration" : 32416
        }
      }, {
        "uid" : "69bd558e23ea9af8",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1858/#testresult/69bd558e23ea9af8",
        "status" : "passed",
        "time" : {
          "start" : 1733160836248,
          "stop" : 1733160880629,
          "duration" : 44381
        }
      }, {
        "uid" : "618fc2a9de10fb01",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1857//#testresult/618fc2a9de10fb01",
        "status" : "passed",
        "time" : {
          "start" : 1733099593186,
          "stop" : 1733099644670,
          "duration" : 51484
        }
      }, {
        "uid" : "4dca6d96760ba5a5",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1856//#testresult/4dca6d96760ba5a5",
        "status" : "passed",
        "time" : {
          "start" : 1733013435675,
          "stop" : 1733013472049,
          "duration" : 36374
        }
      }, {
        "uid" : "1e38e0a5de1022dd",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1855//#testresult/1e38e0a5de1022dd",
        "status" : "passed",
        "time" : {
          "start" : 1732926656167,
          "stop" : 1732926692596,
          "duration" : 36429
        }
      }, {
        "uid" : "f94b879f0fc9fbcd",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1854//#testresult/f94b879f0fc9fbcd",
        "status" : "passed",
        "time" : {
          "start" : 1732840287275,
          "stop" : 1732840323573,
          "duration" : 36298
        }
      }, {
        "uid" : "1d92df8af4c2f118",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1853//#testresult/1d92df8af4c2f118",
        "status" : "passed",
        "time" : {
          "start" : 1732753875528,
          "stop" : 1732753908247,
          "duration" : 32719
        }
      }, {
        "uid" : "57563e2adc0ddcb5",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1846//#testresult/57563e2adc0ddcb5",
        "status" : "passed",
        "time" : {
          "start" : 1732667473131,
          "stop" : 1732667506039,
          "duration" : 32908
        }
      }, {
        "uid" : "a0788eeb41a38f88",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1845//#testresult/a0788eeb41a38f88",
        "status" : "passed",
        "time" : {
          "start" : 1732641649337,
          "stop" : 1732641697618,
          "duration" : 48281
        }
      }, {
        "uid" : "bd1d86d63c06441",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/bd1d86d63c06441",
        "status" : "passed",
        "time" : {
          "start" : 1732566484977,
          "stop" : 1732566517434,
          "duration" : 32457
        }
      }, {
        "uid" : "611b34d55e98cc9",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/611b34d55e98cc9",
        "status" : "passed",
        "time" : {
          "start" : 1732566484977,
          "stop" : 1732566517434,
          "duration" : 32457
        }
      }, {
        "uid" : "876860155b9fd4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1843//#testresult/876860155b9fd4",
        "status" : "passed",
        "time" : {
          "start" : 1732581062214,
          "stop" : 1732581110384,
          "duration" : 48170
        }
      }, {
        "uid" : "82655ee77b011cce",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/82655ee77b011cce",
        "status" : "passed",
        "time" : {
          "start" : 1732566484977,
          "stop" : 1732566517434,
          "duration" : 32457
        }
      }, {
        "uid" : "f43551635c4d12d0",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/f43551635c4d12d0",
        "status" : "passed",
        "time" : {
          "start" : 1732566484977,
          "stop" : 1732566517434,
          "duration" : 32457
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "nrf52840dk", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "e24f3782e101d139.json",
  "parameterValues" : [ "'nrf52840dk'", "'zephyr'" ]
}