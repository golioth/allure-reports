{"uid":"eccfed5d49d5ae35","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1731967099435,"stop":1731967133529,"duration":34094},"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = int('0')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffffa3ad5850>\ndevice = <golioth.golioth.Device object at 0xffffa3acaa50>\nproject = <golioth.golioth.Project object at 0xffffa3a2cb10>\nreleases = {'test_blocks': Release <673bb866c54a6b6bd2ecd998, release_tags=[], device_tags=['673bb865c54a6b6bd2ecd995'], artifact..., release_tags=[], device_tags=['673bb865c54a6b6bd2ecd995'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 0 == 1\nE                    +  where 0 = int('0')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731966974315,"stop":1731966974316,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731966974317,"stop":1731966974317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731966974317,"stop":1731966974318,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731966974318,"stop":1731966974319,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731966974318,"stop":1731966974318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731966974319,"stop":1731966974319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731966974320,"stop":1731966974320,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731966974320,"stop":1731966974320,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731966974321,"stop":1731966974321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731966974321,"stop":1731966974321,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731966974322,"stop":1731966974322,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731966974323,"stop":1731966974323,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731966974324,"stop":1731966989129,"duration":14805},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731966989131,"stop":1731966989684,"duration":553},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731966989684,"stop":1731966990595,"duration":911},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731966990595,"stop":1731967076189,"duration":85594},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1731967076191,"stop":1731967076686,"duration":495},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1731967076687,"stop":1731967077494,"duration":807},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1731967077495,"stop":1731967079307,"duration":1812},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1731967099432,"stop":1731967099433,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = int('0')","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffffa3ad5850>\ndevice = <golioth.golioth.Device object at 0xffffa3acaa50>\nproject = <golioth.golioth.Project object at 0xffffa3a2cb10>\nreleases = {'test_blocks': Release <673bb866c54a6b6bd2ecd998, release_tags=[], device_tags=['673bb865c54a6b6bd2ecd995'], artifact..., release_tags=[], device_tags=['673bb865c54a6b6bd2ecd995'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 0 == 1\nE                    +  where 0 = int('0')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","steps":[],"attachments":[{"uid":"abe93dede0d0d329","name":"stdout","source":"abe93dede0d0d329.txt","type":"text/plain","size":168}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1731967133666,"stop":1731967134690,"duration":1024},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1731967134693,"stop":1731967136291,"duration":1598},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1731967136294,"stop":1731967137053,"duration":759},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1731967137055,"stop":1731967137055,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1731967137057,"stop":1731967137057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731967137059,"stop":1731967137424,"duration":365},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731967137426,"stop":1731967137426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731967137428,"stop":1731967137432,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"40b05a77abb9"},{"name":"thread","value":"270-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":7,"skipped":0,"passed":37,"unknown":0,"total":51},"items":[{"uid":"d8c17b4593445d78","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/d8c17b4593445d78","status":"passed","time":{"start":1731891508363,"stop":1731891590747,"duration":82384}},{"uid":"c4143bb4e0ac5d14","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/c4143bb4e0ac5d14","status":"passed","time":{"start":1731805133798,"stop":1731805217147,"duration":83349}},{"uid":"124bb395f76b499a","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/124bb395f76b499a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731718812814,"stop":1731718812814,"duration":0}},{"uid":"582ff18d030a1932","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/582ff18d030a1932","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731632289463,"stop":1731632289463,"duration":0}},{"uid":"a780992a37058554","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/a780992a37058554","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731607954785,"stop":1731607954785,"duration":0}},{"uid":"9c40d18278459e47","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/9c40d18278459e47","status":"passed","time":{"start":1731565959009,"stop":1731566043059,"duration":84050}},{"uid":"4305550208b06c9c","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/4305550208b06c9c","status":"passed","time":{"start":1731545483836,"stop":1731545568273,"duration":84437}},{"uid":"44b4d8f9e34fbce4","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/44b4d8f9e34fbce4","status":"passed","time":{"start":1731458708203,"stop":1731458795446,"duration":87243}},{"uid":"2cbdea7a281c5d82","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/2cbdea7a281c5d82","status":"passed","time":{"start":1731373058366,"stop":1731373146142,"duration":87776}},{"uid":"b5149d04e6536923","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/b5149d04e6536923","status":"passed","time":{"start":1731285982730,"stop":1731286064583,"duration":81853}},{"uid":"d1303a43849f33cd","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/d1303a43849f33cd","status":"passed","time":{"start":1731200146238,"stop":1731200232069,"duration":85831}},{"uid":"e44c6f35bbf8a465","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/e44c6f35bbf8a465","status":"passed","time":{"start":1731113654148,"stop":1731113738359,"duration":84211}},{"uid":"bfe24f54baa60491","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/bfe24f54baa60491","status":"passed","time":{"start":1731027379547,"stop":1731027462344,"duration":82797}},{"uid":"8e09fba60e7b2d7","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/8e09fba60e7b2d7","status":"passed","time":{"start":1730940983128,"stop":1730941068741,"duration":85613}},{"uid":"6e79bc3694a78dec","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/6e79bc3694a78dec","status":"passed","time":{"start":1730894257661,"stop":1730894346165,"duration":88504}},{"uid":"5d683067b5b903cd","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/5d683067b5b903cd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730854138301,"stop":1730854138301,"duration":0}},{"uid":"7b28b9d4bcb7f783","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/7b28b9d4bcb7f783","status":"passed","time":{"start":1730768135168,"stop":1730768227827,"duration":92659}},{"uid":"93b7006f008010f5","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/93b7006f008010f5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730681673260,"stop":1730681673260,"duration":0}},{"uid":"69a2e887db212db2","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/69a2e887db212db2","status":"passed","time":{"start":1730595349141,"stop":1730595437090,"duration":87949}},{"uid":"5c8c47ee85787117","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/5c8c47ee85787117","status":"passed","time":{"start":1730508432979,"stop":1730508516105,"duration":83126}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"eccfed5d49d5ae35.json","parameterValues":["'nrf9160dk'","'zephyr'"]}