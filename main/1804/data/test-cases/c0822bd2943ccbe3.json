{"uid":"c0822bd2943ccbe3","name":"test_set_float","fullName":"tests.hil.tests.settings.test_settings#test_set_float","historyId":"22c9bcf837b0c971626dc8e60f86d7db","time":{"start":1732161379393,"stop":1732161379393,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 206090.09927746328\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffff84e91810>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff84e6afd0>\ndevice = <golioth.golioth.Device object at 0xffff84e2e090>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 206090.09927746328\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732161225132,"stop":1732161225132,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732161225133,"stop":1732161225133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732161225134,"stop":1732161225134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732161225134,"stop":1732161225135,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732161225135,"stop":1732161225135,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732161225136,"stop":1732161225136,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732161225136,"stop":1732161225137,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732161225137,"stop":1732161225138,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732161225137,"stop":1732161225137,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732161225138,"stop":1732161225138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732161225138,"stop":1732161225138,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732161225139,"stop":1732161225539,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732161225139,"stop":1732161225139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732161225539,"stop":1732161247043,"duration":21504},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732161247044,"stop":1732161248115,"duration":1071},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732161248115,"stop":1732161375836,"duration":127721},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1732161381895,"stop":1732161382271,"duration":376},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732161382273,"stop":1732161382274,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732161382277,"stop":1732161382279,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"c35368a80b86"},{"name":"thread","value":"259-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":47,"skipped":0,"passed":11,"unknown":0,"total":58},"items":[{"uid":"9c1c09e720ad9c50","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/9c1c09e720ad9c50","status":"passed","time":{"start":1732151073611,"stop":1732151077438,"duration":3827}},{"uid":"fad44953738edae5","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/fad44953738edae5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732138513880,"stop":1732138513880,"duration":0}},{"uid":"f3a135c8fba975e5","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/f3a135c8fba975e5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732063720767,"stop":1732063720767,"duration":0}},{"uid":"dd4e2503281aa1d4","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/dd4e2503281aa1d4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732058113852,"stop":1732058113852,"duration":0}},{"uid":"c6baab3b949c07e7","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/c6baab3b949c07e7","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732036734851,"stop":1732036734851,"duration":0}},{"uid":"5289c9a223dd7151","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/5289c9a223dd7151","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731977355504,"stop":1731977355504,"duration":0}},{"uid":"c7f3589dba72fe27","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/c7f3589dba72fe27","status":"passed","time":{"start":1731966470301,"stop":1731966474283,"duration":3982}},{"uid":"c72dfbdfccb698d9","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/c72dfbdfccb698d9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731891134764,"stop":1731891134764,"duration":0}},{"uid":"bc087f1895475d06","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/bc087f1895475d06","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731804758971,"stop":1731804758971,"duration":0}},{"uid":"4531bc4360dc812","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/4531bc4360dc812","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731718359519,"stop":1731718359519,"duration":0}},{"uid":"79974df608f85e8d","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/79974df608f85e8d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731631720267,"stop":1731631720267,"duration":0}},{"uid":"369b3d45923a4b81","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/369b3d45923a4b81","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731607629193,"stop":1731607629193,"duration":0}},{"uid":"1b08acdbe2f69d87","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/1b08acdbe2f69d87","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731565562508,"stop":1731565562508,"duration":0}},{"uid":"e141bfe8100e2065","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/e141bfe8100e2065","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731545178989,"stop":1731545178989,"duration":0}},{"uid":"6e8fee52e171e8d8","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/6e8fee52e171e8d8","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731458736022,"stop":1731458736022,"duration":0}},{"uid":"2bb5cbf3875c719c","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/2bb5cbf3875c719c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731372554720,"stop":1731372554720,"duration":0}},{"uid":"a5898d5ea76c37d5","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/a5898d5ea76c37d5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731286114139,"stop":1731286114139,"duration":0}},{"uid":"105ccaaf5dd6ce28","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/105ccaaf5dd6ce28","status":"passed","time":{"start":1731199807933,"stop":1731199811745,"duration":3812}},{"uid":"84de811352ed1580","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/84de811352ed1580","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731113167854,"stop":1731113167854,"duration":0}},{"uid":"a6c1a259d3ce26df","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/a6c1a259d3ce26df","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731026936114,"stop":1731026936114,"duration":0}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"c0822bd2943ccbe3.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}