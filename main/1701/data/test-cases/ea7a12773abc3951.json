{"uid":"ea7a12773abc3951","name":"test_observation_repeat_restart","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_repeat_restart","historyId":"fa7d0705163bcc18df4d74f35b4d5bf2","time":{"start":1730162097628,"stop":1730162103054,"duration":5426},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff937b1550>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff9384bc10>\ndevice = <golioth.golioth.Device object at 0xffff93857d90>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n>           rsp = await device.rpc.disconnect()\n\ntests/hil/tests/rpc/test_rpc.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff937b1550>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730162032454,"stop":1730162032454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730162032455,"stop":1730162032456,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730162032457,"stop":1730162032457,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730162032458,"stop":1730162032458,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730162032459,"stop":1730162032460,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730162032460,"stop":1730162032461,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730162032462,"stop":1730162032462,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730162032463,"stop":1730162032463,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730162032464,"stop":1730162032464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730162032465,"stop":1730162032465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730162032466,"stop":1730162032466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730162032467,"stop":1730162032467,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730162032468,"stop":1730162032868,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730162032869,"stop":1730162074556,"duration":41687},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730162074558,"stop":1730162075661,"duration":1103},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730162075662,"stop":1730162078909,"duration":3247},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730162110660,"stop":1730162110660,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730162110662,"stop":1730162111141,"duration":479},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730162111143,"stop":1730162111145,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730162111147,"stop":1730162111149,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"9d19ea713372"},{"name":"thread","value":"247-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":25,"unknown":0,"total":26},"items":[{"uid":"769d38b6d75d15ca","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/769d38b6d75d15ca","status":"passed","time":{"start":1730075790340,"stop":1730075817157,"duration":26817}},{"uid":"d74187b35f1515aa","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/d74187b35f1515aa","status":"passed","time":{"start":1729989423096,"stop":1729989450743,"duration":27647}},{"uid":"2a9ec2a683b0c0f3","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/2a9ec2a683b0c0f3","status":"passed","time":{"start":1729902880875,"stop":1729902909010,"duration":28135}},{"uid":"613d01b3e50775f0","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/613d01b3e50775f0","status":"passed","time":{"start":1729816493067,"stop":1729816521886,"duration":28819}},{"uid":"5dfa1ff7b930ebee","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/5dfa1ff7b930ebee","status":"passed","time":{"start":1729730043955,"stop":1729730067200,"duration":23245}},{"uid":"aa7572fd7a944c56","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/aa7572fd7a944c56","status":"passed","time":{"start":1729643692834,"stop":1729643719884,"duration":27050}},{"uid":"ce118e3fc4b9e9ef","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/ce118e3fc4b9e9ef","status":"passed","time":{"start":1729557236557,"stop":1729557264139,"duration":27582}},{"uid":"403f0f3cc76d52e3","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/403f0f3cc76d52e3","status":"passed","time":{"start":1729470892484,"stop":1729470917041,"duration":24557}},{"uid":"513080ade9e044d3","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/513080ade9e044d3","status":"passed","time":{"start":1729384631197,"stop":1729384657513,"duration":26316}},{"uid":"54e552b3bd4c65a8","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/54e552b3bd4c65a8","status":"passed","time":{"start":1729368493581,"stop":1729368517121,"duration":23540}},{"uid":"6396443b7508d6df","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/6396443b7508d6df","status":"passed","time":{"start":1729361364114,"stop":1729361388170,"duration":24056}},{"uid":"3ce9c71b2052f63","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/3ce9c71b2052f63","status":"passed","time":{"start":1729298017158,"stop":1729298040692,"duration":23534}},{"uid":"cb78049c707e4904","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/cb78049c707e4904","status":"passed","time":{"start":1729211621332,"stop":1729211644367,"duration":23035}},{"uid":"ef46d86695a26661","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/ef46d86695a26661","status":"passed","time":{"start":1729202716799,"stop":1729202743365,"duration":26566}},{"uid":"27a3dbeb27a1269b","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/27a3dbeb27a1269b","status":"passed","time":{"start":1729129221830,"stop":1729129245124,"duration":23294}},{"uid":"8383a101980a4abb","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/8383a101980a4abb","status":"passed","time":{"start":1729109413904,"stop":1729109437244,"duration":23340}},{"uid":"4a014038a567994e","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/4a014038a567994e","status":"passed","time":{"start":1729038817744,"stop":1729038842298,"duration":24554}},{"uid":"49df3989d69b5710","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/49df3989d69b5710","status":"passed","time":{"start":1729025133473,"stop":1729025156751,"duration":23278}},{"uid":"1b03b91560a07c34","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/1b03b91560a07c34","status":"passed","time":{"start":1729007566730,"stop":1729007601313,"duration":34583}},{"uid":"b5258560efd69ad2","reportUrl":"https://golioth.github.io/allure-reports/main/1637//#testresult/b5258560efd69ad2","status":"passed","time":{"start":1728952455979,"stop":1728952482774,"duration":26795}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"ea7a12773abc3951.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}