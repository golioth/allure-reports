{"uid":"b8125f7b73df86b9","name":"test_no_args","fullName":"tests.hil.tests.rpc.test_rpc#test_no_args","historyId":"8bffc3fa76fba1b36728211767f69d61","time":{"start":1732566748726,"stop":1732566754068,"duration":5342},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff87e14390>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff87dc69d0>\ndevice = <golioth.golioth.Device object at 0xffff87e14450>\n\n    async def test_no_args(board, device):\n>       await device.rpc.no_response()\n\ntests/hil/tests/rpc/test_rpc.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff87e14390>\nmethod = 'no_response', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732566691821,"stop":1732566691821,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732566691822,"stop":1732566691822,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732566691823,"stop":1732566691823,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732566691824,"stop":1732566691824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732566691824,"stop":1732566691824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732566691825,"stop":1732566691825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732566691825,"stop":1732566691825,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732566691826,"stop":1732566691826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732566691826,"stop":1732566691826,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732566691827,"stop":1732566691828,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732566691828,"stop":1732566691828,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732566691829,"stop":1732566691829,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732566691830,"stop":1732566692350,"duration":520},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732566692351,"stop":1732566742477,"duration":50126},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732566742478,"stop":1732566743608,"duration":1130},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732566743608,"stop":1732566747227,"duration":3619},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732566820162,"stop":1732566820162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732566820165,"stop":1732566820711,"duration":546},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732566820715,"stop":1732566820720,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732566820724,"stop":1732566820728,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"7d1b7efbbef4"},{"name":"thread","value":"244-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":67,"unknown":0,"total":68},"items":[{"uid":"739c4e4aa2e9b205","reportUrl":"https://golioth.github.io/allure-reports/main/1838//#testresult/739c4e4aa2e9b205","status":"passed","time":{"start":1732494908695,"stop":1732494909657,"duration":962}},{"uid":"c88fc60ae41ee3","reportUrl":"https://golioth.github.io/allure-reports/main/1837//#testresult/c88fc60ae41ee3","status":"passed","time":{"start":1732408747315,"stop":1732408748780,"duration":1465}},{"uid":"ae8d4b96a778a094","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/ae8d4b96a778a094","status":"passed","time":{"start":1732323160037,"stop":1732323161252,"duration":1215}},{"uid":"4c7d2923ccaf56bc","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/4c7d2923ccaf56bc","status":"passed","time":{"start":1732320595310,"stop":1732320596272,"duration":962}},{"uid":"39466cb10b64ab74","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/39466cb10b64ab74","status":"passed","time":{"start":1732308006433,"stop":1732308007394,"duration":961}},{"uid":"8c5eb26d9cd7537a","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/8c5eb26d9cd7537a","status":"passed","time":{"start":1732305221411,"stop":1732305222368,"duration":957}},{"uid":"d738dc6948f78d20","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/d738dc6948f78d20","status":"passed","time":{"start":1732297227456,"stop":1732297228664,"duration":1208}},{"uid":"7120549657c395d9","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/7120549657c395d9","status":"passed","time":{"start":1732274784225,"stop":1732274785442,"duration":1217}},{"uid":"a2191c2719b1430a","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/a2191c2719b1430a","status":"passed","time":{"start":1732235661731,"stop":1732235662944,"duration":1213}},{"uid":"d8c8648fffb43ce4","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/d8c8648fffb43ce4","status":"passed","time":{"start":1732209973046,"stop":1732209974274,"duration":1228}},{"uid":"2e4f8fa784a0fa63","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/2e4f8fa784a0fa63","status":"passed","time":{"start":1732160484172,"stop":1732160485632,"duration":1460}},{"uid":"9d29aea3bf067042","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/9d29aea3bf067042","status":"passed","time":{"start":1732150215895,"stop":1732150217391,"duration":1496}},{"uid":"1e7a32d40061caa0","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/1e7a32d40061caa0","status":"passed","time":{"start":1732136963174,"stop":1732136964403,"duration":1229}},{"uid":"85094d0682313dcb","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/85094d0682313dcb","status":"passed","time":{"start":1732062833936,"stop":1732062835146,"duration":1210}},{"uid":"ddb90e1c3f3bc411","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/ddb90e1c3f3bc411","status":"passed","time":{"start":1732035825787,"stop":1732035827048,"duration":1261}},{"uid":"1c3411757a4a4be0","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/1c3411757a4a4be0","status":"passed","time":{"start":1731976453342,"stop":1731976454315,"duration":973}},{"uid":"848fc478d70ded93","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/848fc478d70ded93","status":"passed","time":{"start":1731964608457,"stop":1731964609675,"duration":1218}},{"uid":"f814765371a32810","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/f814765371a32810","status":"passed","time":{"start":1731890160288,"stop":1731890161516,"duration":1228}},{"uid":"6c60ff5c4c691e19","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/6c60ff5c4c691e19","status":"passed","time":{"start":1731803797479,"stop":1731803798427,"duration":948}},{"uid":"fb1947d860cc3890","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/fb1947d860cc3890","status":"passed","time":{"start":1731717288784,"stop":1731717289742,"duration":958}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"b8125f7b73df86b9.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}