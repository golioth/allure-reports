{"uid":"e288fad8008cccc4","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"80cd057eba57a7e68ecc18ee8923db54","time":{"start":1732566982308,"stop":1732566987703,"duration":5395},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffb928bd10>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffffba9a3f10>\ndevice = <golioth.golioth.Device object at 0xffffb9288990>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffb928bd10>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732566852637,"stop":1732566852637,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732566852638,"stop":1732566852638,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732566852639,"stop":1732566852639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732566852639,"stop":1732566852640,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732566852640,"stop":1732566852640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732566852640,"stop":1732566852641,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732566852641,"stop":1732566852642,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732566852641,"stop":1732566852641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732566852642,"stop":1732566852642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732566852642,"stop":1732566852642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732566852643,"stop":1732566852644,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732566852644,"stop":1732566852645,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732566852646,"stop":1732566853067,"duration":421},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732566853068,"stop":1732566894495,"duration":41427},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732566894497,"stop":1732566895443,"duration":946},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732566895444,"stop":1732566925816,"duration":30372},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732566988790,"stop":1732566988791,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732566988793,"stop":1732566989334,"duration":541},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732566989337,"stop":1732566989339,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732566989341,"stop":1732566989343,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"76fe3598b890"},{"name":"thread","value":"266-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":19,"skipped":0,"passed":50,"unknown":0,"total":69},"items":[{"uid":"e22a9e1b63e96eb3","reportUrl":"https://golioth.github.io/allure-reports/main/1838//#testresult/e22a9e1b63e96eb3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732495932365,"stop":1732495932365,"duration":0}},{"uid":"cf0a3cda5f1f4a8","reportUrl":"https://golioth.github.io/allure-reports/main/1837//#testresult/cf0a3cda5f1f4a8","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1732409666504,"stop":1732409692270,"duration":25766}},{"uid":"a9ba188c39a411f7","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/a9ba188c39a411f7","status":"passed","time":{"start":1732323715454,"stop":1732323735357,"duration":19903}},{"uid":"7869ab5a46ef634d","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/7869ab5a46ef634d","status":"passed","time":{"start":1732321471321,"stop":1732321491061,"duration":19740}},{"uid":"75ca64db7e1c9006","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/75ca64db7e1c9006","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732309030354,"stop":1732309030354,"duration":0}},{"uid":"4ea7b071f3002918","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/4ea7b071f3002918","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732306252171,"stop":1732306252171,"duration":0}},{"uid":"e1befc10e3afb08","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/e1befc10e3afb08","status":"passed","time":{"start":1732297856795,"stop":1732297876653,"duration":19858}},{"uid":"f479c224f67e2868","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/f479c224f67e2868","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732276976451,"stop":1732276976451,"duration":0}},{"uid":"8689f5c36b996e5d","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/8689f5c36b996e5d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732236700512,"stop":1732236700512,"duration":0}},{"uid":"3d7fd0fd0f22473a","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/3d7fd0fd0f22473a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732213576480,"stop":1732213576480,"duration":0}},{"uid":"a381a1bb04f135aa","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/a381a1bb04f135aa","status":"passed","time":{"start":1732161369500,"stop":1732161391551,"duration":22051}},{"uid":"9dacde5767962215","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/9dacde5767962215","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732151102706,"stop":1732151102706,"duration":0}},{"uid":"54c5fbc01135e582","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/54c5fbc01135e582","status":"passed","time":{"start":1732137540482,"stop":1732137561113,"duration":20631}},{"uid":"c6f05c095b46c055","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/c6f05c095b46c055","status":"passed","time":{"start":1732063656265,"stop":1732063675927,"duration":19662}},{"uid":"90a2eb7ee93aecc8","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/90a2eb7ee93aecc8","status":"passed","time":{"start":1732058292010,"stop":1732058314037,"duration":22027}},{"uid":"5186b305da8c953d","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/5186b305da8c953d","status":"passed","time":{"start":1732036649915,"stop":1732036671941,"duration":22026}},{"uid":"fc657f055913bdd2","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/fc657f055913bdd2","status":"passed","time":{"start":1731977290537,"stop":1731977312514,"duration":21977}},{"uid":"d089b6118a034de","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/d089b6118a034de","status":"passed","time":{"start":1731966396484,"stop":1731966417980,"duration":21496}},{"uid":"bdeff107b469e647","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/bdeff107b469e647","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731890998062,"stop":1731891003380,"duration":5318}},{"uid":"385778c4d72a11ce","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/385778c4d72a11ce","status":"passed","time":{"start":1731804654811,"stop":1731804676644,"duration":21833}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"e288fad8008cccc4.json","parameterValues":["'rak5010'","'zephyr'"]}