{"uid":"cafaf651d3676e2e","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"e6176e7c51c2c639edadc3c78c5e69ff","time":{"start":1730334857025,"stop":1730334862361,"duration":5336},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff86584950>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff8650ec90>\ndevice = <golioth.golioth.Device object at 0xffff865848d0>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff86584950>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730334767193,"stop":1730334767193,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730334767194,"stop":1730334767194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730334767195,"stop":1730334767195,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730334767196,"stop":1730334767196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730334767196,"stop":1730334767197,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730334767197,"stop":1730334767197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730334767198,"stop":1730334767198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730334767198,"stop":1730334767198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730334767199,"stop":1730334767199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730334767199,"stop":1730334767199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730334767200,"stop":1730334767681,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730334767200,"stop":1730334767200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730334767200,"stop":1730334767200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730334767681,"stop":1730334817506,"duration":49825},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730334817508,"stop":1730334818638,"duration":1130},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730334818639,"stop":1730334822411,"duration":3772},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730334863494,"stop":1730334863494,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730334863496,"stop":1730334863898,"duration":402},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730334863901,"stop":1730334863906,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730334863908,"stop":1730334863910,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"9bfd1533223c"},{"name":"thread","value":"248-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":28,"unknown":0,"total":29},"items":[{"uid":"28f87ad038b0a891","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/28f87ad038b0a891","status":"passed","time":{"start":1730303267168,"stop":1730303285475,"duration":18307}},{"uid":"9c3343dfaa2e5615","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/9c3343dfaa2e5615","status":"passed","time":{"start":1730248440445,"stop":1730248458502,"duration":18057}},{"uid":"2401782728aebc64","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/2401782728aebc64","status":"passed","time":{"start":1730162139924,"stop":1730162158684,"duration":18760}},{"uid":"2cee3a555a19ec4c","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/2cee3a555a19ec4c","status":"passed","time":{"start":1730075787852,"stop":1730075806646,"duration":18794}},{"uid":"46194f7ff3f7b21c","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/46194f7ff3f7b21c","status":"passed","time":{"start":1729989437141,"stop":1729989455985,"duration":18844}},{"uid":"f8398026d9fd3f5d","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/f8398026d9fd3f5d","status":"passed","time":{"start":1729902858319,"stop":1729902877362,"duration":19043}},{"uid":"b0ea12d1539a435c","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/b0ea12d1539a435c","status":"passed","time":{"start":1729816484775,"stop":1729816503852,"duration":19077}},{"uid":"6a468b9e50903867","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/6a468b9e50903867","status":"passed","time":{"start":1729730031340,"stop":1729730049646,"duration":18306}},{"uid":"75890bc632c1bf34","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/75890bc632c1bf34","status":"passed","time":{"start":1729643686330,"stop":1729643705106,"duration":18776}},{"uid":"63aef1bf07d7328b","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/63aef1bf07d7328b","status":"passed","time":{"start":1729557276967,"stop":1729557295780,"duration":18813}},{"uid":"61de49cb6b47d7e5","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/61de49cb6b47d7e5","status":"passed","time":{"start":1729470928620,"stop":1729470947377,"duration":18757}},{"uid":"4e2f3cdd07e0f0de","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/4e2f3cdd07e0f0de","status":"passed","time":{"start":1729384615901,"stop":1729384634446,"duration":18545}},{"uid":"729ee0f3ec50a65d","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/729ee0f3ec50a65d","status":"passed","time":{"start":1729368525403,"stop":1729368544188,"duration":18785}},{"uid":"8ab35af1dd3ec3b6","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/8ab35af1dd3ec3b6","status":"passed","time":{"start":1729361380411,"stop":1729361399210,"duration":18799}},{"uid":"123b3215349139ef","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/123b3215349139ef","status":"passed","time":{"start":1729298082052,"stop":1729298100815,"duration":18763}},{"uid":"9009ed9553d0ae28","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/9009ed9553d0ae28","status":"passed","time":{"start":1729211650173,"stop":1729211668920,"duration":18747}},{"uid":"a8b247bc46696fdf","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/a8b247bc46696fdf","status":"passed","time":{"start":1729202709796,"stop":1729202728574,"duration":18778}},{"uid":"c1250caf6c1e99f2","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/c1250caf6c1e99f2","status":"passed","time":{"start":1729129202229,"stop":1729129220811,"duration":18582}},{"uid":"6cabcf7297e3f720","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/6cabcf7297e3f720","status":"passed","time":{"start":1729109365740,"stop":1729109385318,"duration":19578}},{"uid":"6cd0b34a193dd4f9","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/6cd0b34a193dd4f9","status":"passed","time":{"start":1729038814738,"stop":1729038833028,"duration":18290}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"cafaf651d3676e2e.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}