{"uid":"f9274c3d5b6e6566","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"7b5bd2e87b0538b1f5ac1141f1902779","time":{"start":1730334773175,"stop":1730334794445,"duration":21270},"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff987d9410>\ndevice = <golioth.golioth.Device object at 0xffff9877fe50>\nproject = <golioth.golioth.Project object at 0xffff987b5ed0>\nreleases = {'test_blocks': Release <6722d02498103374e37c4cc9, release_tags=[], device_tags=['6722d02298103374e37c4cc6'], artifact..., release_tags=[], device_tags=['6722d02298103374e37c4cc6'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730334697671,"stop":1730334697672,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730334697672,"stop":1730334697673,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730334697673,"stop":1730334697673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730334697674,"stop":1730334697674,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730334697675,"stop":1730334697675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730334697676,"stop":1730334697676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730334697676,"stop":1730334697677,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730334697677,"stop":1730334697677,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730334697678,"stop":1730334697678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730334697678,"stop":1730334697678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730334697678,"stop":1730334697678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730334697679,"stop":1730334697679,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730334697679,"stop":1730334742806,"duration":45127},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730334742808,"stop":1730334743415,"duration":607},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730334743415,"stop":1730334744370,"duration":955},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730334744371,"stop":1730334752178,"duration":7807},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1730334752180,"stop":1730334752696,"duration":516},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1730334752697,"stop":1730334754730,"duration":2033},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1730334754730,"stop":1730334756838,"duration":2108},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1730334773172,"stop":1730334773172,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff987d9410>\ndevice = <golioth.golioth.Device object at 0xffff9877fe50>\nproject = <golioth.golioth.Project object at 0xffff987b5ed0>\nreleases = {'test_blocks': Release <6722d02498103374e37c4cc9, release_tags=[], device_tags=['6722d02298103374e37c4cc6'], artifact..., release_tags=[], device_tags=['6722d02298103374e37c4cc6'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 1\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"c39bc5ef445e64d","name":"stdout","source":"c39bc5ef445e64d.txt","type":"text/plain","size":1679}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1730334794614,"stop":1730334795752,"duration":1138},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1730334795754,"stop":1730334797515,"duration":1761},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1730334797517,"stop":1730334798477,"duration":960},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1730334798479,"stop":1730334798479,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1730334798481,"stop":1730334798481,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730334798483,"stop":1730334798976,"duration":493},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730334798979,"stop":1730334798979,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730334798981,"stop":1730334798984,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"c01483948b3f"},{"name":"thread","value":"243-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":25,"unknown":0,"total":29},"items":[{"uid":"dbd70f7d06ea6ec","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/dbd70f7d06ea6ec","status":"passed","time":{"start":1730303157832,"stop":1730303237173,"duration":79341}},{"uid":"ae04f8cf37a4cd06","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/ae04f8cf37a4cd06","status":"passed","time":{"start":1730248297392,"stop":1730248374739,"duration":77347}},{"uid":"cbd47e68991e41c6","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/cbd47e68991e41c6","status":"passed","time":{"start":1730161947599,"stop":1730162025355,"duration":77756}},{"uid":"1bf1a78e290f28ba","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/1bf1a78e290f28ba","status":"passed","time":{"start":1730075632465,"stop":1730075713151,"duration":80686}},{"uid":"1cfac0190009125b","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/1cfac0190009125b","status":"passed","time":{"start":1729989264827,"stop":1729989344726,"duration":79899}},{"uid":"98685cd79f8b0087","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/98685cd79f8b0087","status":"passed","time":{"start":1729902722031,"stop":1729902802224,"duration":80193}},{"uid":"9fcaf801e58b8149","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/9fcaf801e58b8149","status":"passed","time":{"start":1729816336048,"stop":1729816416187,"duration":80139}},{"uid":"c9e6ccca1165fdb8","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/c9e6ccca1165fdb8","status":"passed","time":{"start":1729729896056,"stop":1729729973962,"duration":77906}},{"uid":"21c140e1be5fdeb6","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/21c140e1be5fdeb6","status":"passed","time":{"start":1729643534072,"stop":1729643614597,"duration":80525}},{"uid":"be687d3f59252cf7","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/be687d3f59252cf7","status":"failed","statusDetails":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","time":{"start":1729557122459,"stop":1729557158853,"duration":36394}},{"uid":"4d14a00c5579ad8b","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/4d14a00c5579ad8b","status":"passed","time":{"start":1729470743683,"stop":1729470821234,"duration":77551}},{"uid":"2df837b994d8b443","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/2df837b994d8b443","status":"passed","time":{"start":1729384467032,"stop":1729384549238,"duration":82206}},{"uid":"80f3197e2421b5e4","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/80f3197e2421b5e4","status":"passed","time":{"start":1729368346221,"stop":1729368423713,"duration":77492}},{"uid":"ed4afad16664f723","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/ed4afad16664f723","status":"failed","statusDetails":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})","time":{"start":1729361296790,"stop":1729361296790,"duration":0}},{"uid":"cb8ad03c3e81d844","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/cb8ad03c3e81d844","status":"passed","time":{"start":1729297868928,"stop":1729297946313,"duration":77385}},{"uid":"10f3f1441feff57","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/10f3f1441feff57","status":"passed","time":{"start":1729211472865,"stop":1729211550321,"duration":77456}},{"uid":"8013934a8209d63b","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/8013934a8209d63b","status":"passed","time":{"start":1729202544737,"stop":1729202626316,"duration":81579}},{"uid":"14b0b2a3b3182c11","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/14b0b2a3b3182c11","status":"passed","time":{"start":1729129072050,"stop":1729129149601,"duration":77551}},{"uid":"ec6b59a76b108fb4","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/ec6b59a76b108fb4","status":"passed","time":{"start":1729109264578,"stop":1729109342479,"duration":77901}},{"uid":"c79b306c7a6b06f8","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/c79b306c7a6b06f8","status":"passed","time":{"start":1729038670817,"stop":1729038748298,"duration":77481}}]},"tags":["esp-idf","anyio","esp32_devkitc_wrover_espidf","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"f9274c3d5b6e6566.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}