{"uid":"4798a0f7e99e4174","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"ee936b7d181ae9cc4057b23c9f7088a4","time":{"start":1730335780935,"stop":1730335786456,"duration":5521},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff9ab7bc50>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff9ad0bf10>\ndevice = <golioth.golioth.Device object at 0xffff9ab7bb90>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff9ab7bc50>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730335705971,"stop":1730335705971,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730335705972,"stop":1730335705972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730335705973,"stop":1730335705973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730335705974,"stop":1730335705974,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730335705974,"stop":1730335705975,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730335705975,"stop":1730335705975,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730335705976,"stop":1730335705976,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730335705977,"stop":1730335705977,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730335705977,"stop":1730335705978,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730335705978,"stop":1730335705978,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730335705979,"stop":1730335705979,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730335705979,"stop":1730335705979,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730335705980,"stop":1730335706445,"duration":465},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730335706446,"stop":1730335747466,"duration":41020},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730335747467,"stop":1730335748683,"duration":1216},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730335748683,"stop":1730335778070,"duration":29387},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730335842494,"stop":1730335842495,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730335842500,"stop":1730335843007,"duration":507},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730335843009,"stop":1730335843011,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730335843014,"stop":1730335843016,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"56915a00fa7e"},{"name":"thread","value":"267-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":22,"unknown":0,"total":29},"items":[{"uid":"3734a48d99787014","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/3734a48d99787014","status":"passed","time":{"start":1730303999384,"stop":1730304000906,"duration":1522}},{"uid":"4a14a39b62a454e3","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/4a14a39b62a454e3","status":"passed","time":{"start":1730249202281,"stop":1730249203933,"duration":1652}},{"uid":"91ec2354df4b2719","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/91ec2354df4b2719","status":"passed","time":{"start":1730162898786,"stop":1730162900757,"duration":1971}},{"uid":"1e197b59991264e7","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/1e197b59991264e7","status":"passed","time":{"start":1730076600544,"stop":1730076602172,"duration":1628}},{"uid":"6cd36a79c89daddb","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/6cd36a79c89daddb","status":"passed","time":{"start":1729990232915,"stop":1729990234613,"duration":1698}},{"uid":"125c0caa91453763","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/125c0caa91453763","status":"passed","time":{"start":1729903653147,"stop":1729903654826,"duration":1679}},{"uid":"62d5decae29e01d9","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/62d5decae29e01d9","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729817243772,"stop":1729817249128,"duration":5356}},{"uid":"438fb96f8805ee83","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/438fb96f8805ee83","status":"passed","time":{"start":1729730783275,"stop":1729730784803,"duration":1528}},{"uid":"6e7c2182872b0c3","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/6e7c2182872b0c3","status":"passed","time":{"start":1729644475080,"stop":1729644476762,"duration":1682}},{"uid":"1f9fc963ee9cf4b2","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/1f9fc963ee9cf4b2","status":"passed","time":{"start":1729558081198,"stop":1729558082835,"duration":1637}},{"uid":"50e2e68e4f272cac","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/50e2e68e4f272cac","status":"passed","time":{"start":1729471729356,"stop":1729471731724,"duration":2368}},{"uid":"ba4cadaa2a9e6cf6","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/ba4cadaa2a9e6cf6","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729385413157,"stop":1729385418570,"duration":5413}},{"uid":"27c1900954200fac","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/27c1900954200fac","status":"passed","time":{"start":1729369368766,"stop":1729369370435,"duration":1669}},{"uid":"56a3d81689c27a60","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/56a3d81689c27a60","status":"passed","time":{"start":1729362061168,"stop":1729362062755,"duration":1587}},{"uid":"b29cb9cf1dfb444d","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/b29cb9cf1dfb444d","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729298850392,"stop":1729298855856,"duration":5464}},{"uid":"96a4559baadc8916","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/96a4559baadc8916","status":"passed","time":{"start":1729212454687,"stop":1729212456297,"duration":1610}},{"uid":"175a6e0c0aaa530f","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/175a6e0c0aaa530f","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729203516198,"stop":1729203521709,"duration":5511}},{"uid":"7365b3f1d7bdfea4","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/7365b3f1d7bdfea4","status":"passed","time":{"start":1729129382196,"stop":1729129383772,"duration":1576}},{"uid":"334121618ad8b562","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/334121618ad8b562","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729110208425,"stop":1729110213866,"duration":5441}},{"uid":"3a03cfb26c85da55","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/3a03cfb26c85da55","status":"passed","time":{"start":1729038996683,"stop":1729038998253,"duration":1570}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"4798a0f7e99e4174.json","parameterValues":["'rak5010'","'zephyr'"]}