{"uid":"6119dcd2d127f461","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"e5ac27ebc64962dc70036af610b826d7","time":{"start":1730334850778,"stop":1730334856121,"duration":5343},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff92544150>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff924ce7d0>\ndevice = <golioth.golioth.Device object at 0xffff92544a90>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff92544150>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730334781588,"stop":1730334781589,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730334781589,"stop":1730334781590,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730334781591,"stop":1730334781591,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730334781592,"stop":1730334781592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730334781593,"stop":1730334781593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730334781594,"stop":1730334781594,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730334781595,"stop":1730334781596,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730334781597,"stop":1730334781597,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730334781598,"stop":1730334781598,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730334781599,"stop":1730334781599,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730334781600,"stop":1730334781600,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730334781601,"stop":1730334781601,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730334781602,"stop":1730334782014,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730334782015,"stop":1730334833797,"duration":51782},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730334833799,"stop":1730334834657,"duration":858},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730334834658,"stop":1730334845353,"duration":10695},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730334943417,"stop":1730334943418,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730334943423,"stop":1730334943906,"duration":483},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730334943908,"stop":1730334943910,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730334943912,"stop":1730334943914,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"4a4324696166"},{"name":"thread","value":"248-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":26,"unknown":0,"total":28},"items":[{"uid":"f3a0a304bed268ad","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/f3a0a304bed268ad","status":"passed","time":{"start":1730303289274,"stop":1730303291239,"duration":1965}},{"uid":"d272436f0113c52d","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/d272436f0113c52d","status":"passed","time":{"start":1730248360648,"stop":1730248361625,"duration":977}},{"uid":"6bb207b30e4abf3b","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/6bb207b30e4abf3b","status":"passed","time":{"start":1730162069257,"stop":1730162070743,"duration":1486}},{"uid":"64ae65246be1de53","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/64ae65246be1de53","status":"passed","time":{"start":1730075720615,"stop":1730075723844,"duration":3229}},{"uid":"aca76880793ba7ac","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/aca76880793ba7ac","status":"passed","time":{"start":1729989388784,"stop":1729989391297,"duration":2513}},{"uid":"e143639733e7dd2c","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/e143639733e7dd2c","status":"passed","time":{"start":1729902803809,"stop":1729902805516,"duration":1707}},{"uid":"67dda248d0371504","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/67dda248d0371504","status":"passed","time":{"start":1729816442469,"stop":1729816446450,"duration":3981}},{"uid":"9fdffb2d3d775263","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/9fdffb2d3d775263","status":"passed","time":{"start":1729729934725,"stop":1729729935949,"duration":1224}},{"uid":"9b7c165d5534fa1c","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/9b7c165d5534fa1c","status":"passed","time":{"start":1729645334787,"stop":1729645336010,"duration":1223}},{"uid":"facb2565196d27c","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/facb2565196d27c","status":"passed","time":{"start":1729557313092,"stop":1729557316870,"duration":3778}},{"uid":"9440e402d7a19134","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/9440e402d7a19134","status":"passed","time":{"start":1729470854164,"stop":1729470855625,"duration":1461}},{"uid":"47affbda8b1660df","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/47affbda8b1660df","status":"passed","time":{"start":1729384588823,"stop":1729384593824,"duration":5001}},{"uid":"360a3bc0336acaba","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/360a3bc0336acaba","status":"passed","time":{"start":1729368450955,"stop":1729368452176,"duration":1221}},{"uid":"f80f25c671ecb559","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/f80f25c671ecb559","status":"passed","time":{"start":1729361298893,"stop":1729361300112,"duration":1219}},{"uid":"19ffe5975a6af9df","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/19ffe5975a6af9df","status":"passed","time":{"start":1729297985875,"stop":1729297987338,"duration":1463}},{"uid":"e25d523053e9edc4","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/e25d523053e9edc4","status":"passed","time":{"start":1729211572442,"stop":1729211573922,"duration":1480}},{"uid":"1243a6321694cb94","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/1243a6321694cb94","status":"passed","time":{"start":1729202651609,"stop":1729202654623,"duration":3014}},{"uid":"97aa55e32306d04d","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/97aa55e32306d04d","status":"passed","time":{"start":1729109251295,"stop":1729109253522,"duration":2227}},{"uid":"aa5dc7d50582487e","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/aa5dc7d50582487e","status":"passed","time":{"start":1729038887031,"stop":1729038888234,"duration":1203}},{"uid":"becff9aeab28441c","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/becff9aeab28441c","status":"passed","time":{"start":1729024921215,"stop":1729024922200,"duration":985}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"6119dcd2d127f461.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}