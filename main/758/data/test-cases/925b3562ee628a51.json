{"uid":"925b3562ee628a51","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1759991833116,"stop":1759991861982,"duration":28866},"status":"failed","statusMessage":"AssertionError: assert 5 == 0\n +  where 5 = int('5')","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffffa0663a10>\ndevice = <golioth.golioth.Device object at 0xffffa03fd160>\nproject = <golioth.golioth.Project object at 0xffffa04c9be0>\nreleases = {'test_blocks': Release <68e757e662fb6aa144e22bab, release_tags=[], device_tags=['68e757e462fb6aa144e22ba8'], artifact...ease_tags=[], device_tags=['68e757e462fb6aa144e22ba8'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 5 == 0\nE                    +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1759991724945,"stop":1759991724945,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1759991724946,"stop":1759991724946,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1759991724947,"stop":1759991724947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1759991724948,"stop":1759991724949,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1759991724948,"stop":1759991724948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1759991724949,"stop":1759991724949,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1759991724949,"stop":1759991724950,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1759991724950,"stop":1759991775665,"duration":50715},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1759991775667,"stop":1759991776315,"duration":648},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1759991776315,"stop":1759991777028,"duration":713},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1759991777029,"stop":1759991779924,"duration":2895},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1759991779925,"stop":1759991780411,"duration":486},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1759991780412,"stop":1759991781130,"duration":718},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1759991781130,"stop":1759991782988,"duration":1858},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1759991833113,"stop":1759991833114,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 5 == 0\n +  where 5 = int('5')","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffffa0663a10>\ndevice = <golioth.golioth.Device object at 0xffffa03fd160>\nproject = <golioth.golioth.Project object at 0xffffa04c9be0>\nreleases = {'test_blocks': Release <68e757e662fb6aa144e22bab, release_tags=[], device_tags=['68e757e462fb6aa144e22ba8'], artifact...ease_tags=[], device_tags=['68e757e462fb6aa144e22ba8'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 5 == 0\nE                    +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","steps":[],"attachments":[{"uid":"65d8985c8372c180","name":"stdout","source":"65d8985c8372c180.txt","type":"text/plain","size":111}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1759991862147,"stop":1759991862887,"duration":740},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1759991862889,"stop":1759991864582,"duration":1693},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1759991864584,"stop":1759991865279,"duration":695},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1759991865281,"stop":1759991865281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1759991865283,"stop":1759991865283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1759991865285,"stop":1759991865639,"duration":354},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1759991865642,"stop":1759991865642,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1759991865644,"stop":1759991865654,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"dans_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"a1577ae611c3"},{"name":"thread","value":"223-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":16,"unknown":0,"total":18},"items":[{"uid":"124455a4f17e2296","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/124455a4f17e2296","status":"failed","statusDetails":"AssertionError: assert 9 == 6\n +  where 9 = int('9')","time":{"start":1759969045455,"stop":1759969101689,"duration":56234}},{"uid":"fd7a823b7c74d3a7","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/fd7a823b7c74d3a7","status":"passed","time":{"start":1759882326098,"stop":1759882378354,"duration":52256}},{"uid":"31eba58c813dedf5","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/31eba58c813dedf5","status":"passed","time":{"start":1759860950346,"stop":1759861002443,"duration":52097}},{"uid":"7368e31c81648803","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/7368e31c81648803","status":"passed","time":{"start":1759848003192,"stop":1759848055946,"duration":52754}},{"uid":"2ab6336fb53a1933","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/2ab6336fb53a1933","status":"passed","time":{"start":1759796705180,"stop":1759796753424,"duration":48244}},{"uid":"ffd5c239680943d5","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/ffd5c239680943d5","status":"passed","time":{"start":1759775859399,"stop":1759775908879,"duration":49480}},{"uid":"7c791d2cafba55e6","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/7c791d2cafba55e6","status":"passed","time":{"start":1759709502906,"stop":1759709552893,"duration":49987}},{"uid":"41c6175bc4852206","reportUrl":"https://golioth.github.io/allure-reports/main/741//#testresult/41c6175bc4852206","status":"passed","time":{"start":1759623441196,"stop":1759623488758,"duration":47562}},{"uid":"c573b2bd4cbf8447","reportUrl":"https://golioth.github.io/allure-reports/main/740//#testresult/c573b2bd4cbf8447","status":"passed","time":{"start":1759536897404,"stop":1759536945287,"duration":47883}},{"uid":"c23f040b8ec4ccea","reportUrl":"https://golioth.github.io/allure-reports/main/738//#testresult/c23f040b8ec4ccea","status":"passed","time":{"start":1759450687444,"stop":1759450735264,"duration":47820}},{"uid":"9956d0cc44c447a0","reportUrl":"https://golioth.github.io/allure-reports/main/734//#testresult/9956d0cc44c447a0","status":"passed","time":{"start":1759365189309,"stop":1759365237953,"duration":48644}},{"uid":"7af9cea6c333a193","reportUrl":"https://golioth.github.io/allure-reports/main/733//#testresult/7af9cea6c333a193","status":"passed","time":{"start":1759277791528,"stop":1759277839109,"duration":47581}},{"uid":"525023b0a185723a","reportUrl":"https://golioth.github.io/allure-reports/main/730//#testresult/525023b0a185723a","status":"passed","time":{"start":1759191234759,"stop":1759191281562,"duration":46803}},{"uid":"83391417c48bbe6b","reportUrl":"https://golioth.github.io/allure-reports/main/727//#testresult/83391417c48bbe6b","status":"passed","time":{"start":1759105171395,"stop":1759105221036,"duration":49641}},{"uid":"b34d4f2310336132","reportUrl":"https://golioth.github.io/allure-reports/main/725//#testresult/b34d4f2310336132","status":"passed","time":{"start":1759018765329,"stop":1759018814577,"duration":49248}},{"uid":"6bd8b0c03afdee4c","reportUrl":"https://golioth.github.io/allure-reports/main/724//#testresult/6bd8b0c03afdee4c","status":"passed","time":{"start":1758932800415,"stop":1758932851042,"duration":50627}},{"uid":"d56d6f30ed096480","reportUrl":"https://golioth.github.io/allure-reports/main/719//#testresult/d56d6f30ed096480","status":"passed","time":{"start":1758846426589,"stop":1758846477407,"duration":50818}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","dans_orange_pi","anyio"]},"source":"925b3562ee628a51.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}