{"uid":"d3502dbb577b0b70","name":"test_int_too_small","fullName":"tests.hil.tests.settings.test_settings#test_int_too_small","historyId":"9a158ab876eb6bcacb2a056562120108","time":{"start":1729557459269,"stop":1729557471559,"duration":12290},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb242ecd0>\ndevice = <golioth.golioth.Device object at 0xffffb23ef5d0>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffb23ef5d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729557371906,"stop":1729557371907,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729557371907,"stop":1729557371908,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729557371908,"stop":1729557371908,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729557371909,"stop":1729557371909,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729557371910,"stop":1729557371910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729557371911,"stop":1729557371911,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729557371911,"stop":1729557371912,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729557371912,"stop":1729557371912,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729557371913,"stop":1729557371913,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729557371914,"stop":1729557371914,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729557371914,"stop":1729557371914,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729557371915,"stop":1729557371915,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729557371915,"stop":1729557372313,"duration":398},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729557372314,"stop":1729557423819,"duration":51505},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729557423821,"stop":1729557424804,"duration":983},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729557424805,"stop":1729557444024,"duration":19219},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffb242ecd0>\ndevice = <golioth.golioth.Device object at 0xffffb23ef5d0>\n\n    async def test_int_too_small(board, device):\n        await device.settings.set('TEST_INT', -1*(2**33))\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: -8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffb23ef5d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"5333fe900d7cbd38","name":"stdout","source":"5333fe900d7cbd38.txt","type":"text/plain","size":837}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1729557584790,"stop":1729557584791,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729557584793,"stop":1729557585174,"duration":381},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729557585176,"stop":1729557585178,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729557585180,"stop":1729557585182,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"13f41c8cc3bf"},{"name":"thread","value":"253-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":15,"unknown":0,"total":18},"items":[{"uid":"ef2e355d9d2a2772","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/ef2e355d9d2a2772","status":"passed","time":{"start":1729470976157,"stop":1729470988679,"duration":12522}},{"uid":"2543ee70d5955205","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/2543ee70d5955205","status":"passed","time":{"start":1729384739721,"stop":1729384751980,"duration":12259}},{"uid":"404d48f6aace888f","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/404d48f6aace888f","status":"passed","time":{"start":1729368574395,"stop":1729368586932,"duration":12537}},{"uid":"d3e058684197079a","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/d3e058684197079a","status":"passed","time":{"start":1729361422418,"stop":1729361434927,"duration":12509}},{"uid":"8427d0a60354023f","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/8427d0a60354023f","status":"passed","time":{"start":1729298107250,"stop":1729298119700,"duration":12450}},{"uid":"7f6008b7d99d34cd","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/7f6008b7d99d34cd","status":"passed","time":{"start":1729211696854,"stop":1729211709332,"duration":12478}},{"uid":"2d004ff675475953","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/2d004ff675475953","status":"passed","time":{"start":1729202804932,"stop":1729202817157,"duration":12225}},{"uid":"17adc405a87c622d","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/17adc405a87c622d","status":"passed","time":{"start":1729109388358,"stop":1729109401440,"duration":13082}},{"uid":"7d75f215ce715858","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/7d75f215ce715858","status":"passed","time":{"start":1729039025363,"stop":1729039038972,"duration":13609}},{"uid":"9af219b367826610","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/9af219b367826610","status":"passed","time":{"start":1729025059532,"stop":1729025073857,"duration":14325}},{"uid":"954243d779e5ba7f","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/954243d779e5ba7f","status":"passed","time":{"start":1729007152191,"stop":1729007165869,"duration":13678}},{"uid":"2a2ea3b90447fdd1","reportUrl":"https://golioth.github.io/allure-reports/main/1637//#testresult/2a2ea3b90447fdd1","status":"passed","time":{"start":1728952635002,"stop":1728952648670,"duration":13668}},{"uid":"f86b0f270a91c72f","reportUrl":"https://golioth.github.io/allure-reports/main/1636//#testresult/f86b0f270a91c72f","status":"passed","time":{"start":1728866363064,"stop":1728866376675,"duration":13611}},{"uid":"616b5df3b4ad722e","reportUrl":"https://golioth.github.io/allure-reports/main/1635//#testresult/616b5df3b4ad722e","status":"passed","time":{"start":1728779900756,"stop":1728779913796,"duration":13040}},{"uid":"c1697d831cde1a","reportUrl":"https://golioth.github.io/allure-reports/main/1634//#testresult/c1697d831cde1a","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1728693364038,"stop":1728693364038,"duration":0}},{"uid":"ac59ed4ae998e2c9","reportUrl":"https://golioth.github.io/allure-reports/main/1633//#testresult/ac59ed4ae998e2c9","status":"passed","time":{"start":1728667951962,"stop":1728667964932,"duration":12970}},{"uid":"51d9fe8238c3ba83","reportUrl":"https://golioth.github.io/allure-reports/main/1631//#testresult/51d9fe8238c3ba83","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1728662361139,"stop":1728662361139,"duration":0}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"d3502dbb577b0b70.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}