{"uid":"be687d3f59252cf7","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"7b5bd2e87b0538b1f5ac1141f1902779","time":{"start":1729557122459,"stop":1729557158853,"duration":36394},"status":"failed","statusMessage":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff88f57950>\ndevice = <golioth.golioth.Device object at 0xffff88ee0c50>\nproject = <golioth.golioth.Project object at 0xffff88f60a50>\nreleases = {'test_blocks': Release <6716f273bcef059578eced04, release_tags=[], device_tags=['6716f271bcef059578eced01'], artifact..., release_tags=[], device_tags=['6716f271bcef059578eced01'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 4 == 3\nE            +  where 4 = int('4')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729557055323,"stop":1729557055323,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729557055324,"stop":1729557055324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729557055325,"stop":1729557055325,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729557055326,"stop":1729557055327,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729557055326,"stop":1729557055326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729557055327,"stop":1729557055327,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729557055328,"stop":1729557055328,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729557055329,"stop":1729557055329,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729557055329,"stop":1729557055330,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729557055330,"stop":1729557055330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729557055331,"stop":1729557055331,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729557055331,"stop":1729557055331,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729557055332,"stop":1729557100474,"duration":45142},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729557100476,"stop":1729557101015,"duration":539},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729557101016,"stop":1729557102015,"duration":999},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729557102015,"stop":1729557104924,"duration":2909},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1729557104925,"stop":1729557105476,"duration":551},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1729557105476,"stop":1729557106447,"duration":971},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1729557106447,"stop":1729557108476,"duration":2029},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1729557122456,"stop":1729557122456,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff88f57950>\ndevice = <golioth.golioth.Device object at 0xffff88ee0c50>\nproject = <golioth.golioth.Project object at 0xffff88f60a50>\nreleases = {'test_blocks': Release <6716f273bcef059578eced04, release_tags=[], device_tags=['6716f271bcef059578eced01'], artifact..., release_tags=[], device_tags=['6716f271bcef059578eced01'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 4 == 3\nE            +  where 4 = int('4')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"87ae0b7ea55c8dbc","name":"stdout","source":"87ae0b7ea55c8dbc.txt","type":"text/plain","size":1609}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1729557159037,"stop":1729557160146,"duration":1109},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1729557160148,"stop":1729557161873,"duration":1725},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1729557161875,"stop":1729557162768,"duration":893},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1729557162770,"stop":1729557162770,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1729557162772,"stop":1729557162772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729557162774,"stop":1729557163296,"duration":522},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729557163298,"stop":1729557163298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729557163300,"stop":1729557163303,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"6a0ac7a1c7de"},{"name":"thread","value":"241-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":16,"unknown":0,"total":19},"items":[{"uid":"4d14a00c5579ad8b","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/4d14a00c5579ad8b","status":"passed","time":{"start":1729470743683,"stop":1729470821234,"duration":77551}},{"uid":"2df837b994d8b443","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/2df837b994d8b443","status":"passed","time":{"start":1729384467032,"stop":1729384549238,"duration":82206}},{"uid":"80f3197e2421b5e4","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/80f3197e2421b5e4","status":"passed","time":{"start":1729368346221,"stop":1729368423713,"duration":77492}},{"uid":"ed4afad16664f723","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/ed4afad16664f723","status":"failed","statusDetails":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})","time":{"start":1729361296790,"stop":1729361296790,"duration":0}},{"uid":"cb8ad03c3e81d844","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/cb8ad03c3e81d844","status":"passed","time":{"start":1729297868928,"stop":1729297946313,"duration":77385}},{"uid":"10f3f1441feff57","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/10f3f1441feff57","status":"passed","time":{"start":1729211472865,"stop":1729211550321,"duration":77456}},{"uid":"8013934a8209d63b","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/8013934a8209d63b","status":"passed","time":{"start":1729202544737,"stop":1729202626316,"duration":81579}},{"uid":"14b0b2a3b3182c11","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/14b0b2a3b3182c11","status":"passed","time":{"start":1729129072050,"stop":1729129149601,"duration":77551}},{"uid":"ec6b59a76b108fb4","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/ec6b59a76b108fb4","status":"passed","time":{"start":1729109264578,"stop":1729109342479,"duration":77901}},{"uid":"c79b306c7a6b06f8","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/c79b306c7a6b06f8","status":"passed","time":{"start":1729038670817,"stop":1729038748298,"duration":77481}},{"uid":"99ce57f369d81936","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/99ce57f369d81936","status":"passed","time":{"start":1729024984249,"stop":1729025061571,"duration":77322}},{"uid":"84a7880bf6225fb8","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/84a7880bf6225fb8","status":"passed","time":{"start":1729007419154,"stop":1729007496697,"duration":77543}},{"uid":"c9b098a4807324e5","reportUrl":"https://golioth.github.io/allure-reports/main/1637//#testresult/c9b098a4807324e5","status":"failed","statusDetails":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","time":{"start":1728952311195,"stop":1728952381786,"duration":70591}},{"uid":"aee554615a069bbd","reportUrl":"https://golioth.github.io/allure-reports/main/1636//#testresult/aee554615a069bbd","status":"passed","time":{"start":1728865962979,"stop":1728866040967,"duration":77988}},{"uid":"87fa5f57b02e615c","reportUrl":"https://golioth.github.io/allure-reports/main/1635//#testresult/87fa5f57b02e615c","status":"passed","time":{"start":1728779567171,"stop":1728779644601,"duration":77430}},{"uid":"f5ced4dd8a05ab65","reportUrl":"https://golioth.github.io/allure-reports/main/1634//#testresult/f5ced4dd8a05ab65","status":"passed","time":{"start":1728693019950,"stop":1728693097425,"duration":77475}},{"uid":"4eb4b5de8c190fe8","reportUrl":"https://golioth.github.io/allure-reports/main/1633//#testresult/4eb4b5de8c190fe8","status":"passed","time":{"start":1728667661546,"stop":1728667739493,"duration":77947}},{"uid":"44398a743de4a126","reportUrl":"https://golioth.github.io/allure-reports/main/1631//#testresult/44398a743de4a126","status":"passed","time":{"start":1728662025775,"stop":1728662103214,"duration":77439}}]},"tags":["esp-idf","anyio","esp32_devkitc_wrover_espidf","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"be687d3f59252cf7.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}