{"uid":"61cc524f16fa1a13","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1736471175198,"stop":1736471220285,"duration":45087},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff96a03e50>\ndevice = <golioth.golioth.Device object at 0xffff969e5d90>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1736471137760,"stop":1736471137760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736471137760,"stop":1736471137761,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736471137761,"stop":1736471137761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736471137761,"stop":1736471137762,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1736471137762,"stop":1736471137765,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1736471137762,"stop":1736471137762,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736471137765,"stop":1736471137766,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736471137766,"stop":1736471137766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736471137766,"stop":1736471138192,"duration":426},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736471138192,"stop":1736471139042,"duration":850},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1736471139043,"stop":1736471174567,"duration":35524},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1736471174568,"stop":1736471175195,"duration":627},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff96a03e50>\ndevice = <golioth.golioth.Device object at 0xffff969e5d90>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"a6676c79ad6d9b16","name":"log","source":"a6676c79ad6d9b16.txt","type":"text/plain","size":32191}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1736471220514,"stop":1736471220525,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1736471220527,"stop":1736471221323,"duration":796},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736471221325,"stop":1736471221327,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1736471221332,"stop":1736471221333,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"e65fb36cd055"},{"name":"thread","value":"580-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":13,"skipped":0,"passed":31,"unknown":0,"total":44},"items":[{"uid":"3eafc91bfdeed981","reportUrl":"https://golioth.github.io/allure-reports/main/44//#testresult/3eafc91bfdeed981","status":"passed","time":{"start":1736457945520,"stop":1736457989296,"duration":43776}},{"uid":"e00c6b46463788fd","reportUrl":"https://golioth.github.io/allure-reports/main/34//#testresult/e00c6b46463788fd","status":"passed","time":{"start":1736384248367,"stop":1736384289463,"duration":41096}},{"uid":"259e8608d043e15d","reportUrl":"https://golioth.github.io/allure-reports/main/28/#testresult/259e8608d043e15d","status":"passed","time":{"start":1736298719688,"stop":1736298759698,"duration":40010}},{"uid":"b8c74620bc078d2e","reportUrl":"https://golioth.github.io/allure-reports/main/23/#testresult/b8c74620bc078d2e","status":"passed","time":{"start":1736269994014,"stop":1736270033912,"duration":39898}},{"uid":"38bff8d05f9d43bf","reportUrl":"https://golioth.github.io/allure-reports/main/21/#testresult/38bff8d05f9d43bf","status":"passed","time":{"start":1736211875494,"stop":1736211915529,"duration":40035}},{"uid":"465a2bb990fc1664","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/465a2bb990fc1664","status":"passed","time":{"start":1736189469261,"stop":1736189509264,"duration":40003}},{"uid":"aa04e29af12a62e4","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/aa04e29af12a62e4","status":"passed","time":{"start":1736189469261,"stop":1736189509264,"duration":40003}},{"uid":"9d20e1d211f3c905","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/9d20e1d211f3c905","status":"passed","time":{"start":1736184936463,"stop":1736184976302,"duration":39839}},{"uid":"f65fa30939412066","reportUrl":"https://golioth.github.io/allure-reports/main/17/#testresult/f65fa30939412066","status":"passed","time":{"start":1736123817692,"stop":1736123857893,"duration":40201}},{"uid":"aad2e78fc233518e","reportUrl":"https://golioth.github.io/allure-reports/main/16/#testresult/aad2e78fc233518e","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1736038808176,"stop":1736038851910,"duration":43734}},{"uid":"42407fa2dc89d746","reportUrl":"https://golioth.github.io/allure-reports/main/15/#testresult/42407fa2dc89d746","status":"passed","time":{"start":1735953476947,"stop":1735953518250,"duration":41303}},{"uid":"49596e0d4f728e18","reportUrl":"https://golioth.github.io/allure-reports/main/8/#testresult/49596e0d4f728e18","status":"passed","time":{"start":1735866970095,"stop":1735867010921,"duration":40826}},{"uid":"6994ad071cdf1909","reportUrl":"https://golioth.github.io/allure-reports/main/1991/#testresult/6994ad071cdf1909","status":"passed","time":{"start":1735780135683,"stop":1735780154871,"duration":19188}},{"uid":"3e71008a69253565","reportUrl":"https://golioth.github.io/allure-reports/main/1990/#testresult/3e71008a69253565","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1735693692617,"stop":1735693713898,"duration":21281}},{"uid":"a9f49f70545d04d1","reportUrl":"https://golioth.github.io/allure-reports/main/1984/#testresult/a9f49f70545d04d1","status":"passed","time":{"start":1735658794480,"stop":1735658813253,"duration":18773}},{"uid":"11b3358631117a2","reportUrl":"https://golioth.github.io/allure-reports/main/1983/#testresult/11b3358631117a2","status":"passed","time":{"start":1735607135960,"stop":1735607155590,"duration":19630}},{"uid":"670ae3c1959d78","reportUrl":"https://golioth.github.io/allure-reports/main/1980/#testresult/670ae3c1959d78","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1735520708101,"stop":1735520729710,"duration":21609}},{"uid":"5de1ac3874d0091d","reportUrl":"https://golioth.github.io/allure-reports/main/1979/#testresult/5de1ac3874d0091d","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1735434619323,"stop":1735434642657,"duration":23334}},{"uid":"ea8a6f14465f9b07","reportUrl":"https://golioth.github.io/allure-reports/main/1978/#testresult/ea8a6f14465f9b07","status":"passed","time":{"start":1735348347549,"stop":1735348366360,"duration":18811}},{"uid":"cf967f3263f9c9ef","reportUrl":"https://golioth.github.io/allure-reports/main/1977/#testresult/cf967f3263f9c9ef","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1735261862066,"stop":1735261905725,"duration":43659}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"61cc524f16fa1a13.json","parameterValues":["'rak5010'","'zephyr'"]}