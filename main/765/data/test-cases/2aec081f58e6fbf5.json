{"uid":"2aec081f58e6fbf5","name":"test_lightdb_set","fullName":"examples.esp_idf.lightdb.set.pytest.test_sample#test_lightdb_set","historyId":"4fbe4e16432480a7cd5c1b51d7942878","time":{"start":1760228771504,"stop":1760228781711,"duration":10207},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"seconds = 5.0\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:46: in receive_some\n    return await self.serial.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1579: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffffba54f770>\ndevice = <golioth.golioth.Device object at 0xffffba488ec0>\n\n    async def test_lightdb_set(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            pattern = re.compile(fr\"Setting counter to {i}\")\n            await board.wait_for_regex_in_line(pattern, timeout_s=30.0)\n>           await board.wait_for_regex_in_line('Counter successfully set', timeout_s=5.0)\n\nexamples/esp_idf/lightdb/set/pytest/test_sample.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 5.0\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760228744527,"stop":1760228744528,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760228744528,"stop":1760228744528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760228744529,"stop":1760228744529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760228744530,"stop":1760228744530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760228744531,"stop":1760228744531,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760228744531,"stop":1760228744532,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760228744532,"stop":1760228744533,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760228744533,"stop":1760228770346,"duration":25813},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1760228744570,"stop":1760228744570,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1760228744571,"stop":1760228744572,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1760228744571,"stop":1760228744571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1760228744572,"stop":1760228744572,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1760228744573,"stop":1760228744573,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760228770348,"stop":1760228770859,"duration":511},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760228770860,"stop":1760228771500,"duration":640},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"seconds = 5.0\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:46: in receive_some\n    return await self.serial.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1579: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffffba54f770>\ndevice = <golioth.golioth.Device object at 0xffffba488ec0>\n\n    async def test_lightdb_set(board, device):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            pattern = re.compile(fr\"Setting counter to {i}\")\n            await board.wait_for_regex_in_line(pattern, timeout_s=30.0)\n>           await board.wait_for_regex_in_line('Counter successfully set', timeout_s=5.0)\n\nexamples/esp_idf/lightdb/set/pytest/test_sample.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 5.0\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","steps":[],"attachments":[{"uid":"dda0e05b04e4bfc3","name":"stdout","source":"dda0e05b04e4bfc3.txt","type":"text/plain","size":7573}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1760228782380,"stop":1760228782688,"duration":308},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760228782692,"stop":1760228782692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760228782694,"stop":1760228782705,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"22b7d5687965"},{"name":"thread","value":"260-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.lightdb.set.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":17,"unknown":0,"total":22},"items":[{"uid":"f86dcde543e4312e","reportUrl":"https://golioth.github.io/allure-reports/main/763//#testresult/f86dcde543e4312e","status":"passed","time":{"start":1760143960893,"stop":1760143982593,"duration":21700}},{"uid":"c7d4cff792e8f676","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/c7d4cff792e8f676","status":"passed","time":{"start":1760057351106,"stop":1760057376135,"duration":25029}},{"uid":"75ebb211c5316f4","reportUrl":"https://golioth.github.io/allure-reports/main/761//#testresult/75ebb211c5316f4","status":"passed","time":{"start":1760040895640,"stop":1760040920617,"duration":24977}},{"uid":"d977c769a1fe1d87","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/d977c769a1fe1d87","status":"passed","time":{"start":1759994300596,"stop":1759994322040,"duration":21444}},{"uid":"1347bbb7649a83d6","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/1347bbb7649a83d6","status":"passed","time":{"start":1759971730288,"stop":1759971752347,"duration":22059}},{"uid":"b02513645b203b85","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/b02513645b203b85","status":"passed","time":{"start":1759884002462,"stop":1759884025435,"duration":22973}},{"uid":"7ead9b13a48219e9","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/7ead9b13a48219e9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1759862418574,"stop":1759862434727,"duration":16153}},{"uid":"e5ff96dc5a467e3b","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/e5ff96dc5a467e3b","status":"passed","time":{"start":1759852522041,"stop":1759852548171,"duration":26130}},{"uid":"a611a3864b8988d1","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/a611a3864b8988d1","status":"passed","time":{"start":1759803890304,"stop":1759803912740,"duration":22436}},{"uid":"4db3414f36a4be7c","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/4db3414f36a4be7c","status":"passed","time":{"start":1759778869348,"stop":1759778891331,"duration":21983}},{"uid":"93f6f6893c0c6ee2","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/93f6f6893c0c6ee2","status":"passed","time":{"start":1759712949885,"stop":1759712971524,"duration":21639}},{"uid":"30ff476719ce8855","reportUrl":"https://golioth.github.io/allure-reports/main/741//#testresult/30ff476719ce8855","status":"passed","time":{"start":1759625294513,"stop":1759625316406,"duration":21893}},{"uid":"9816aca15d04e293","reportUrl":"https://golioth.github.io/allure-reports/main/740//#testresult/9816aca15d04e293","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1759538378281,"stop":1759538388522,"duration":10241}},{"uid":"9e73516f1ca16b92","reportUrl":"https://golioth.github.io/allure-reports/main/738//#testresult/9e73516f1ca16b92","status":"passed","time":{"start":1759451538655,"stop":1759451561403,"duration":22748}},{"uid":"bf294d41b3b51796","reportUrl":"https://golioth.github.io/allure-reports/main/734//#testresult/bf294d41b3b51796","status":"passed","time":{"start":1759366013527,"stop":1759366034417,"duration":20890}},{"uid":"70495f7f9d4ec298","reportUrl":"https://golioth.github.io/allure-reports/main/733//#testresult/70495f7f9d4ec298","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759279407247,"stop":1759279421759,"duration":14512}},{"uid":"84b73bfbc75577ac","reportUrl":"https://golioth.github.io/allure-reports/main/730//#testresult/84b73bfbc75577ac","status":"passed","time":{"start":1759193712085,"stop":1759193734646,"duration":22561}},{"uid":"8942c421c31cac6d","reportUrl":"https://golioth.github.io/allure-reports/main/727//#testresult/8942c421c31cac6d","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759109549694,"stop":1759109564309,"duration":14615}},{"uid":"654edda584525f86","reportUrl":"https://golioth.github.io/allure-reports/main/725//#testresult/654edda584525f86","status":"passed","time":{"start":1759023780623,"stop":1759023802033,"duration":21410}},{"uid":"29a2399442c4482f","reportUrl":"https://golioth.github.io/allure-reports/main/724//#testresult/29a2399442c4482f","status":"passed","time":{"start":1758936297140,"stop":1758936319847,"duration":22707}}]},"tags":["esp-idf","anyio","sams_orange_pi","esp32_devkitc_wrover_espidf"]},"source":"2aec081f58e6fbf5.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}