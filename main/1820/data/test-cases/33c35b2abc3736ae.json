{"uid":"33c35b2abc3736ae","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"62f122e1e892b6a4ca7700385fbbf6dd","time":{"start":1732235372763,"stop":1732235394512,"duration":21749},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7ff6b5d86c90>\ndevice = <golioth.golioth.Device object at 0x7ff6b5d55450>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732235371365,"stop":1732235371365,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732235371366,"stop":1732235371366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732235371366,"stop":1732235371366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732235371366,"stop":1732235371366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732235371366,"stop":1732235371366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732235371366,"stop":1732235371367,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732235371367,"stop":1732235371367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732235371367,"stop":1732235371367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732235371367,"stop":1732235371780,"duration":413},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732235371780,"stop":1732235372674,"duration":894},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732235372674,"stop":1732235372680,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732235372680,"stop":1732235372762,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7ff6b5d86c90>\ndevice = <golioth.golioth.Device object at 0x7ff6b5d55450>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"34357f0dd7a8dd03","name":"log","source":"34357f0dd7a8dd03.txt","type":"text/plain","size":16563}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732235394641,"stop":1732235395162,"duration":521},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732235395163,"stop":1732235395449,"duration":286},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732235395449,"stop":1732235395450,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732235395451,"stop":1732235395451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_32"},{"name":"tag","value":"GitHub Actions 26"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"c0e6afb3891c"},{"name":"thread","value":"43888-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"be3bdc73d4157571","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1732235371676,"stop":1732235393308,"duration":21632}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":51,"unknown":0,"total":52},"items":[{"uid":"3259fd29f01f0062","reportUrl":"https://golioth.github.io/allure-reports/main/26//#testresult/3259fd29f01f0062","status":"passed","time":{"start":1732223484354,"stop":1732223506125,"duration":21771}},{"uid":"541b23bbc43e0165","reportUrl":"https://golioth.github.io/allure-reports/main/25//#testresult/541b23bbc43e0165","status":"passed","time":{"start":1732220636430,"stop":1732220657785,"duration":21355}},{"uid":"2cab83664ec4d7f9","reportUrl":"https://golioth.github.io/allure-reports/main/26//#testresult/2cab83664ec4d7f9","status":"passed","time":{"start":1732220633597,"stop":1732220655002,"duration":21405}},{"uid":"e0930472af0a694","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/e0930472af0a694","status":"passed","time":{"start":1732207082036,"stop":1732207103512,"duration":21476}},{"uid":"be13ffe55d5455ec","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/be13ffe55d5455ec","status":"passed","time":{"start":1732160201995,"stop":1732160223633,"duration":21638}},{"uid":"eb9f35b06ebc6450","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/eb9f35b06ebc6450","status":"passed","time":{"start":1732148959506,"stop":1732148981285,"duration":21779}},{"uid":"b94a8ea4b91d4ff9","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/b94a8ea4b91d4ff9","status":"passed","time":{"start":1732136623566,"stop":1732136645290,"duration":21724}},{"uid":"711c8b498ac51ce9","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/711c8b498ac51ce9","status":"passed","time":{"start":1732062511261,"stop":1732062532926,"duration":21665}},{"uid":"6631c774c8eb802b","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/6631c774c8eb802b","status":"passed","time":{"start":1732057013515,"stop":1732057035214,"duration":21699}},{"uid":"a471c31887e67a19","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/a471c31887e67a19","status":"passed","time":{"start":1732035510646,"stop":1732035532106,"duration":21460}},{"uid":"9081204a0e1cac86","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/9081204a0e1cac86","status":"passed","time":{"start":1731976131403,"stop":1731976153043,"duration":21640}},{"uid":"41daaa5d0bc8d93b","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/41daaa5d0bc8d93b","status":"passed","time":{"start":1731962893547,"stop":1731962914941,"duration":21394}},{"uid":"fdc10c9de7dbdbb7","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/fdc10c9de7dbdbb7","status":"passed","time":{"start":1731889809927,"stop":1731889831596,"duration":21669}},{"uid":"b82fa790a87d511a","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/b82fa790a87d511a","status":"passed","time":{"start":1731803453441,"stop":1731803475144,"duration":21703}},{"uid":"a1cebac0666b5959","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/a1cebac0666b5959","status":"passed","time":{"start":1731716918633,"stop":1731716940355,"duration":21722}},{"uid":"ad060dbe4a79d9a9","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/ad060dbe4a79d9a9","status":"passed","time":{"start":1731630538138,"stop":1731630559410,"duration":21272}},{"uid":"c0f9224fabccaf65","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/c0f9224fabccaf65","status":"passed","time":{"start":1731606139564,"stop":1731606161261,"duration":21697}},{"uid":"b7fa98a716a7465","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/b7fa98a716a7465","status":"passed","time":{"start":1731563692212,"stop":1731563713588,"duration":21376}},{"uid":"5c41b0fd3adae47b","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/5c41b0fd3adae47b","status":"passed","time":{"start":1731544041380,"stop":1731544063124,"duration":21744}},{"uid":"7dd09eda49df62b5","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/7dd09eda49df62b5","status":"passed","time":{"start":1731457658602,"stop":1731457680440,"duration":21838}}]},"tags":["GitHub Actions 26","anyio","native_sim_32","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"33c35b2abc3736ae.json","parameterValues":["'native_sim_32'","'zephyr'"]}