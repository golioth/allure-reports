{"uid":"cc61742af7d8e919","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"d8989de114c223477a1d53d831d12112","time":{"start":1732235368644,"stop":1732235390196,"duration":21552},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f813cc43010>\ndevice = <golioth.golioth.Device object at 0x7f813cc13c90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"twister_harness_config","time":{"start":1732235367673,"stop":1732235367673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732235367673,"stop":1732235367673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1732235367673,"stop":1732235367673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732235367673,"stop":1732235367673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732235367673,"stop":1732235367673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732235367674,"stop":1732235367674,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732235367674,"stop":1732235367675,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732235367675,"stop":1732235367675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732235367675,"stop":1732235367952,"duration":277},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732235367952,"stop":1732235368525,"duration":573},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732235368525,"stop":1732235368534,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732235368534,"stop":1732235368643,"duration":109},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f813cc43010>\ndevice = <golioth.golioth.Device object at 0x7f813cc13c90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"99a8d9c70173ae1c","name":"log","source":"99a8d9c70173ae1c.txt","type":"text/plain","size":16570}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732235390302,"stop":1732235390818,"duration":516},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732235390818,"stop":1732235391157,"duration":339},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732235391157,"stop":1732235391158,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732235391159,"stop":1732235391159,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 36"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"6a49cd54db21"},{"name":"thread","value":"43723-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4e1134fa396fce75","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1732235367714,"stop":1732235389655,"duration":21941}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":51,"unknown":0,"total":52},"items":[{"uid":"bcfaf208a51a2d1e","reportUrl":"https://golioth.github.io/allure-reports/main/26//#testresult/bcfaf208a51a2d1e","status":"passed","time":{"start":1732223480842,"stop":1732223502197,"duration":21355}},{"uid":"1193c61139f3c9c5","reportUrl":"https://golioth.github.io/allure-reports/main/25//#testresult/1193c61139f3c9c5","status":"passed","time":{"start":1732220646350,"stop":1732220667969,"duration":21619}},{"uid":"ffa651186ab282d8","reportUrl":"https://golioth.github.io/allure-reports/main/26//#testresult/ffa651186ab282d8","status":"passed","time":{"start":1732220638251,"stop":1732220659818,"duration":21567}},{"uid":"e31786faf4027777","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/e31786faf4027777","status":"passed","time":{"start":1732207084844,"stop":1732207106461,"duration":21617}},{"uid":"7bc02e332e009b5f","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/7bc02e332e009b5f","status":"passed","time":{"start":1732160221369,"stop":1732160242759,"duration":21390}},{"uid":"73788702977b742e","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/73788702977b742e","status":"passed","time":{"start":1732148960257,"stop":1732148981644,"duration":21387}},{"uid":"ff31aecaafeb7f9e","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/ff31aecaafeb7f9e","status":"passed","time":{"start":1732136619410,"stop":1732136641124,"duration":21714}},{"uid":"ffd3831a0d31c985","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/ffd3831a0d31c985","status":"passed","time":{"start":1732062516060,"stop":1732062537749,"duration":21689}},{"uid":"d9b8c9a344b1d5b9","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/d9b8c9a344b1d5b9","status":"passed","time":{"start":1732057018077,"stop":1732057039648,"duration":21571}},{"uid":"47246cb74aca9015","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/47246cb74aca9015","status":"passed","time":{"start":1732035508351,"stop":1732035530119,"duration":21768}},{"uid":"97179a507d605b9b","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/97179a507d605b9b","status":"passed","time":{"start":1731976138553,"stop":1731976160319,"duration":21766}},{"uid":"fc8af2e11a82b296","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/fc8af2e11a82b296","status":"passed","time":{"start":1731962882862,"stop":1731962904291,"duration":21429}},{"uid":"e46f82a7ef4154f3","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/e46f82a7ef4154f3","status":"passed","time":{"start":1731889808229,"stop":1731889829650,"duration":21421}},{"uid":"4b3d9075c32f59e9","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/4b3d9075c32f59e9","status":"passed","time":{"start":1731803454043,"stop":1731803475704,"duration":21661}},{"uid":"20b7d69b08283953","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/20b7d69b08283953","status":"passed","time":{"start":1731716907738,"stop":1731716929165,"duration":21427}},{"uid":"e8c0dbd4aee2b383","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/e8c0dbd4aee2b383","status":"passed","time":{"start":1731630533607,"stop":1731630554997,"duration":21390}},{"uid":"711a9a776b7b65d4","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/711a9a776b7b65d4","status":"passed","time":{"start":1731606136532,"stop":1731606157953,"duration":21421}},{"uid":"34871167cdb00152","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/34871167cdb00152","status":"passed","time":{"start":1731563707650,"stop":1731563729306,"duration":21656}},{"uid":"8c8c45aa68b8f73","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/8c8c45aa68b8f73","status":"passed","time":{"start":1731544043452,"stop":1731544065087,"duration":21635}},{"uid":"a93be8a0f89b6c77","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/a93be8a0f89b6c77","status":"passed","time":{"start":1731457659046,"stop":1731457680633,"duration":21587}}]},"tags":["GitHub Actions 36","native_sim_64","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"cc61742af7d8e919.json","parameterValues":["'native_sim_64'","'zephyr'"]}