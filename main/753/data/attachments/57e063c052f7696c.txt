[m
[1;32muart:~$ [m[8D[J[00:00:00.499,786] [0m<inf> wifi_esp_at: Waiting for interface to come up[0m
[1;32muart:~$ [m[8D[J[00:00:02.625,793] [0m<inf> wifi_esp_at: AT version: 2.4.0.0(s-4c6eb5e - ESP32 - May 20 2022 03:12:58)[0m
[1;32muart:~$ [m[8D[J[00:00:02.628,967] [0m<inf> wifi_esp_at: SDK version: qa-test-v4.3.3-20220423[0m
[1;32muart:~$ [m[8D[J[00:00:02.635,406] [0m<inf> wifi_esp_at: Bin version: 2.4.0(WROVER-32)[0m
[1;32muart:~$ [m[8D[J[00:00:03.123,687] [0m<inf> wifi_esp_at: ESP Wi-Fi ready[0m
[1;32muart:~$ [m[8D[J[00:00:03.132,049] [0m<inf> fs_nvs: 8 Sectors of 4096 bytes[0m
[1;32muart:~$ [m[8D[J[00:00:03.132,080] [0m<inf> fs_nvs: alloc wra: 0, fe8[0m
[1;32muart:~$ [m[8D[J[00:00:03.132,080] [0m<inf> fs_nvs: data wra: 0, 0[0m
[1;32muart:~$ [m[8D[J*** Booting Zephyr OS build 413b789deb39 ***
[1;32muart:~$ [m[8D[J*** Golioth Firmware SDK aff82a85373e ***
[1;32muart:~$ [m[8D[J[00:00:03.132,385] [0m<inf> golioth_settings_autoload: Initializing settings subsystem[0m
[1;32muart:~$ [m[8D[J[00:00:03.132,385] [0m<inf> golioth_settings_autoload: Loading settings[0m
[1;32muart:~$ [m[8D[J[00:00:03.132,751] [0m<inf> golioth_samples: Bringing up network interface[0m
[1;32muart:~$ [m[8D[J[00:00:03.132,751] [0m<inf> golioth_samples: Waiting to obtain IP address[0m
[1;32muart:~$ [m[8D[J[00:00:03.132,812] [0m<inf> golioth_wifi: Connecting to stored WiFi network[0m
[1;32muart:~$ [m[8D[J[1;32muart:~$ [m
[1::add-mask::generated-FpGLJjrhqzXgTUTo
;32muart:~$ [m
[1;32muart:~$ [mwifi cred add -k 1 -s "***DANS_ORANGE_PI_WIFI_SSID***" -p "***DANS_ORANGE_PI_WIFI_PSK***"
[1;32muart:~$ [m
[1;32muart:~$ [m
[1;32muart:~$ [mwifi cred auto_connect
[1;32muart:~$ [m[8D[J[00:00:06.162,017] [0m<inf> net_wifi_mgmt: Connection requested[0m
[1;32muart:~$ [m[8D[J[1;32muart:~$ [m
[1;32muart:~$ [m
[1;32muart:~$ [msettings set golioth/psk-id "generated-FpGLJjrhqzXgTUTo@firmware_ci"
Setting golioth/psk-id to generated-FpGLJjrhqzXgTUTo@firmware_ci
Setting golioth/psk-id saved as generated-FpGLJjrhqzXgTUTo@firmware_ci
[1;32muart:~$ [m
[1;32muart:~$ [m
[1;32muart:~$ [msettings set golioth/psk "generated-FpGLJjrhqzXgTUTo"
Setting golioth/psk to generated-FpGLJjrhqzXgTUTo
Setting golioth/psk saved as generated-FpGLJjrhqzXgTUTo
[1;32muart:~$ [m[8D[JConnected
[1;32muart:~$ [m[8D[J[1;32muart:~$ [m[8D[J[00:00:12.857,940] [0m<inf> golioth_mbox: Mbox created, bufsize: 1320, num_items: 10, item_size: 120[0m
[1;32muart:~$ [m[8D[J[00:00:13.770,111] [0m<inf> golioth_coap_client_zephyr: Golioth CoAP client connected[0m
[1;32muart:~$ [m[8D[J[00:00:13.770,263] [0m<inf> golioth_coap_client_zephyr: Entering CoAP I/O loop[0m
[1;32muart:~$ [m[8D[J[1;32muart:~$ [m[8D[J[00:00:15.013,366] [0m<inf> test_ota: Manifest received[0m
[1;32muart:~$ [m[8D[J[00:00:15.013,458] [0m<inf> test_ota: Manifest successfully decoded[0m
[1;32muart:~$ [m[8D[J[00:00:15.013,458] [0m<inf> test_ota: Manifest doesn't have main or walrus components, skipping this one.[0m
[1;32muart:~$ [m[8D[J[1;32muart:~$ [m[8D[J[00:00:16.116,027] [0m<inf> test_ota: Manifest received[0m
[1;32muart:~$ [m[8D[J[00:00:16.116,088] [0m<inf> test_ota: Manifest successfully decoded[0m
[1;32muart:~$ [m[8D[J[00:00:16.116,119] [0m<inf> test_ota: Manifest doesn't have main or walrus components, skipping this one.[0m
[1;32muart:~$ [m[8D[J[1;32muart:~$ [m[8D[J[00:00:17.264,068] [0m<inf> test_ota: Manifest received[0m
[1;32muart:~$ [m[8D[J[00:00:17.264,129] [0m<inf> test_ota: Manifest successfully decoded[0m
[1;32muart:~$ [m[8D[J[00:00:17.264,160] [0m<inf> test_ota: Manifest doesn't have main or walrus components, skipping this one.[0m
[1;32muart:~$ [m[8D[J[00:00:17.268,280] [0m<inf> test_ota: Manifest received[0m
[1;32muart:~$ [m[8D[J[00:00:17.268,341] [0m<inf> test_ota: Manifest successfully decoded[0m
[1;32muart:~$ [m[8D[J[00:00:17.268,341] [0m<inf> test_ota: Manifest doesn't have main or walrus components, skipping this one.[0m
[1;32muart:~$ [m[8D[J[00:00:17.269,073] [0m<inf> test_ota: Manifest received[0m
[1;32muart:~$ [m[8D[J[00:00:17.269,134] [0m<inf> test_ota: Manifest successfully decoded[0m
[1;32muart:~$ [m[8D[J[00:00:17.269,165] [0m<inf> test_ota: Manifest doesn't have main or walrus components, skipping this one.[0m
[1;32muart:~$ [m[8D[J[00:00:18.303,802] [0m<inf> test_ota: Manifest received[0m
[1;32muart:~$ [m[8D[J[00:00:18.304,016] [0m<inf> test_ota: Manifest successfully decoded[0m
[1;32muart:~$ [m[8D[J[00:00:18.304,046] [0m<inf> test_ota: Found main component[0m
[1;32muart:~$ [m[8D[J[00:00:18.304,046] [0m<inf> test_ota: No absent component found[0m
[1;32muart:~$ [m[8D[J[00:00:18.304,595] [0m<inf> test_ota: component.package: main[0m
[1;32muart:~$ [m[8D[J[00:00:18.304,626] [0m<inf> test_ota: component.version: 1.2.2[0m
[1;32muart:~$ [m[8D[J[00:00:18.304,656] [0m<inf> test_ota: component.size: 16147[0m
[1;32muart:~$ [m[8D[J[00:00:18.304,687] [0m<inf> test_ota: component.hash: 62c035ff42d6c61ad9d1caf9ee3425dae3ef360eb9d145061d3f76092e266018[0m
[1;32muart:~$ [m[8D[J[00:00:18.304,718] [0m<inf> test_ota: component.uri: /.u/c/main@1.2.2[0m
[1;32muart:~$ [m[8D[J[00:00:18.304,748] [0m<inf> test_ota: component.bootloader: default[