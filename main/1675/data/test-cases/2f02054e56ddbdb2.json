{"uid":"2f02054e56ddbdb2","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"cb1422e4370021e6294c8318ca9786ac","time":{"start":1729212249843,"stop":1729212277224,"duration":27381},"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffbb0a75d0>\ndevice = <golioth.golioth.Device object at 0xffffbb01f150>\nproject = <golioth.golioth.Project object at 0xffffbb1cb890>\nreleases = {'test_blocks': Release <6711af5398856a8e1a64b2b9, release_tags=[], device_tags=['6711af5198856a8e1a64b2b6'], artifact..., release_tags=[], device_tags=['6711af5198856a8e1a64b2b6'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729212197195,"stop":1729212197195,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729212197196,"stop":1729212197196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729212197197,"stop":1729212197197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729212197197,"stop":1729212197198,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729212197198,"stop":1729212197198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729212197199,"stop":1729212197199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729212197199,"stop":1729212197199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729212197199,"stop":1729212197200,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729212197200,"stop":1729212197200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729212197201,"stop":1729212197201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729212197201,"stop":1729212197201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729212197202,"stop":1729212197202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729212197203,"stop":1729212234583,"duration":37380},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729212234585,"stop":1729212235273,"duration":688},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729212235273,"stop":1729212236099,"duration":826},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729212236100,"stop":1729212240614,"duration":4514},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1729212240615,"stop":1729212241071,"duration":456},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1729212241072,"stop":1729212241873,"duration":801},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1729212241874,"stop":1729212243470,"duration":1596},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1729212249840,"stop":1729212249841,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffbb0a75d0>\ndevice = <golioth.golioth.Device object at 0xffffbb01f150>\nproject = <golioth.golioth.Project object at 0xffffbb1cb890>\nreleases = {'test_blocks': Release <6711af5398856a8e1a64b2b9, release_tags=[], device_tags=['6711af5198856a8e1a64b2b6'], artifact..., release_tags=[], device_tags=['6711af5198856a8e1a64b2b6'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"4d0f655454ad2a83","name":"stdout","source":"4d0f655454ad2a83.txt","type":"text/plain","size":1821}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1729212277401,"stop":1729212278362,"duration":961},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1729212278364,"stop":1729212279799,"duration":1435},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1729212279801,"stop":1729212280623,"duration":822},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1729212280625,"stop":1729212280626,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1729212280627,"stop":1729212280627,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729212280629,"stop":1729212281087,"duration":458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729212281089,"stop":1729212281090,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729212281091,"stop":1729212281094,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"eaf32a9d5dbf"},{"name":"thread","value":"242-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":3,"skipped":0,"passed":9,"unknown":0,"total":13},"items":[{"uid":"c81e4729b5e207cd","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/c81e4729b5e207cd","status":"passed","time":{"start":1729203336747,"stop":1729203415287,"duration":78540}},{"uid":"52c47591d00019e0","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/52c47591d00019e0","status":"passed","time":{"start":1729129936631,"stop":1729130013921,"duration":77290}},{"uid":"6af5138d2223aaa1","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/6af5138d2223aaa1","status":"passed","time":{"start":1729110032945,"stop":1729110111648,"duration":78703}},{"uid":"17c984bdddd7a233","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/17c984bdddd7a233","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729039714869,"stop":1729039714869,"duration":0}},{"uid":"e1d31fd23d756a1f","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/e1d31fd23d756a1f","status":"passed","time":{"start":1729025758595,"stop":1729025835748,"duration":77153}},{"uid":"a20927462a425617","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/a20927462a425617","status":"passed","time":{"start":1729008208935,"stop":1729008286546,"duration":77611}},{"uid":"4427a7ab24169f51","reportUrl":"https://golioth.github.io/allure-reports/main/1637//#testresult/4427a7ab24169f51","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728953156446,"stop":1728953156446,"duration":0}},{"uid":"4b055e41e6de413","reportUrl":"https://golioth.github.io/allure-reports/main/1636//#testresult/4b055e41e6de413","status":"passed","time":{"start":1728866825550,"stop":1728866903030,"duration":77480}},{"uid":"1865c4944d21a4ef","reportUrl":"https://golioth.github.io/allure-reports/main/1635//#testresult/1865c4944d21a4ef","status":"passed","time":{"start":1728780444860,"stop":1728780522171,"duration":77311}},{"uid":"4e0ecebae19e1ba1","reportUrl":"https://golioth.github.io/allure-reports/main/1634//#testresult/4e0ecebae19e1ba1","status":"passed","time":{"start":1728693825652,"stop":1728693902816,"duration":77164}},{"uid":"1888d3de3938fe6","reportUrl":"https://golioth.github.io/allure-reports/main/1633//#testresult/1888d3de3938fe6","status":"passed","time":{"start":1728668486332,"stop":1728668563669,"duration":77337}},{"uid":"dcfe7fcb0052d3e6","reportUrl":"https://golioth.github.io/allure-reports/main/1631//#testresult/dcfe7fcb0052d3e6","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728662816591,"stop":1728662816591,"duration":0}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"2f02054e56ddbdb2.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}