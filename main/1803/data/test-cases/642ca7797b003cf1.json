{"uid":"642ca7797b003cf1","name":"test_observation_repeat_restart","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_repeat_restart","historyId":"c96172a93787f73c6d68c1d665ffe297","time":{"start":1732151670527,"stop":1732151675859,"duration":5332},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa7b8b790>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa7b4ff50>\ndevice = <golioth.golioth.Device object at 0xffffa7b8b890>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n>           rsp = await device.rpc.disconnect()\n\ntests/hil/tests/rpc/test_rpc.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa7b8b790>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732151533840,"stop":1732151533840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732151533841,"stop":1732151533841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732151533842,"stop":1732151533842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732151533842,"stop":1732151533842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732151533843,"stop":1732151533843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732151533843,"stop":1732151533843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732151533844,"stop":1732151533844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732151533844,"stop":1732151533844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732151533845,"stop":1732151533845,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732151533845,"stop":1732151533845,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732151533846,"stop":1732151533846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732151533847,"stop":1732151533847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732151533848,"stop":1732151534290,"duration":442},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732151534291,"stop":1732151548993,"duration":14702},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732151548995,"stop":1732151550159,"duration":1164},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732151550159,"stop":1732151647607,"duration":97448},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732151683221,"stop":1732151683221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732151683224,"stop":1732151683612,"duration":388},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732151683615,"stop":1732151683616,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732151683618,"stop":1732151683621,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"52624d3b2e5a"},{"name":"thread","value":"286-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":48,"unknown":0,"total":57},"items":[{"uid":"4e33c31aac48bfea","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/4e33c31aac48bfea","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732138466888,"stop":1732138466888,"duration":0}},{"uid":"32a5f55b7ef9f707","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/32a5f55b7ef9f707","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732064291312,"stop":1732064291312,"duration":0}},{"uid":"71128818124f5201","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/71128818124f5201","status":"passed","time":{"start":1732059007733,"stop":1732059037005,"duration":29272}},{"uid":"8490b91fd889a80e","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/8490b91fd889a80e","status":"passed","time":{"start":1732037209337,"stop":1732037238238,"duration":28901}},{"uid":"620540db4e1dfdf9","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/620540db4e1dfdf9","status":"passed","time":{"start":1731977924943,"stop":1731977954087,"duration":29144}},{"uid":"b5ede1fd64c9ebab","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/b5ede1fd64c9ebab","status":"passed","time":{"start":1731967198824,"stop":1731967325133,"duration":126309}},{"uid":"d2f8f72da5acda72","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/d2f8f72da5acda72","status":"passed","time":{"start":1731891634954,"stop":1731891664120,"duration":29166}},{"uid":"ef00cf2d7bdd9189","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/ef00cf2d7bdd9189","status":"passed","time":{"start":1731805260610,"stop":1731805290574,"duration":29964}},{"uid":"3946285490a10bfe","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/3946285490a10bfe","status":"passed","time":{"start":1731718874853,"stop":1731718906643,"duration":31790}},{"uid":"1d05e70bb384b77f","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/1d05e70bb384b77f","status":"passed","time":{"start":1731632347197,"stop":1731632379535,"duration":32338}},{"uid":"4419e30715490240","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/4419e30715490240","status":"passed","time":{"start":1731608011652,"stop":1731608043035,"duration":31383}},{"uid":"2ebb9e21093ed18e","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/2ebb9e21093ed18e","status":"passed","time":{"start":1731566105683,"stop":1731566137523,"duration":31840}},{"uid":"718973d6af6faf41","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/718973d6af6faf41","status":"passed","time":{"start":1731545629329,"stop":1731545661782,"duration":32453}},{"uid":"67d22e5d5b57dd23","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/67d22e5d5b57dd23","status":"passed","time":{"start":1731458841654,"stop":1731458871446,"duration":29792}},{"uid":"1ffeeb50291f86e8","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/1ffeeb50291f86e8","status":"passed","time":{"start":1731373206955,"stop":1731373238479,"duration":31524}},{"uid":"c105930b90c3f68c","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/c105930b90c3f68c","status":"passed","time":{"start":1731286108086,"stop":1731286136884,"duration":28798}},{"uid":"dc85a41b7bdb9eb0","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/dc85a41b7bdb9eb0","status":"passed","time":{"start":1731200289349,"stop":1731200322005,"duration":32656}},{"uid":"2952df34f536363f","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/2952df34f536363f","status":"passed","time":{"start":1731113797000,"stop":1731113827862,"duration":30862}},{"uid":"a4f31cc1ea208110","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/a4f31cc1ea208110","status":"passed","time":{"start":1731027510885,"stop":1731027539468,"duration":28583}},{"uid":"9f84f5b55e3a72a7","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/9f84f5b55e3a72a7","status":"passed","time":{"start":1730941130490,"stop":1730941162095,"duration":31605}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"642ca7797b003cf1.json","parameterValues":["'nrf9160dk'","'zephyr'"]}