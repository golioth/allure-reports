{"uid":"4d66c88d7929fbce","name":"test_invalid_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_invalid_arg","historyId":"1e64207d35b1c5ea3ab8f98998a06ab5","time":{"start":1732151663929,"stop":1732151669434,"duration":5505},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa7b8b790>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa7b4ff50>\ndevice = <golioth.golioth.Device object at 0xffffa7b8b890>\n\n    async def test_invalid_arg(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           rsp = await device.rpc.basic_return_type(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa7b8b790>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732151533840,"stop":1732151533840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732151533841,"stop":1732151533841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732151533842,"stop":1732151533842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732151533842,"stop":1732151533842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732151533843,"stop":1732151533843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732151533843,"stop":1732151533843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732151533844,"stop":1732151533844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732151533844,"stop":1732151533844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732151533845,"stop":1732151533845,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732151533845,"stop":1732151533845,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732151533846,"stop":1732151533846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732151533847,"stop":1732151533847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732151533848,"stop":1732151534290,"duration":442},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732151534291,"stop":1732151548993,"duration":14702},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732151548995,"stop":1732151550159,"duration":1164},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732151550159,"stop":1732151647607,"duration":97448},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732151683221,"stop":1732151683221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732151683224,"stop":1732151683612,"duration":388},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732151683615,"stop":1732151683616,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732151683618,"stop":1732151683621,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"52624d3b2e5a"},{"name":"thread","value":"286-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":48,"unknown":0,"total":57},"items":[{"uid":"65fb70ae48324267","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/65fb70ae48324267","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732138466573,"stop":1732138466573,"duration":0}},{"uid":"687b986151f9e9ce","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/687b986151f9e9ce","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732064290998,"stop":1732064290998,"duration":0}},{"uid":"f73915397341caa4","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/f73915397341caa4","status":"passed","time":{"start":1732059005488,"stop":1732059007707,"duration":2219}},{"uid":"14fb3bb4ab7d8e76","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/14fb3bb4ab7d8e76","status":"passed","time":{"start":1732037207880,"stop":1732037209326,"duration":1446}},{"uid":"7223913fa4da5866","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/7223913fa4da5866","status":"passed","time":{"start":1731977923028,"stop":1731977924933,"duration":1905}},{"uid":"3af8096ceca9e36a","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/3af8096ceca9e36a","status":"passed","time":{"start":1731967197144,"stop":1731967198814,"duration":1670}},{"uid":"3166bb1185dfeae4","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/3166bb1185dfeae4","status":"passed","time":{"start":1731891633393,"stop":1731891634944,"duration":1551}},{"uid":"364b286e763dbdd4","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/364b286e763dbdd4","status":"passed","time":{"start":1731805258148,"stop":1731805260584,"duration":2436}},{"uid":"af9bd48ec484cde3","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/af9bd48ec484cde3","status":"passed","time":{"start":1731718873297,"stop":1731718874843,"duration":1546}},{"uid":"2925c9152af0104a","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/2925c9152af0104a","status":"passed","time":{"start":1731632344481,"stop":1731632347172,"duration":2691}},{"uid":"7b83ccf377a787a8","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/7b83ccf377a787a8","status":"passed","time":{"start":1731608009190,"stop":1731608011626,"duration":2436}},{"uid":"81c1506b75aecc6e","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/81c1506b75aecc6e","status":"passed","time":{"start":1731566101220,"stop":1731566105657,"duration":4437}},{"uid":"d784ff418971cd82","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/d784ff418971cd82","status":"passed","time":{"start":1731545627667,"stop":1731545629319,"duration":1652}},{"uid":"b27ea270f5763da8","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/b27ea270f5763da8","status":"passed","time":{"start":1731458839618,"stop":1731458841628,"duration":2010}},{"uid":"d7c15a7e3ff42b99","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/d7c15a7e3ff42b99","status":"passed","time":{"start":1731373205880,"stop":1731373206945,"duration":1065}},{"uid":"95b7d1b536cd198d","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/95b7d1b536cd198d","status":"passed","time":{"start":1731286106046,"stop":1731286108076,"duration":2030}},{"uid":"397a1656ac3167fd","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/397a1656ac3167fd","status":"passed","time":{"start":1731200286907,"stop":1731200289323,"duration":2416}},{"uid":"403ed3c093ac8c23","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/403ed3c093ac8c23","status":"passed","time":{"start":1731113795273,"stop":1731113796990,"duration":1717}},{"uid":"6251f082759c0752","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/6251f082759c0752","status":"passed","time":{"start":1731027509512,"stop":1731027510875,"duration":1363}},{"uid":"b16b190c2b94cd6a","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/b16b190c2b94cd6a","status":"passed","time":{"start":1730941127752,"stop":1730941130464,"duration":2712}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"4d66c88d7929fbce.json","parameterValues":["'nrf9160dk'","'zephyr'"]}