{"uid":"a83a304cd6d45c81","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"7b5bd2e87b0538b1f5ac1141f1902779","time":{"start":1732150072110,"stop":1732150101729,"duration":29619},"status":"failed","statusMessage":"AssertionError: assert 6 == 0\n +  where 6 = int('6')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff89ca5f10>\ndevice = <golioth.golioth.Device object at 0xffff89c33c90>\nproject = <golioth.golioth.Project object at 0xffff89c270d0>\nreleases = {'test_blocks': Release <673e832fbb6157cf6cdf33cb, release_tags=[], device_tags=['673e832dbb6157cf6cdf33c8'], artifact..., release_tags=[], device_tags=['673e832dbb6157cf6cdf33c8'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 6 == 0\nE                    +  where 6 = int('6')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732150013478,"stop":1732150013479,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732150013480,"stop":1732150013481,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732150013480,"stop":1732150013480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732150013481,"stop":1732150013481,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732150013482,"stop":1732150013482,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732150013483,"stop":1732150013483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732150013484,"stop":1732150013484,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732150013484,"stop":1732150013484,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732150013485,"stop":1732150013485,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732150013486,"stop":1732150013486,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732150013486,"stop":1732150013486,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732150013487,"stop":1732150056452,"duration":42965},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732150013487,"stop":1732150013487,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732150056454,"stop":1732150057178,"duration":724},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732150057178,"stop":1732150058002,"duration":824},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732150058003,"stop":1732150060453,"duration":2450},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1732150060454,"stop":1732150061160,"duration":706},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1732150061161,"stop":1732150061988,"duration":827},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1732150061989,"stop":1732150063567,"duration":1578},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1732150072106,"stop":1732150072107,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 6 == 0\n +  where 6 = int('6')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff89ca5f10>\ndevice = <golioth.golioth.Device object at 0xffff89c33c90>\nproject = <golioth.golioth.Project object at 0xffff89c270d0>\nreleases = {'test_blocks': Release <673e832fbb6157cf6cdf33cb, release_tags=[], device_tags=['673e832dbb6157cf6cdf33c8'], artifact..., release_tags=[], device_tags=['673e832dbb6157cf6cdf33c8'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 6 == 0\nE                    +  where 6 = int('6')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","steps":[],"attachments":[{"uid":"c4064ac781ec1179","name":"stdout","source":"c4064ac781ec1179.txt","type":"text/plain","size":85}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1732150101886,"stop":1732150102699,"duration":813},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1732150102701,"stop":1732150104343,"duration":1642},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1732150104345,"stop":1732150105130,"duration":785},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1732150105132,"stop":1732150105132,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1732150105134,"stop":1732150105134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732150105136,"stop":1732150105553,"duration":417},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732150105556,"stop":1732150105556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732150105558,"stop":1732150105561,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"2f533e42cf59"},{"name":"thread","value":"243-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":52,"unknown":0,"total":57},"items":[{"uid":"5d7322cd156dfbf3","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/5d7322cd156dfbf3","status":"passed","time":{"start":1732136859687,"stop":1732136907981,"duration":48294}},{"uid":"ca904417d6ad4a2","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/ca904417d6ad4a2","status":"passed","time":{"start":1732062760024,"stop":1732062807337,"duration":47313}},{"uid":"9f97ba5740be72a2","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/9f97ba5740be72a2","status":"passed","time":{"start":1732057255919,"stop":1732057303283,"duration":47364}},{"uid":"59654fd81764b","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/59654fd81764b","status":"passed","time":{"start":1732035750811,"stop":1732035798864,"duration":48053}},{"uid":"5dd767732db4d2e6","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/5dd767732db4d2e6","status":"passed","time":{"start":1731976391362,"stop":1731976439581,"duration":48219}},{"uid":"d3febd87d8ccc521","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/d3febd87d8ccc521","status":"passed","time":{"start":1731965439103,"stop":1731965488604,"duration":49501}},{"uid":"49d3c863d54a7748","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/49d3c863d54a7748","status":"passed","time":{"start":1731890068272,"stop":1731890147192,"duration":78920}},{"uid":"52045b54f4622e62","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/52045b54f4622e62","status":"passed","time":{"start":1731803710071,"stop":1731803787452,"duration":77381}},{"uid":"17d6889230d3b694","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/17d6889230d3b694","status":"passed","time":{"start":1731717137717,"stop":1731717215290,"duration":77573}},{"uid":"8f4a051b9d635dff","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/8f4a051b9d635dff","status":"passed","time":{"start":1731630777634,"stop":1731630856501,"duration":78867}},{"uid":"b48784a938c5fc3d","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/b48784a938c5fc3d","status":"passed","time":{"start":1731606388467,"stop":1731606466906,"duration":78439}},{"uid":"1c58cf6e64fdf5bd","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/1c58cf6e64fdf5bd","status":"passed","time":{"start":1731564676784,"stop":1731564754275,"duration":77491}},{"uid":"34c39c3f2322c094","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/34c39c3f2322c094","status":"passed","time":{"start":1731544228432,"stop":1731544306663,"duration":78231}},{"uid":"5a94c6934f7c51c4","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/5a94c6934f7c51c4","status":"passed","time":{"start":1731457922174,"stop":1731458002411,"duration":80237}},{"uid":"5ab79989d965aa67","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/5ab79989d965aa67","status":"passed","time":{"start":1731371415652,"stop":1731371493244,"duration":77592}},{"uid":"211c47683ddfc269","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/211c47683ddfc269","status":"passed","time":{"start":1731285164170,"stop":1731285241483,"duration":77313}},{"uid":"6f0973d81e4812f5","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/6f0973d81e4812f5","status":"passed","time":{"start":1731198784850,"stop":1731198862339,"duration":77489}},{"uid":"5708cb64a127e939","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/5708cb64a127e939","status":"passed","time":{"start":1731112222441,"stop":1731112300197,"duration":77756}},{"uid":"c359aa3a484a00ce","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/c359aa3a484a00ce","status":"passed","time":{"start":1731025879306,"stop":1731025957820,"duration":78514}},{"uid":"267dc5cbba11128","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/267dc5cbba11128","status":"passed","time":{"start":1730939476475,"stop":1730939554446,"duration":77971}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"a83a304cd6d45c81.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}