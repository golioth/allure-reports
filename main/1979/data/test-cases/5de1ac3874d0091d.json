{
  "uid" : "5de1ac3874d0091d",
  "name" : "test_rpc",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc",
  "historyId" : "b3d5b97364e6f035c71c0a09d7a1be64",
  "time" : {
    "start" : 1735434619323,
    "stop" : 1735434642657,
    "duration" : 23334
  },
  "status" : "broken",
  "statusMessage" : "AttributeError: 'RPCTimeout' object has no attribute 'status_code'",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff7f0865d0>\ndevice = <golioth.golioth.Device object at 0xffff7f085c50>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "shell",
    "time" : {
      "start" : 1735434618682,
      "stop" : 1735434619320,
      "duration" : 638
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1735434579615,
      "stop" : 1735434580396,
      "duration" : 781
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1735434579608,
      "stop" : 1735434579608,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1735434579614,
      "stop" : 1735434579614,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1735434579610,
      "stop" : 1735434579610,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1735434581260,
      "stop" : 1735434618681,
      "duration" : 37421
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1735434579609,
      "stop" : 1735434579609,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1735434579610,
      "stop" : 1735434579610,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1735434580396,
      "stop" : 1735434581259,
      "duration" : 863
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1735434579611,
      "stop" : 1735434579613,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1735434579614,
      "stop" : 1735434579614,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1735434579609,
      "stop" : 1735434579609,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "AttributeError: 'RPCTimeout' object has no attribute 'status_code'",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff7f0865d0>\ndevice = <golioth.golioth.Device object at 0xffff7f085c50>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "8b5b7a3b6b635e54",
      "name" : "log",
      "source" : "8b5b7a3b6b635e54.txt",
      "type" : "text/plain",
      "size" : 33233
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "project::0",
    "time" : {
      "start" : 1735434643522,
      "stop" : 1735434643525,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1735434642944,
      "stop" : 1735434642986,
      "duration" : 42
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1735434642988,
      "stop" : 1735434643520,
      "duration" : 532
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1735434643530,
      "stop" : 1735434643530,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "rak5010"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.rak5010"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "e86d33e3f465"
  }, {
    "name" : "thread",
    "value" : "340-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'rak5010'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 9,
        "skipped" : 0,
        "passed" : 17,
        "unknown" : 0,
        "total" : 26
      },
      "items" : [ {
        "uid" : "ea8a6f14465f9b07",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1978/#testresult/ea8a6f14465f9b07",
        "status" : "passed",
        "time" : {
          "start" : 1735348347549,
          "stop" : 1735348366360,
          "duration" : 18811
        }
      }, {
        "uid" : "cf967f3263f9c9ef",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1977/#testresult/cf967f3263f9c9ef",
        "status" : "broken",
        "statusDetails" : "golioth.golioth.RPCTimeout: RPC timeout",
        "time" : {
          "start" : 1735261862066,
          "stop" : 1735261905725,
          "duration" : 43659
        }
      }, {
        "uid" : "178a13fbcda8bb9c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1976/#testresult/178a13fbcda8bb9c",
        "status" : "passed",
        "time" : {
          "start" : 1735175143703,
          "stop" : 1735175163046,
          "duration" : 19343
        }
      }, {
        "uid" : "65141f0a21c10c69",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1975/#testresult/65141f0a21c10c69",
        "status" : "passed",
        "time" : {
          "start" : 1735088442203,
          "stop" : 1735088461341,
          "duration" : 19138
        }
      }, {
        "uid" : "846e7e3f488f7531",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1974/#testresult/846e7e3f488f7531",
        "status" : "passed",
        "time" : {
          "start" : 1735002457258,
          "stop" : 1735002497236,
          "duration" : 39978
        }
      }, {
        "uid" : "61b2e20466b15eb0",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1973/#testresult/61b2e20466b15eb0",
        "status" : "passed",
        "time" : {
          "start" : 1734915556874,
          "stop" : 1734915576059,
          "duration" : 19185
        }
      }, {
        "uid" : "d501ec3cc0d28ee6",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1972/#testresult/d501ec3cc0d28ee6",
        "status" : "passed",
        "time" : {
          "start" : 1734829407622,
          "stop" : 1734829427224,
          "duration" : 19602
        }
      }, {
        "uid" : "6903e6e669d8e903",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1969/#testresult/6903e6e669d8e903",
        "status" : "broken",
        "statusDetails" : "golioth.golioth.RPCTimeout: RPC timeout",
        "time" : {
          "start" : 1734742659319,
          "stop" : 1734742680346,
          "duration" : 21027
        }
      }, {
        "uid" : "45f25eb52c21dd21",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1965/#testresult/45f25eb52c21dd21",
        "status" : "passed",
        "time" : {
          "start" : 1734657024961,
          "stop" : 1734657045056,
          "duration" : 20095
        }
      }, {
        "uid" : "1f227f60379653a6",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1957/#testresult/1f227f60379653a6",
        "status" : "passed",
        "time" : {
          "start" : 1734570619124,
          "stop" : 1734570639191,
          "duration" : 20067
        }
      }, {
        "uid" : "e6674d82eb52f198",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1950/#testresult/e6674d82eb52f198",
        "status" : "passed",
        "time" : {
          "start" : 1734483664128,
          "stop" : 1734483694295,
          "duration" : 30167
        }
      }, {
        "uid" : "799e81d0d54a4fdf",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1949/#testresult/799e81d0d54a4fdf",
        "status" : "passed",
        "time" : {
          "start" : 1734469960574,
          "stop" : 1734469980725,
          "duration" : 20151
        }
      }, {
        "uid" : "a50d3ac0c3ddc609",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1946/#testresult/a50d3ac0c3ddc609",
        "status" : "passed",
        "time" : {
          "start" : 1734446849583,
          "stop" : 1734446868821,
          "duration" : 19238
        }
      }, {
        "uid" : "dc493c01ec66d874",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1944/#testresult/dc493c01ec66d874",
        "status" : "broken",
        "statusDetails" : "golioth.golioth.RPCTimeout: RPC timeout",
        "time" : {
          "start" : 1734397170132,
          "stop" : 1734397193332,
          "duration" : 23200
        }
      }, {
        "uid" : "a989d9c6496b87b9",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1935/#testresult/a989d9c6496b87b9",
        "status" : "passed",
        "time" : {
          "start" : 1734310851982,
          "stop" : 1734310871488,
          "duration" : 19506
        }
      }, {
        "uid" : "c9c989c3a9b955d3",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1934/#testresult/c9c989c3a9b955d3",
        "status" : "passed",
        "time" : {
          "start" : 1734224589209,
          "stop" : 1734224611020,
          "duration" : 21811
        }
      }, {
        "uid" : "c49e3e63f30764c7",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1933/#testresult/c49e3e63f30764c7",
        "status" : "passed",
        "time" : {
          "start" : 1734137988724,
          "stop" : 1734138007610,
          "duration" : 18886
        }
      }, {
        "uid" : "d5a8d4d413d1e4c1",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1930/#testresult/d5a8d4d413d1e4c1",
        "status" : "passed",
        "time" : {
          "start" : 1734118601704,
          "stop" : 1734118621151,
          "duration" : 19447
        }
      }, {
        "uid" : "68fbbc46d06174a0",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1929/#testresult/68fbbc46d06174a0",
        "status" : "passed",
        "time" : {
          "start" : 1734052304496,
          "stop" : 1734052324185,
          "duration" : 19689
        }
      }, {
        "uid" : "a14dfadb3c54b08f",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1924/#testresult/a14dfadb3c54b08f",
        "status" : "broken",
        "statusDetails" : "golioth.golioth.RPCTimeout: RPC timeout",
        "time" : {
          "start" : 1734032194005,
          "stop" : 1734032215387,
          "duration" : 21382
        }
      } ]
    },
    "tags" : [ "anyio", "mikes_testbench", "@pytest.mark.usefixtures('anyio_backend')", "rak5010", "zephyr" ]
  },
  "source" : "5de1ac3874d0091d.json",
  "parameterValues" : [ "'rak5010'", "'zephyr'" ]
}