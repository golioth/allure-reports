{"uid":"98ccf4b61fbc8967","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1731372910719,"stop":1731372934977,"duration":24258},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff81620710>\ndevice = <golioth.golioth.Device object at 0xffff81623390>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731372871795,"stop":1731372871795,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731372871796,"stop":1731372871796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731372871796,"stop":1731372871796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731372871797,"stop":1731372871797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731372871797,"stop":1731372871797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731372871798,"stop":1731372871800,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731372871801,"stop":1731372871801,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731372871801,"stop":1731372871801,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731372871802,"stop":1731372872362,"duration":560},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731372872362,"stop":1731372873260,"duration":898},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731372873261,"stop":1731372910087,"duration":36826},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731372910088,"stop":1731372910716,"duration":628},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff81620710>\ndevice = <golioth.golioth.Device object at 0xffff81623390>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"523287426d3212dc","name":"log","source":"523287426d3212dc.txt","type":"text/plain","size":33694}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731372935171,"stop":1731372935221,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731372935223,"stop":1731372936008,"duration":785},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731372936010,"stop":1731372936013,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731372936018,"stop":1731372936018,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"6a31ea5fe77e"},{"name":"thread","value":"341-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":32,"unknown":0,"total":42},"items":[{"uid":"eb2b02373e78c54a","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/eb2b02373e78c54a","status":"passed","time":{"start":1731286636675,"stop":1731286681429,"duration":44754}},{"uid":"7a11f24aaa5a4667","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/7a11f24aaa5a4667","status":"passed","time":{"start":1731200392980,"stop":1731200417756,"duration":24776}},{"uid":"b5b917521c365ba2","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/b5b917521c365ba2","status":"passed","time":{"start":1731113796962,"stop":1731113816569,"duration":19607}},{"uid":"96dc78b70c203037","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/96dc78b70c203037","status":"passed","time":{"start":1731027354396,"stop":1731027374190,"duration":19794}},{"uid":"411fa24a4bb1fbfe","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/411fa24a4bb1fbfe","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1730941015292,"stop":1730941037764,"duration":22472}},{"uid":"df87fa0a4be0a97a","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/df87fa0a4be0a97a","status":"passed","time":{"start":1730854600426,"stop":1730854621478,"duration":21052}},{"uid":"2ffd85d879f438d9","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/2ffd85d879f438d9","status":"passed","time":{"start":1730854600426,"stop":1730854621478,"duration":21052}},{"uid":"ef60a7ac93a3888a","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/ef60a7ac93a3888a","status":"passed","time":{"start":1730768279112,"stop":1730768307042,"duration":27930}},{"uid":"1877ff97ff74ef6c","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/1877ff97ff74ef6c","status":"passed","time":{"start":1730681957182,"stop":1730681976168,"duration":18986}},{"uid":"91cdd941df9f1581","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/91cdd941df9f1581","status":"passed","time":{"start":1730595516929,"stop":1730595538041,"duration":21112}},{"uid":"b5741628f1a3b11b","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/b5741628f1a3b11b","status":"passed","time":{"start":1730508691947,"stop":1730508710399,"duration":18452}},{"uid":"e994e42d0bfa6c11","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/e994e42d0bfa6c11","status":"passed","time":{"start":1730422501883,"stop":1730422520785,"duration":18902}},{"uid":"30bbf9b16a8b4447","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/30bbf9b16a8b4447","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1730337199390,"stop":1730337222041,"duration":22651}},{"uid":"e4e19f79953f2b77","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/e4e19f79953f2b77","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1730304647152,"stop":1730304669252,"duration":22100}},{"uid":"4b4b52f9b545e1e2","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/4b4b52f9b545e1e2","status":"passed","time":{"start":1730249851168,"stop":1730249870158,"duration":18990}},{"uid":"4bf35e7e9d81d3d6","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/4bf35e7e9d81d3d6","status":"passed","time":{"start":1730163562939,"stop":1730163581568,"duration":18629}},{"uid":"49b65e80c8f1bc6c","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/49b65e80c8f1bc6c","status":"passed","time":{"start":1730077179394,"stop":1730077223450,"duration":44056}},{"uid":"368224c7e0f78d98","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/368224c7e0f78d98","status":"passed","time":{"start":1729990850585,"stop":1729990892199,"duration":41614}},{"uid":"f8e70432733412","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/f8e70432733412","status":"passed","time":{"start":1729904255174,"stop":1729904296031,"duration":40857}},{"uid":"ac60950a213d5ad1","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/ac60950a213d5ad1","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729817955333,"stop":1729818012143,"duration":56810}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"98ccf4b61fbc8967.json","parameterValues":["'rak5010'","'zephyr'"]}