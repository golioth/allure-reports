{
  "uid" : "9d37f11f11cc34b9",
  "name" : "test_hello",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello_nrf91_offloaded.pytest.test_sample#test_hello",
  "historyId" : "e124f10389952e3c52fb82b67fe5598b",
  "time" : {
    "start" : 1736272436476,
    "stop" : 1736272466298,
    "duration" : 29822
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff864dae90>\ndevice = <golioth.golioth.Device object at 0xffff864f1e90>\nbuild_conf = <runners.core.BuildConfiguration object at 0xffff86653710>\n\n    async def test_hello(shell, device, build_conf):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        credentials_tag = build_conf['CONFIG_GOLIOTH_COAP_CLIENT_CREDENTIALS_TAG']\n    \n        # Deactivate modem to allow credentials modification\n        shell.exec_command(f\"nrf_modem_at AT+CFUN=4\", timeout=10.0)\n    \n        # List all credentials\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=1,{credentials_tag}\")\n    \n        # PSK-ID\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=3,{credentials_tag},4\")  # Delete\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=0,{credentials_tag},4,{golioth_cred.identity}\")\n    \n        # PSK\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=3,{credentials_tag},3\")  # Delete\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=0,{credentials_tag},3,{golioth_cred.key.encode('ascii').hex()}\")\n    \n        # Reboot to take effect\n        shell._device.clear_buffer()\n        shell._device.write('kernel reboot cold\\n\\n'.encode())\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello_nrf91_offloaded/pytest/test_sample.py:63: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "shell",
    "time" : {
      "start" : 1736272435307,
      "stop" : 1736272436469,
      "duration" : 1162
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1736272407904,
      "stop" : 1736272407904,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1736272409187,
      "stop" : 1736272435307,
      "duration" : 26120
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1736272407905,
      "stop" : 1736272408354,
      "duration" : 449
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1736272407900,
      "stop" : 1736272407900,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1736272408355,
      "stop" : 1736272409186,
      "duration" : 831
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1736272407904,
      "stop" : 1736272407904,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1736272407882,
      "stop" : 1736272407882,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1736272407900,
      "stop" : 1736272407900,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object",
    "time" : {
      "start" : 1736272407901,
      "stop" : 1736272407903,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "build_conf",
    "time" : {
      "start" : 1736272407883,
      "stop" : 1736272407899,
      "duration" : 16
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: Unable to find all Hello messages on server\nassert 0 == 3",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff864dae90>\ndevice = <golioth.golioth.Device object at 0xffff864f1e90>\nbuild_conf = <runners.core.BuildConfiguration object at 0xffff86653710>\n\n    async def test_hello(shell, device, build_conf):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        credentials_tag = build_conf['CONFIG_GOLIOTH_COAP_CLIENT_CREDENTIALS_TAG']\n    \n        # Deactivate modem to allow credentials modification\n        shell.exec_command(f\"nrf_modem_at AT+CFUN=4\", timeout=10.0)\n    \n        # List all credentials\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=1,{credentials_tag}\")\n    \n        # PSK-ID\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=3,{credentials_tag},4\")  # Delete\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=0,{credentials_tag},4,{golioth_cred.identity}\")\n    \n        # PSK\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=3,{credentials_tag},3\")  # Delete\n        shell.exec_command(f\"nrf_modem_at AT%CMNG=0,{credentials_tag},3,{golioth_cred.key.encode('ascii').hex()}\")\n    \n        # Reboot to take effect\n        shell._device.clear_buffer()\n        shell._device.write('kernel reboot cold\\n\\n'.encode())\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello_nrf91_offloaded/pytest/test_sample.py:63: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "c9780fca06c3af98",
      "name" : "log",
      "source" : "c9780fca06c3af98.txt",
      "type" : "text/plain",
      "size" : 21948
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "dut::0",
    "time" : {
      "start" : 1736272466509,
      "stop" : 1736272466523,
      "duration" : 14
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1736272466901,
      "stop" : 1736272466903,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1736272466524,
      "stop" : 1736272466899,
      "duration" : 375
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_object::0",
    "time" : {
      "start" : 1736272466908,
      "stop" : 1736272466908,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "edf7827ff81e"
  }, {
    "name" : "thread",
    "value" : "959-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.hello_nrf91_offloaded.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf9160dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 37,
        "unknown" : 0,
        "total" : 40
      },
      "items" : [ {
        "uid" : "3160b2ed91f84ae",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/21/#testresult/3160b2ed91f84ae",
        "status" : "passed",
        "time" : {
          "start" : 1736213365911,
          "stop" : 1736213401172,
          "duration" : 35261
        }
      }, {
        "uid" : "b2c1fa885cbfd11c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/18/#testresult/b2c1fa885cbfd11c",
        "status" : "passed",
        "time" : {
          "start" : 1736192908054,
          "stop" : 1736192956540,
          "duration" : 48486
        }
      }, {
        "uid" : "8a8601dacc8865a4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/18/#testresult/8a8601dacc8865a4",
        "status" : "passed",
        "time" : {
          "start" : 1736190825793,
          "stop" : 1736190857709,
          "duration" : 31916
        }
      }, {
        "uid" : "5063857aa94230bd",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/18/#testresult/5063857aa94230bd",
        "status" : "passed",
        "time" : {
          "start" : 1736186473965,
          "stop" : 1736186527221,
          "duration" : 53256
        }
      }, {
        "uid" : "bbc0c8117a6c2342",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/17/#testresult/bbc0c8117a6c2342",
        "status" : "passed",
        "time" : {
          "start" : 1736126535457,
          "stop" : 1736126580585,
          "duration" : 45128
        }
      }, {
        "uid" : "e1801bdd546c8e7f",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/16/#testresult/e1801bdd546c8e7f",
        "status" : "passed",
        "time" : {
          "start" : 1736040134472,
          "stop" : 1736040170276,
          "duration" : 35804
        }
      }, {
        "uid" : "7d30446d69e6b1b0",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/15/#testresult/7d30446d69e6b1b0",
        "status" : "passed",
        "time" : {
          "start" : 1735954438049,
          "stop" : 1735954482446,
          "duration" : 44397
        }
      }, {
        "uid" : "36d01eb65da13846",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/8/#testresult/36d01eb65da13846",
        "status" : "passed",
        "time" : {
          "start" : 1735868108003,
          "stop" : 1735868161592,
          "duration" : 53589
        }
      }, {
        "uid" : "f085dfd3a98de2e4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1991/#testresult/f085dfd3a98de2e4",
        "status" : "passed",
        "time" : {
          "start" : 1735781535447,
          "stop" : 1735781566137,
          "duration" : 30690
        }
      }, {
        "uid" : "ae53a16597955d57",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1990/#testresult/ae53a16597955d57",
        "status" : "passed",
        "time" : {
          "start" : 1735694999011,
          "stop" : 1735695032701,
          "duration" : 33690
        }
      }, {
        "uid" : "3f17ed0c1d6610e7",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1984/#testresult/3f17ed0c1d6610e7",
        "status" : "passed",
        "time" : {
          "start" : 1735659769771,
          "stop" : 1735659815953,
          "duration" : 46182
        }
      }, {
        "uid" : "324ad0105010542c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1983/#testresult/324ad0105010542c",
        "status" : "passed",
        "time" : {
          "start" : 1735608510892,
          "stop" : 1735608541644,
          "duration" : 30752
        }
      }, {
        "uid" : "e3241bdc776aef70",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1980/#testresult/e3241bdc776aef70",
        "status" : "passed",
        "time" : {
          "start" : 1735522759987,
          "stop" : 1735522810179,
          "duration" : 50192
        }
      }, {
        "uid" : "5c12eb11521af29f",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1979/#testresult/5c12eb11521af29f",
        "status" : "passed",
        "time" : {
          "start" : 1735435948815,
          "stop" : 1735435980050,
          "duration" : 31235
        }
      }, {
        "uid" : "861dcacab6905c06",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1978/#testresult/861dcacab6905c06",
        "status" : "passed",
        "time" : {
          "start" : 1735349516691,
          "stop" : 1735349587069,
          "duration" : 70378
        }
      }, {
        "uid" : "21b3ec37d4178071",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1977/#testresult/21b3ec37d4178071",
        "status" : "passed",
        "time" : {
          "start" : 1735262989114,
          "stop" : 1735263020077,
          "duration" : 30963
        }
      }, {
        "uid" : "6691e56814850e2b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1976/#testresult/6691e56814850e2b",
        "status" : "passed",
        "time" : {
          "start" : 1735176452959,
          "stop" : 1735176481959,
          "duration" : 29000
        }
      }, {
        "uid" : "f681f392b29bdba6",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1975/#testresult/f681f392b29bdba6",
        "status" : "passed",
        "time" : {
          "start" : 1735090582552,
          "stop" : 1735090631310,
          "duration" : 48758
        }
      }, {
        "uid" : "a0d0e985eba6bb79",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1974/#testresult/a0d0e985eba6bb79",
        "status" : "passed",
        "time" : {
          "start" : 1735003594146,
          "stop" : 1735003629293,
          "duration" : 35147
        }
      }, {
        "uid" : "bd2ad47e8daf313c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1973/#testresult/bd2ad47e8daf313c",
        "status" : "passed",
        "time" : {
          "start" : 1734917784528,
          "stop" : 1734917815805,
          "duration" : 31277
        }
      } ]
    },
    "tags" : [ "nrf9160dk", "anyio", "mikes_testbench", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "9d37f11f11cc34b9.json",
  "parameterValues" : [ "'nrf9160dk'", "'zephyr'" ]
}