{"uid":"366c8dddc89604bf","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1731976479901,"stop":1731976512554,"duration":32653},"status":"failed","statusMessage":"AssertionError: assert 7 == 0\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9c3e45d0>\ndevice = <golioth.golioth.Device object at 0xffff9c2f3350>\nproject = <golioth.golioth.Project object at 0xffff9d534950>\nreleases = {'test_blocks': Release <673bdd13c54a6b6bd2ecdc65, release_tags=[], device_tags=['673bdd11c54a6b6bd2ecdc62'], artifact..., release_tags=[], device_tags=['673bdd11c54a6b6bd2ecdc62'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 7 == 0\nE                    +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731976418033,"stop":1731976418033,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731976418034,"stop":1731976418034,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731976418035,"stop":1731976418035,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731976418036,"stop":1731976418037,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731976418036,"stop":1731976418036,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731976418037,"stop":1731976418037,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731976418037,"stop":1731976418038,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731976418038,"stop":1731976418038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731976418038,"stop":1731976418039,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731976418039,"stop":1731976418039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731976418039,"stop":1731976418039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731976418040,"stop":1731976418040,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731976418040,"stop":1731976458064,"duration":40024},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731976458065,"stop":1731976458794,"duration":729},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731976458795,"stop":1731976460531,"duration":1736},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731976460532,"stop":1731976464534,"duration":4002},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1731976464536,"stop":1731976465285,"duration":749},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1731976465286,"stop":1731976466265,"duration":979},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1731976466265,"stop":1731976468442,"duration":2177},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1731976479898,"stop":1731976479898,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 7 == 0\n +  where 7 = int('7')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9c3e45d0>\ndevice = <golioth.golioth.Device object at 0xffff9c2f3350>\nproject = <golioth.golioth.Project object at 0xffff9d534950>\nreleases = {'test_blocks': Release <673bdd13c54a6b6bd2ecdc65, release_tags=[], device_tags=['673bdd11c54a6b6bd2ecdc62'], artifact..., release_tags=[], device_tags=['673bdd11c54a6b6bd2ecdc62'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 7 == 0\nE                    +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:198: AssertionError","steps":[],"attachments":[{"uid":"8e8a6ebaabc6ec61","name":"stdout","source":"8e8a6ebaabc6ec61.txt","type":"text/plain","size":72}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1731976512780,"stop":1731976514070,"duration":1290},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1731976514073,"stop":1731976516237,"duration":2164},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1731976516239,"stop":1731976517173,"duration":934},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1731976517176,"stop":1731976517176,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1731976517177,"stop":1731976517178,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731976517180,"stop":1731976517773,"duration":593},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731976517776,"stop":1731976517776,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731976517778,"stop":1731976517788,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"2da009185436"},{"name":"thread","value":"254-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":4,"skipped":0,"passed":28,"unknown":0,"total":49},"items":[{"uid":"f289d558318c4315","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/f289d558318c4315","status":"passed","time":{"start":1731965354986,"stop":1731965403854,"duration":48868}},{"uid":"890043f69929ee01","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/890043f69929ee01","status":"passed","time":{"start":1731890122101,"stop":1731890198619,"duration":76518}},{"uid":"e472c0a0ae3b0455","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/e472c0a0ae3b0455","status":"passed","time":{"start":1731803803833,"stop":1731803881777,"duration":77944}},{"uid":"7c6a7e21152699d1","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/7c6a7e21152699d1","status":"passed","time":{"start":1731717229605,"stop":1731717307134,"duration":77529}},{"uid":"362c13adfeead566","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/362c13adfeead566","status":"passed","time":{"start":1731630743455,"stop":1731630820605,"duration":77150}},{"uid":"9b08deb59d010e9f","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/9b08deb59d010e9f","status":"passed","time":{"start":1731606451161,"stop":1731606528271,"duration":77110}},{"uid":"4e9100d372596d74","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/4e9100d372596d74","status":"passed","time":{"start":1731564868040,"stop":1731564944665,"duration":76625}},{"uid":"5a1c0f241d9a127e","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/5a1c0f241d9a127e","status":"passed","time":{"start":1731544366490,"stop":1731544444546,"duration":78056}},{"uid":"a5242d235a9d8ef1","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/a5242d235a9d8ef1","status":"passed","time":{"start":1731457974334,"stop":1731458054376,"duration":80042}},{"uid":"36b5105a99853d63","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/36b5105a99853d63","status":"passed","time":{"start":1731198754894,"stop":1731198832453,"duration":77559}},{"uid":"6c31a562d2d4d678","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/6c31a562d2d4d678","status":"passed","time":{"start":1731112186056,"stop":1731112263243,"duration":77187}},{"uid":"e83e9d5b9aaabed3","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/e83e9d5b9aaabed3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731025916415,"stop":1731025936903,"duration":20488}},{"uid":"ce383b49b4d20469","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/ce383b49b4d20469","status":"passed","time":{"start":1730939416888,"stop":1730939494933,"duration":78045}},{"uid":"deff19a4b0777e0e","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/deff19a4b0777e0e","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1730893220974,"stop":1730893233677,"duration":12703}},{"uid":"8e6aac1d94456811","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/8e6aac1d94456811","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1730853144787,"stop":1730853157734,"duration":12947}},{"uid":"cfaf2d7d6ae41fb6","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/cfaf2d7d6ae41fb6","status":"passed","time":{"start":1730766655115,"stop":1730766733286,"duration":78171}},{"uid":"2792ce870940def","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/2792ce870940def","status":"passed","time":{"start":1730680331271,"stop":1730680409839,"duration":78568}},{"uid":"ed397d575a84ce6f","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/ed397d575a84ce6f","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1730594094964,"stop":1730594107702,"duration":12738}},{"uid":"eecb1b329ee612c2","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/eecb1b329ee612c2","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1730507521021,"stop":1730507534453,"duration":13432}},{"uid":"ebd639365c778ce8","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/ebd639365c778ce8","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1730421317838,"stop":1730421339320,"duration":21482}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"366c8dddc89604bf.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}