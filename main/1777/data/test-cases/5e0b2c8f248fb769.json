{"uid":"5e0b2c8f248fb769","name":"test_settings","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.settings.pytest.test_sample#test_settings","historyId":"81df5c8b47896d9914743c5dbee29611","time":{"start":1731977690051,"stop":1731977703393,"duration":13342},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nshell = <twister_harness.helpers.shell.Shell object at 0xffff931f9d10>\nproject = <golioth.golioth.Project object at 0xffff933ade90>\ndevice = <golioth.golioth.Device object at 0xffff9320cf50>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_settings(shell, project, device, wifi_ssid, wifi_psk):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level setting exists\n    \n        await project.settings.set('LOOP_DELAY_S', 1)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        shell._device.readlines_until(regex=\".*Setting loop delay to 1 s\", timeout=90.0)\n    \n        # Set device-level setting\n    \n>       await device.settings.set('LOOP_DELAY_S', 5)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/settings/pytest/test_sample.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731977660709,"stop":1731977660709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731977660709,"stop":1731977660709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731977660710,"stop":1731977660710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731977660710,"stop":1731977660711,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731977660711,"stop":1731977660711,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731977660711,"stop":1731977660712,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1731977660712,"stop":1731977660712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1731977660712,"stop":1731977660714,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731977660715,"stop":1731977661222,"duration":507},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731977661222,"stop":1731977663104,"duration":1882},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1731977663105,"stop":1731977686813,"duration":23708},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1731977686814,"stop":1731977690044,"duration":3230},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nshell = <twister_harness.helpers.shell.Shell object at 0xffff931f9d10>\nproject = <golioth.golioth.Project object at 0xffff933ade90>\ndevice = <golioth.golioth.Device object at 0xffff9320cf50>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_settings(shell, project, device, wifi_ssid, wifi_psk):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level setting exists\n    \n        await project.settings.set('LOOP_DELAY_S', 1)\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        shell._device.readlines_until(regex=\".*Setting loop delay to 1 s\", timeout=90.0)\n    \n        # Set device-level setting\n    \n>       await device.settings.set('LOOP_DELAY_S', 5)\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/settings/pytest/test_sample.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","steps":[],"attachments":[{"uid":"bb410dd1db6efd2d","name":"log","source":"bb410dd1db6efd2d.txt","type":"text/plain","size":21894}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1731977704439,"stop":1731977704611,"duration":172},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731977704612,"stop":1731977706500,"duration":1888},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731977706502,"stop":1731977706504,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1731977706506,"stop":1731977706507,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"31ecf5bf7ac0"},{"name":"thread","value":"762-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.settings.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":50,"unknown":0,"total":52},"items":[{"uid":"456953984cfd9444","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/456953984cfd9444","status":"passed","time":{"start":1731967291104,"stop":1731967301920,"duration":10816}},{"uid":"e8276a4646dcbcb","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/e8276a4646dcbcb","status":"passed","time":{"start":1731891311010,"stop":1731891321781,"duration":10771}},{"uid":"6148614aaa47dcf5","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/6148614aaa47dcf5","status":"passed","time":{"start":1731805186823,"stop":1731805197698,"duration":10875}},{"uid":"d7bdac3f274f1031","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/d7bdac3f274f1031","status":"passed","time":{"start":1731718493655,"stop":1731718504875,"duration":11220}},{"uid":"b374c2ba552e5e76","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/b374c2ba552e5e76","status":"passed","time":{"start":1731631977443,"stop":1731631988656,"duration":11213}},{"uid":"ad16ed51452988ec","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/ad16ed51452988ec","status":"passed","time":{"start":1731607669432,"stop":1731607680766,"duration":11334}},{"uid":"b86fe949e46a3f76","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/b86fe949e46a3f76","status":"passed","time":{"start":1731566095092,"stop":1731566109832,"duration":14740}},{"uid":"79be8fbf6d50379b","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/79be8fbf6d50379b","status":"passed","time":{"start":1731545531634,"stop":1731545542306,"duration":10672}},{"uid":"579fd13035b99b92","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/579fd13035b99b92","status":"passed","time":{"start":1731459230239,"stop":1731459240798,"duration":10559}},{"uid":"5525159e3b0f5d88","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/5525159e3b0f5d88","status":"passed","time":{"start":1731373353461,"stop":1731373363731,"duration":10270}},{"uid":"c0621a048f41d381","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/c0621a048f41d381","status":"passed","time":{"start":1731286475221,"stop":1731286485834,"duration":10613}},{"uid":"c672e83e31cac2f3","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/c672e83e31cac2f3","status":"passed","time":{"start":1731200110548,"stop":1731200121528,"duration":10980}},{"uid":"90c2ed45eed5ef7d","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/90c2ed45eed5ef7d","status":"passed","time":{"start":1731113430246,"stop":1731113442463,"duration":12217}},{"uid":"100719f329f04892","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/100719f329f04892","status":"passed","time":{"start":1731027089563,"stop":1731027100329,"duration":10766}},{"uid":"5a5fb2a78fb50568","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/5a5fb2a78fb50568","status":"passed","time":{"start":1730940687947,"stop":1730940706343,"duration":18396}},{"uid":"d5ceedc5c45cec4b","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/d5ceedc5c45cec4b","status":"passed","time":{"start":1730893593211,"stop":1730893604283,"duration":11072}},{"uid":"615db9a657de2dcd","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/615db9a657de2dcd","status":"passed","time":{"start":1730854899108,"stop":1730854910070,"duration":10962}},{"uid":"f51b8c3ba7862037","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/f51b8c3ba7862037","status":"passed","time":{"start":1730767948324,"stop":1730767959042,"duration":10718}},{"uid":"97ee86ffb7d34443","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/97ee86ffb7d34443","status":"passed","time":{"start":1730681543534,"stop":1730681554396,"duration":10862}},{"uid":"62d13000da66c301","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/62d13000da66c301","status":"passed","time":{"start":1730595235914,"stop":1730595246834,"duration":10920}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"5e0b2c8f248fb769.json","parameterValues":["'nrf52840dk'","'zephyr'"]}