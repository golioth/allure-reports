{
  "uid" : "e809f813b9b5e94",
  "name" : "test_lightdb_set",
  "fullName" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample#test_lightdb_set",
  "historyId" : "fbdcf5b89e903e4e31b43e980f10a270",
  "time" : {
    "start" : 1733360602464,
    "stop" : 1733360619357,
    "duration" : 16893
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 1 == 0",
  "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff97be2e90>\ndevice = <golioth.golioth.Device object at 0xffff97bf9950>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_lightdb_set(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            shell._device.readlines_until(regex=f\".*Setting counter to {i}\", timeout=10.0)\n            shell._device.readlines_until(regex=f\".*Counter successfully set\", timeout=10.0)\n    \n            for _ in range(3):\n                counter = await device.lightdb.get(\"counter\")\n                if counter == i:\n                    break\n                await trio.sleep(1)\n    \n>           assert counter == i\nE           assert 1 == 0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/set/pytest/test_sample.py:47: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "device_object",
    "time" : {
      "start" : 1733360583418,
      "stop" : 1733360583420,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "shell",
    "time" : {
      "start" : 1733360601594,
      "stop" : 1733360602461,
      "duration" : 867
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733360583422,
      "stop" : 1733360583849,
      "duration" : 427
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "twister_harness_config",
    "time" : {
      "start" : 1733360583418,
      "stop" : 1733360583418,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733360583421,
      "stop" : 1733360583422,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733360583850,
      "stop" : 1733360584833,
      "duration" : 983
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut",
    "time" : {
      "start" : 1733360584834,
      "stop" : 1733360601593,
      "duration" : 16759
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733360583416,
      "stop" : 1733360583417,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733360583416,
      "stop" : 1733360583416,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733360583417,
      "stop" : 1733360583417,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733360583421,
      "stop" : 1733360583421,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733360583415,
      "stop" : 1733360583415,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 1 == 0",
    "statusTrace" : "shell = <twister_harness.helpers.shell.Shell object at 0xffff97be2e90>\ndevice = <golioth.golioth.Device object at 0xffff97bf9950>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_lightdb_set(shell, device, wifi_ssid, wifi_psk):\n        # Delete counter in lightdb state\n    \n        await device.lightdb.delete(\"counter\")\n    \n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for Golioth connection\n    \n        shell._device.readlines_until(regex=\".*Golioth CoAP client connected\", timeout=90.0)\n    \n        # Verify lightdb writes\n    \n        for i in range(0,4):\n            shell._device.readlines_until(regex=f\".*Setting counter to {i}\", timeout=10.0)\n            shell._device.readlines_until(regex=f\".*Counter successfully set\", timeout=10.0)\n    \n            for _ in range(3):\n                counter = await device.lightdb.get(\"counter\")\n                if counter == i:\n                    break\n                await trio.sleep(1)\n    \n>           assert counter == i\nE           assert 1 == 0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/lightdb/set/pytest/test_sample.py:47: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2d96666fea29e7f9",
      "name" : "log",
      "source" : "2d96666fea29e7f9.txt",
      "type" : "text/plain",
      "size" : 24346
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device_object::0",
    "time" : {
      "start" : 1733360619979,
      "stop" : 1733360619979,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733360619972,
      "stop" : 1733360619974,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733360619562,
      "stop" : 1733360619970,
      "duration" : 408
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "dut::0",
    "time" : {
      "start" : 1733360619549,
      "stop" : 1733360619560,
      "duration" : 11
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32_devkitc_wrover"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "sample.zephyr.esp32_devkitc_wrover"
  }, {
    "name" : "tag",
    "value" : "tims_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_sample"
  }, {
    "name" : "host",
    "value" : "1eb7c1e4512d"
  }, {
    "name" : "thread",
    "value" : "416-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "modules.lib.golioth-firmware-sdk.examples.zephyr.lightdb.set.pytest.test_sample"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32_devkitc_wrover'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 84,
        "unknown" : 0,
        "total" : 85
      },
      "items" : [ {
        "uid" : "1aaab9a8dcc852be",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1863/#testresult/1aaab9a8dcc852be",
        "status" : "passed",
        "time" : {
          "start" : 1733274256662,
          "stop" : 1733274281463,
          "duration" : 24801
        }
      }, {
        "uid" : "2357e5fa855abdb9",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1859/#testresult/2357e5fa855abdb9",
        "status" : "passed",
        "time" : {
          "start" : 1733187845090,
          "stop" : 1733187866582,
          "duration" : 21492
        }
      }, {
        "uid" : "825d3a5916a49e16",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1858/#testresult/825d3a5916a49e16",
        "status" : "passed",
        "time" : {
          "start" : 1733163208869,
          "stop" : 1733163234381,
          "duration" : 25512
        }
      }, {
        "uid" : "211920eaf9626095",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1857//#testresult/211920eaf9626095",
        "status" : "passed",
        "time" : {
          "start" : 1733101458280,
          "stop" : 1733101478786,
          "duration" : 20506
        }
      }, {
        "uid" : "49764caf9774f381",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1856//#testresult/49764caf9774f381",
        "status" : "passed",
        "time" : {
          "start" : 1733015381343,
          "stop" : 1733015403934,
          "duration" : 22591
        }
      }, {
        "uid" : "b7f08a104adaac24",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1855//#testresult/b7f08a104adaac24",
        "status" : "passed",
        "time" : {
          "start" : 1732929047151,
          "stop" : 1732929072625,
          "duration" : 25474
        }
      }, {
        "uid" : "c6b20de3734e2461",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1854//#testresult/c6b20de3734e2461",
        "status" : "passed",
        "time" : {
          "start" : 1732842876220,
          "stop" : 1732842900842,
          "duration" : 24622
        }
      }, {
        "uid" : "8d797d0a85359013",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1853//#testresult/8d797d0a85359013",
        "status" : "passed",
        "time" : {
          "start" : 1732755760504,
          "stop" : 1732755780809,
          "duration" : 20305
        }
      }, {
        "uid" : "9c7c057c99e60840",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1846//#testresult/9c7c057c99e60840",
        "status" : "passed",
        "time" : {
          "start" : 1732669333354,
          "stop" : 1732669358725,
          "duration" : 25371
        }
      }, {
        "uid" : "c5c4562dff0d25ac",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1845//#testresult/c5c4562dff0d25ac",
        "status" : "passed",
        "time" : {
          "start" : 1732643467319,
          "stop" : 1732643492793,
          "duration" : 25474
        }
      }, {
        "uid" : "3923c40339cdd544",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/3923c40339cdd544",
        "status" : "passed",
        "time" : {
          "start" : 1732575845848,
          "stop" : 1732575868373,
          "duration" : 22525
        }
      }, {
        "uid" : "da45a1fee33d1e12",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/da45a1fee33d1e12",
        "status" : "passed",
        "time" : {
          "start" : 1732575845848,
          "stop" : 1732575868373,
          "duration" : 22525
        }
      }, {
        "uid" : "787681f70419037e",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1843//#testresult/787681f70419037e",
        "status" : "passed",
        "time" : {
          "start" : 1732582940412,
          "stop" : 1732582964930,
          "duration" : 24518
        }
      }, {
        "uid" : "3d480af18978ad62",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/3d480af18978ad62",
        "status" : "passed",
        "time" : {
          "start" : 1732575845848,
          "stop" : 1732575868373,
          "duration" : 22525
        }
      }, {
        "uid" : "69a834094bf7edd3",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/69a834094bf7edd3",
        "status" : "passed",
        "time" : {
          "start" : 1732575845848,
          "stop" : 1732575868373,
          "duration" : 22525
        }
      }, {
        "uid" : "220274ff452e9e1e",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/220274ff452e9e1e",
        "status" : "passed",
        "time" : {
          "start" : 1732568447903,
          "stop" : 1732568471464,
          "duration" : 23561
        }
      }, {
        "uid" : "f4ea4334751f3cfc",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1838//#testresult/f4ea4334751f3cfc",
        "status" : "passed",
        "time" : {
          "start" : 1732496846105,
          "stop" : 1732496871619,
          "duration" : 25514
        }
      }, {
        "uid" : "776b00356bcc1de2",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1837//#testresult/776b00356bcc1de2",
        "status" : "passed",
        "time" : {
          "start" : 1732411066764,
          "stop" : 1732411090169,
          "duration" : 23405
        }
      }, {
        "uid" : "a05b6bdc025b6456",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1836//#testresult/a05b6bdc025b6456",
        "status" : "passed",
        "time" : {
          "start" : 1732325060319,
          "stop" : 1732325085038,
          "duration" : 24719
        }
      }, {
        "uid" : "81f8b567f9b81a19",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/28//#testresult/81f8b567f9b81a19",
        "status" : "passed",
        "time" : {
          "start" : 1732322066652,
          "stop" : 1732322087054,
          "duration" : 20402
        }
      } ]
    },
    "tags" : [ "anyio", "tims_orange_pi", "esp32_devkitc_wrover", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "e809f813b9b5e94.json",
  "parameterValues" : [ "'esp32_devkitc_wrover'", "'zephyr'" ]
}