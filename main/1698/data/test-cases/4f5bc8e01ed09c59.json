{"uid":"4f5bc8e01ed09c59","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"e43e30077c8654d0036bc169098990de","time":{"start":1729904900143,"stop":1729904927736,"duration":27593},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 2 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff86257610>\ndevice = <golioth.golioth.Device object at 0xffff86271ed0>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 2 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1729904871448,"stop":1729904871448,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729904871449,"stop":1729904871449,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729904871449,"stop":1729904871449,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1729904871450,"stop":1729904871450,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729904871450,"stop":1729904871450,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1729904871451,"stop":1729904871453,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729904871454,"stop":1729904871454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729904871454,"stop":1729904871454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729904871455,"stop":1729904871960,"duration":505},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729904871960,"stop":1729904873346,"duration":1386},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1729904873347,"stop":1729904896771,"duration":23424},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1729904896771,"stop":1729904900136,"duration":3365},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 2 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff86257610>\ndevice = <golioth.golioth.Device object at 0xffff86271ed0>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 2 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"97fd7b7177b20eb4","name":"log","source":"97fd7b7177b20eb4.txt","type":"text/plain","size":19791}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1729904927915,"stop":1729904928124,"duration":209},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729904928126,"stop":1729904928674,"duration":548},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729904928676,"stop":1729904928678,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1729904928683,"stop":1729904928683,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"2662fd91b310"},{"name":"thread","value":"1035-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b3a374f60311c3ea","status":"passed","time":{"start":1729904705379,"stop":1729904736281,"duration":30902}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":22,"unknown":0,"total":23},"items":[{"uid":"817e4e5de84f22f8","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/817e4e5de84f22f8","status":"passed","time":{"start":1729818330651,"stop":1729818354481,"duration":23830}},{"uid":"c86405f160bf7105","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/c86405f160bf7105","status":"passed","time":{"start":1729731207421,"stop":1729731230791,"duration":23370}},{"uid":"9399c765a0207c59","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/9399c765a0207c59","status":"passed","time":{"start":1729645174057,"stop":1729645210439,"duration":36382}},{"uid":"af00b1d245d783a6","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/af00b1d245d783a6","status":"passed","time":{"start":1729558673683,"stop":1729558697442,"duration":23759}},{"uid":"7c5f3009ebc93395","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/7c5f3009ebc93395","status":"passed","time":{"start":1729472690672,"stop":1729472714312,"duration":23640}},{"uid":"ff6740c47af76c43","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/ff6740c47af76c43","status":"passed","time":{"start":1729386423081,"stop":1729386446662,"duration":23581}},{"uid":"24aba16480249f2f","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/24aba16480249f2f","status":"passed","time":{"start":1729370477074,"stop":1729370500324,"duration":23250}},{"uid":"3e9831af0f654fcd","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/3e9831af0f654fcd","status":"passed","time":{"start":1729362540876,"stop":1729362564244,"duration":23368}},{"uid":"c4867b10cae16751","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/c4867b10cae16751","status":"passed","time":{"start":1729300100930,"stop":1729300128493,"duration":27563}},{"uid":"5796d3eff2eb179e","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/5796d3eff2eb179e","status":"passed","time":{"start":1729213494926,"stop":1729213522611,"duration":27685}},{"uid":"b92aaae58fd10b7d","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/b92aaae58fd10b7d","status":"passed","time":{"start":1729204056379,"stop":1729204084253,"duration":27874}},{"uid":"91cb225eb2d73e04","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/91cb225eb2d73e04","status":"passed","time":{"start":1729131245412,"stop":1729131269581,"duration":24169}},{"uid":"7308083934101ecb","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/7308083934101ecb","status":"passed","time":{"start":1729111158260,"stop":1729111181544,"duration":23284}},{"uid":"afaf6b5e4526023c","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/afaf6b5e4526023c","status":"passed","time":{"start":1729040244352,"stop":1729040267699,"duration":23347}},{"uid":"ebd89509a56cf50a","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/ebd89509a56cf50a","status":"passed","time":{"start":1729026903122,"stop":1729026927077,"duration":23955}},{"uid":"58a682add923c012","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/58a682add923c012","status":"passed","time":{"start":1729009065784,"stop":1729009088986,"duration":23202}},{"uid":"18017466c4fcd92b","reportUrl":"https://golioth.github.io/allure-reports/main/1637//#testresult/18017466c4fcd92b","status":"passed","time":{"start":1728953877294,"stop":1728953901150,"duration":23856}},{"uid":"3f3e2945bae9ad40","reportUrl":"https://golioth.github.io/allure-reports/main/1636//#testresult/3f3e2945bae9ad40","status":"passed","time":{"start":1728867534050,"stop":1728867557302,"duration":23252}},{"uid":"9d30de45b3af161a","reportUrl":"https://golioth.github.io/allure-reports/main/1635//#testresult/9d30de45b3af161a","status":"passed","time":{"start":1728781139102,"stop":1728781163206,"duration":24104}},{"uid":"8d4412c7af573073","reportUrl":"https://golioth.github.io/allure-reports/main/1634//#testresult/8d4412c7af573073","status":"passed","time":{"start":1728695083065,"stop":1728695142063,"duration":58998}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"4f5bc8e01ed09c59.json","parameterValues":["'nrf52840dk'","'zephyr'"]}