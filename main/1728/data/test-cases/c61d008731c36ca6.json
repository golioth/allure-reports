{"uid":"c61d008731c36ca6","name":"test_set_int_range_out_min","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_out_min","historyId":"19ac6524b29a49f8ec149ae236789711","time":{"start":1731458194820,"stop":1731458207432,"duration":12612},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff89dbfb10>\ndevice = <golioth.golioth.Device object at 0xffff89d56bd0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff89d56bd0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731458103381,"stop":1731458103381,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731458103382,"stop":1731458103382,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731458103382,"stop":1731458103383,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731458103383,"stop":1731458103383,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731458103384,"stop":1731458103384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731458103385,"stop":1731458103386,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731458103386,"stop":1731458103386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731458103387,"stop":1731458103387,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731458103388,"stop":1731458103388,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731458103388,"stop":1731458103389,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731458103388,"stop":1731458103388,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731458103389,"stop":1731458103389,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731458103389,"stop":1731458103849,"duration":460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731458103850,"stop":1731458142196,"duration":38346},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731458142197,"stop":1731458143376,"duration":1179},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731458143376,"stop":1731458155475,"duration":12099},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff89dbfb10>\ndevice = <golioth.golioth.Device object at 0xffff89d56bd0>\n\n    async def test_set_int_range_out_min(board, device):\n        await device.settings.set('TEST_INT_RANGE', -1)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int_range: -1', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:129: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff89d56bd0>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"1a042bf43e279461","name":"stdout","source":"1a042bf43e279461.txt","type":"text/plain","size":128}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1731458295929,"stop":1731458295929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731458295932,"stop":1731458296428,"duration":496},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731458296432,"stop":1731458296434,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731458296438,"stop":1731458296442,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"56000883f0bc"},{"name":"thread","value":"257-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":42,"unknown":0,"total":43},"items":[{"uid":"a33b64e617cb97a5","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/a33b64e617cb97a5","status":"passed","time":{"start":1731371787904,"stop":1731371800314,"duration":12410}},{"uid":"9d40fbd206f569d6","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/9d40fbd206f569d6","status":"passed","time":{"start":1731285397438,"stop":1731285409694,"duration":12256}},{"uid":"ad0f07900feb061d","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/ad0f07900feb061d","status":"passed","time":{"start":1731199058356,"stop":1731199070725,"duration":12369}},{"uid":"995e7f96c1fcf0cd","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/995e7f96c1fcf0cd","status":"passed","time":{"start":1731112490311,"stop":1731112502759,"duration":12448}},{"uid":"f1cccf66e67e7b8a","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/f1cccf66e67e7b8a","status":"passed","time":{"start":1731026121757,"stop":1731026134141,"duration":12384}},{"uid":"6db8293022952781","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/6db8293022952781","status":"passed","time":{"start":1730939738920,"stop":1730939751269,"duration":12349}},{"uid":"7dd6cc8b38bf213","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/7dd6cc8b38bf213","status":"passed","time":{"start":1730893531194,"stop":1730893544053,"duration":12859}},{"uid":"336112122d5122bd","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/336112122d5122bd","status":"passed","time":{"start":1730853268775,"stop":1730853281162,"duration":12387}},{"uid":"db363f690bb691d8","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/db363f690bb691d8","status":"passed","time":{"start":1730766947561,"stop":1730766959847,"duration":12286}},{"uid":"e45d5435cf0f083c","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/e45d5435cf0f083c","status":"passed","time":{"start":1730680739032,"stop":1730680751350,"duration":12318}},{"uid":"bd93b646f2865e15","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/bd93b646f2865e15","status":"passed","time":{"start":1730594274423,"stop":1730594286733,"duration":12310}},{"uid":"4b2cf24a55ef3114","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/4b2cf24a55ef3114","status":"passed","time":{"start":1730507752710,"stop":1730507765091,"duration":12381}},{"uid":"807d03402b45a3b3","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/807d03402b45a3b3","status":"passed","time":{"start":1730421561655,"stop":1730421574097,"duration":12442}},{"uid":"1278ebc34a8afeda","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/1278ebc34a8afeda","status":"passed","time":{"start":1730334967342,"stop":1730334979799,"duration":12457}},{"uid":"da4f0b04c2f549c1","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/da4f0b04c2f549c1","status":"passed","time":{"start":1730303376813,"stop":1730303389367,"duration":12554}},{"uid":"9a101dc213bc6a01","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/9a101dc213bc6a01","status":"passed","time":{"start":1730248549220,"stop":1730248561653,"duration":12433}},{"uid":"ffceea490018d546","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/ffceea490018d546","status":"passed","time":{"start":1730162254131,"stop":1730162266602,"duration":12471}},{"uid":"8b488c386a985f60","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/8b488c386a985f60","status":"passed","time":{"start":1730075899791,"stop":1730075912199,"duration":12408}},{"uid":"c18fb2a82a21028e","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/c18fb2a82a21028e","status":"passed","time":{"start":1729989552203,"stop":1729989564666,"duration":12463}},{"uid":"e8e986e4fdfa5239","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/e8e986e4fdfa5239","status":"passed","time":{"start":1729902971660,"stop":1729902984228,"duration":12568}}]},"tags":["mikes_orange_pi","esp-idf","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"c61d008731c36ca6.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}