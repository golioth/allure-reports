{"uid":"c379705f34602d4d","name":"test_int_too_small","fullName":"tests.hil.tests.settings.test_settings#test_int_too_small","historyId":"fb17ed60ba42ecb6486f4d6916fd7abc","time":{"start":1732138511253,"stop":1732138511253,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 238379.7019249273\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffffb827a850>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffb8333290>\ndevice = <golioth.golioth.Device object at 0xffffb82cc2d0>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 238379.7019249273\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732138336799,"stop":1732138336799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732138336800,"stop":1732138336801,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732138336801,"stop":1732138336801,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732138336802,"stop":1732138336802,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732138336803,"stop":1732138336804,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732138336803,"stop":1732138336803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732138336804,"stop":1732138336804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732138336805,"stop":1732138336805,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732138336805,"stop":1732138336805,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732138336806,"stop":1732138336807,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732138336806,"stop":1732138336806,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732138336806,"stop":1732138336806,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732138336807,"stop":1732138337220,"duration":413},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732138337221,"stop":1732138381359,"duration":44138},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732138381361,"stop":1732138382364,"duration":1003},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732138382364,"stop":1732138510267,"duration":127903},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1732138516378,"stop":1732138516762,"duration":384},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732138516764,"stop":1732138516766,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732138516768,"stop":1732138516770,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"ebfbe043c9f2"},{"name":"thread","value":"253-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":46,"skipped":0,"passed":10,"unknown":0,"total":56},"items":[{"uid":"68f94b600c44ff3","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/68f94b600c44ff3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732063716438,"stop":1732063716438,"duration":0}},{"uid":"fb5a64e5aef9bb81","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/fb5a64e5aef9bb81","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732058109529,"stop":1732058109529,"duration":0}},{"uid":"7a5286bd24688d9d","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/7a5286bd24688d9d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732036730502,"stop":1732036730502,"duration":0}},{"uid":"ffca8fa2812589c2","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/ffca8fa2812589c2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731977351156,"stop":1731977351156,"duration":0}},{"uid":"d02c2482ccef05f7","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/d02c2482ccef05f7","status":"passed","time":{"start":1731966418327,"stop":1731966430720,"duration":12393}},{"uid":"9dbc915961e87d20","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/9dbc915961e87d20","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731891130447,"stop":1731891130447,"duration":0}},{"uid":"fe727aa5a6bc7e93","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/fe727aa5a6bc7e93","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731804754638,"stop":1731804754638,"duration":0}},{"uid":"a132a27534c9032c","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/a132a27534c9032c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731718356899,"stop":1731718356899,"duration":0}},{"uid":"d91af33a2c1b3e7a","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/d91af33a2c1b3e7a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731631715930,"stop":1731631715930,"duration":0}},{"uid":"462cbac5de43ae3f","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/462cbac5de43ae3f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731607624875,"stop":1731607624875,"duration":0}},{"uid":"377e582bcf07c055","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/377e582bcf07c055","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731565559892,"stop":1731565559892,"duration":0}},{"uid":"d249981b9e9e67db","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/d249981b9e9e67db","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731545174665,"stop":1731545174665,"duration":0}},{"uid":"ee5d1ab5d27ba8ae","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/ee5d1ab5d27ba8ae","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731458731700,"stop":1731458731700,"duration":0}},{"uid":"c2b3fe6c35de8042","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/c2b3fe6c35de8042","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731372550421,"stop":1731372550421,"duration":0}},{"uid":"6f1e96cd1aade1ca","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/6f1e96cd1aade1ca","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731286109794,"stop":1731286109794,"duration":0}},{"uid":"281fde00dacec053","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/281fde00dacec053","status":"passed","time":{"start":1731199756575,"stop":1731199768795,"duration":12220}},{"uid":"cb36ff183fb5752","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/cb36ff183fb5752","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731113163514,"stop":1731113163514,"duration":0}},{"uid":"f1f8b4100f200ad2","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/f1f8b4100f200ad2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731026933491,"stop":1731026933491,"duration":0}},{"uid":"22637e63d884ddc2","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/22637e63d884ddc2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730940422640,"stop":1730940422641,"duration":1}},{"uid":"ff12cee4ec4da310","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/ff12cee4ec4da310","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730894194110,"stop":1730894194110,"duration":0}}]},"tags":["anyio","mikes_testbench","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"c379705f34602d4d.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}