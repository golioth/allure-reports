{"uid":"fe322025409c7c3d","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"b7f28a13e79ecf798f5f87d1effddc59","time":{"start":1732138514341,"stop":1732138526748,"duration":12407},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff95f63190>\ndevice = <golioth.golioth.Device object at 0xffff9600d9d0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff9600d9d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732138471425,"stop":1732138471425,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732138471426,"stop":1732138471426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732138471427,"stop":1732138471427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732138471427,"stop":1732138471427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732138471428,"stop":1732138471428,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732138471429,"stop":1732138471429,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732138471430,"stop":1732138471430,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732138471430,"stop":1732138471430,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732138471431,"stop":1732138471431,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732138471431,"stop":1732138471432,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732138471431,"stop":1732138471431,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732138471432,"stop":1732138471819,"duration":387},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732138471432,"stop":1732138471432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732138471819,"stop":1732138486715,"duration":14896},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732138486718,"stop":1732138487709,"duration":991},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732138487710,"stop":1732138509678,"duration":21968},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <nrf9160dk.nRF9160DK object at 0xffff95f63190>\ndevice = <golioth.golioth.Device object at 0xffff9600d9d0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff9600d9d0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"8e0e4f0fb3df7e3b","name":"stdout","source":"8e0e4f0fb3df7e3b.txt","type":"text/plain","size":445}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1732138671969,"stop":1732138671969,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732138671973,"stop":1732138672445,"duration":472},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732138672447,"stop":1732138672448,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732138672451,"stop":1732138672453,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"ea02914a59d9"},{"name":"thread","value":"305-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":2,"skipped":0,"passed":52,"unknown":0,"total":56},"items":[{"uid":"5be14f02755602c6","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/5be14f02755602c6","status":"passed","time":{"start":1732064328962,"stop":1732064341289,"duration":12327}},{"uid":"d09ade94ae1729c3","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/d09ade94ae1729c3","status":"passed","time":{"start":1732059100028,"stop":1732059112418,"duration":12390}},{"uid":"958fd74f6c123bac","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/958fd74f6c123bac","status":"passed","time":{"start":1732037295516,"stop":1732037307907,"duration":12391}},{"uid":"4df66167eb5bb333","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/4df66167eb5bb333","status":"passed","time":{"start":1731978011629,"stop":1731978024250,"duration":12621}},{"uid":"d74d9bcdfe1fd842","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/d74d9bcdfe1fd842","status":"passed","time":{"start":1731967488962,"stop":1731967501207,"duration":12245}},{"uid":"493d63ece764b638","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/493d63ece764b638","status":"passed","time":{"start":1731891719890,"stop":1731891733798,"duration":13908}},{"uid":"5f54b0170d76d395","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/5f54b0170d76d395","status":"passed","time":{"start":1731805350002,"stop":1731805362377,"duration":12375}},{"uid":"a3071a778fdb6b13","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/a3071a778fdb6b13","status":"passed","time":{"start":1731718966945,"stop":1731718979265,"duration":12320}},{"uid":"f349809ecf13dc11","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/f349809ecf13dc11","status":"passed","time":{"start":1731632446202,"stop":1731632458614,"duration":12412}},{"uid":"4b2460b2bdc6cb20","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/4b2460b2bdc6cb20","status":"passed","time":{"start":1731608207412,"stop":1731608219719,"duration":12307}},{"uid":"2591e4a964a9d17e","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/2591e4a964a9d17e","status":"passed","time":{"start":1731566216029,"stop":1731566228270,"duration":12241}},{"uid":"3cceece99ab62c46","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/3cceece99ab62c46","status":"passed","time":{"start":1731545718672,"stop":1731545730937,"duration":12265}},{"uid":"df7c3a163f19381d","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/df7c3a163f19381d","status":"passed","time":{"start":1731458988926,"stop":1731459001371,"duration":12445}},{"uid":"ea6ae9b6951bd895","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/ea6ae9b6951bd895","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731373407125,"stop":1731373407125,"duration":0}},{"uid":"990481ff487039d5","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/990481ff487039d5","status":"passed","time":{"start":1731286255583,"stop":1731286267909,"duration":12326}},{"uid":"b746c5b4d734646c","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/b746c5b4d734646c","status":"passed","time":{"start":1731200386661,"stop":1731200398983,"duration":12322}},{"uid":"b10e25b737b2ea09","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/b10e25b737b2ea09","status":"passed","time":{"start":1731113882636,"stop":1731113894938,"duration":12302}},{"uid":"b10b82cad5942744","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/b10b82cad5942744","status":"passed","time":{"start":1731027658402,"stop":1731027670804,"duration":12402}},{"uid":"4baa0573647c37f7","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/4baa0573647c37f7","status":"passed","time":{"start":1730941219287,"stop":1730941231698,"duration":12411}},{"uid":"cd11a56028b463e5","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/cd11a56028b463e5","status":"passed","time":{"start":1730894501226,"stop":1730894513513,"duration":12287}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"fe322025409c7c3d.json","parameterValues":["'nrf9160dk'","'zephyr'"]}