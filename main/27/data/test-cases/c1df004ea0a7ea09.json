{"uid":"c1df004ea0a7ea09","name":"test_set_bool","fullName":"tests.hil.tests.settings.test_settings#test_set_bool","historyId":"0a2a1fb7867670b27b4e5b48eaed00e2","time":{"start":1732304951541,"stop":1732304951541,"duration":0},"status":"broken","statusMessage":"pynrfjprog.APIError.APIError: An error was reported by NRFJPROG DLL: -90 NOT_AVAILABLE_BECAUSE_PROTECTION. \n[Probes.1050245958] [Client] Encountered error -90: Command read_device_info executed for 3 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed reading device info.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Client] Encountered error -90: Command erase_file executed for 209 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed while erasing device.\n\textra: [HighLevel] Failed programming the device.\n\textra: [Probes.1050245958] [nRF52] Failed while erasing device. -90: Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.","statusTrace":"item = <Function test_set_bool>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:81: in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:929: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/plugin.py:110: in board\n    async with board.started():\n/usr/lib/python3.11/contextlib.py:204: in __aenter__\n    return await anext(self.gen)\n/usr/local/lib/python3.11/dist-packages/board.py:28: in started\n    self.program(self.fw_image)\n/usr/local/lib/python3.11/dist-packages/nordicboard.py:14: in program\n    probe.program(fw_image, program_options=program_options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pynrfjprog.HighLevel.DebugProbe object at 0xffff9a590490>\nhex_path = b'settings-zephyr.hex', program_options = ProgramOptions(1, 1, 0, 1)\n\n    def program(self, hex_path, program_options=None):\n        hex_path = str(hex_path).encode(\"utf-8\")\n    \n        if program_options is None:\n            result = self._api.lib.NRFJPROG_program(self._handle, hex_path, self._program_options)\n        else:\n            if not isinstance(program_options, ProgramOptions):\n                raise TypeError(\"The program_options parameter must be an instance of class ProgramOptions.\")\n    \n            result = self._api.lib.NRFJPROG_program(self._handle, hex_path, program_options)\n        if result != NrfjprogdllErr.SUCCESS:\n>           raise APIError(result, error_data=self.get_errors(), log=self._logger.error)\nE           pynrfjprog.APIError.APIError: An error was reported by NRFJPROG DLL: -90 NOT_AVAILABLE_BECAUSE_PROTECTION. \nE           [Probes.1050245958] [Client] Encountered error -90: Command read_device_info executed for 3 milliseconds with result -90\nE           \textra: [Probes.1050245958] [DebugProbe] Failed reading device info.\nE           \textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\nE           \textra: [Probes.1050245958] [Client] Encountered error -90: Command erase_file executed for 209 milliseconds with result -90\nE           \textra: [Probes.1050245958] [DebugProbe] Failed while erasing device.\nE           \textra: [HighLevel] Failed programming the device.\nE           \textra: [Probes.1050245958] [nRF52] Failed while erasing device. -90: Access protection is enabled, can't read device version.\nE           \textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\n\n/usr/local/lib/python3.11/dist-packages/pynrfjprog/HighLevel.py:409: APIError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732304945335,"stop":1732304945335,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732304945336,"stop":1732304945336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732304945337,"stop":1732304945337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732304945338,"stop":1732304945339,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732304945338,"stop":1732304945338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732304945339,"stop":1732304945339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732304945340,"stop":1732304945341,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732304945340,"stop":1732304945340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732304945341,"stop":1732304945342,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732304945341,"stop":1732304945341,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732304945342,"stop":1732304945342,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732304945342,"stop":1732304945342,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732304945343,"stop":1732304945750,"duration":407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732304945750,"stop":1732304948146,"duration":2396},"status":"broken","statusMessage":"pynrfjprog.APIError.APIError: An error was reported by NRFJPROG DLL: -90 NOT_AVAILABLE_BECAUSE_PROTECTION. \n[Probes.1050245958] [Client] Encountered error -90: Command read_device_info executed for 3 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed reading device info.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Client] Encountered error -90: Command erase_file executed for 209 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed while erasing device.\n\textra: [HighLevel] Failed programming the device.\n\textra: [Probes.1050245958] [nRF52] Failed while erasing device. -90: Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 929, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/plugin.py\", line 110, in board\n    async with board.started():\n  File \"/usr/lib/python3.11/contextlib.py\", line 204, in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 28, in started\n    self.program(self.fw_image)\n  File \"/usr/local/lib/python3.11/dist-packages/nordicboard.py\", line 14, in program\n    probe.program(fw_image, program_options=program_options)\n  File \"/usr/local/lib/python3.11/dist-packages/pynrfjprog/HighLevel.py\", line 409, in program\n    raise APIError(result, error_data=self.get_errors(), log=self._logger.error)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"project::0","time":{"start":1732304954909,"stop":1732304954911,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"a2d4d9d02ea1"},{"name":"thread","value":"291-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":54,"unknown":0,"total":63},"items":[{"uid":"6ae9578af61802f6","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/6ae9578af61802f6","status":"passed","time":{"start":1732298045005,"stop":1732298049334,"duration":4329}},{"uid":"ebd000e1815cbf51","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/ebd000e1815cbf51","status":"passed","time":{"start":1732276393427,"stop":1732276397838,"duration":4411}},{"uid":"a2c87211247e164f","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/a2c87211247e164f","status":"passed","time":{"start":1732235840636,"stop":1732235844411,"duration":3775}},{"uid":"e690eae550afd7f4","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/e690eae550afd7f4","status":"passed","time":{"start":1732212111561,"stop":1732212115989,"duration":4428}},{"uid":"b437557a586820b2","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/b437557a586820b2","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1732160542272,"stop":1732160542272,"duration":0}},{"uid":"53aec0d1528b7e30","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/53aec0d1528b7e30","status":"passed","time":{"start":1732150247309,"stop":1732150251088,"duration":3779}},{"uid":"1a082c217b71cb0e","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/1a082c217b71cb0e","status":"passed","time":{"start":1732137774025,"stop":1732137777778,"duration":3753}},{"uid":"ff5a36092f2cc161","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/ff5a36092f2cc161","status":"passed","time":{"start":1732062972983,"stop":1732062976845,"duration":3862}},{"uid":"8fe295b1075ff0d0","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/8fe295b1075ff0d0","status":"passed","time":{"start":1732057498969,"stop":1732057502825,"duration":3856}},{"uid":"9cec9862c0489751","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/9cec9862c0489751","status":"passed","time":{"start":1732035981297,"stop":1732035985145,"duration":3848}},{"uid":"46aa7b32b922734","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/46aa7b32b922734","status":"passed","time":{"start":1731976608113,"stop":1731976612779,"duration":4666}},{"uid":"f7a09c68fe2bc2b5","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/f7a09c68fe2bc2b5","status":"passed","time":{"start":1731965753429,"stop":1731965757398,"duration":3969}},{"uid":"233880e76bd3dcdc","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/233880e76bd3dcdc","status":"passed","time":{"start":1731890301437,"stop":1731890305144,"duration":3707}},{"uid":"64e9a38c6a6745c0","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/64e9a38c6a6745c0","status":"passed","time":{"start":1731804063815,"stop":1731804067733,"duration":3918}},{"uid":"f97cabf994bf621a","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/f97cabf994bf621a","status":"passed","time":{"start":1731717768896,"stop":1731717773069,"duration":4173}},{"uid":"abcdee5388f3b1e0","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/abcdee5388f3b1e0","status":"passed","time":{"start":1731631121630,"stop":1731631125867,"duration":4237}},{"uid":"d477eb741ae891c9","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/d477eb741ae891c9","status":"passed","time":{"start":1731607324245,"stop":1731607328751,"duration":4506}},{"uid":"9749839f9898391f","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/9749839f9898391f","status":"passed","time":{"start":1731564920183,"stop":1731564924230,"duration":4047}},{"uid":"e9c9ca01988bd800","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/e9c9ca01988bd800","status":"passed","time":{"start":1731546439762,"stop":1731546444511,"duration":4749}},{"uid":"7b729f9246d99f32","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/7b729f9246d99f32","status":"passed","time":{"start":1731458141377,"stop":1731458145178,"duration":3801}}]},"tags":["nrf52840dk","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"c1df004ea0a7ea09.json","parameterValues":["'nrf52840dk'","'zephyr'"]}