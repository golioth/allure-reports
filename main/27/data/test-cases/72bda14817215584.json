{"uid":"72bda14817215584","name":"test_cancel_all","fullName":"tests.hil.tests.settings.test_settings#test_cancel_all","historyId":"ffae0428d4c82c3a34e0e75a53083a28","time":{"start":1732304954009,"stop":1732304954009,"duration":0},"status":"broken","statusMessage":"pynrfjprog.APIError.APIError: An error was reported by NRFJPROG DLL: -90 NOT_AVAILABLE_BECAUSE_PROTECTION. \n[Probes.1050245958] [Client] Encountered error -90: Command read_device_info executed for 3 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed reading device info.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Client] Encountered error -90: Command erase_file executed for 209 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed while erasing device.\n\textra: [HighLevel] Failed programming the device.\n\textra: [Probes.1050245958] [nRF52] Failed while erasing device. -90: Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.","statusTrace":"item = <Function test_cancel_all>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:81: in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:929: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n/usr/local/lib/python3.11/dist-packages/plugin.py:110: in board\n    async with board.started():\n/usr/lib/python3.11/contextlib.py:204: in __aenter__\n    return await anext(self.gen)\n/usr/local/lib/python3.11/dist-packages/board.py:28: in started\n    self.program(self.fw_image)\n/usr/local/lib/python3.11/dist-packages/nordicboard.py:14: in program\n    probe.program(fw_image, program_options=program_options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pynrfjprog.HighLevel.DebugProbe object at 0xffff9a590490>\nhex_path = b'settings-zephyr.hex', program_options = ProgramOptions(1, 1, 0, 1)\n\n    def program(self, hex_path, program_options=None):\n        hex_path = str(hex_path).encode(\"utf-8\")\n    \n        if program_options is None:\n            result = self._api.lib.NRFJPROG_program(self._handle, hex_path, self._program_options)\n        else:\n            if not isinstance(program_options, ProgramOptions):\n                raise TypeError(\"The program_options parameter must be an instance of class ProgramOptions.\")\n    \n            result = self._api.lib.NRFJPROG_program(self._handle, hex_path, program_options)\n        if result != NrfjprogdllErr.SUCCESS:\n>           raise APIError(result, error_data=self.get_errors(), log=self._logger.error)\nE           pynrfjprog.APIError.APIError: An error was reported by NRFJPROG DLL: -90 NOT_AVAILABLE_BECAUSE_PROTECTION. \nE           [Probes.1050245958] [Client] Encountered error -90: Command read_device_info executed for 3 milliseconds with result -90\nE           \textra: [Probes.1050245958] [DebugProbe] Failed reading device info.\nE           \textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\nE           \textra: [Probes.1050245958] [Client] Encountered error -90: Command erase_file executed for 209 milliseconds with result -90\nE           \textra: [Probes.1050245958] [DebugProbe] Failed while erasing device.\nE           \textra: [HighLevel] Failed programming the device.\nE           \textra: [Probes.1050245958] [nRF52] Failed while erasing device. -90: Access protection is enabled, can't read device version.\nE           \textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\n\n/usr/local/lib/python3.11/dist-packages/pynrfjprog/HighLevel.py:409: APIError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732304945335,"stop":1732304945335,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732304945336,"stop":1732304945336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732304945337,"stop":1732304945337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732304945338,"stop":1732304945339,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732304945338,"stop":1732304945338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732304945339,"stop":1732304945339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732304945340,"stop":1732304945341,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732304945340,"stop":1732304945340,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732304945341,"stop":1732304945342,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732304945341,"stop":1732304945341,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732304945342,"stop":1732304945342,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732304945342,"stop":1732304945342,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732304945343,"stop":1732304945750,"duration":407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732304945750,"stop":1732304948146,"duration":2396},"status":"broken","statusMessage":"pynrfjprog.APIError.APIError: An error was reported by NRFJPROG DLL: -90 NOT_AVAILABLE_BECAUSE_PROTECTION. \n[Probes.1050245958] [Client] Encountered error -90: Command read_device_info executed for 3 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed reading device info.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Client] Encountered error -90: Command erase_file executed for 209 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed while erasing device.\n\textra: [HighLevel] Failed programming the device.\n\textra: [Probes.1050245958] [nRF52] Failed while erasing device. -90: Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 929, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/plugin.py\", line 110, in board\n    async with board.started():\n  File \"/usr/lib/python3.11/contextlib.py\", line 204, in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 28, in started\n    self.program(self.fw_image)\n  File \"/usr/local/lib/python3.11/dist-packages/nordicboard.py\", line 14, in program\n    probe.program(fw_image, program_options=program_options)\n  File \"/usr/local/lib/python3.11/dist-packages/pynrfjprog/HighLevel.py\", line 409, in program\n    raise APIError(result, error_data=self.get_errors(), log=self._logger.error)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"project::0","time":{"start":1732304954909,"stop":1732304954911,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"a2d4d9d02ea1"},{"name":"thread","value":"291-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":55,"unknown":0,"total":63},"items":[{"uid":"9b34d911453f3999","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/9b34d911453f3999","status":"passed","time":{"start":1732298061321,"stop":1732298092035,"duration":30714}},{"uid":"fb6cfccf755522e9","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/fb6cfccf755522e9","status":"passed","time":{"start":1732276411175,"stop":1732276442639,"duration":31464}},{"uid":"ed1e5f7f7261cc54","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/ed1e5f7f7261cc54","status":"passed","time":{"start":1732235856960,"stop":1732235887509,"duration":30549}},{"uid":"92c8b1ff92c0cb0c","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/92c8b1ff92c0cb0c","status":"passed","time":{"start":1732212129483,"stop":1732212161068,"duration":31585}},{"uid":"38beae497cf3b519","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/38beae497cf3b519","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1732160549054,"stop":1732160549054,"duration":0}},{"uid":"86493057d82627b9","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/86493057d82627b9","status":"passed","time":{"start":1732150263687,"stop":1732150294327,"duration":30640}},{"uid":"317cfc5869358739","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/317cfc5869358739","status":"passed","time":{"start":1732137790454,"stop":1732137821006,"duration":30552}},{"uid":"e55223cac8c58593","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/e55223cac8c58593","status":"passed","time":{"start":1732062989059,"stop":1732063019482,"duration":30423}},{"uid":"66fda17e4ec2ace1","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/66fda17e4ec2ace1","status":"passed","time":{"start":1732057515114,"stop":1732057545736,"duration":30622}},{"uid":"836ee71d81bb1f44","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/836ee71d81bb1f44","status":"passed","time":{"start":1732035997480,"stop":1732036028023,"duration":30543}},{"uid":"6bd17f6aca83ff56","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/6bd17f6aca83ff56","status":"passed","time":{"start":1731976625716,"stop":1731976656440,"duration":30724}},{"uid":"81d8286b6e829d6b","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/81d8286b6e829d6b","status":"passed","time":{"start":1731965770202,"stop":1731965801218,"duration":31016}},{"uid":"cbd3e5d30b96a322","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/cbd3e5d30b96a322","status":"passed","time":{"start":1731890317339,"stop":1731890347897,"duration":30558}},{"uid":"5f887a71d9ca0db4","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/5f887a71d9ca0db4","status":"passed","time":{"start":1731804079894,"stop":1731804110595,"duration":30701}},{"uid":"1515b2698fee93a1","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/1515b2698fee93a1","status":"passed","time":{"start":1731717785088,"stop":1731717815673,"duration":30585}},{"uid":"b6e9dc4e96acd1a","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/b6e9dc4e96acd1a","status":"passed","time":{"start":1731631139853,"stop":1731631171221,"duration":31368}},{"uid":"f4fed561f048e1d6","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/f4fed561f048e1d6","status":"passed","time":{"start":1731607341158,"stop":1731607371778,"duration":30620}},{"uid":"6bae16781cf42acd","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/6bae16781cf42acd","status":"passed","time":{"start":1731564937032,"stop":1731564967407,"duration":30375}},{"uid":"93053f3c20175b23","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/93053f3c20175b23","status":"passed","time":{"start":1731546459472,"stop":1731546490848,"duration":31376}},{"uid":"bceb30c042d1706d","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/bceb30c042d1706d","status":"passed","time":{"start":1731458157943,"stop":1731458188860,"duration":30917}}]},"tags":["nrf52840dk","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"72bda14817215584.json","parameterValues":["'nrf52840dk'","'zephyr'"]}