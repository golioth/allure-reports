{"uid":"8f5a3ee3ea151b1","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1732305127782,"stop":1732305169646,"duration":41864},"status":"failed","statusMessage":"AssertionError: assert 8 == 3\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff94734550>\ndevice = <golioth.golioth.Device object at 0xffff948e28d0>\nproject = <golioth.golioth.Project object at 0xffff95089f90>\nreleases = {'test_blocks': Release <6740e0d6bb6157cf6cdf788a, release_tags=[], device_tags=['6740e0d5bb6157cf6cdf7887'], artifact...ease_tags=[], device_tags=['6740e0d5bb6157cf6cdf7887'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 8 == 3\nE                    +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732305065911,"stop":1732305065911,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732305065912,"stop":1732305065913,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732305065913,"stop":1732305065913,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732305065914,"stop":1732305065914,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732305065915,"stop":1732305065915,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732305065915,"stop":1732305065916,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732305065916,"stop":1732305065916,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732305065917,"stop":1732305065917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732305065917,"stop":1732305065917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732305065918,"stop":1732305065918,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732305065918,"stop":1732305065918,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732305065918,"stop":1732305065919,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732305065919,"stop":1732305104382,"duration":38463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732305104384,"stop":1732305104873,"duration":489},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732305104874,"stop":1732305105822,"duration":948},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732305105822,"stop":1732305108181,"duration":2359},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1732305108183,"stop":1732305108701,"duration":518},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1732305108702,"stop":1732305109465,"duration":763},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1732305109465,"stop":1732305111519,"duration":2054},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1732305127779,"stop":1732305127780,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 8 == 3\n +  where 8 = int('8')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff94734550>\ndevice = <golioth.golioth.Device object at 0xffff948e28d0>\nproject = <golioth.golioth.Project object at 0xffff95089f90>\nreleases = {'test_blocks': Release <6740e0d6bb6157cf6cdf788a, release_tags=[], device_tags=['6740e0d5bb6157cf6cdf7887'], artifact...ease_tags=[], device_tags=['6740e0d5bb6157cf6cdf7887'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 8 == 3\nE                    +  where 8 = int('8')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","steps":[],"attachments":[{"uid":"bb6316c0a99078a8","name":"stdout","source":"bb6316c0a99078a8.txt","type":"text/plain","size":405}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1732305169891,"stop":1732305170880,"duration":989},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1732305170882,"stop":1732305172717,"duration":1835},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1732305172719,"stop":1732305173553,"duration":834},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1732305173555,"stop":1732305173555,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1732305173557,"stop":1732305173557,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732305173559,"stop":1732305173982,"duration":423},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732305173985,"stop":1732305173985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732305173987,"stop":1732305173990,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"732cb92db8a0"},{"name":"thread","value":"247-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":1,"skipped":0,"passed":55,"unknown":0,"total":62},"items":[{"uid":"8b0252cad9c6615f","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/8b0252cad9c6615f","status":"passed","time":{"start":1732297126931,"stop":1732297175790,"duration":48859}},{"uid":"a1c77c55779da9","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/a1c77c55779da9","status":"passed","time":{"start":1732274669350,"stop":1732274719626,"duration":50276}},{"uid":"e9892c2fc6e34a81","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/e9892c2fc6e34a81","status":"passed","time":{"start":1732235563355,"stop":1732235610834,"duration":47479}},{"uid":"ab00cb3029cd6a2c","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/ab00cb3029cd6a2c","status":"passed","time":{"start":1732209858589,"stop":1732209908952,"duration":50363}},{"uid":"5f07a88466932555","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/5f07a88466932555","status":"passed","time":{"start":1732160383941,"stop":1732160431312,"duration":47371}},{"uid":"77299279c457508f","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/77299279c457508f","status":"passed","time":{"start":1732150100069,"stop":1732150150715,"duration":50646}},{"uid":"3fffc79f5f8d6fe4","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/3fffc79f5f8d6fe4","status":"passed","time":{"start":1732136831584,"stop":1732136879011,"duration":47427}},{"uid":"4b04f9860ff8cfa4","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/4b04f9860ff8cfa4","status":"passed","time":{"start":1732062734993,"stop":1732062782331,"duration":47338}},{"uid":"5d6225700eb60ba3","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/5d6225700eb60ba3","status":"passed","time":{"start":1732035725720,"stop":1732035773478,"duration":47758}},{"uid":"e979c62e32f33669","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/e979c62e32f33669","status":"passed","time":{"start":1731976352935,"stop":1731976401264,"duration":48329}},{"uid":"895cf4f2e240d695","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/895cf4f2e240d695","status":"passed","time":{"start":1731964493835,"stop":1731964544230,"duration":50395}},{"uid":"1e873a7f5dae6d51","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/1e873a7f5dae6d51","status":"passed","time":{"start":1731890031419,"stop":1731890108603,"duration":77184}},{"uid":"37f8c90bd33c02da","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/37f8c90bd33c02da","status":"passed","time":{"start":1731803668465,"stop":1731803745997,"duration":77532}},{"uid":"d81996787018ed2d","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/d81996787018ed2d","status":"passed","time":{"start":1731717150184,"stop":1731717227373,"duration":77189}},{"uid":"cd8a1cbc69340b2c","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/cd8a1cbc69340b2c","status":"passed","time":{"start":1731630756793,"stop":1731630833994,"duration":77201}},{"uid":"3ef050ded8101991","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/3ef050ded8101991","status":"passed","time":{"start":1731606345131,"stop":1731606423577,"duration":78446}},{"uid":"751e27cf00a21d8b","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/751e27cf00a21d8b","status":"passed","time":{"start":1731563942592,"stop":1731564023523,"duration":80931}},{"uid":"5ffcc543571b7002","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/5ffcc543571b7002","status":"passed","time":{"start":1731544301963,"stop":1731544382295,"duration":80332}},{"uid":"e84ffaaa5fe62889","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/e84ffaaa5fe62889","status":"passed","time":{"start":1731457900731,"stop":1731457981925,"duration":81194}},{"uid":"608c4051125abf3f","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/608c4051125abf3f","status":"passed","time":{"start":1731371490867,"stop":1731371568708,"duration":77841}}]},"tags":["mikes_orange_pi","esp-idf","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"8f5a3ee3ea151b1.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}