{"uid":"5c9963d7f5b08862","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1732305105725,"stop":1732305168927,"duration":63202},"status":"failed","statusMessage":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9b1261d0>\ndevice = <golioth.golioth.Device object at 0xffff9b17c0d0>\nproject = <golioth.golioth.Project object at 0xffff9b0d76d0>\nreleases = {'test_blocks': Release <6740e0b3bb6157cf6cdf7878, release_tags=[], device_tags=['6740e0b2bb6157cf6cdf7875'], artifact...ease_tags=[], device_tags=['6740e0b2bb6157cf6cdf7875'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 9 == 8\nE                    +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732305043483,"stop":1732305043484,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732305043484,"stop":1732305043484,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732305043485,"stop":1732305043485,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732305043486,"stop":1732305043486,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732305043487,"stop":1732305043488,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732305043487,"stop":1732305043487,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732305043488,"stop":1732305043488,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732305043489,"stop":1732305043489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732305043489,"stop":1732305043489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732305043490,"stop":1732305043490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732305043490,"stop":1732305043490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732305043490,"stop":1732305043491,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732305043491,"stop":1732305069090,"duration":25599},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732305069091,"stop":1732305069655,"duration":564},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732305069656,"stop":1732305070540,"duration":884},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732305070541,"stop":1732305073164,"duration":2623},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1732305073164,"stop":1732305073739,"duration":575},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1732305073740,"stop":1732305074574,"duration":834},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1732305074575,"stop":1732305076754,"duration":2179},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1732305105722,"stop":1732305105722,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9b1261d0>\ndevice = <golioth.golioth.Device object at 0xffff9b17c0d0>\nproject = <golioth.golioth.Project object at 0xffff9b0d76d0>\nreleases = {'test_blocks': Release <6740e0b3bb6157cf6cdf7878, release_tags=[], device_tags=['6740e0b2bb6157cf6cdf7875'], artifact...ease_tags=[], device_tags=['6740e0b2bb6157cf6cdf7875'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 9 == 8\nE                    +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","steps":[],"attachments":[{"uid":"5c2178f94f63398f","name":"stdout","source":"5c2178f94f63398f.txt","type":"text/plain","size":942}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1732305169077,"stop":1732305170096,"duration":1019},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1732305170098,"stop":1732305172272,"duration":2174},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1732305172274,"stop":1732305173257,"duration":983},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1732305173259,"stop":1732305173259,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1732305173261,"stop":1732305173261,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732305173263,"stop":1732305173726,"duration":463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732305173729,"stop":1732305173729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732305173731,"stop":1732305173740,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"7d8e8c13669e"},{"name":"thread","value":"243-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":5,"skipped":0,"passed":36,"unknown":0,"total":59},"items":[{"uid":"1f48bf24bcdffc01","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/1f48bf24bcdffc01","status":"passed","time":{"start":1732297204550,"stop":1732297252072,"duration":47522}},{"uid":"853fd8c4cb8afb65","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/853fd8c4cb8afb65","status":"passed","time":{"start":1732275363038,"stop":1732275409842,"duration":46804}},{"uid":"53e64a8a4c26efbb","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/53e64a8a4c26efbb","status":"passed","time":{"start":1732235668509,"stop":1732235715515,"duration":47006}},{"uid":"106c356f80be429e","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/106c356f80be429e","status":"passed","time":{"start":1732210628082,"stop":1732210678194,"duration":50112}},{"uid":"a2989ee667cfc2f6","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/a2989ee667cfc2f6","status":"passed","time":{"start":1732160385829,"stop":1732160435495,"duration":49666}},{"uid":"4855eb8567304ec2","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/4855eb8567304ec2","status":"passed","time":{"start":1732150506659,"stop":1732150554208,"duration":47549}},{"uid":"33aee2ffcd6790ad","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/33aee2ffcd6790ad","status":"passed","time":{"start":1732136992194,"stop":1732137039260,"duration":47066}},{"uid":"84c70ada2d8a0bba","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/84c70ada2d8a0bba","status":"passed","time":{"start":1732062819538,"stop":1732062866365,"duration":46827}},{"uid":"a85a02e79d998c05","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/a85a02e79d998c05","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1732035836645,"stop":1732035885393,"duration":48748}},{"uid":"366c8dddc89604bf","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/366c8dddc89604bf","status":"failed","statusDetails":"AssertionError: assert 7 == 0\n +  where 7 = int('7')","time":{"start":1731976479901,"stop":1731976512554,"duration":32653}},{"uid":"f289d558318c4315","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/f289d558318c4315","status":"passed","time":{"start":1731965354986,"stop":1731965403854,"duration":48868}},{"uid":"890043f69929ee01","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/890043f69929ee01","status":"passed","time":{"start":1731890122101,"stop":1731890198619,"duration":76518}},{"uid":"e472c0a0ae3b0455","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/e472c0a0ae3b0455","status":"passed","time":{"start":1731803803833,"stop":1731803881777,"duration":77944}},{"uid":"7c6a7e21152699d1","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/7c6a7e21152699d1","status":"passed","time":{"start":1731717229605,"stop":1731717307134,"duration":77529}},{"uid":"362c13adfeead566","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/362c13adfeead566","status":"passed","time":{"start":1731630743455,"stop":1731630820605,"duration":77150}},{"uid":"9b08deb59d010e9f","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/9b08deb59d010e9f","status":"passed","time":{"start":1731606451161,"stop":1731606528271,"duration":77110}},{"uid":"4e9100d372596d74","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/4e9100d372596d74","status":"passed","time":{"start":1731564868040,"stop":1731564944665,"duration":76625}},{"uid":"5a1c0f241d9a127e","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/5a1c0f241d9a127e","status":"passed","time":{"start":1731544366490,"stop":1731544444546,"duration":78056}},{"uid":"a5242d235a9d8ef1","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/a5242d235a9d8ef1","status":"passed","time":{"start":1731457974334,"stop":1731458054376,"duration":80042}},{"uid":"36b5105a99853d63","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/36b5105a99853d63","status":"passed","time":{"start":1731198754894,"stop":1731198832453,"duration":77559}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","jons_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"5c9963d7f5b08862.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}