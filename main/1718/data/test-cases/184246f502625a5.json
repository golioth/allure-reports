{"uid":"184246f502625a5","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"2f204ffe20d9a076758a1035d6c7af62","time":{"start":1731025979843,"stop":1731025993481,"duration":13638},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffffb7e15110>\ndevice = <golioth.golioth.Device object at 0xffffb7d74510>\nproject = <golioth.golioth.Project object at 0xffffb94a3990>\nreleases = {'test_blocks': Release <672d5c1f56be7a2f90e95ae3, release_tags=[], device_tags=['672d5c1d56be7a2f90e95ae0'], artifact..., release_tags=[], device_tags=['672d5c1d56be7a2f90e95ae0'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731025924274,"stop":1731025924274,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731025924275,"stop":1731025924275,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731025924276,"stop":1731025924276,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731025924277,"stop":1731025924277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731025924278,"stop":1731025924278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731025924279,"stop":1731025924279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731025924279,"stop":1731025924279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731025924280,"stop":1731025924280,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731025924281,"stop":1731025924281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731025924282,"stop":1731025924282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731025924282,"stop":1731025924282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731025924283,"stop":1731025936946,"duration":12663},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731025924283,"stop":1731025924283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731025936949,"stop":1731025937593,"duration":644},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731025937594,"stop":1731025940057,"duration":2463},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731025940058,"stop":1731025947853,"duration":7795},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1731025947855,"stop":1731025948472,"duration":617},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1731025948472,"stop":1731025949550,"duration":1078},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1731025949550,"stop":1731025952470,"duration":2920},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1731025979840,"stop":1731025979841,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffffb7e15110>\ndevice = <golioth.golioth.Device object at 0xffffb7d74510>\nproject = <golioth.golioth.Project object at 0xffffb94a3990>\nreleases = {'test_blocks': Release <672d5c1f56be7a2f90e95ae3, release_tags=[], device_tags=['672d5c1d56be7a2f90e95ae0'], artifact..., release_tags=[], device_tags=['672d5c1d56be7a2f90e95ae0'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"adb7cefea024a57a","name":"stdout","source":"adb7cefea024a57a.txt","type":"text/plain","size":1260}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1731025993640,"stop":1731025995080,"duration":1440},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1731025995082,"stop":1731025997274,"duration":2192},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1731025997276,"stop":1731025998427,"duration":1151},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1731025998429,"stop":1731025998429,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1731025998431,"stop":1731025998431,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731025998433,"stop":1731025998948,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731025998950,"stop":1731025998950,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731025998952,"stop":1731025998964,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"cddddebdb142"},{"name":"thread","value":"280-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":6,"skipped":0,"passed":29,"unknown":0,"total":38},"items":[{"uid":"181c01e7dc476183","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/181c01e7dc476183","status":"passed","time":{"start":1730940163482,"stop":1730940241132,"duration":77650}},{"uid":"efe56bd3a17def1b","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/efe56bd3a17def1b","status":"broken","statusDetails":"httpx.HTTPStatusError: Server error '500 Internal Server Error' for url 'https://api.golioth.io/v1/projects/firmware_ci/tags/672b557556be7a2f90e9403d'\nFor more information check: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500","time":{"start":1730893188073,"stop":1730893265887,"duration":77814}},{"uid":"854fcbe19f365096","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/854fcbe19f365096","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1730853173260,"stop":1730853173260,"duration":0}},{"uid":"8a6208e21baeac0c","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/8a6208e21baeac0c","status":"passed","time":{"start":1730766767003,"stop":1730766845155,"duration":78152}},{"uid":"a18991377d467498","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/a18991377d467498","status":"passed","time":{"start":1730680464273,"stop":1730680542126,"duration":77853}},{"uid":"f65a1899c1d978c3","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/f65a1899c1d978c3","status":"passed","time":{"start":1730594115496,"stop":1730594193404,"duration":77908}},{"uid":"90bec081b86b7d4a","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/90bec081b86b7d4a","status":"passed","time":{"start":1730507576972,"stop":1730507655368,"duration":78396}},{"uid":"c702fe971a1af2fe","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/c702fe971a1af2fe","status":"failed","statusDetails":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","time":{"start":1730421328237,"stop":1730421398291,"duration":70054}},{"uid":"a9bf3c37ea9799fa","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/a9bf3c37ea9799fa","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1730334795234,"stop":1730334839846,"duration":44612}},{"uid":"154741f870e83e5d","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/154741f870e83e5d","status":"passed","time":{"start":1730303186193,"stop":1730303266508,"duration":80315}},{"uid":"9bcf769ee0c04573","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/9bcf769ee0c04573","status":"passed","time":{"start":1730248334748,"stop":1730248412493,"duration":77745}},{"uid":"84a50121aa7336b8","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/84a50121aa7336b8","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1730162054253,"stop":1730162085074,"duration":30821}},{"uid":"69eb0b377f0239e0","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/69eb0b377f0239e0","status":"passed","time":{"start":1730075683718,"stop":1730075761401,"duration":77683}},{"uid":"dfac505efab5ee1b","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/dfac505efab5ee1b","status":"passed","time":{"start":1729989316270,"stop":1729989394091,"duration":77821}},{"uid":"22f6b1cd30fa5963","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/22f6b1cd30fa5963","status":"passed","time":{"start":1729902771905,"stop":1729902850965,"duration":79060}},{"uid":"eff871bdcdae389f","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/eff871bdcdae389f","status":"passed","time":{"start":1729816412582,"stop":1729816494549,"duration":81967}},{"uid":"80bf58ab7b3c7cba","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/80bf58ab7b3c7cba","status":"passed","time":{"start":1729729943464,"stop":1729730021056,"duration":77592}},{"uid":"bf2aa33b0dc963f2","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/bf2aa33b0dc963f2","status":"passed","time":{"start":1729643480602,"stop":1729643558129,"duration":77527}},{"uid":"93d0b3d21278fd9","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/93d0b3d21278fd9","status":"passed","time":{"start":1729557178305,"stop":1729557256347,"duration":78042}},{"uid":"92bcbadd940dd428","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/92bcbadd940dd428","status":"passed","time":{"start":1729470799221,"stop":1729470876877,"duration":77656}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"184246f502625a5.json","parameterValues":["'nrf52840dk'","'zephyr'"]}