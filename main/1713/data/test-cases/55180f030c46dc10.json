{"uid":"55180f030c46dc10","name":"test_object_return","fullName":"tests.hil.tests.rpc.test_rpc#test_object_return","historyId":"2e3ced3a0011f019575bd690c25b195f","time":{"start":1730594207554,"stop":1730594212861,"duration":5307},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff99a24710>\nmethod = 'object_return_type', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff999ae190>\ndevice = <golioth.golioth.Device object at 0xffff99a24750>\n\n    async def test_object_return(board, device):\n>       rsp = await device.rpc.object_return_type()\n\ntests/hil/tests/rpc/test_rpc.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff99a24710>\nmethod = 'object_return_type', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730594114503,"stop":1730594114503,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730594114504,"stop":1730594114504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730594114505,"stop":1730594114505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730594114506,"stop":1730594114506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730594114506,"stop":1730594114507,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730594114507,"stop":1730594114507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730594114508,"stop":1730594114508,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730594114509,"stop":1730594114510,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730594114509,"stop":1730594114509,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730594114510,"stop":1730594114510,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730594114511,"stop":1730594114511,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730594114512,"stop":1730594114944,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730594114512,"stop":1730594114512,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730594114945,"stop":1730594166813,"duration":51868},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730594166815,"stop":1730594167724,"duration":909},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730594167724,"stop":1730594180613,"duration":12889},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730594254148,"stop":1730594254149,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730594254154,"stop":1730594254639,"duration":485},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730594254641,"stop":1730594254642,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730594254644,"stop":1730594254647,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"126544318b6a"},{"name":"thread","value":"246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":28,"unknown":0,"total":31},"items":[{"uid":"94cdff2a52d1ca8e","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/94cdff2a52d1ca8e","status":"passed","time":{"start":1730507621961,"stop":1730507623182,"duration":1221}},{"uid":"ecd694f5d1a3e548","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/ecd694f5d1a3e548","status":"passed","time":{"start":1730421428945,"stop":1730421430169,"duration":1224}},{"uid":"ee7d079541c2aa1d","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/ee7d079541c2aa1d","status":"passed","time":{"start":1730334871923,"stop":1730334873177,"duration":1254}},{"uid":"4870139c003bbba","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/4870139c003bbba","status":"passed","time":{"start":1730303308480,"stop":1730303310456,"duration":1976}},{"uid":"5bc5a15283d56b7e","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/5bc5a15283d56b7e","status":"passed","time":{"start":1730248367156,"stop":1730248368143,"duration":987}},{"uid":"7c2099db968392cf","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/7c2099db968392cf","status":"passed","time":{"start":1730162078038,"stop":1730162079284,"duration":1246}},{"uid":"d0b2603f5628789e","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/d0b2603f5628789e","status":"passed","time":{"start":1730075735388,"stop":1730075736863,"duration":1475}},{"uid":"986ddbfebc79be94","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/986ddbfebc79be94","status":"passed","time":{"start":1729989402813,"stop":1729989404064,"duration":1251}},{"uid":"416e05e171a9d15a","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/416e05e171a9d15a","status":"passed","time":{"start":1729902816575,"stop":1729902817833,"duration":1258}},{"uid":"484d2a1ea49b2ed8","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/484d2a1ea49b2ed8","status":"passed","time":{"start":1729816454214,"stop":1729816455443,"duration":1229}},{"uid":"3ef868b416d75ac5","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/3ef868b416d75ac5","status":"passed","time":{"start":1729729941489,"stop":1729729942468,"duration":979}},{"uid":"3edf5de40b39d481","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/3edf5de40b39d481","status":"passed","time":{"start":1729645343055,"stop":1729645344275,"duration":1220}},{"uid":"bfbded718e942069","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/bfbded718e942069","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729557337134,"stop":1729557342444,"duration":5310}},{"uid":"47b068f0ca23aff5","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/47b068f0ca23aff5","status":"passed","time":{"start":1729470862928,"stop":1729470864147,"duration":1219}},{"uid":"2b8f7358cba7ee40","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/2b8f7358cba7ee40","status":"passed","time":{"start":1729384607069,"stop":1729384610100,"duration":3031}},{"uid":"f3ff71b3134bf9ba","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/f3ff71b3134bf9ba","status":"passed","time":{"start":1729368459462,"stop":1729368460680,"duration":1218}},{"uid":"84b5cc381cf0814","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/84b5cc381cf0814","status":"passed","time":{"start":1729361307420,"stop":1729361308638,"duration":1218}},{"uid":"e62580380a64dcab","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/e62580380a64dcab","status":"passed","time":{"start":1729297994636,"stop":1729297995606,"duration":970}},{"uid":"c8bc09bb4829efa3","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/c8bc09bb4829efa3","status":"passed","time":{"start":1729211580963,"stop":1729211582180,"duration":1217}},{"uid":"83357829ab83f641","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/83357829ab83f641","status":"passed","time":{"start":1729202672904,"stop":1729202674147,"duration":1243}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"55180f030c46dc10.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}