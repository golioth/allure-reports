{"uid":"d43a1be1c016dcd0","name":"test_fw_update","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.fw_update.pytest.test_sample#test_fw_update","historyId":"e35d87be40a3f24a162aaab8c9432c62","time":{"start":1760402483233,"stop":1760402483233,"duration":0},"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"item = <Function test_fw_update>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_zephyr_samples/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py:98: in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:948: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:940: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:910: in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <golioth.golioth.Project object at 0xffffa6822cf0>\nblueprint_id = None\n\n    @pytest.fixture(scope=\"module\")\n    async def artifact(project, blueprint_id):\n        # Find Artifact that matches this device and desired update version\n    \n        artifact = None\n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if (a.blueprint == blueprint_id and\n                a.version == UPDATE_VERSION and\n                a.package == UPDATE_PACKAGE):\n                artifact = a\n    \n>       assert artifact != None\nE       assert None != None\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/conftest.py:53: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760402483237,"stop":1760402483237,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760402483237,"stop":1760402483238,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info","time":{"start":1760402483238,"stop":1760402483415,"duration":177},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760402483238,"stop":1760402483238,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760402483416,"stop":1760402483417,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760402483416,"stop":1760402483416,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760402483417,"stop":1760402483417,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1760402483417,"stop":1760402483418,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1760402483418,"stop":1760402483420,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760402483420,"stop":1760402484358,"duration":938},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760402484359,"stop":1760402485009,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_id","time":{"start":1760402485010,"stop":1760402485333,"duration":323},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifact","time":{"start":1760402485333,"stop":1760402485655,"duration":322},"status":"failed","statusMessage":"AssertionError: assert None != None\n","statusTrace":"  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py\", line 98, in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 948, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 940, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 910, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/modules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/conftest.py\", line 53, in artifact\n    assert artifact != None\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"item = <Function test_fw_update>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_zephyr_samples/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py:98: in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:948: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:940: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:910: in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <golioth.golioth.Project object at 0xffffa6822cf0>\nblueprint_id = None\n\n    @pytest.fixture(scope=\"module\")\n    async def artifact(project, blueprint_id):\n        # Find Artifact that matches this device and desired update version\n    \n        artifact = None\n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if (a.blueprint == blueprint_id and\n                a.version == UPDATE_VERSION and\n                a.package == UPDATE_PACKAGE):\n                artifact = a\n    \n>       assert artifact != None\nE       assert None != None\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/conftest.py:53: AssertionError","steps":[],"attachments":[{"uid":"98cef7d3bb930d51","name":"log","source":"98cef7d3bb930d51.txt","type":"text/plain","size":12078}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"blueprint_id::0","time":{"start":1760402486198,"stop":1760402486199,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760402486201,"stop":1760402486521,"duration":320},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760402486523,"stop":1760402486524,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1760402486525,"stop":1760402486525,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info::0","time":{"start":1760402486533,"stop":1760402486535,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"3e70e0a51b9d"},{"name":"thread","value":"350-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.fw_update.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":4,"skipped":0,"passed":7,"unknown":0,"total":24},"items":[{"uid":"318375e2af89ef29","reportUrl":"https://golioth.github.io/allure-reports/main/766//#testresult/318375e2af89ef29","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1760317102365,"stop":1760317102365,"duration":0}},{"uid":"ab8d2d468bdbd650","reportUrl":"https://golioth.github.io/allure-reports/main/765//#testresult/ab8d2d468bdbd650","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1760229356271,"stop":1760229356271,"duration":0}},{"uid":"306844b107e8d090","reportUrl":"https://golioth.github.io/allure-reports/main/763//#testresult/306844b107e8d090","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1760143096442,"stop":1760143096442,"duration":0}},{"uid":"d14f310e601950ba","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/d14f310e601950ba","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1760056169338,"stop":1760056169338,"duration":0}},{"uid":"6b01e8a89e0e9398","reportUrl":"https://golioth.github.io/allure-reports/main/761//#testresult/6b01e8a89e0e9398","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1760040413893,"stop":1760040413893,"duration":0}},{"uid":"568ad17c14d9549d","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/568ad17c14d9549d","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759992988015,"stop":1759992988015,"duration":0}},{"uid":"bb340dfdefe19051","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/bb340dfdefe19051","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759970922514,"stop":1759970922514,"duration":0}},{"uid":"e18a320863354303","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/e18a320863354303","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759883141176,"stop":1759883141176,"duration":0}},{"uid":"b73cbdce33824448","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/b73cbdce33824448","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759862665384,"stop":1759862665384,"duration":0}},{"uid":"6ad69095f039ad78","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/6ad69095f039ad78","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759848492437,"stop":1759848492437,"duration":0}},{"uid":"4f9034a4acf7fa68","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/4f9034a4acf7fa68","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759802842988,"stop":1759802842988,"duration":0}},{"uid":"6fea705e4e006b71","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/6fea705e4e006b71","status":"failed","statusDetails":"AssertionError: assert None != None","time":{"start":1759781389563,"stop":1759781389563,"duration":0}},{"uid":"906deb2f0fd2b4c7","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/906deb2f0fd2b4c7","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1759710042995,"stop":1759710227361,"duration":184366}},{"uid":"1149a54c2656661a","reportUrl":"https://golioth.github.io/allure-reports/main/741//#testresult/1149a54c2656661a","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1759626557409,"stop":1759626760057,"duration":202648}},{"uid":"8a904e707c696615","reportUrl":"https://golioth.github.io/allure-reports/main/740//#testresult/8a904e707c696615","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1759538364910,"stop":1759538576888,"duration":211978}},{"uid":"8b8ff77230915247","reportUrl":"https://golioth.github.io/allure-reports/main/738//#testresult/8b8ff77230915247","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1759453097509,"stop":1759453294920,"duration":197411}},{"uid":"4ffba104d6c605f4","reportUrl":"https://golioth.github.io/allure-reports/main/734//#testresult/4ffba104d6c605f4","status":"passed","time":{"start":1759364319445,"stop":1759364478675,"duration":159230}},{"uid":"97ed892acc9af555","reportUrl":"https://golioth.github.io/allure-reports/main/733//#testresult/97ed892acc9af555","status":"passed","time":{"start":1759281085759,"stop":1759281222876,"duration":137117}},{"uid":"76edb63161e45b21","reportUrl":"https://golioth.github.io/allure-reports/main/730//#testresult/76edb63161e45b21","status":"passed","time":{"start":1759194809400,"stop":1759194884265,"duration":74865}},{"uid":"ec84358a80f41a73","reportUrl":"https://golioth.github.io/allure-reports/main/727//#testresult/ec84358a80f41a73","status":"passed","time":{"start":1759112329675,"stop":1759112413022,"duration":83347}}]},"tags":["anyio","sams_orange_pi","esp32_devkitc_wrover","zephyr"]},"source":"d43a1be1c016dcd0.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}