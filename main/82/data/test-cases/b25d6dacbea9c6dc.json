{"uid":"b25d6dacbea9c6dc","name":"test_float_return","fullName":"tests.hil.tests.rpc.test_rpc#test_float_return","historyId":"af8563b86c45d8e9c8a5e0894d4dc4a6","time":{"start":1737419467265,"stop":1737419472587,"duration":5322},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff93619290>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffff9367df10>\ndevice = <golioth.golioth.Device object at 0xffff93665350>\n\n    async def test_float_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"float\")\n\ntests/hil/tests/rpc/test_rpc.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff93619290>\nmethod = 'basic_return_type', params = ('float',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1737419437359,"stop":1737419437359,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1737419437360,"stop":1737419437360,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1737419437361,"stop":1737419437361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1737419437362,"stop":1737419437362,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737419437363,"stop":1737419437363,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737419437363,"stop":1737419437363,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1737419437364,"stop":1737419437364,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1737419437365,"stop":1737419437365,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1737419437366,"stop":1737419437366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737419437366,"stop":1737419437366,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737419437367,"stop":1737419437367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737419437367,"stop":1737419437367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737419437368,"stop":1737419438053,"duration":685},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1737419438054,"stop":1737419452774,"duration":14720},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737419452776,"stop":1737419453724,"duration":948},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1737419453725,"stop":1737419457408,"duration":3683},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1737419530964,"stop":1737419530964,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737419530966,"stop":1737419531366,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1737419531368,"stop":1737419531370,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737419531372,"stop":1737419531374,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"f01f2badcb19"},{"name":"thread","value":"235-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":54,"unknown":0,"total":58},"items":[{"uid":"a453314dc3323369","reportUrl":"https://golioth.github.io/allure-reports/main/81//#testresult/a453314dc3323369","status":"passed","time":{"start":1737332786816,"stop":1737332787560,"duration":744}},{"uid":"7b977f5cc6e056c4","reportUrl":"https://golioth.github.io/allure-reports/main/80//#testresult/7b977f5cc6e056c4","status":"passed","time":{"start":1737246495876,"stop":1737246497107,"duration":1231}},{"uid":"d55dd470be1cbe1d","reportUrl":"https://golioth.github.io/allure-reports/main/79//#testresult/d55dd470be1cbe1d","status":"passed","time":{"start":1737160248630,"stop":1737160251360,"duration":2730}},{"uid":"b31186f683bede63","reportUrl":"https://golioth.github.io/allure-reports/main/78//#testresult/b31186f683bede63","status":"passed","time":{"start":1737074792622,"stop":1737074793364,"duration":742}},{"uid":"1ba6e73606e26c3b","reportUrl":"https://golioth.github.io/allure-reports/main/76//#testresult/1ba6e73606e26c3b","status":"passed","time":{"start":1737055141966,"stop":1737055142713,"duration":747}},{"uid":"234c756c37d3ab9a","reportUrl":"https://golioth.github.io/allure-reports/main/68//#testresult/234c756c37d3ab9a","status":"passed","time":{"start":1736993986291,"stop":1736993987784,"duration":1493}},{"uid":"e59e93ee5ad3f831","reportUrl":"https://golioth.github.io/allure-reports/main/67//#testresult/e59e93ee5ad3f831","status":"passed","time":{"start":1736987321820,"stop":1736987323049,"duration":1229}},{"uid":"c4495996f564c7d0","reportUrl":"https://golioth.github.io/allure-reports/main/56//#testresult/c4495996f564c7d0","status":"passed","time":{"start":1736901269188,"stop":1736901270183,"duration":995}},{"uid":"2838351334fd6790","reportUrl":"https://golioth.github.io/allure-reports/main/56//#testresult/2838351334fd6790","status":"passed","time":{"start":1736901269188,"stop":1736901270183,"duration":995}},{"uid":"e597287cf04c77bb","reportUrl":"https://golioth.github.io/allure-reports/main/54//#testresult/e597287cf04c77bb","status":"passed","time":{"start":1736727919608,"stop":1736727920587,"duration":979}},{"uid":"90cbe4affa407280","reportUrl":"https://golioth.github.io/allure-reports/main/53//#testresult/90cbe4affa407280","status":"passed","time":{"start":1736642236419,"stop":1736642237160,"duration":741}},{"uid":"5da52a403fe687b3","reportUrl":"https://golioth.github.io/allure-reports/main/49//#testresult/5da52a403fe687b3","status":"passed","time":{"start":1736577091675,"stop":1736577092661,"duration":986}},{"uid":"f33b4bdbbf1f65e","reportUrl":"https://golioth.github.io/allure-reports/main/48//#testresult/f33b4bdbbf1f65e","status":"passed","time":{"start":1736555529096,"stop":1736555530326,"duration":1230}},{"uid":"e64e503ad66b9c3f","reportUrl":"https://golioth.github.io/allure-reports/main/45//#testresult/e64e503ad66b9c3f","status":"passed","time":{"start":1736469154625,"stop":1736469155366,"duration":741}},{"uid":"ea2488b9dadbd67e","reportUrl":"https://golioth.github.io/allure-reports/main/44//#testresult/ea2488b9dadbd67e","status":"passed","time":{"start":1736456365682,"stop":1736456367434,"duration":1752}},{"uid":"675aa7827ab3d032","reportUrl":"https://golioth.github.io/allure-reports/main/34//#testresult/675aa7827ab3d032","status":"passed","time":{"start":1736383104329,"stop":1736383105518,"duration":1189}},{"uid":"9dbb921d434ad5ad","reportUrl":"https://golioth.github.io/allure-reports/main/28/#testresult/9dbb921d434ad5ad","status":"passed","time":{"start":1736296614183,"stop":1736296615174,"duration":991}},{"uid":"f0fc05c767e5e5f1","reportUrl":"https://golioth.github.io/allure-reports/main/23/#testresult/f0fc05c767e5e5f1","status":"passed","time":{"start":1736266272283,"stop":1736266273503,"duration":1220}},{"uid":"e7c4ed469a08649b","reportUrl":"https://golioth.github.io/allure-reports/main/21/#testresult/e7c4ed469a08649b","status":"passed","time":{"start":1736210132235,"stop":1736210133214,"duration":979}},{"uid":"17787fb9e397a72","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/17787fb9e397a72","status":"passed","time":{"start":1736183884194,"stop":1736183884935,"duration":741}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"b25d6dacbea9c6dc.json","parameterValues":["'nrf9160dk'","'zephyr'"]}