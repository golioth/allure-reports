{"uid":"d2ff510997937d41","name":"test_stream","fullName":"examples.esp_idf.stream.pytest.test_sample#test_stream","historyId":"8de1da5b76f241e44d5455d86d5f64f8","time":{"start":1758934274548,"stop":1758934274548,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"seconds = 20\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:46: in receive_some\n    return await self.serial.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1579: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_stream>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        allure_platform_name = item.config.getoption(\"--allure-platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(allure_platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", allure_platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{allure_platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_hil/plugin.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py:98: in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:948: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:940: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:910: in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/plugin.py:127: in board\n    async with board.started():\n               ^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:214: in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:39: in started\n    await self.set_wifi_credentials(self.wifi_ssid, self.wifi_psk)\n/root/venv/lib/python3.13/site-packages/pytest_hil/espidfboard.py:24: in set_wifi_credentials\n    await self.set_setting('wifi/ssid', f'\"{ssid}\"')\n/root/venv/lib/python3.13/site-packages/pytest_hil/espidfboard.py:18: in set_setting\n    await self.send_cmd(f'settings set {key} {value}', wait_str='saved')\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:85: in send_cmd\n    await self.wait_for_regex_in_line(self.PROMPT)\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 20\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"baud","time":{"start":1758934274553,"stop":1758934274554,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1758934274553,"stop":1758934274553,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1758934274554,"stop":1758934274555,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1758934274555,"stop":1758934274555,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1758934274556,"stop":1758934274556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1758934274556,"stop":1758934274557,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1758934274557,"stop":1758934319828,"duration":45271},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py\", line 98, in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 948, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 940, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py\", line 910, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pytest_hil/plugin.py\", line 127, in board\n    async with board.started():\n               ~~~~~~~~~~~~~^^\n  File \"/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py\", line 214, in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pytest_hil/board.py\", line 39, in started\n    await self.set_wifi_credentials(self.wifi_ssid, self.wifi_psk)\n  File \"/root/venv/lib/python3.13/site-packages/pytest_hil/espidfboard.py\", line 24, in set_wifi_credentials\n    await self.set_setting('wifi/ssid', f'\"{ssid}\"')\n  File \"/root/venv/lib/python3.13/site-packages/pytest_hil/espidfboard.py\", line 18, in set_setting\n    await self.send_cmd(f'settings set {key} {value}', wait_str='saved')\n  File \"/root/venv/lib/python3.13/site-packages/pytest_hil/board.py\", line 85, in send_cmd\n    await self.wait_for_regex_in_line(self.PROMPT)\n  File \"/root/venv/lib/python3.13/site-packages/pytest_hil/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ~~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py\", line 162, in __exit__\n    self.gen.throw(value)\n    ~~~~~~~~~~~~~~^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/trio/_timeouts.py\", line 187, in fail_after\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"api_url","time":{"start":1758934274557,"stop":1758934274557,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1758934274595,"stop":1758934274595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1758934274595,"stop":1758934274595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1758934274596,"stop":1758934274596,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1758934274596,"stop":1758934274596,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1758934274597,"stop":1758934274597,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"seconds = 20\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:46: in receive_some\n    return await self.serial.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1579: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_stream>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        allure_platform_name = item.config.getoption(\"--allure-platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(allure_platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", allure_platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{allure_platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_hil/plugin.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/anyio/pytest_plugin.py:98: in wrapper\n    yield from runner.run_asyncgen_fixture(local_func, kwargs)\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:948: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:940: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/root/venv/lib/python3.13/site-packages/anyio/_backends/_trio.py:910: in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/plugin.py:127: in board\n    async with board.started():\n               ^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:214: in __aenter__\n    return await anext(self.gen)\n           ^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:39: in started\n    await self.set_wifi_credentials(self.wifi_ssid, self.wifi_psk)\n/root/venv/lib/python3.13/site-packages/pytest_hil/espidfboard.py:24: in set_wifi_credentials\n    await self.set_setting('wifi/ssid', f'\"{ssid}\"')\n/root/venv/lib/python3.13/site-packages/pytest_hil/espidfboard.py:18: in set_setting\n    await self.send_cmd(f'settings set {key} {value}', wait_str='saved')\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:85: in send_cmd\n    await self.wait_for_regex_in_line(self.PROMPT)\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 20\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","steps":[],"attachments":[{"uid":"eae611041862d928","name":"stdout","source":"eae611041862d928.txt","type":"text/plain","size":2023}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"dacc8c9ac112"},{"name":"thread","value":"294-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"81d8b00d0e9b9eb7","reportUrl":"https://golioth.github.io/allure-reports/main/719//#testresult/81d8b00d0e9b9eb7","status":"passed","time":{"start":1758847796314,"stop":1758847819429,"duration":23115}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","mikes_testbench"]},"source":"d2ff510997937d41.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}