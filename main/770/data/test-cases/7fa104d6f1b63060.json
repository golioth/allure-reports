{"uid":"7fa104d6f1b63060","name":"test_multiple_artifacts","fullName":"tests.hil.tests.ota.test_ota#test_multiple_artifacts","historyId":"b34d001880645481a8e5b8fd9ee397cf","time":{"start":1760573487121,"stop":1760573517783,"duration":30662},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"seconds = 30\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:46: in receive_some\n    return await self.serial.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1579: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nartifacts = {'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>, 'test_blocks': ...lueprint=None>, 'test_multiple': Artifact <65f8bcd2d8a3255581782b58, package=main, version=1.2.5, blueprint=None>, ...}\nboard = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff8be63a10>\nproject = <golioth.golioth.Project object at 0xffff8bd79be0>\nreleases = {'test_blocks': Release <68f0382c36dd8044fe8cfce9, release_tags=[], device_tags=['68f0382b36dd8044fe8cfce6'], artifact...ease_tags=[], device_tags=['68f0382b36dd8044fe8cfce6'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_multiple_artifacts(artifacts, board, project, releases):\n        await project.releases.rollout_set(releases[\"test_multiple\"].id, True)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest received', timeout_s=30)\n        assert None != await board.wait_for_regex_in_line('Manifest successfully decoded', timeout_s=2)\n        assert None != await board.wait_for_regex_in_line('Found main component', timeout_s=30)\n        assert None != await board.wait_for_regex_in_line('Found walrus component', timeout_s=2)\n    \n        # Test all parts of OTA component\n    \n        await verify_component_values(board, artifacts[\"multi_artifact\"].info)\n    \n        # Test manifest get\n>       assert None != await board.wait_for_regex_in_line('Manifest get SHA matches stored SHA', timeout_s=30)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/hil/tests/ota/test_ota.py:160: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 30\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760573452476,"stop":1760573452476,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760573452477,"stop":1760573452477,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760573452477,"stop":1760573452478,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760573452478,"stop":1760573452478,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760573452479,"stop":1760573452479,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760573452479,"stop":1760573452480,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760573452480,"stop":1760573452480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760573452480,"stop":1760573477740,"duration":25260},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760573477742,"stop":1760573478378,"duration":636},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760573478378,"stop":1760573479150,"duration":772},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760573479151,"stop":1760573482316,"duration":3165},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1760573482317,"stop":1760573482875,"duration":558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1760573482876,"stop":1760573483659,"duration":783},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1760573483660,"stop":1760573485667,"duration":2007},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1760573487118,"stop":1760573487119,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"seconds = 30\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:46: in receive_some\n    return await self.serial.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1579: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nartifacts = {'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>, 'test_blocks': ...lueprint=None>, 'test_multiple': Artifact <65f8bcd2d8a3255581782b58, package=main, version=1.2.5, blueprint=None>, ...}\nboard = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff8be63a10>\nproject = <golioth.golioth.Project object at 0xffff8bd79be0>\nreleases = {'test_blocks': Release <68f0382c36dd8044fe8cfce9, release_tags=[], device_tags=['68f0382b36dd8044fe8cfce6'], artifact...ease_tags=[], device_tags=['68f0382b36dd8044fe8cfce6'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_multiple_artifacts(artifacts, board, project, releases):\n        await project.releases.rollout_set(releases[\"test_multiple\"].id, True)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest received', timeout_s=30)\n        assert None != await board.wait_for_regex_in_line('Manifest successfully decoded', timeout_s=2)\n        assert None != await board.wait_for_regex_in_line('Found main component', timeout_s=30)\n        assert None != await board.wait_for_regex_in_line('Found walrus component', timeout_s=2)\n    \n        # Test all parts of OTA component\n    \n        await verify_component_values(board, artifacts[\"multi_artifact\"].info)\n    \n        # Test manifest get\n>       assert None != await board.wait_for_regex_in_line('Manifest get SHA matches stored SHA', timeout_s=30)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/hil/tests/ota/test_ota.py:160: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 30\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","steps":[],"attachments":[{"uid":"b74ba40c30e04c55","name":"stdout","source":"b74ba40c30e04c55.txt","type":"text/plain","size":918}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1760573518427,"stop":1760573519200,"duration":773},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1760573591912,"stop":1760573593776,"duration":1864},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1760573593778,"stop":1760573594557,"duration":779},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1760573594559,"stop":1760573594559,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1760573594561,"stop":1760573594561,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760573594563,"stop":1760573594954,"duration":391},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760573594956,"stop":1760573594956,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760573594958,"stop":1760573594968,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"3e541922198b"},{"name":"thread","value":"242-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":23,"unknown":0,"total":27},"items":[{"uid":"537fdef68c6dd13e","reportUrl":"https://golioth.github.io/allure-reports/main/769//#testresult/537fdef68c6dd13e","status":"passed","time":{"start":1760487085236,"stop":1760487090282,"duration":5046}},{"uid":"c7d319476669662f","reportUrl":"https://golioth.github.io/allure-reports/main/768//#testresult/c7d319476669662f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1760475999179,"stop":1760476029839,"duration":30660}},{"uid":"c8ab97419e8b0f05","reportUrl":"https://golioth.github.io/allure-reports/main/767//#testresult/c8ab97419e8b0f05","status":"passed","time":{"start":1760400753329,"stop":1760400756910,"duration":3581}},{"uid":"298ca0a59e1204e1","reportUrl":"https://golioth.github.io/allure-reports/main/766//#testresult/298ca0a59e1204e1","status":"passed","time":{"start":1760314300997,"stop":1760314305173,"duration":4176}},{"uid":"e13b46bdaf5dc549","reportUrl":"https://golioth.github.io/allure-reports/main/765//#testresult/e13b46bdaf5dc549","status":"passed","time":{"start":1760227973375,"stop":1760227974967,"duration":1592}},{"uid":"f809d7474ea034ac","reportUrl":"https://golioth.github.io/allure-reports/main/763//#testresult/f809d7474ea034ac","status":"passed","time":{"start":1760141802960,"stop":1760141806538,"duration":3578}},{"uid":"175437fce4a3063e","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/175437fce4a3063e","status":"passed","time":{"start":1760055292950,"stop":1760055295229,"duration":2279}},{"uid":"261a2203ba87b864","reportUrl":"https://golioth.github.io/allure-reports/main/761//#testresult/261a2203ba87b864","status":"passed","time":{"start":1760039645831,"stop":1760039649164,"duration":3333}},{"uid":"180a522a764c903e","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/180a522a764c903e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1759991784497,"stop":1759991815117,"duration":30620}},{"uid":"46ebd9339d6a094c","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/46ebd9339d6a094c","status":"passed","time":{"start":1759969020746,"stop":1759969024366,"duration":3620}},{"uid":"fdc7fc7769e899a3","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/fdc7fc7769e899a3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1759882256011,"stop":1759882286807,"duration":30796}},{"uid":"97a8f95550bbe08c","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/97a8f95550bbe08c","status":"passed","time":{"start":1759860917862,"stop":1759860924230,"duration":6368}},{"uid":"ddf5d6f75d847b80","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/ddf5d6f75d847b80","status":"passed","time":{"start":1759847970225,"stop":1759847973847,"duration":3622}},{"uid":"59fae212432a0282","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/59fae212432a0282","status":"passed","time":{"start":1759796686785,"stop":1759796690157,"duration":3372}},{"uid":"ce973a2584170561","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/ce973a2584170561","status":"passed","time":{"start":1759775835850,"stop":1759775840699,"duration":4849}},{"uid":"d997ff093cb91506","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/d997ff093cb91506","status":"passed","time":{"start":1759709476405,"stop":1759709481032,"duration":4627}},{"uid":"44fde894333c407c","reportUrl":"https://golioth.github.io/allure-reports/main/741//#testresult/44fde894333c407c","status":"passed","time":{"start":1759623425186,"stop":1759623429720,"duration":4534}},{"uid":"817b5a3c6377cad5","reportUrl":"https://golioth.github.io/allure-reports/main/740//#testresult/817b5a3c6377cad5","status":"passed","time":{"start":1759536875593,"stop":1759536879755,"duration":4162}},{"uid":"38c8baa3408fa310","reportUrl":"https://golioth.github.io/allure-reports/main/738//#testresult/38c8baa3408fa310","status":"passed","time":{"start":1759450672374,"stop":1759450674362,"duration":1988}},{"uid":"86a9af217f770be0","reportUrl":"https://golioth.github.io/allure-reports/main/734//#testresult/86a9af217f770be0","status":"passed","time":{"start":1759365170998,"stop":1759365173255,"duration":2257}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","jons_orange_pi","anyio"]},"source":"7fa104d6f1b63060.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}