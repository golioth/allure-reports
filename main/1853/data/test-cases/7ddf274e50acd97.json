{"uid":"7ddf274e50acd97","name":"test_invalid_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_invalid_arg","historyId":"0a49aca8cfb10b2513f91807ea5eaea3","time":{"start":1732754902892,"stop":1732754908346,"duration":5454},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff7f052cd0>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff807902d0>\ndevice = <golioth.golioth.Device object at 0xffff7f0523d0>\n\n    async def test_invalid_arg(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           rsp = await device.rpc.basic_return_type(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff7f052cd0>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732754815526,"stop":1732754815527,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732754815527,"stop":1732754815528,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732754815528,"stop":1732754815528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732754815529,"stop":1732754815529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732754815530,"stop":1732754815530,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732754815531,"stop":1732754815531,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732754815532,"stop":1732754815532,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732754815533,"stop":1732754815533,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732754815533,"stop":1732754815533,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732754815534,"stop":1732754815534,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732754815534,"stop":1732754815534,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732754815535,"stop":1732754815535,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732754815535,"stop":1732754815937,"duration":402},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732754815938,"stop":1732754857352,"duration":41414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732754857353,"stop":1732754858331,"duration":978},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732754858332,"stop":1732754887274,"duration":28942},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732754956528,"stop":1732754956528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732754956530,"stop":1732754956915,"duration":385},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732754956917,"stop":1732754956918,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732754956921,"stop":1732754956923,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"fae4fb68c8e5"},{"name":"thread","value":"270-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":68,"unknown":0,"total":77},"items":[{"uid":"b337d32ad3e74e2b","reportUrl":"https://golioth.github.io/allure-reports/main/1846//#testresult/b337d32ad3e74e2b","status":"passed","time":{"start":1732668533731,"stop":1732668536285,"duration":2554}},{"uid":"67f6926c22e7e4fd","reportUrl":"https://golioth.github.io/allure-reports/main/1845//#testresult/67f6926c22e7e4fd","status":"passed","time":{"start":1732642656236,"stop":1732642658424,"duration":2188}},{"uid":"49ba755cc13e04f1","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/49ba755cc13e04f1","status":"passed","time":{"start":1732577310567,"stop":1732577313376,"duration":2809}},{"uid":"3cf7c1a24cd84826","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/3cf7c1a24cd84826","status":"passed","time":{"start":1732577310567,"stop":1732577313376,"duration":2809}},{"uid":"24eac129b77503d7","reportUrl":"https://golioth.github.io/allure-reports/main/1843//#testresult/24eac129b77503d7","status":"passed","time":{"start":1732582079404,"stop":1732582081574,"duration":2170}},{"uid":"24f2eb33c335deaa","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/24f2eb33c335deaa","status":"passed","time":{"start":1732577310567,"stop":1732577313376,"duration":2809}},{"uid":"51eb216f1740cb6b","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/51eb216f1740cb6b","status":"passed","time":{"start":1732577310567,"stop":1732577313376,"duration":2809}},{"uid":"e70de57503dece0c","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/e70de57503dece0c","status":"passed","time":{"start":1732566942202,"stop":1732566943771,"duration":1569}},{"uid":"3f5d29d9a0e40ec2","reportUrl":"https://golioth.github.io/allure-reports/main/1838//#testresult/3f5d29d9a0e40ec2","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732495931736,"stop":1732495931736,"duration":0}},{"uid":"ee35d83921d9b2c8","reportUrl":"https://golioth.github.io/allure-reports/main/1837//#testresult/ee35d83921d9b2c8","status":"passed","time":{"start":1732409647450,"stop":1732409649876,"duration":2426}},{"uid":"e6add86b61de0c5","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/e6add86b61de0c5","status":"passed","time":{"start":1732323682523,"stop":1732323685345,"duration":2822}},{"uid":"d03044fc83fcfb68","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/d03044fc83fcfb68","status":"passed","time":{"start":1732321439729,"stop":1732321441294,"duration":1565}},{"uid":"24ccda8b78b73060","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/24ccda8b78b73060","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732309029725,"stop":1732309029725,"duration":0}},{"uid":"659d27ccbe58cce9","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/659d27ccbe58cce9","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732306251543,"stop":1732306251543,"duration":0}},{"uid":"62ebd0ea7dd9b9ff","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/62ebd0ea7dd9b9ff","status":"passed","time":{"start":1732297824976,"stop":1732297826659,"duration":1683}},{"uid":"fbbc389ff1f01160","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/fbbc389ff1f01160","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732276975828,"stop":1732276975828,"duration":0}},{"uid":"132e1311a7ec5359","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/132e1311a7ec5359","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732236699884,"stop":1732236699884,"duration":0}},{"uid":"b3a0f1b89caefb4f","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/b3a0f1b89caefb4f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732213575854,"stop":1732213575854,"duration":0}},{"uid":"7880c2d63e79d865","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/7880c2d63e79d865","status":"passed","time":{"start":1732161336335,"stop":1732161338887,"duration":2552}},{"uid":"a92eebe186f16032","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/a92eebe186f16032","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732151102082,"stop":1732151102082,"duration":0}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"7ddf274e50acd97.json","parameterValues":["'rak5010'","'zephyr'"]}