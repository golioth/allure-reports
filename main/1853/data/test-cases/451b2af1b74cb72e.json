{"uid":"451b2af1b74cb72e","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"62f122e1e892b6a4ca7700385fbbf6dd","time":{"start":1732753769096,"stop":1732753790737,"duration":21641},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f909640b110>\ndevice = <golioth.golioth.Device object at 0x7f90963f4250>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1732753768075,"stop":1732753768075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732753768075,"stop":1732753768075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732753768076,"stop":1732753768076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732753768076,"stop":1732753768076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732753768076,"stop":1732753768077,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732753768076,"stop":1732753768076,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732753768077,"stop":1732753768077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732753768077,"stop":1732753768077,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732753768077,"stop":1732753768427,"duration":350},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732753768428,"stop":1732753769031,"duration":603},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732753769032,"stop":1732753769051,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732753769051,"stop":1732753769095,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f909640b110>\ndevice = <golioth.golioth.Device object at 0x7f90963f4250>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"473c57a81401f18d","name":"log","source":"473c57a81401f18d.txt","type":"text/plain","size":16620}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732753790856,"stop":1732753791369,"duration":513},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732753791369,"stop":1732753791635,"duration":266},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732753791635,"stop":1732753791636,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732753791637,"stop":1732753791637,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_32"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_32"},{"name":"tag","value":"GitHub Actions 11"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"3122de4cc943"},{"name":"thread","value":"45007-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_32'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bd6744214690d69c","status":"passed","time":{"start":1732753766385,"stop":1732753787888,"duration":21503}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":67,"unknown":0,"total":69},"items":[{"uid":"94f6da259054a27","reportUrl":"https://golioth.github.io/allure-reports/main/1846//#testresult/94f6da259054a27","status":"passed","time":{"start":1732667363730,"stop":1732667385269,"duration":21539}},{"uid":"413d008a55570236","reportUrl":"https://golioth.github.io/allure-reports/main/1845//#testresult/413d008a55570236","status":"passed","time":{"start":1732641567024,"stop":1732641588641,"duration":21617}},{"uid":"ba87bde5fbf59998","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/ba87bde5fbf59998","status":"passed","time":{"start":1732566382157,"stop":1732566403784,"duration":21627}},{"uid":"56e22323fa37577d","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/56e22323fa37577d","status":"passed","time":{"start":1732566382157,"stop":1732566403784,"duration":21627}},{"uid":"1b1c17017b2841d9","reportUrl":"https://golioth.github.io/allure-reports/main/1843//#testresult/1b1c17017b2841d9","status":"passed","time":{"start":1732580952968,"stop":1732580974828,"duration":21860}},{"uid":"a0f054b43603a7f8","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/a0f054b43603a7f8","status":"passed","time":{"start":1732566382157,"stop":1732566403784,"duration":21627}},{"uid":"c425813404192851","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/c425813404192851","status":"passed","time":{"start":1732566382157,"stop":1732566403784,"duration":21627}},{"uid":"e4240b29453abf5d","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/e4240b29453abf5d","status":"passed","time":{"start":1732566382157,"stop":1732566403784,"duration":21627}},{"uid":"3397339b691d9c2a","reportUrl":"https://golioth.github.io/allure-reports/main/1838//#testresult/3397339b691d9c2a","status":"passed","time":{"start":1732494598057,"stop":1732494619377,"duration":21320}},{"uid":"18656e6a43028472","reportUrl":"https://golioth.github.io/allure-reports/main/1837//#testresult/18656e6a43028472","status":"passed","time":{"start":1732408272902,"stop":1732408294449,"duration":21547}},{"uid":"d50acd47293c6a60","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/d50acd47293c6a60","status":"passed","time":{"start":1732321702741,"stop":1732321724396,"duration":21655}},{"uid":"90a0f933910c38c9","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/90a0f933910c38c9","status":"passed","time":{"start":1732320280022,"stop":1732320301663,"duration":21641}},{"uid":"69b115a270d826fd","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/69b115a270d826fd","status":"passed","time":{"start":1732305139095,"stop":1732305160490,"duration":21395}},{"uid":"7c3a830d00509d69","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/7c3a830d00509d69","status":"passed","time":{"start":1732304154767,"stop":1732304176219,"duration":21452}},{"uid":"41c231070fa88053","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/41c231070fa88053","status":"passed","time":{"start":1732296899339,"stop":1732296921039,"duration":21700}},{"uid":"60934ecab534d535","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/60934ecab534d535","status":"passed","time":{"start":1732274430545,"stop":1732274451942,"duration":21397}},{"uid":"33c35b2abc3736ae","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/33c35b2abc3736ae","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1732235372763,"stop":1732235394512,"duration":21749}},{"uid":"3259fd29f01f0062","reportUrl":"https://golioth.github.io/allure-reports/main/26//#testresult/3259fd29f01f0062","status":"passed","time":{"start":1732223484354,"stop":1732223506125,"duration":21771}},{"uid":"541b23bbc43e0165","reportUrl":"https://golioth.github.io/allure-reports/main/25//#testresult/541b23bbc43e0165","status":"passed","time":{"start":1732220636430,"stop":1732220657785,"duration":21355}},{"uid":"2cab83664ec4d7f9","reportUrl":"https://golioth.github.io/allure-reports/main/26//#testresult/2cab83664ec4d7f9","status":"passed","time":{"start":1732220633597,"stop":1732220655002,"duration":21405}}]},"tags":["GitHub Actions 11","anyio","native_sim_32","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"451b2af1b74cb72e.json","parameterValues":["'native_sim_32'","'zephyr'"]}