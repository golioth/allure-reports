{"uid":"2eade61c905c02b2","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"d8989de114c223477a1d53d831d12112","time":{"start":1732753778562,"stop":1732753800338,"duration":21776},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f405a376850>\ndevice = <golioth.golioth.Device object at 0x7f405a364a90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"device_name","time":{"start":1732753777092,"stop":1732753777092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1732753777092,"stop":1732753777092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732753777092,"stop":1732753777092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732753777092,"stop":1732753777092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732753777092,"stop":1732753777093,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732753777092,"stop":1732753777092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732753777093,"stop":1732753777094,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732753777094,"stop":1732753777094,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732753777094,"stop":1732753777552,"duration":458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732753777552,"stop":1732753778508,"duration":956},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732753778509,"stop":1732753778530,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732753778530,"stop":1732753778561,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0x7f405a376850>\ndevice = <golioth.golioth.Device object at 0x7f405a364a90>, wifi_ssid = None\nwifi_psk = None\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"30cc3cd94a08f14a","name":"log","source":"30cc3cd94a08f14a.txt","type":"text/plain","size":16319}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732753800465,"stop":1732753800984,"duration":519},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732753800984,"stop":1732753801241,"duration":257},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732753801241,"stop":1732753801242,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732753801243,"stop":1732753801244,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"native_sim_64"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.native_sim_64"},{"name":"tag","value":"GitHub Actions 20"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"49d24d92cbf2"},{"name":"thread","value":"44329-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'native_sim_64'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"da319d541ba9cab8","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1732753778559,"stop":1732753800243,"duration":21684}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":67,"unknown":0,"total":69},"items":[{"uid":"30c850b147401d9b","reportUrl":"https://golioth.github.io/allure-reports/main/1846//#testresult/30c850b147401d9b","status":"passed","time":{"start":1732667363610,"stop":1732667385092,"duration":21482}},{"uid":"ce33705570b598e","reportUrl":"https://golioth.github.io/allure-reports/main/1845//#testresult/ce33705570b598e","status":"passed","time":{"start":1732641555693,"stop":1732641577238,"duration":21545}},{"uid":"64bff0e46e343794","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/64bff0e46e343794","status":"passed","time":{"start":1732566384922,"stop":1732566406461,"duration":21539}},{"uid":"9dbc03915558c5ce","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/9dbc03915558c5ce","status":"passed","time":{"start":1732566384922,"stop":1732566406461,"duration":21539}},{"uid":"b1676f2aa198c031","reportUrl":"https://golioth.github.io/allure-reports/main/1843//#testresult/b1676f2aa198c031","status":"passed","time":{"start":1732580957145,"stop":1732580978782,"duration":21637}},{"uid":"3c046ae53beb5254","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/3c046ae53beb5254","status":"passed","time":{"start":1732566384922,"stop":1732566406461,"duration":21539}},{"uid":"22342aabc430c133","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/22342aabc430c133","status":"passed","time":{"start":1732566384922,"stop":1732566406461,"duration":21539}},{"uid":"73f19fb2ffb04f35","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/73f19fb2ffb04f35","status":"passed","time":{"start":1732566384922,"stop":1732566406461,"duration":21539}},{"uid":"f10540cdf60ef1ae","reportUrl":"https://golioth.github.io/allure-reports/main/1838//#testresult/f10540cdf60ef1ae","status":"passed","time":{"start":1732494596659,"stop":1732494618019,"duration":21360}},{"uid":"80d07609c2586c74","reportUrl":"https://golioth.github.io/allure-reports/main/1837//#testresult/80d07609c2586c74","status":"passed","time":{"start":1732408297118,"stop":1732408318507,"duration":21389}},{"uid":"7a9ed9e3a83ddcf6","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/7a9ed9e3a83ddcf6","status":"passed","time":{"start":1732321702472,"stop":1732321724023,"duration":21551}},{"uid":"13c7c05374501619","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/13c7c05374501619","status":"passed","time":{"start":1732320300308,"stop":1732320321702,"duration":21394}},{"uid":"e91b924d65972c05","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/e91b924d65972c05","status":"passed","time":{"start":1732305141824,"stop":1732305163481,"duration":21657}},{"uid":"b199d84b7cf8067","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/b199d84b7cf8067","status":"passed","time":{"start":1732304128162,"stop":1732304149839,"duration":21677}},{"uid":"7500cb96915ff026","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/7500cb96915ff026","status":"passed","time":{"start":1732296898248,"stop":1732296919891,"duration":21643}},{"uid":"f5fb1b3bdff6138c","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/f5fb1b3bdff6138c","status":"passed","time":{"start":1732274421521,"stop":1732274443163,"duration":21642}},{"uid":"cc61742af7d8e919","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/cc61742af7d8e919","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1732235368644,"stop":1732235390196,"duration":21552}},{"uid":"bcfaf208a51a2d1e","reportUrl":"https://golioth.github.io/allure-reports/main/26//#testresult/bcfaf208a51a2d1e","status":"passed","time":{"start":1732223480842,"stop":1732223502197,"duration":21355}},{"uid":"1193c61139f3c9c5","reportUrl":"https://golioth.github.io/allure-reports/main/25//#testresult/1193c61139f3c9c5","status":"passed","time":{"start":1732220646350,"stop":1732220667969,"duration":21619}},{"uid":"ffa651186ab282d8","reportUrl":"https://golioth.github.io/allure-reports/main/26//#testresult/ffa651186ab282d8","status":"passed","time":{"start":1732220638251,"stop":1732220659818,"duration":21567}}]},"tags":["native_sim_64","anyio","GitHub Actions 20","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"2eade61c905c02b2.json","parameterValues":["'native_sim_64'","'zephyr'"]}