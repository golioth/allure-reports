{"uid":"2307735c6e4a9e7","name":"test_set_string","fullName":"tests.hil.tests.settings.test_settings#test_set_string","historyId":"74e5b6a2f7b35d875b490879205e12ce","time":{"start":1760141865085,"stop":1760141872338,"duration":7253},"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:394: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:256: in handle_async_request\n    raise exc from None\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:236: in handle_async_request\n    response = await connection.handle_async_request(\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:101: in handle_async_request\n    raise exc\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:78: in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:124: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_backends/auto.py:31: in connect_tcp\n    return await self._backend.connect_tcp(\n/root/venv/lib/python3.13/site-packages/httpcore/_backends/trio.py:128: in connect_tcp\n    with map_exceptions(exc_map):\n         ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/root/venv/lib/python3.13/site-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nboard = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff9a5742f0>\ndevice = <golioth.golioth.Device object at 0xffff9a6a30e0>\n\n    async def test_set_string(board, device):\n        await device.settings.set('TEST_STRING', \"bar\")\n    \n        assert None != await board.wait_for_regex_in_line('Received test_string: bar', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_STRING', None)\n\ntests/hil/tests/settings/test_settings.py:180: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/hil/tests/settings/test_settings.py:45: in assert_settings_error\n    await device.refresh()\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:423: in refresh\n    resp = await c.get(self.base_url)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1768: in get\n    return await self.request(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1540: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1629: in send\n    response = await self._send_handling_auth(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1657: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1694: in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1730: in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:393: in handle_async_request\n    with map_httpcore_exceptions():\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:118: ConnectError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760141745707,"stop":1760141745707,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760141745708,"stop":1760141745708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760141745709,"stop":1760141745709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760141745709,"stop":1760141745709,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760141745710,"stop":1760141745710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760141745710,"stop":1760141745711,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760141745711,"stop":1760141745711,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760141745711,"stop":1760141746180,"duration":469},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760141746181,"stop":1760141771696,"duration":25515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760141771698,"stop":1760141772374,"duration":676},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760141772375,"stop":1760141791100,"duration":18725},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:394: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:256: in handle_async_request\n    raise exc from None\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:236: in handle_async_request\n    response = await connection.handle_async_request(\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:101: in handle_async_request\n    raise exc\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:78: in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:124: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_backends/auto.py:31: in connect_tcp\n    return await self._backend.connect_tcp(\n/root/venv/lib/python3.13/site-packages/httpcore/_backends/trio.py:128: in connect_tcp\n    with map_exceptions(exc_map):\n         ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/root/venv/lib/python3.13/site-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nboard = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff9a5742f0>\ndevice = <golioth.golioth.Device object at 0xffff9a6a30e0>\n\n    async def test_set_string(board, device):\n        await device.settings.set('TEST_STRING', \"bar\")\n    \n        assert None != await board.wait_for_regex_in_line('Received test_string: bar', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_STRING', None)\n\ntests/hil/tests/settings/test_settings.py:180: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/hil/tests/settings/test_settings.py:45: in assert_settings_error\n    await device.refresh()\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:423: in refresh\n    resp = await c.get(self.base_url)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1768: in get\n    return await self.request(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1540: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1629: in send\n    response = await self._send_handling_auth(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1657: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1694: in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1730: in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:393: in handle_async_request\n    with map_httpcore_exceptions():\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:118: ConnectError","steps":[],"attachments":[{"uid":"a0e53be35e210989","name":"stdout","source":"a0e53be35e210989.txt","type":"text/plain","size":273}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1760141930585,"stop":1760141930586,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760141930588,"stop":1760141931026,"duration":438},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760141931028,"stop":1760141931033,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760141931035,"stop":1760141931038,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"763c2860af3c"},{"name":"thread","value":"238-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":19,"unknown":0,"total":21},"items":[{"uid":"c659fa0bfff1a8fb","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/c659fa0bfff1a8fb","status":"passed","time":{"start":1760055755960,"stop":1760055759455,"duration":3495}},{"uid":"d280d5151ef451cd","reportUrl":"https://golioth.github.io/allure-reports/main/761//#testresult/d280d5151ef451cd","status":"passed","time":{"start":1760040159949,"stop":1760040163266,"duration":3317}},{"uid":"bcf27766f525680d","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/bcf27766f525680d","status":"passed","time":{"start":1759992421957,"stop":1759992425667,"duration":3710}},{"uid":"d4e159b0b9f3397e","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/d4e159b0b9f3397e","status":"passed","time":{"start":1759969384444,"stop":1759969387920,"duration":3476}},{"uid":"7d6fd1a9fb691dfa","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/7d6fd1a9fb691dfa","status":"passed","time":{"start":1759883028739,"stop":1759883032182,"duration":3443}},{"uid":"7d3b8b6812392aa9","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/7d3b8b6812392aa9","status":"passed","time":{"start":1759861238179,"stop":1759861240607,"duration":2428}},{"uid":"4de5d4360ae021b4","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/4de5d4360ae021b4","status":"passed","time":{"start":1759848623663,"stop":1759848626575,"duration":2912}},{"uid":"eab0269fff4a62aa","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/eab0269fff4a62aa","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759799523505,"stop":1759799523505,"duration":0}},{"uid":"7705279cd7c15022","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/7705279cd7c15022","status":"passed","time":{"start":1759782111334,"stop":1759782114257,"duration":2923}},{"uid":"1edd1ff296fe14c3","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/1edd1ff296fe14c3","status":"passed","time":{"start":1759712601570,"stop":1759712604737,"duration":3167}},{"uid":"468b4ee353dd5bec","reportUrl":"https://golioth.github.io/allure-reports/main/741//#testresult/468b4ee353dd5bec","status":"passed","time":{"start":1759624047271,"stop":1759624050572,"duration":3301}},{"uid":"89f1cecf8fe0b7ac","reportUrl":"https://golioth.github.io/allure-reports/main/740//#testresult/89f1cecf8fe0b7ac","status":"passed","time":{"start":1759536972217,"stop":1759536975349,"duration":3132}},{"uid":"3f0d745d40aadff9","reportUrl":"https://golioth.github.io/allure-reports/main/738//#testresult/3f0d745d40aadff9","status":"passed","time":{"start":1759450557677,"stop":1759450561104,"duration":3427}},{"uid":"dd4f3e98a9e47504","reportUrl":"https://golioth.github.io/allure-reports/main/734//#testresult/dd4f3e98a9e47504","status":"passed","time":{"start":1759364661474,"stop":1759364665194,"duration":3720}},{"uid":"26d3352a9e67cf23","reportUrl":"https://golioth.github.io/allure-reports/main/733//#testresult/26d3352a9e67cf23","status":"passed","time":{"start":1759280470576,"stop":1759280473888,"duration":3312}},{"uid":"5255e7c76197981c","reportUrl":"https://golioth.github.io/allure-reports/main/730//#testresult/5255e7c76197981c","status":"passed","time":{"start":1759191530918,"stop":1759191534347,"duration":3429}},{"uid":"68c1b39b4497ea2","reportUrl":"https://golioth.github.io/allure-reports/main/727//#testresult/68c1b39b4497ea2","status":"passed","time":{"start":1759114043928,"stop":1759114047231,"duration":3303}},{"uid":"67f160ecf7376d3d","reportUrl":"https://golioth.github.io/allure-reports/main/725//#testresult/67f160ecf7376d3d","status":"passed","time":{"start":1759019216524,"stop":1759019219652,"duration":3128}},{"uid":"344e4ed1f8fc5aae","reportUrl":"https://golioth.github.io/allure-reports/main/724//#testresult/344e4ed1f8fc5aae","status":"passed","time":{"start":1758932374034,"stop":1758932377255,"duration":3221}},{"uid":"8303e657c2d6308a","reportUrl":"https://golioth.github.io/allure-reports/main/719//#testresult/8303e657c2d6308a","status":"passed","time":{"start":1758847852171,"stop":1758847854886,"duration":2715}}]},"tags":["esp-idf","anyio","sams_orange_pi","esp32_devkitc_wrover_espidf"]},"source":"2307735c6e4a9e7.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}