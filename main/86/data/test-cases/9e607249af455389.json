{"uid":"9e607249af455389","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"ee936b7d181ae9cc4057b23c9f7088a4","time":{"start":1737507098043,"stop":1737507103385,"duration":5342},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff9db38e10>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff9db7f950>\ndevice = <golioth.golioth.Device object at 0xffff9db39d50>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff9db38e10>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1737507043772,"stop":1737507043772,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1737507043773,"stop":1737507043773,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1737507043773,"stop":1737507043774,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1737507043774,"stop":1737507043774,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737507043775,"stop":1737507043776,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737507043775,"stop":1737507043775,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1737507043776,"stop":1737507043776,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1737507043776,"stop":1737507043777,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1737507043777,"stop":1737507043777,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737507043777,"stop":1737507043778,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737507043778,"stop":1737507043778,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737507043778,"stop":1737507043778,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737507043779,"stop":1737507044451,"duration":672},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1737507044452,"stop":1737507086036,"duration":41584},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737507086038,"stop":1737507086971,"duration":933},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1737507086971,"stop":1737507095346,"duration":8375},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1737507155522,"stop":1737507155523,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737507155525,"stop":1737507156169,"duration":644},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1737507156171,"stop":1737507156173,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737507156175,"stop":1737507156177,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"80c89872ad29"},{"name":"thread","value":"240-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":54,"unknown":0,"total":60},"items":[{"uid":"3d451b61b1e55fd4","reportUrl":"https://golioth.github.io/allure-reports/main/85//#testresult/3d451b61b1e55fd4","status":"passed","time":{"start":1737495193454,"stop":1737495195053,"duration":1599}},{"uid":"42c0e1cdc00b306e","reportUrl":"https://golioth.github.io/allure-reports/main/82//#testresult/42c0e1cdc00b306e","status":"passed","time":{"start":1737419007434,"stop":1737419009799,"duration":2365}},{"uid":"1dc256be76fb82ef","reportUrl":"https://golioth.github.io/allure-reports/main/81//#testresult/1dc256be76fb82ef","status":"passed","time":{"start":1737331909714,"stop":1737331911236,"duration":1522}},{"uid":"4a2ddcc987e7f223","reportUrl":"https://golioth.github.io/allure-reports/main/80//#testresult/4a2ddcc987e7f223","status":"passed","time":{"start":1737245825005,"stop":1737245826688,"duration":1683}},{"uid":"b5f2aac9859423a6","reportUrl":"https://golioth.github.io/allure-reports/main/79//#testresult/b5f2aac9859423a6","status":"passed","time":{"start":1737160899426,"stop":1737160901699,"duration":2273}},{"uid":"724cb157951c7900","reportUrl":"https://golioth.github.io/allure-reports/main/78//#testresult/724cb157951c7900","status":"passed","time":{"start":1737073039826,"stop":1737073041356,"duration":1530}},{"uid":"76d9fc71c3d5824d","reportUrl":"https://golioth.github.io/allure-reports/main/76//#testresult/76d9fc71c3d5824d","status":"passed","time":{"start":1737054117373,"stop":1737054119021,"duration":1648}},{"uid":"e5065c55006dc39","reportUrl":"https://golioth.github.io/allure-reports/main/68//#testresult/e5065c55006dc39","status":"passed","time":{"start":1736993234748,"stop":1736993236337,"duration":1589}},{"uid":"40eb8d210eb1553","reportUrl":"https://golioth.github.io/allure-reports/main/67//#testresult/40eb8d210eb1553","status":"passed","time":{"start":1736987981034,"stop":1736987982574,"duration":1540}},{"uid":"40b2a0b45b494a8b","reportUrl":"https://golioth.github.io/allure-reports/main/56//#testresult/40b2a0b45b494a8b","status":"passed","time":{"start":1736948239882,"stop":1736948241498,"duration":1616}},{"uid":"f6ff5f80b80c5b47","reportUrl":"https://golioth.github.io/allure-reports/main/56//#testresult/f6ff5f80b80c5b47","status":"passed","time":{"start":1736900265970,"stop":1736900267533,"duration":1563}},{"uid":"71f056d859cc0deb","reportUrl":"https://golioth.github.io/allure-reports/main/54//#testresult/71f056d859cc0deb","status":"passed","time":{"start":1736727499247,"stop":1736727500874,"duration":1627}},{"uid":"e5961b590862be94","reportUrl":"https://golioth.github.io/allure-reports/main/53//#testresult/e5961b590862be94","status":"passed","time":{"start":1736641370893,"stop":1736641372572,"duration":1679}},{"uid":"3de3d27a0c35cffb","reportUrl":"https://golioth.github.io/allure-reports/main/49//#testresult/3de3d27a0c35cffb","status":"passed","time":{"start":1736576348645,"stop":1736576350425,"duration":1780}},{"uid":"33c77f753e8835dc","reportUrl":"https://golioth.github.io/allure-reports/main/48//#testresult/33c77f753e8835dc","status":"passed","time":{"start":1736554280796,"stop":1736554284047,"duration":3251}},{"uid":"40cf01980c3ffb8a","reportUrl":"https://golioth.github.io/allure-reports/main/45//#testresult/40cf01980c3ffb8a","status":"passed","time":{"start":1736468203692,"stop":1736468206602,"duration":2910}},{"uid":"5fc33eb7779171da","reportUrl":"https://golioth.github.io/allure-reports/main/44//#testresult/5fc33eb7779171da","status":"passed","time":{"start":1736455215563,"stop":1736455217099,"duration":1536}},{"uid":"c3b58f909b00a557","reportUrl":"https://golioth.github.io/allure-reports/main/34//#testresult/c3b58f909b00a557","status":"passed","time":{"start":1736381967051,"stop":1736381969238,"duration":2187}},{"uid":"5fee1764ec1422b3","reportUrl":"https://golioth.github.io/allure-reports/main/28/#testresult/5fee1764ec1422b3","status":"passed","time":{"start":1736295004607,"stop":1736295006225,"duration":1618}},{"uid":"ef6000ebc76f77f0","reportUrl":"https://golioth.github.io/allure-reports/main/23/#testresult/ef6000ebc76f77f0","status":"passed","time":{"start":1736265490296,"stop":1736265491825,"duration":1529}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"9e607249af455389.json","parameterValues":["'rak5010'","'zephyr'"]}