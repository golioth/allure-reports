{"uid":"ec3ff3a289d78307","name":"test_fw_update","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.fw_update.pytest.test_sample#test_fw_update","historyId":"ae1c7e14b29d468f72319f0a6ff27eb0","time":{"start":1736903128452,"stop":1736903420014,"duration":291562},"status":"failed","statusMessage":"AssertionError: Expected firmware version \"255.8.9\" but got \"%s\"\nassert '1.2.3' == '255.8.9'\n  \n  - 255.8.9\n  + 1.2.3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff8ce46490>\nproject = <golioth.golioth.Project object at 0xffff8ce62290>\ndevice = <golioth.golioth.Device object at 0xffff8ce8af50>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\nfw_info = {'package': 'main', 'version': '255.8.9'}\nrelease = Release <678709ba25dcbb6dec26631c, release_tags=[], device_tags=['678709b925dcbb6dec26631b'], artifact_ids=['674e19a8509873c6f7445232'], rollout=False>\n\n    async def test_fw_update(shell, project, device, wifi_ssid, wifi_psk, fw_info, release):\n    \n        # Wait for app to start running or 10 seconds to pass so runtime settings are ready.\n    \n        try:\n            shell._device.readlines_until(regex=\".*Start FW Update sample.\", timeout=10.0)\n        except:\n            pass\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for first manifest to arrive (no update expected)\n    \n        shell._device.readlines_until(regex=\".*Nothing to do.\", timeout=90.0)\n    \n    \n        # Rollout the release\n    \n        await project.releases.rollout_set(release.id, True)\n    \n        # Monitor block download and watch for reboot after update\n    \n        shell._device.readlines_until(regex=\".*Received block.\", timeout=90.0)\n        LOGGER.info(\"Block download has begun!\")\n    \n        shell._device.readlines_until(regex=\".*Rebooting into new image.\", timeout=600.0)\n        LOGGER.info(\"Download complete, restarting to perform update.\")\n    \n        # Test for board to run new firmware and report to Golioth\n    \n        shell._device.readlines_until(regex=f\".*Current firmware version: {fw_info['package']} - {fw_info['version']}.\",\n                                      timeout=120.0)\n        LOGGER.info(\"Device reported expected update version\")\n    \n        shell._device.readlines_until(regex=\".*Nothing to do.\", timeout=30.0)\n        LOGGER.info(\"Device received manifest confirming successful upgrade.\")\n    \n        # Check cloud for reported firmware version\n    \n        device_check = await project.device_by_name(device.name)\n    \n        d_package = device_check.info['metadata']['update']['main']['package']\n        d_version = device_check.info['metadata']['update']['main']['version']\n    \n        assert d_package == fw_info['package'], f'Expected firmware package \"{fw_info[\"package\"]}\" but got \"%s\"'.format(d_package)\n>       assert d_version == fw_info['version'], f'Expected firmware version \"{fw_info[\"version\"]}\" but got \"%s\"'.format(d_version)\nE       AssertionError: Expected firmware version \"255.8.9\" but got \"%s\"\nE       assert '1.2.3' == '255.8.9'\nE         \nE         - 255.8.9\nE         + 1.2.3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/test_sample.py:67: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1736903094605,"stop":1736903094606,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736903094606,"stop":1736903094606,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736903094607,"stop":1736903094607,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info","time":{"start":1736903094607,"stop":1736903094738,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736903094739,"stop":1736903094739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736903094739,"stop":1736903094739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1736903094740,"stop":1736903094741,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736903094740,"stop":1736903094740,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1736903094741,"stop":1736903094744,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736903094745,"stop":1736903095143,"duration":398},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736903095144,"stop":1736903095991,"duration":847},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_id","time":{"start":1736903095992,"stop":1736903096398,"duration":406},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifact","time":{"start":1736903096399,"stop":1736903096769,"duration":370},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1736903096770,"stop":1736903097963,"duration":1193},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"release","time":{"start":1736903097964,"stop":1736903098351,"duration":387},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1736903098351,"stop":1736903127319,"duration":28968},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1736903127319,"stop":1736903128449,"duration":1130},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected firmware version \"255.8.9\" but got \"%s\"\nassert '1.2.3' == '255.8.9'\n  \n  - 255.8.9\n  + 1.2.3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff8ce46490>\nproject = <golioth.golioth.Project object at 0xffff8ce62290>\ndevice = <golioth.golioth.Device object at 0xffff8ce8af50>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\nfw_info = {'package': 'main', 'version': '255.8.9'}\nrelease = Release <678709ba25dcbb6dec26631c, release_tags=[], device_tags=['678709b925dcbb6dec26631b'], artifact_ids=['674e19a8509873c6f7445232'], rollout=False>\n\n    async def test_fw_update(shell, project, device, wifi_ssid, wifi_psk, fw_info, release):\n    \n        # Wait for app to start running or 10 seconds to pass so runtime settings are ready.\n    \n        try:\n            shell._device.readlines_until(regex=\".*Start FW Update sample.\", timeout=10.0)\n        except:\n            pass\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for first manifest to arrive (no update expected)\n    \n        shell._device.readlines_until(regex=\".*Nothing to do.\", timeout=90.0)\n    \n    \n        # Rollout the release\n    \n        await project.releases.rollout_set(release.id, True)\n    \n        # Monitor block download and watch for reboot after update\n    \n        shell._device.readlines_until(regex=\".*Received block.\", timeout=90.0)\n        LOGGER.info(\"Block download has begun!\")\n    \n        shell._device.readlines_until(regex=\".*Rebooting into new image.\", timeout=600.0)\n        LOGGER.info(\"Download complete, restarting to perform update.\")\n    \n        # Test for board to run new firmware and report to Golioth\n    \n        shell._device.readlines_until(regex=f\".*Current firmware version: {fw_info['package']} - {fw_info['version']}.\",\n                                      timeout=120.0)\n        LOGGER.info(\"Device reported expected update version\")\n    \n        shell._device.readlines_until(regex=\".*Nothing to do.\", timeout=30.0)\n        LOGGER.info(\"Device received manifest confirming successful upgrade.\")\n    \n        # Check cloud for reported firmware version\n    \n        device_check = await project.device_by_name(device.name)\n    \n        d_package = device_check.info['metadata']['update']['main']['package']\n        d_version = device_check.info['metadata']['update']['main']['version']\n    \n        assert d_package == fw_info['package'], f'Expected firmware package \"{fw_info[\"package\"]}\" but got \"%s\"'.format(d_package)\n>       assert d_version == fw_info['version'], f'Expected firmware version \"{fw_info[\"version\"]}\" but got \"%s\"'.format(d_version)\nE       AssertionError: Expected firmware version \"255.8.9\" but got \"%s\"\nE       assert '1.2.3' == '255.8.9'\nE         \nE         - 255.8.9\nE         + 1.2.3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/fw_update/pytest/test_sample.py:67: AssertionError","steps":[],"attachments":[{"uid":"421905df17aa5cc8","name":"log","source":"421905df17aa5cc8.txt","type":"text/plain","size":116908}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1736903420189,"stop":1736903420214,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"release::0","time":{"start":1736903420216,"stop":1736903420582,"duration":366},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1736903420584,"stop":1736903421354,"duration":770},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifact::0","time":{"start":1736903421356,"stop":1736903421357,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_id::0","time":{"start":1736903421359,"stop":1736903421359,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1736903421361,"stop":1736903421772,"duration":411},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736903421775,"stop":1736903421775,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1736903421777,"stop":1736903421777,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info::0","time":{"start":1736903421814,"stop":1736903421817,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"c52fafe946a6"},{"name":"thread","value":"452-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.fw_update.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":5,"skipped":0,"passed":41,"unknown":0,"total":47},"items":[{"uid":"309f102278aba578","reportUrl":"https://golioth.github.io/allure-reports/main/54//#testresult/309f102278aba578","status":"passed","time":{"start":1736729952121,"stop":1736730232031,"duration":279910}},{"uid":"123c032b093a272e","reportUrl":"https://golioth.github.io/allure-reports/main/48//#testresult/123c032b093a272e","status":"passed","time":{"start":1736557370705,"stop":1736557604926,"duration":234221}},{"uid":"f3babe5da7118013","reportUrl":"https://golioth.github.io/allure-reports/main/45//#testresult/f3babe5da7118013","status":"passed","time":{"start":1736470861608,"stop":1736471169338,"duration":307730}},{"uid":"cea5b89477502e39","reportUrl":"https://golioth.github.io/allure-reports/main/44//#testresult/cea5b89477502e39","status":"passed","time":{"start":1736458283859,"stop":1736458551892,"duration":268033}},{"uid":"8f7f3d7bce78d7c9","reportUrl":"https://golioth.github.io/allure-reports/main/34//#testresult/8f7f3d7bce78d7c9","status":"passed","time":{"start":1736384586955,"stop":1736384877651,"duration":290696}},{"uid":"d34cbfc8177ffd21","reportUrl":"https://golioth.github.io/allure-reports/main/28/#testresult/d34cbfc8177ffd21","status":"passed","time":{"start":1736299074765,"stop":1736299378979,"duration":304214}},{"uid":"480156f4240af94","reportUrl":"https://golioth.github.io/allure-reports/main/23/#testresult/480156f4240af94","status":"passed","time":{"start":1736271631714,"stop":1736271914096,"duration":282382}},{"uid":"6674be4ff1bedb5","reportUrl":"https://golioth.github.io/allure-reports/main/21/#testresult/6674be4ff1bedb5","status":"passed","time":{"start":1736212458602,"stop":1736212755425,"duration":296823}},{"uid":"ee25c3f97c282a0d","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/ee25c3f97c282a0d","status":"passed","time":{"start":1736191744151,"stop":1736192038007,"duration":293856}},{"uid":"dc14a2c30906d7b9","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/dc14a2c30906d7b9","status":"passed","time":{"start":1736189791296,"stop":1736190085241,"duration":293945}},{"uid":"db965102d7b9159c","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/db965102d7b9159c","status":"passed","time":{"start":1736185264662,"stop":1736185560205,"duration":295543}},{"uid":"53d1bd517c410d03","reportUrl":"https://golioth.github.io/allure-reports/main/17/#testresult/53d1bd517c410d03","status":"passed","time":{"start":1736125560799,"stop":1736125852652,"duration":291853}},{"uid":"1e3858d30d1c35cb","reportUrl":"https://golioth.github.io/allure-reports/main/16/#testresult/1e3858d30d1c35cb","status":"passed","time":{"start":1736039234752,"stop":1736039504664,"duration":269912}},{"uid":"e14c50578053c6c6","reportUrl":"https://golioth.github.io/allure-reports/main/15/#testresult/e14c50578053c6c6","status":"passed","time":{"start":1735953448672,"stop":1735953748047,"duration":299375}},{"uid":"5b19dbaf395d51c7","reportUrl":"https://golioth.github.io/allure-reports/main/8/#testresult/5b19dbaf395d51c7","status":"passed","time":{"start":1735868197818,"stop":1735868558362,"duration":360544}},{"uid":"3379f005516b830c","reportUrl":"https://golioth.github.io/allure-reports/main/1991/#testresult/3379f005516b830c","status":"passed","time":{"start":1735781602162,"stop":1735781859606,"duration":257444}},{"uid":"562eeaea17751289","reportUrl":"https://golioth.github.io/allure-reports/main/1990/#testresult/562eeaea17751289","status":"passed","time":{"start":1735695068531,"stop":1735695301926,"duration":233395}},{"uid":"441f0abc7b76cb8e","reportUrl":"https://golioth.github.io/allure-reports/main/1984/#testresult/441f0abc7b76cb8e","status":"passed","time":{"start":1735659852219,"stop":1735660157046,"duration":304827}},{"uid":"b8cc431cfe8a7cc6","reportUrl":"https://golioth.github.io/allure-reports/main/1983/#testresult/b8cc431cfe8a7cc6","status":"passed","time":{"start":1735608577926,"stop":1735608809971,"duration":232045}},{"uid":"c0a1300f24775114","reportUrl":"https://golioth.github.io/allure-reports/main/1980/#testresult/c0a1300f24775114","status":"passed","time":{"start":1735522846396,"stop":1735523155390,"duration":308994}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"ec3ff3a289d78307.json","parameterValues":["'nrf9160dk'","'zephyr'"]}