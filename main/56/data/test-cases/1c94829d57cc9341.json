{"uid":"1c94829d57cc9341","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"9ea8ee677231e39a8691323ca77f58b7","time":{"start":1736901913673,"stop":1736901933934,"duration":20261},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffb599c7d0>\ndevice = <golioth.golioth.Device object at 0xffffb5990bd0>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"wifi_ssid","time":{"start":1736901903983,"stop":1736901903984,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1736901903983,"stop":1736901903983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736901903984,"stop":1736901903985,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736901903984,"stop":1736901903984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1736901903985,"stop":1736901903985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1736901903986,"stop":1736901903988,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736901903988,"stop":1736901903989,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736901903989,"stop":1736901903989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736901903990,"stop":1736901904435,"duration":445},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736901904436,"stop":1736901905291,"duration":855},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1736901905292,"stop":1736901913125,"duration":7833},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1736901913126,"stop":1736901913670,"duration":544},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffb599c7d0>\ndevice = <golioth.golioth.Device object at 0xffffb5990bd0>\nwifi_ssid = '***TIMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***TIMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_hello(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Record timestamp and wait for fourth hello message\n    \n        start = datetime.datetime.utcnow()\n        shell._device.readlines_until(regex=\".*Sending hello! 3\", timeout=110.0)\n    \n        # Check logs for hello messages\n    \n        end = datetime.datetime.utcnow()\n    \n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n    \n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/hello/pytest/test_sample.py:54: AssertionError","steps":[],"attachments":[{"uid":"1d64eb8aa3412af0","name":"log","source":"1d64eb8aa3412af0.txt","type":"text/plain","size":19833}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1736901934115,"stop":1736901934140,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1736901934142,"stop":1736901934536,"duration":394},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736901934539,"stop":1736901934541,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1736901934546,"stop":1736901934546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.mimxrt1024_evk"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"1470bb642d86"},{"name":"thread","value":"567-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"4e4ef52d02da0528","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1736901880554,"stop":1736901899983,"duration":19429}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":45,"unknown":0,"total":48},"items":[{"uid":"6bc8de4d13f8cc89","reportUrl":"https://golioth.github.io/allure-reports/main/54//#testresult/6bc8de4d13f8cc89","status":"passed","time":{"start":1736729439410,"stop":1736729462837,"duration":23427}},{"uid":"36eac62636d8083b","reportUrl":"https://golioth.github.io/allure-reports/main/49//#testresult/36eac62636d8083b","status":"passed","time":{"start":1736581162465,"stop":1736581185951,"duration":23486}},{"uid":"433d513b1c6b244d","reportUrl":"https://golioth.github.io/allure-reports/main/48//#testresult/433d513b1c6b244d","status":"passed","time":{"start":1736555546578,"stop":1736555570913,"duration":24335}},{"uid":"a0a225dc2348c059","reportUrl":"https://golioth.github.io/allure-reports/main/45//#testresult/a0a225dc2348c059","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1736470155167,"stop":1736470155167,"duration":0}},{"uid":"7deac27898b154d8","reportUrl":"https://golioth.github.io/allure-reports/main/44//#testresult/7deac27898b154d8","status":"passed","time":{"start":1736457946029,"stop":1736457969722,"duration":23693}},{"uid":"3a0db759db1ca4e9","reportUrl":"https://golioth.github.io/allure-reports/main/34//#testresult/3a0db759db1ca4e9","status":"passed","time":{"start":1736384158849,"stop":1736384182292,"duration":23443}},{"uid":"6739751b09462739","reportUrl":"https://golioth.github.io/allure-reports/main/28/#testresult/6739751b09462739","status":"passed","time":{"start":1736298255759,"stop":1736298279181,"duration":23422}},{"uid":"e9500ff5ce1505c0","reportUrl":"https://golioth.github.io/allure-reports/main/23/#testresult/e9500ff5ce1505c0","status":"passed","time":{"start":1736270006006,"stop":1736270029700,"duration":23694}},{"uid":"55cc0d30f38b93e3","reportUrl":"https://golioth.github.io/allure-reports/main/21/#testresult/55cc0d30f38b93e3","status":"passed","time":{"start":1736212443025,"stop":1736212466307,"duration":23282}},{"uid":"d7e73c708d48ebad","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/d7e73c708d48ebad","status":"passed","time":{"start":1736184778622,"stop":1736184803100,"duration":24478}},{"uid":"75eb8dad869d7ff6","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/75eb8dad869d7ff6","status":"passed","time":{"start":1736184778622,"stop":1736184803100,"duration":24478}},{"uid":"a498051f74cc1ab6","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/a498051f74cc1ab6","status":"passed","time":{"start":1736184778622,"stop":1736184803100,"duration":24478}},{"uid":"21df3805d3cfc994","reportUrl":"https://golioth.github.io/allure-reports/main/17/#testresult/21df3805d3cfc994","status":"passed","time":{"start":1736125444311,"stop":1736125471597,"duration":27286}},{"uid":"9865011bbcc6b154","reportUrl":"https://golioth.github.io/allure-reports/main/16/#testresult/9865011bbcc6b154","status":"passed","time":{"start":1736038321527,"stop":1736038345912,"duration":24385}},{"uid":"a9e2d7ffee09a1be","reportUrl":"https://golioth.github.io/allure-reports/main/15/#testresult/a9e2d7ffee09a1be","status":"passed","time":{"start":1735952167289,"stop":1735952190734,"duration":23445}},{"uid":"549ce26ebb3d5340","reportUrl":"https://golioth.github.io/allure-reports/main/8/#testresult/549ce26ebb3d5340","status":"passed","time":{"start":1735868113883,"stop":1735868133172,"duration":19289}},{"uid":"52ef7316d4789503","reportUrl":"https://golioth.github.io/allure-reports/main/1991/#testresult/52ef7316d4789503","status":"passed","time":{"start":1735781379753,"stop":1735781404104,"duration":24351}},{"uid":"5c866101695c259b","reportUrl":"https://golioth.github.io/allure-reports/main/1990/#testresult/5c866101695c259b","status":"passed","time":{"start":1735695074750,"stop":1735695098167,"duration":23417}},{"uid":"80e905598acb96d","reportUrl":"https://golioth.github.io/allure-reports/main/1984/#testresult/80e905598acb96d","status":"passed","time":{"start":1735659252536,"stop":1735659276950,"duration":24414}},{"uid":"69186540f6224f9b","reportUrl":"https://golioth.github.io/allure-reports/main/1983/#testresult/69186540f6224f9b","status":"passed","time":{"start":1735607584003,"stop":1735607607423,"duration":23420}}]},"tags":["anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"1c94829d57cc9341.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}