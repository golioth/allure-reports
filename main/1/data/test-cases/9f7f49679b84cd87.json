{"uid":"9f7f49679b84cd87","name":"test_fw_update","fullName":"examples.esp_idf.fw_update.pytest.test_sample#test_fw_update","historyId":"48d0816a206ae6718f292d04b6749e18","time":{"start":1729362683924,"stop":1729362683924,"duration":0},"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"item = <Function test_fw_update>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:81: in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:929: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <golioth.golioth.Project object at 0xffff85604590>\nblueprint_id = '661747c6503212353712034d'\n\n    @pytest.fixture(scope=\"module\")\n    async def artifact(project, blueprint_id):\n        # Find Artifact that matches this device and desired update version\n    \n        artifact = None\n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if (a.blueprint == blueprint_id and\n                a.version == UPDATE_VERSION and\n                a.package == UPDATE_PACKAGE):\n                artifact = a\n    \n>       assert artifact != None\nE       assert None != None\n\nexamples/esp_idf/fw_update/pytest/conftest.py:63: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729362683928,"stop":1729362683929,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info","time":{"start":1729362683929,"stop":1729362683958,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729362683959,"stop":1729362683959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729362683960,"stop":1729362683960,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729362683960,"stop":1729362683960,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729362683961,"stop":1729362683961,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729362683961,"stop":1729362683961,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729362683962,"stop":1729362683962,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729362683962,"stop":1729362683962,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729362683963,"stop":1729362683971,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729362683972,"stop":1729362683972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729362683972,"stop":1729362683972,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_name","time":{"start":1729362683973,"stop":1729362683973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729362683973,"stop":1729362683973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729362683974,"stop":1729362709645,"duration":25671},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729362709647,"stop":1729362710170,"duration":523},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729362710171,"stop":1729362711177,"duration":1006},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"blueprint_id","time":{"start":1729362711178,"stop":1729362711634,"duration":456},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifact","time":{"start":1729362711635,"stop":1729362712073,"duration":438},"status":"failed","statusMessage":"AssertionError: assert None != None\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 929, in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/examples/esp_idf/fw_update/pytest/conftest.py\", line 63, in artifact\n    assert artifact != None\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert None != None","statusTrace":"item = <Function test_fw_update>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        board_name = item.config.getoption(\"--allure-board\") or item.config.getoption(\"--board\")\n        platform_name = item.config.getoption(\"--platform\")\n        suitename = item.config.getoption(\"--custom-suitename\") or \"hil\"\n    \n        allure.dynamic.tag(board_name)\n        allure.dynamic.tag(platform_name)\n        allure.dynamic.parameter(\"board_name\", board_name)\n        allure.dynamic.parameter(\"platform_name\", platform_name)\n        allure.dynamic.parent_suite(f\"{suitename}.{platform_name}.{board_name}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py:81: in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:929: in run_asyncgen_fixture\n    fixturevalue: T_Retval = self._call_in_runner_task(asyncgen.asend, None)\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:921: in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py:891: in _run_tests_and_fixtures\n    retval = await coro\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nproject = <golioth.golioth.Project object at 0xffff85604590>\nblueprint_id = '661747c6503212353712034d'\n\n    @pytest.fixture(scope=\"module\")\n    async def artifact(project, blueprint_id):\n        # Find Artifact that matches this device and desired update version\n    \n        artifact = None\n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if (a.blueprint == blueprint_id and\n                a.version == UPDATE_VERSION and\n                a.package == UPDATE_PACKAGE):\n                artifact = a\n    \n>       assert artifact != None\nE       assert None != None\n\nexamples/esp_idf/fw_update/pytest/conftest.py:63: AssertionError","steps":[],"attachments":[{"uid":"6f53fe8b6b13b99a","name":"stdout","source":"6f53fe8b6b13b99a.txt","type":"text/plain","size":6216}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"blueprint_id::0","time":{"start":1729362712488,"stop":1729362712488,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729362712490,"stop":1729362712929,"duration":439},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729362712932,"stop":1729362712932,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729362712933,"stop":1729362712938,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_info::0","time":{"start":1729362712957,"stop":1729362712959,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"15f954479e7a"},{"name":"thread","value":"281-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.fw_update.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":14,"unknown":0,"total":15},"items":[{"uid":"eb275e791ddae518","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/eb275e791ddae518","status":"passed","time":{"start":1729299775039,"stop":1729300184566,"duration":409527}},{"uid":"9d1353bf0e01722f","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/9d1353bf0e01722f","status":"passed","time":{"start":1729213350586,"stop":1729213752712,"duration":402126}},{"uid":"4ae2c2aeebd4d576","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/4ae2c2aeebd4d576","status":"passed","time":{"start":1729204397292,"stop":1729204802935,"duration":405643}},{"uid":"e0b803a4294ec848","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/e0b803a4294ec848","status":"passed","time":{"start":1729130922604,"stop":1729131330284,"duration":407680}},{"uid":"e9fcabd47dd4b76c","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/e9fcabd47dd4b76c","status":"passed","time":{"start":1729111347298,"stop":1729111757619,"duration":410321}},{"uid":"4649217e0c77a5ca","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/4649217e0c77a5ca","status":"passed","time":{"start":1729040545364,"stop":1729040969203,"duration":423839}},{"uid":"288c0a5e557f3343","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/288c0a5e557f3343","status":"passed","time":{"start":1729026524265,"stop":1729026944656,"duration":420391}},{"uid":"e235be301905259e","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/e235be301905259e","status":"passed","time":{"start":1729009433503,"stop":1729009848344,"duration":414841}},{"uid":"4d94eb55d0f0c921","reportUrl":"https://golioth.github.io/allure-reports/main/1637//#testresult/4d94eb55d0f0c921","status":"passed","time":{"start":1728954182492,"stop":1728954595958,"duration":413466}},{"uid":"95817ae0b1fd2cd8","reportUrl":"https://golioth.github.io/allure-reports/main/1636//#testresult/95817ae0b1fd2cd8","status":"passed","time":{"start":1728867839726,"stop":1728868249503,"duration":409777}},{"uid":"7a616f0a4f3857f6","reportUrl":"https://golioth.github.io/allure-reports/main/1635//#testresult/7a616f0a4f3857f6","status":"passed","time":{"start":1728781467120,"stop":1728781880576,"duration":413456}},{"uid":"3461829ddb0944e5","reportUrl":"https://golioth.github.io/allure-reports/main/1634//#testresult/3461829ddb0944e5","status":"passed","time":{"start":1728694901827,"stop":1728695310456,"duration":408629}},{"uid":"45903f8395c4d649","reportUrl":"https://golioth.github.io/allure-reports/main/1633//#testresult/45903f8395c4d649","status":"passed","time":{"start":1728669537834,"stop":1728669966934,"duration":429100}},{"uid":"4b4a3d0ead5d0f3","reportUrl":"https://golioth.github.io/allure-reports/main/1631//#testresult/4b4a3d0ead5d0f3","status":"passed","time":{"start":1728663913164,"stop":1728664324191,"duration":411027}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","jons_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"9f7f49679b84cd87.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}