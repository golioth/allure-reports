{"uid":"1509e6906523655d","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"f9f5fc54eebc09467a311bd3212c0fe3","time":{"start":1729362577194,"stop":1729362577194,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})","statusTrace":"project = <golioth.golioth.Project object at 0xffff9e81b050>\n\n    @pytest.fixture(scope=\"module\")\n    async def artifacts(project):\n        artifacts = dict()\n    \n        # Find Artifact that matches this device and desired update versions\n    \n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if a.blueprint == None:\n                if a.version == DUMMY_VER_OLDER and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_manifest\"] = a\n                elif a.version == DUMMY_VER_SAME and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_blocks\"] = a\n                elif a.version == DUMMY_VER_UPDATE and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_reasons\"] = a\n                elif a.version == DUMMY_VER_EXTRA and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_multiple\"] = a\n                elif a.version == MULTI_PACKAGE_VER and a.package == MULTI_PACKAGE:\n                    artifacts[\"multi_artifact\"] = a\n    \n>       assert len(artifacts) == 5\nE       AssertionError: assert 1 == 5\nE        +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})\n\ntests/hil/tests/ota/test_ota.py:85: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729362548888,"stop":1729362548889,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729362548889,"stop":1729362548889,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729362548890,"stop":1729362548890,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729362548891,"stop":1729362548891,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729362548891,"stop":1729362548892,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729362548892,"stop":1729362548892,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729362548893,"stop":1729362548893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729362548893,"stop":1729362548893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729362548894,"stop":1729362548894,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729362548895,"stop":1729362548895,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729362548896,"stop":1729362548897,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729362548897,"stop":1729362548898,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729362548899,"stop":1729362563671,"duration":14772},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729362563674,"stop":1729362564234,"duration":560},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729362564235,"stop":1729362565178,"duration":943},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729362565178,"stop":1729362576386,"duration":11208},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1729362576389,"stop":1729362576874,"duration":485},"status":"failed","statusMessage":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/ota/test_ota.py\", line 85, in artifacts\n    assert len(artifacts) == 5\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1729362577232,"stop":1729362577232,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729362577234,"stop":1729362577689,"duration":455},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729362577692,"stop":1729362577692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729362577694,"stop":1729362577697,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"6a37a410108c"},{"name":"thread","value":"269-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":12,"unknown":0,"total":15},"items":[{"uid":"6591ba859e1b97dd","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/6591ba859e1b97dd","status":"passed","time":{"start":1729298808785,"stop":1729298894967,"duration":86182}},{"uid":"79c69a2eed4aec24","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/79c69a2eed4aec24","status":"failed","statusDetails":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","time":{"start":1729212284300,"stop":1729212321387,"duration":37087}},{"uid":"d673591812bba2af","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/d673591812bba2af","status":"passed","time":{"start":1729203337458,"stop":1729203420017,"duration":82559}},{"uid":"3ea87a97bd6486ea","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/3ea87a97bd6486ea","status":"passed","time":{"start":1729129998672,"stop":1729130081338,"duration":82666}},{"uid":"10833b54177ed9cb","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/10833b54177ed9cb","status":"passed","time":{"start":1729110478408,"stop":1729110561720,"duration":83312}},{"uid":"bc45f4aa0431eae0","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/bc45f4aa0431eae0","status":"passed","time":{"start":1729040245034,"stop":1729040328395,"duration":83361}},{"uid":"a38b96e71e02857d","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/a38b96e71e02857d","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1729026415544,"stop":1729026430382,"duration":14838}},{"uid":"f8269efc86e12ee7","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/f8269efc86e12ee7","status":"passed","time":{"start":1729008391211,"stop":1729008474521,"duration":83310}},{"uid":"18e4c6c612448fa3","reportUrl":"https://golioth.github.io/allure-reports/main/1637//#testresult/18e4c6c612448fa3","status":"passed","time":{"start":1728953725673,"stop":1728953808865,"duration":83192}},{"uid":"28dddbb368445090","reportUrl":"https://golioth.github.io/allure-reports/main/1636//#testresult/28dddbb368445090","status":"passed","time":{"start":1728867475510,"stop":1728867558522,"duration":83012}},{"uid":"41314fcb1d881038","reportUrl":"https://golioth.github.io/allure-reports/main/1635//#testresult/41314fcb1d881038","status":"passed","time":{"start":1728781271411,"stop":1728781355888,"duration":84477}},{"uid":"437c9e40e020cc82","reportUrl":"https://golioth.github.io/allure-reports/main/1634//#testresult/437c9e40e020cc82","status":"passed","time":{"start":1728694054094,"stop":1728694137194,"duration":83100}},{"uid":"3518becc9d7b06bc","reportUrl":"https://golioth.github.io/allure-reports/main/1633//#testresult/3518becc9d7b06bc","status":"passed","time":{"start":1728669300086,"stop":1728669386550,"duration":86464}},{"uid":"35bd9aec9d1bd84c","reportUrl":"https://golioth.github.io/allure-reports/main/1631//#testresult/35bd9aec9d1bd84c","status":"passed","time":{"start":1728662997053,"stop":1728663080683,"duration":83630}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"1509e6906523655d.json","parameterValues":["'nrf9160dk'","'zephyr'"]}