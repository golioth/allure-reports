{"uid":"4071a12a188f8e5d","name":"test_manifest","fullName":"tests.hil.tests.ota.test_ota#test_manifest","historyId":"f9e4a5dfcb2ed5fda1ee543147b665cf","time":{"start":1729361913915,"stop":1729361913915,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})","statusTrace":"project = <golioth.golioth.Project object at 0xffff8f691c50>\n\n    @pytest.fixture(scope=\"module\")\n    async def artifacts(project):\n        artifacts = dict()\n    \n        # Find Artifact that matches this device and desired update versions\n    \n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if a.blueprint == None:\n                if a.version == DUMMY_VER_OLDER and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_manifest\"] = a\n                elif a.version == DUMMY_VER_SAME and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_blocks\"] = a\n                elif a.version == DUMMY_VER_UPDATE and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_reasons\"] = a\n                elif a.version == DUMMY_VER_EXTRA and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_multiple\"] = a\n                elif a.version == MULTI_PACKAGE_VER and a.package == MULTI_PACKAGE:\n                    artifacts[\"multi_artifact\"] = a\n    \n>       assert len(artifacts) == 5\nE       AssertionError: assert 1 == 5\nE        +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})\n\ntests/hil/tests/ota/test_ota.py:85: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1729361913919,"stop":1729361913920,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1729361913920,"stop":1729361913921,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729361913921,"stop":1729361913921,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729361913922,"stop":1729361913922,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729361913923,"stop":1729361913924,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729361913925,"stop":1729361913925,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729361913926,"stop":1729361913926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729361913927,"stop":1729361913927,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729361913928,"stop":1729361913928,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729361913929,"stop":1729361913929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729361913929,"stop":1729361913930,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729361913930,"stop":1729361913931,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729361913932,"stop":1729361933101,"duration":19169},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729361933103,"stop":1729361933628,"duration":525},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729361933628,"stop":1729361934638,"duration":1010},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729361934639,"stop":1729361937031,"duration":2392},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1729361937032,"stop":1729361937481,"duration":449},"status":"failed","statusMessage":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/ota/test_ota.py\", line 85, in artifacts\n    assert len(artifacts) == 5\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})","statusTrace":"project = <golioth.golioth.Project object at 0xffff8f691c50>\n\n    @pytest.fixture(scope=\"module\")\n    async def artifacts(project):\n        artifacts = dict()\n    \n        # Find Artifact that matches this device and desired update versions\n    \n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if a.blueprint == None:\n                if a.version == DUMMY_VER_OLDER and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_manifest\"] = a\n                elif a.version == DUMMY_VER_SAME and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_blocks\"] = a\n                elif a.version == DUMMY_VER_UPDATE and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_reasons\"] = a\n                elif a.version == DUMMY_VER_EXTRA and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_multiple\"] = a\n                elif a.version == MULTI_PACKAGE_VER and a.package == MULTI_PACKAGE:\n                    artifacts[\"multi_artifact\"] = a\n    \n>       assert len(artifacts) == 5\nE       AssertionError: assert 1 == 5\nE        +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})\n\ntests/hil/tests/ota/test_ota.py:85: AssertionError","steps":[],"attachments":[{"uid":"42e94e392c4da736","name":"stdout","source":"42e94e392c4da736.txt","type":"text/plain","size":1840}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1729361937940,"stop":1729361937940,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729361937942,"stop":1729361938401,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729361938403,"stop":1729361938404,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729361938405,"stop":1729361938409,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"006db82d35cb"},{"name":"thread","value":"268-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":11,"unknown":0,"total":13},"items":[{"uid":"d4bed701c0d79b7b","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/d4bed701c0d79b7b","status":"passed","time":{"start":1729298700742,"stop":1729298701676,"duration":934}},{"uid":"32a5ca8b327a2011","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/32a5ca8b327a2011","status":"passed","time":{"start":1729212223457,"stop":1729212224492,"duration":1035}},{"uid":"10c1818eca708a49","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/10c1818eca708a49","status":"passed","time":{"start":1729129741051,"stop":1729129741798,"duration":747}},{"uid":"379b535708b75e2d","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/379b535708b75e2d","status":"passed","time":{"start":1729109908692,"stop":1729109909511,"duration":819}},{"uid":"d199d0006e648342","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/d199d0006e648342","status":"passed","time":{"start":1729039389869,"stop":1729039390659,"duration":790}},{"uid":"7761403581c68a02","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/7761403581c68a02","status":"passed","time":{"start":1729025613395,"stop":1729025614216,"duration":821}},{"uid":"472bb64b197d13ad","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/472bb64b197d13ad","status":"passed","time":{"start":1729007707454,"stop":1729007708299,"duration":845}},{"uid":"48f83f395a7e6755","reportUrl":"https://golioth.github.io/allure-reports/main/1636//#testresult/48f83f395a7e6755","status":"passed","time":{"start":1728866824566,"stop":1728866825227,"duration":661}},{"uid":"d34de3987531350f","reportUrl":"https://golioth.github.io/allure-reports/main/1635//#testresult/d34de3987531350f","status":"passed","time":{"start":1728780374482,"stop":1728780375984,"duration":1502}},{"uid":"fd60729305b1f77c","reportUrl":"https://golioth.github.io/allure-reports/main/1634//#testresult/fd60729305b1f77c","status":"passed","time":{"start":1728693726956,"stop":1728693727559,"duration":603}},{"uid":"9c14758fede3bad7","reportUrl":"https://golioth.github.io/allure-reports/main/1633//#testresult/9c14758fede3bad7","status":"passed","time":{"start":1728668518852,"stop":1728668519755,"duration":903}},{"uid":"a3b7f29cc51b212a","reportUrl":"https://golioth.github.io/allure-reports/main/1631//#testresult/a3b7f29cc51b212a","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1728662884121,"stop":1728662884121,"duration":0}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"4071a12a188f8e5d.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}