{"uid":"ba1515dd26e66d65","name":"test_block_operations","fullName":"tests.hil.tests.ota.test_ota#test_block_operations","historyId":"8a302f3c779c33cfc91a9576b7d0d383","time":{"start":1729361261297,"stop":1729361261297,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})","statusTrace":"project = <golioth.golioth.Project object at 0xffff95ee9c10>\n\n    @pytest.fixture(scope=\"module\")\n    async def artifacts(project):\n        artifacts = dict()\n    \n        # Find Artifact that matches this device and desired update versions\n    \n        all_artifacts = await project.artifacts.get_all()\n        for a in all_artifacts:\n            if a.blueprint == None:\n                if a.version == DUMMY_VER_OLDER and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_manifest\"] = a\n                elif a.version == DUMMY_VER_SAME and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_blocks\"] = a\n                elif a.version == DUMMY_VER_UPDATE and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_reasons\"] = a\n                elif a.version == DUMMY_VER_EXTRA and a.package == UPDATE_PACKAGE:\n                    artifacts[\"test_multiple\"] = a\n                elif a.version == MULTI_PACKAGE_VER and a.package == MULTI_PACKAGE:\n                    artifacts[\"multi_artifact\"] = a\n    \n>       assert len(artifacts) == 5\nE       AssertionError: assert 1 == 5\nE        +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})\n\ntests/hil/tests/ota/test_ota.py:85: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"board_name","time":{"start":1729361230276,"stop":1729361230277,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1729361230276,"stop":1729361230276,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1729361230277,"stop":1729361230277,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1729361230278,"stop":1729361230278,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1729361230279,"stop":1729361230280,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1729361230279,"stop":1729361230279,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1729361230280,"stop":1729361230280,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1729361230280,"stop":1729361230280,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1729361230281,"stop":1729361230281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1729361230282,"stop":1729361230282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1729361230283,"stop":1729361230283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1729361230283,"stop":1729361230283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1729361230284,"stop":1729361255055,"duration":24771},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1729361255057,"stop":1729361255615,"duration":558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1729361255615,"stop":1729361256709,"duration":1094},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1729361256709,"stop":1729361260478,"duration":3769},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1729361260480,"stop":1729361261010,"duration":530},"status":"failed","statusMessage":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/ota/test_ota.py\", line 85, in artifacts\n    assert len(artifacts) == 5\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1729361261373,"stop":1729361261373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1729361261375,"stop":1729361261811,"duration":436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1729361261814,"stop":1729361261814,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1729361261816,"stop":1729361261819,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"339378733d55"},{"name":"thread","value":"243-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":6,"skipped":0,"passed":7,"unknown":0,"total":14},"items":[{"uid":"c5612d54bd67ac86","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/c5612d54bd67ac86","status":"passed","time":{"start":1729297849591,"stop":1729297861819,"duration":12228}},{"uid":"bbbf2454b8fe771d","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/bbbf2454b8fe771d","status":"passed","time":{"start":1729211436343,"stop":1729211448137,"duration":11794}},{"uid":"e187db6d7439f92f","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/e187db6d7439f92f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729202550180,"stop":1729202554675,"duration":4495}},{"uid":"3c1df3b38c3bce1d","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/3c1df3b38c3bce1d","status":"passed","time":{"start":1729109114269,"stop":1729109117796,"duration":3527}},{"uid":"a0b5b7f3bffa508d","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/a0b5b7f3bffa508d","status":"passed","time":{"start":1729038750434,"stop":1729038753874,"duration":3440}},{"uid":"6b13a8f01e62ce2e","reportUrl":"https://golioth.github.io/allure-reports/main/1643//#testresult/6b13a8f01e62ce2e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729024770907,"stop":1729024776299,"duration":5392}},{"uid":"fca31a8ad9aec645","reportUrl":"https://golioth.github.io/allure-reports/main/1639//#testresult/fca31a8ad9aec645","status":"passed","time":{"start":1729006842392,"stop":1729006846147,"duration":3755}},{"uid":"7d6f02c443c4d02d","reportUrl":"https://golioth.github.io/allure-reports/main/1637//#testresult/7d6f02c443c4d02d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728952373993,"stop":1728952378822,"duration":4829}},{"uid":"1c6967416e40477b","reportUrl":"https://golioth.github.io/allure-reports/main/1636//#testresult/1c6967416e40477b","status":"passed","time":{"start":1728866086020,"stop":1728866088770,"duration":2750}},{"uid":"c4039f7d50572959","reportUrl":"https://golioth.github.io/allure-reports/main/1635//#testresult/c4039f7d50572959","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728779648164,"stop":1728779652799,"duration":4635}},{"uid":"f57552a8b197c676","reportUrl":"https://golioth.github.io/allure-reports/main/1634//#testresult/f57552a8b197c676","status":"passed","time":{"start":1728693110081,"stop":1728693120012,"duration":9931}},{"uid":"ad86d76a05553787","reportUrl":"https://golioth.github.io/allure-reports/main/1633//#testresult/ad86d76a05553787","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728667696843,"stop":1728667702582,"duration":5739}},{"uid":"ca047b7b6d4ad23e","reportUrl":"https://golioth.github.io/allure-reports/main/1631//#testresult/ca047b7b6d4ad23e","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1728662133854,"stop":1728662140133,"duration":6279}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"ba1515dd26e66d65.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}