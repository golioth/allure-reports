{"uid":"9d00741f43f885b","name":"test_manifest","fullName":"tests.hil.tests.ota.test_ota#test_manifest","historyId":"6c1077869c5d98de89656e8cdc7a69c8","time":{"start":1731631526872,"stop":1731631557329,"duration":30457},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 202029.13360506232\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nartifacts = {'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>, 'test_blocks': ...lueprint=None>, 'test_multiple': Artifact <65f8bcd2d8a3255581782b58, package=main, version=1.2.5, blueprint=None>, ...}\nboard = <rak5010.RAK5010 object at 0xffff8052b2d0>\nproject = <golioth.golioth.Project object at 0xffff7fd76dd0>\nreleases = {'test_blocks': Release <673699a6991409ec59c6801b, release_tags=[], device_tags=['673699a4991409ec59c68018'], artifact..., release_tags=[], device_tags=['673699a4991409ec59c68018'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_manifest(artifacts, board, project, releases):\n        await project.releases.rollout_set(releases[\"test_manifest\"].id, True)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest received', timeout_s=30)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest successfully decoded', timeout_s=2)\n    \n        # We may need to wait for the second manifest to trigger this line (the first has no rollouts)\n    \n>       assert None != await board.wait_for_regex_in_line('Found main component', timeout_s=30)\n\ntests/hil/tests/ota/test_ota.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 202029.13360506232\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731631451955,"stop":1731631451955,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731631451956,"stop":1731631451957,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731631451958,"stop":1731631451958,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731631451959,"stop":1731631451959,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731631451960,"stop":1731631451960,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731631451961,"stop":1731631451961,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731631451962,"stop":1731631451963,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731631451963,"stop":1731631451964,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731631451964,"stop":1731631451965,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731631451965,"stop":1731631451966,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731631451966,"stop":1731631451966,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731631451967,"stop":1731631451967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731631451968,"stop":1731631493060,"duration":41092},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731631493062,"stop":1731631493516,"duration":454},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731631493517,"stop":1731631494371,"duration":854},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731631494371,"stop":1731631523730,"duration":29359},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1731631523732,"stop":1731631524215,"duration":483},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1731631524216,"stop":1731631525040,"duration":824},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1731631525041,"stop":1731631526867,"duration":1826},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1731631526868,"stop":1731631526868,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 202029.13360506232\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nartifacts = {'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>, 'test_blocks': ...lueprint=None>, 'test_multiple': Artifact <65f8bcd2d8a3255581782b58, package=main, version=1.2.5, blueprint=None>, ...}\nboard = <rak5010.RAK5010 object at 0xffff8052b2d0>\nproject = <golioth.golioth.Project object at 0xffff7fd76dd0>\nreleases = {'test_blocks': Release <673699a6991409ec59c6801b, release_tags=[], device_tags=['673699a4991409ec59c68018'], artifact..., release_tags=[], device_tags=['673699a4991409ec59c68018'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_manifest(artifacts, board, project, releases):\n        await project.releases.rollout_set(releases[\"test_manifest\"].id, True)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest received', timeout_s=30)\n    \n        assert None != await board.wait_for_regex_in_line('Manifest successfully decoded', timeout_s=2)\n    \n        # We may need to wait for the second manifest to trigger this line (the first has no rollouts)\n    \n>       assert None != await board.wait_for_regex_in_line('Found main component', timeout_s=30)\n\ntests/hil/tests/ota/test_ota.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 202029.13360506232\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"b805f0d9eed0452c","name":"stdout","source":"b805f0d9eed0452c.txt","type":"text/plain","size":4461},{"uid":"d1e61fcb6f7ffa36","name":"stderr","source":"d1e61fcb6f7ffa36.txt","type":"text/plain","size":252}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1731631557981,"stop":1731631558958,"duration":977},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1731631658944,"stop":1731631660428,"duration":1484},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1731631660430,"stop":1731631661662,"duration":1232},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1731631661665,"stop":1731631661665,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1731631661666,"stop":1731631661667,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731631661669,"stop":1731631662188,"duration":519},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731631662190,"stop":1731631662191,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731631662192,"stop":1731631662196,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"0a56e6fef2ac"},{"name":"thread","value":"255-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":45,"unknown":0,"total":47},"items":[{"uid":"956a6d84e32b939f","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/956a6d84e32b939f","status":"passed","time":{"start":1731606520887,"stop":1731606522669,"duration":1782}},{"uid":"65c4cea218117f","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/65c4cea218117f","status":"passed","time":{"start":1731565263424,"stop":1731565264479,"duration":1055}},{"uid":"d9f1a172784aeefe","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/d9f1a172784aeefe","status":"passed","time":{"start":1731544954634,"stop":1731544955502,"duration":868}},{"uid":"1cbd58e2d0cbb846","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/1cbd58e2d0cbb846","status":"passed","time":{"start":1731458713979,"stop":1731458715640,"duration":1661}},{"uid":"4f632a5312dbb03d","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/4f632a5312dbb03d","status":"passed","time":{"start":1731372144733,"stop":1731372145630,"duration":897}},{"uid":"a5114f68298ef5f9","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/a5114f68298ef5f9","status":"passed","time":{"start":1731285924536,"stop":1731285925444,"duration":908}},{"uid":"f766a2abf8f540d1","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/f766a2abf8f540d1","status":"passed","time":{"start":1731199544899,"stop":1731199545927,"duration":1028}},{"uid":"3f4e39b9d7e7d2d5","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/3f4e39b9d7e7d2d5","status":"passed","time":{"start":1731112976828,"stop":1731112977918,"duration":1090}},{"uid":"cea547e9a1fbd3f3","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/cea547e9a1fbd3f3","status":"passed","time":{"start":1731026621315,"stop":1731026622280,"duration":965}},{"uid":"502e46ecdb636eb5","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/502e46ecdb636eb5","status":"passed","time":{"start":1730940201098,"stop":1730940201919,"duration":821}},{"uid":"7cbc558af389cc00","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/7cbc558af389cc00","status":"passed","time":{"start":1730894714984,"stop":1730894715903,"duration":919}},{"uid":"caef33355b239c3a","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/caef33355b239c3a","status":"passed","time":{"start":1730853850630,"stop":1730853851573,"duration":943}},{"uid":"a594437068d67ca5","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/a594437068d67ca5","status":"passed","time":{"start":1730767442436,"stop":1730767443382,"duration":946}},{"uid":"650bf6c3381f6ed2","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/650bf6c3381f6ed2","status":"passed","time":{"start":1730681114781,"stop":1730681115870,"duration":1089}},{"uid":"e5a3bbc9c0a93ed6","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/e5a3bbc9c0a93ed6","status":"passed","time":{"start":1730594765819,"stop":1730594766714,"duration":895}},{"uid":"f0b64795baec2e22","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/f0b64795baec2e22","status":"passed","time":{"start":1730507610516,"stop":1730507611383,"duration":867}},{"uid":"2bd9b1591085cb2f","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/2bd9b1591085cb2f","status":"passed","time":{"start":1730421383607,"stop":1730421388994,"duration":5387}},{"uid":"dcbb310e27995ace","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/dcbb310e27995ace","status":"passed","time":{"start":1730335599784,"stop":1730335600585,"duration":801}},{"uid":"1f6b18c6edaa904","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/1f6b18c6edaa904","status":"passed","time":{"start":1730303900753,"stop":1730303901554,"duration":801}},{"uid":"af719abd207522a5","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/af719abd207522a5","status":"passed","time":{"start":1730249021666,"stop":1730249022843,"duration":1177}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"9d00741f43f885b.json","parameterValues":["'rak5010'","'zephyr'"]}