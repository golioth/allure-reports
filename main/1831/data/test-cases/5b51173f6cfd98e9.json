{"uid":"5b51173f6cfd98e9","name":"test_one_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_one_arg","historyId":"ee936b7d181ae9cc4057b23c9f7088a4","time":{"start":1732297804689,"stop":1732297810142,"duration":5453},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff96212cd0>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff979502d0>\ndevice = <golioth.golioth.Device object at 0xffff962123d0>\n\n    async def test_one_arg(board, device):\n>       await device.rpc.no_response(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff96212cd0>\nmethod = 'no_response', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732297729227,"stop":1732297729227,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732297729228,"stop":1732297729229,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732297729229,"stop":1732297729230,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732297729230,"stop":1732297729230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732297729231,"stop":1732297729231,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732297729232,"stop":1732297729232,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732297729233,"stop":1732297729233,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732297729233,"stop":1732297729234,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732297729234,"stop":1732297729234,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732297729235,"stop":1732297729235,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732297729235,"stop":1732297729236,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732297729236,"stop":1732297729236,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732297729237,"stop":1732297729660,"duration":423},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732297729661,"stop":1732297771158,"duration":41497},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732297771159,"stop":1732297772177,"duration":1018},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732297772178,"stop":1732297801918,"duration":29740},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732297876655,"stop":1732297876656,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732297876658,"stop":1732297877129,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732297877131,"stop":1732297877133,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732297877135,"stop":1732297877138,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"c52ebe46c8eb"},{"name":"thread","value":"267-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":46,"unknown":0,"total":62},"items":[{"uid":"b3cdc13b47561d47","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/b3cdc13b47561d47","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732276972934,"stop":1732276972934,"duration":0}},{"uid":"de1a6a40e4e1c7dd","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/de1a6a40e4e1c7dd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732236696978,"stop":1732236696978,"duration":0}},{"uid":"10a12764828c93ae","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/10a12764828c93ae","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732213572950,"stop":1732213572950,"duration":0}},{"uid":"71c345c2596e5492","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/71c345c2596e5492","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1732161316152,"stop":1732161321600,"duration":5448}},{"uid":"2cfce93bd814ea0d","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/2cfce93bd814ea0d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732151099185,"stop":1732151099185,"duration":0}},{"uid":"95a8b50e53d92dc5","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/95a8b50e53d92dc5","status":"passed","time":{"start":1732137498315,"stop":1732137500684,"duration":2369}},{"uid":"883306c3f4730738","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/883306c3f4730738","status":"passed","time":{"start":1732063610662,"stop":1732063612207,"duration":1545}},{"uid":"fc777dde57a5478c","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/fc777dde57a5478c","status":"passed","time":{"start":1732058244021,"stop":1732058245567,"duration":1546}},{"uid":"f4e1b8d4d31f50f8","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/f4e1b8d4d31f50f8","status":"passed","time":{"start":1732036603453,"stop":1732036605067,"duration":1614}},{"uid":"9d7b630d4b47aa5d","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/9d7b630d4b47aa5d","status":"passed","time":{"start":1731977244717,"stop":1731977246382,"duration":1665}},{"uid":"cc762f4edcea8de1","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/cc762f4edcea8de1","status":"passed","time":{"start":1731966346124,"stop":1731966347697,"duration":1573}},{"uid":"43ed8fd6af96c51f","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/43ed8fd6af96c51f","status":"passed","time":{"start":1731890965157,"stop":1731890966679,"duration":1522}},{"uid":"2eda691d0baac349","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/2eda691d0baac349","status":"passed","time":{"start":1731804604136,"stop":1731804605692,"duration":1556}},{"uid":"eeefe2c57d6f8f5e","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/eeefe2c57d6f8f5e","status":"passed","time":{"start":1731718196572,"stop":1731718198221,"duration":1649}},{"uid":"4faf425f3f8beb80","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/4faf425f3f8beb80","status":"passed","time":{"start":1731631739420,"stop":1731631741021,"duration":1601}},{"uid":"b228e357e834a094","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/b228e357e834a094","status":"passed","time":{"start":1731606707243,"stop":1731606708857,"duration":1614}},{"uid":"435daa4946a8515b","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/435daa4946a8515b","status":"passed","time":{"start":1731565446872,"stop":1731565448495,"duration":1623}},{"uid":"cfcd3765914e9a5e","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/cfcd3765914e9a5e","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'","time":{"start":1731545076406,"stop":1731545076406,"duration":0}},{"uid":"f5eb6fc3a1442ef3","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/f5eb6fc3a1442ef3","status":"passed","time":{"start":1731458875911,"stop":1731458877544,"duration":1633}},{"uid":"66fcd7758955085c","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/66fcd7758955085c","status":"passed","time":{"start":1731372306394,"stop":1731372308032,"duration":1638}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"5b51173f6cfd98e9.json","parameterValues":["'rak5010'","'zephyr'"]}