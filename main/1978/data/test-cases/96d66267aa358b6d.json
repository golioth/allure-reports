{
  "uid" : "96d66267aa358b6d",
  "name" : "test_observation_repeat_restart",
  "fullName" : "tests.hil.tests.rpc.test_rpc#test_observation_repeat_restart",
  "historyId" : "c96172a93787f73c6d68c1d665ffe297",
  "time" : {
    "start" : 1735347832292,
    "stop" : 1735347991392,
    "duration" : 159100
  },
  "status" : "broken",
  "statusMessage" : "trio.TooSlowError",
  "statusTrace" : "deadline = 231316.80443693406\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa4499950>\ndevice = <golioth.golioth.Device object at 0xffffa448ecd0>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n            rsp = await device.rpc.disconnect()\n    \n            # Confirm re-connection to Golioth\n>           assert None != await board.wait_for_regex_in_line('RPC observation established', timeout_s=120)\n\ntests/hil/tests/rpc/test_rpc.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 231316.80443693406\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "bmp_port",
    "time" : {
      "start" : 1735347776838,
      "stop" : 1735347776838,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1735347776839,
      "stop" : 1735347776839,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1735347776837,
      "stop" : 1735347776837,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1735347776833,
      "stop" : 1735347776833,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1735347777489,
      "stop" : 1735347792280,
      "duration" : 14791
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1735347776839,
      "stop" : 1735347776839,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1735347776840,
      "stop" : 1735347776840,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1735347776836,
      "stop" : 1735347776836,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1735347776832,
      "stop" : 1735347776833,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1735347776834,
      "stop" : 1735347776834,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1735347776837,
      "stop" : 1735347776838,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1735347792282,
      "stop" : 1735347793260,
      "duration" : 978
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1735347776840,
      "stop" : 1735347777489,
      "duration" : 649
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1735347793261,
      "stop" : 1735347813447,
      "duration" : 20186
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1735347776831,
      "stop" : 1735347776832,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1735347776835,
      "stop" : 1735347776835,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "trio.TooSlowError",
    "statusTrace" : "deadline = 231316.80443693406\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa4499950>\ndevice = <golioth.golioth.Device object at 0xffffa448ecd0>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n            rsp = await device.rpc.disconnect()\n    \n            # Confirm re-connection to Golioth\n>           assert None != await board.wait_for_regex_in_line('RPC observation established', timeout_s=120)\n\ntests/hil/tests/rpc/test_rpc.py:78: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 231316.80443693406\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7d97ba43cb39f965",
      "name" : "stdout",
      "source" : "7d97ba43cb39f965.txt",
      "type" : "text/plain",
      "size" : 9669
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1735347998613,
      "stop" : 1735347998614,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1735347998243,
      "stop" : 1735347998610,
      "duration" : 367
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1735347998617,
      "stop" : 1735347998619,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup::0",
    "time" : {
      "start" : 1735347998240,
      "stop" : 1735347998240,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "mikes_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_rpc"
  }, {
    "name" : "host",
    "value" : "2d01cafca19f"
  }, {
    "name" : "thread",
    "value" : "242-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.rpc.test_rpc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf9160dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 21,
        "unknown" : 0,
        "total" : 25
      },
      "items" : [ {
        "uid" : "a29c883e6f21eaf3",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1977/#testresult/a29c883e6f21eaf3",
        "status" : "passed",
        "time" : {
          "start" : 1735261514308,
          "stop" : 1735261547372,
          "duration" : 33064
        }
      }, {
        "uid" : "e7ca2a19f2230bf2",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1976/#testresult/e7ca2a19f2230bf2",
        "status" : "passed",
        "time" : {
          "start" : 1735173875216,
          "stop" : 1735173904721,
          "duration" : 29505
        }
      }, {
        "uid" : "bd151bfd8c5d62b4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1975/#testresult/bd151bfd8c5d62b4",
        "status" : "passed",
        "time" : {
          "start" : 1735088085737,
          "stop" : 1735088117932,
          "duration" : 32195
        }
      }, {
        "uid" : "2e222c78d36c1b73",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1974/#testresult/2e222c78d36c1b73",
        "status" : "passed",
        "time" : {
          "start" : 1735001116205,
          "stop" : 1735001148155,
          "duration" : 31950
        }
      }, {
        "uid" : "29cbf0c190143da6",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1973/#testresult/29cbf0c190143da6",
        "status" : "passed",
        "time" : {
          "start" : 1734915018151,
          "stop" : 1734915050415,
          "duration" : 32264
        }
      }, {
        "uid" : "5f94bd4a8dfb21df",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1972/#testresult/5f94bd4a8dfb21df",
        "status" : "passed",
        "time" : {
          "start" : 1734828811392,
          "stop" : 1734828844634,
          "duration" : 33242
        }
      }, {
        "uid" : "778a7434d1fdd8ce",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1969/#testresult/778a7434d1fdd8ce",
        "status" : "passed",
        "time" : {
          "start" : 1734742057062,
          "stop" : 1734742087083,
          "duration" : 30021
        }
      }, {
        "uid" : "8eb72b57a121a74b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1965/#testresult/8eb72b57a121a74b",
        "status" : "passed",
        "time" : {
          "start" : 1734655893702,
          "stop" : 1734655924240,
          "duration" : 30538
        }
      }, {
        "uid" : "c62d9da225238d0",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1957/#testresult/c62d9da225238d0",
        "status" : "passed",
        "time" : {
          "start" : 1734569675290,
          "stop" : 1734569704111,
          "duration" : 28821
        }
      }, {
        "uid" : "37a07fb70334b9b5",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1950/#testresult/37a07fb70334b9b5",
        "status" : "passed",
        "time" : {
          "start" : 1734483062918,
          "stop" : 1734483091479,
          "duration" : 28561
        }
      }, {
        "uid" : "b74b38200174a01b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1949/#testresult/b74b38200174a01b",
        "status" : "passed",
        "time" : {
          "start" : 1734469761185,
          "stop" : 1734469792437,
          "duration" : 31252
        }
      }, {
        "uid" : "d0850a86d6a68c9c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1946/#testresult/d0850a86d6a68c9c",
        "status" : "passed",
        "time" : {
          "start" : 1734445098016,
          "stop" : 1734445126578,
          "duration" : 28562
        }
      }, {
        "uid" : "c00fef3448b31ed7",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1944/#testresult/c00fef3448b31ed7",
        "status" : "passed",
        "time" : {
          "start" : 1734397089314,
          "stop" : 1734397121285,
          "duration" : 31971
        }
      }, {
        "uid" : "f98038eea7da67cc",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1935/#testresult/f98038eea7da67cc",
        "status" : "passed",
        "time" : {
          "start" : 1734310801849,
          "stop" : 1734310834439,
          "duration" : 32590
        }
      }, {
        "uid" : "a0ebc21bb39dacc1",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1934/#testresult/a0ebc21bb39dacc1",
        "status" : "passed",
        "time" : {
          "start" : 1734224503007,
          "stop" : 1734224535224,
          "duration" : 32217
        }
      }, {
        "uid" : "174a23ef4830ba3b",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1933/#testresult/174a23ef4830ba3b",
        "status" : "passed",
        "time" : {
          "start" : 1734137932820,
          "stop" : 1734137966090,
          "duration" : 33270
        }
      }, {
        "uid" : "37b5bec94102bc2",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1930/#testresult/37b5bec94102bc2",
        "status" : "passed",
        "time" : {
          "start" : 1734118542045,
          "stop" : 1734118575357,
          "duration" : 33312
        }
      }, {
        "uid" : "30b33a1cb4b81da1",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1929/#testresult/30b33a1cb4b81da1",
        "status" : "passed",
        "time" : {
          "start" : 1734051728570,
          "stop" : 1734051757433,
          "duration" : 28863
        }
      }, {
        "uid" : "16c3317afac4ffcb",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1924/#testresult/16c3317afac4ffcb",
        "status" : "passed",
        "time" : {
          "start" : 1734032264799,
          "stop" : 1734032296269,
          "duration" : 31470
        }
      }, {
        "uid" : "c5e6aa19f1869ce2",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1910/#testresult/c5e6aa19f1869ce2",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1733996805096,
          "stop" : 1733996805096,
          "duration" : 0
        }
      } ]
    },
    "tags" : [ "mikes_orange_pi", "nrf9160dk", "anyio", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "96d66267aa358b6d.json",
  "parameterValues" : [ "'nrf9160dk'", "'zephyr'" ]
}