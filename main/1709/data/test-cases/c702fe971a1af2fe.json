{"uid":"c702fe971a1af2fe","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"2f204ffe20d9a076758a1035d6c7af62","time":{"start":1730421328237,"stop":1730421398291,"duration":70054},"status":"failed","statusMessage":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffff863e3f10>\ndevice = <golioth.golioth.Device object at 0xffff863b8890>\nproject = <golioth.golioth.Project object at 0xffff86318850>\nreleases = {'test_blocks': Release <6724224598103374e37c5d8b, release_tags=[], device_tags=['6724224398103374e37c5d88'], artifact..., release_tags=[], device_tags=['6724224398103374e37c5d88'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 9 == 8\nE            +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730421291993,"stop":1730421291994,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730421291994,"stop":1730421291995,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730421291996,"stop":1730421291996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730421291996,"stop":1730421291997,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730421291997,"stop":1730421291998,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730421291998,"stop":1730421291998,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730421291999,"stop":1730421291999,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730421292000,"stop":1730421292000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730421292000,"stop":1730421292001,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730421292001,"stop":1730421292001,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730421292002,"stop":1730421292002,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730421292002,"stop":1730421292002,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730421292003,"stop":1730421304715,"duration":12712},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730421304718,"stop":1730421305224,"duration":506},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730421305224,"stop":1730421306146,"duration":922},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730421306146,"stop":1730421314263,"duration":8117},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1730421314265,"stop":1730421314846,"duration":581},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1730421314847,"stop":1730421315972,"duration":1125},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1730421315973,"stop":1730421317761,"duration":1788},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1730421328232,"stop":1730421328233,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","statusTrace":"board = <nrf52840dk.nRF52840DK object at 0xffff863e3f10>\ndevice = <golioth.golioth.Device object at 0xffff863b8890>\nproject = <golioth.golioth.Project object at 0xffff86318850>\nreleases = {'test_blocks': Release <6724224598103374e37c5d8b, release_tags=[], device_tags=['6724224398103374e37c5d88'], artifact..., release_tags=[], device_tags=['6724224398103374e37c5d88'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 9 == 8\nE            +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"a0b6b087694363a0","name":"stdout","source":"a0b6b087694363a0.txt","type":"text/plain","size":3948}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1730421398462,"stop":1730421400017,"duration":1555},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1730421400019,"stop":1730421401726,"duration":1707},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1730421401728,"stop":1730421402806,"duration":1078},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1730421402808,"stop":1730421402808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1730421402810,"stop":1730421402810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730421402812,"stop":1730421403226,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730421403229,"stop":1730421403229,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730421403231,"stop":1730421403262,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"b30502e4ea9b"},{"name":"thread","value":"279-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":4,"skipped":0,"passed":24,"unknown":0,"total":30},"items":[{"uid":"a9bf3c37ea9799fa","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/a9bf3c37ea9799fa","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1730334795234,"stop":1730334839846,"duration":44612}},{"uid":"154741f870e83e5d","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/154741f870e83e5d","status":"passed","time":{"start":1730303186193,"stop":1730303266508,"duration":80315}},{"uid":"9bcf769ee0c04573","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/9bcf769ee0c04573","status":"passed","time":{"start":1730248334748,"stop":1730248412493,"duration":77745}},{"uid":"84a50121aa7336b8","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/84a50121aa7336b8","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1730162054253,"stop":1730162085074,"duration":30821}},{"uid":"69eb0b377f0239e0","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/69eb0b377f0239e0","status":"passed","time":{"start":1730075683718,"stop":1730075761401,"duration":77683}},{"uid":"dfac505efab5ee1b","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/dfac505efab5ee1b","status":"passed","time":{"start":1729989316270,"stop":1729989394091,"duration":77821}},{"uid":"22f6b1cd30fa5963","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/22f6b1cd30fa5963","status":"passed","time":{"start":1729902771905,"stop":1729902850965,"duration":79060}},{"uid":"eff871bdcdae389f","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/eff871bdcdae389f","status":"passed","time":{"start":1729816412582,"stop":1729816494549,"duration":81967}},{"uid":"80bf58ab7b3c7cba","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/80bf58ab7b3c7cba","status":"passed","time":{"start":1729729943464,"stop":1729730021056,"duration":77592}},{"uid":"bf2aa33b0dc963f2","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/bf2aa33b0dc963f2","status":"passed","time":{"start":1729643480602,"stop":1729643558129,"duration":77527}},{"uid":"93d0b3d21278fd9","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/93d0b3d21278fd9","status":"passed","time":{"start":1729557178305,"stop":1729557256347,"duration":78042}},{"uid":"92bcbadd940dd428","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/92bcbadd940dd428","status":"passed","time":{"start":1729470799221,"stop":1729470876877,"duration":77656}},{"uid":"e42ea41b6ad406eb","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/e42ea41b6ad406eb","status":"passed","time":{"start":1729384516602,"stop":1729384601051,"duration":84449}},{"uid":"eeed58a257c6dd6e","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/eeed58a257c6dd6e","status":"passed","time":{"start":1729368405705,"stop":1729368483708,"duration":78003}},{"uid":"72665522dc47cc6b","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/72665522dc47cc6b","status":"failed","statusDetails":"AssertionError: assert 1 == 5\n +  where 1 = len({'multi_artifact': Artifact <65f896d09b3bc69827b4cb21, package=walrus, version=0.4.2, blueprint=None>})","time":{"start":1729361360803,"stop":1729361360803,"duration":0}},{"uid":"8c59dd89004ffa90","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/8c59dd89004ffa90","status":"passed","time":{"start":1729297946000,"stop":1729298024044,"duration":78044}},{"uid":"63ecee007e3d4a1a","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/63ecee007e3d4a1a","status":"passed","time":{"start":1729211525269,"stop":1729211602865,"duration":77596}},{"uid":"a00ae8e7578bc105","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/a00ae8e7578bc105","status":"passed","time":{"start":1729202578727,"stop":1729202656589,"duration":77862}},{"uid":"4b0dc59e1325bdc8","reportUrl":"https://golioth.github.io/allure-reports/main/1659//#testresult/4b0dc59e1325bdc8","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1729129746341,"stop":1729129746341,"duration":0}},{"uid":"1129a5e8efe5b23d","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/1129a5e8efe5b23d","status":"passed","time":{"start":1729109321511,"stop":1729109399358,"duration":77847}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"c702fe971a1af2fe.json","parameterValues":["'nrf52840dk'","'zephyr'"]}