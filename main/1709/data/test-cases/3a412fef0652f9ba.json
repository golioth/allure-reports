{"uid":"3a412fef0652f9ba","name":"test_observation_repeat_restart","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_repeat_restart","historyId":"e062988f76f73cf9a566a0edde20a798","time":{"start":1730421436945,"stop":1730421442323,"duration":5378},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff89634b90>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff895bf290>\ndevice = <golioth.golioth.Device object at 0xffff89634210>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n>           rsp = await device.rpc.disconnect()\n\ntests/hil/tests/rpc/test_rpc.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff89634b90>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730421346609,"stop":1730421346609,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730421346609,"stop":1730421346610,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730421346610,"stop":1730421346611,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730421346611,"stop":1730421346611,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730421346612,"stop":1730421346612,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730421346613,"stop":1730421346613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730421346613,"stop":1730421346613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730421346614,"stop":1730421346614,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730421346614,"stop":1730421346614,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730421346615,"stop":1730421346615,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730421346615,"stop":1730421346615,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730421346616,"stop":1730421347048,"duration":432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730421346616,"stop":1730421346616,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730421347048,"stop":1730421398753,"duration":51705},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730421398754,"stop":1730421400051,"duration":1297},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730421400051,"stop":1730421411511,"duration":11460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730421449843,"stop":1730421449843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730421449845,"stop":1730421450260,"duration":415},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730421450262,"stop":1730421450264,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730421450266,"stop":1730421450268,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"3a094964d277"},{"name":"thread","value":"243-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":21,"unknown":0,"total":29},"items":[{"uid":"a1a8c04a93a1603f","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/a1a8c04a93a1603f","status":"passed","time":{"start":1730334882315,"stop":1730334924060,"duration":41745}},{"uid":"a7e2afd80f3a05","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/a7e2afd80f3a05","status":"passed","time":{"start":1730303317502,"stop":1730303348356,"duration":30854}},{"uid":"c4bf87528a52fd93","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/c4bf87528a52fd93","status":"passed","time":{"start":1730248374465,"stop":1730248397771,"duration":23306}},{"uid":"b45fb9bc0da8cc2e","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/b45fb9bc0da8cc2e","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1730162085809,"stop":1730162101020,"duration":15211}},{"uid":"f2164cc3906da876","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/f2164cc3906da876","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1730075745236,"stop":1730075750696,"duration":5460}},{"uid":"36ac487f69a8331a","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/36ac487f69a8331a","status":"passed","time":{"start":1729989411078,"stop":1729989438399,"duration":27321}},{"uid":"b64d2f2eec7e8bd8","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/b64d2f2eec7e8bd8","status":"passed","time":{"start":1729902829786,"stop":1729902861602,"duration":31816}},{"uid":"6a1a7160bc311eac","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/6a1a7160bc311eac","status":"passed","time":{"start":1729816462718,"stop":1729816491525,"duration":28807}},{"uid":"4f68120962d57443","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/4f68120962d57443","status":"passed","time":{"start":1729729949748,"stop":1729729973588,"duration":23840}},{"uid":"15d0f59793e4fd27","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/15d0f59793e4fd27","status":"passed","time":{"start":1729645351049,"stop":1729645378123,"duration":27074}},{"uid":"2be2d64e3204078","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/2be2d64e3204078","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729557355369,"stop":1729557360680,"duration":5311}},{"uid":"242f639ff5001e16","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/242f639ff5001e16","status":"passed","time":{"start":1729470870927,"stop":1729470900258,"duration":29331}},{"uid":"bd4565229916185d","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/bd4565229916185d","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729384617382,"stop":1729384630130,"duration":12748}},{"uid":"e89759fde30a07ad","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/e89759fde30a07ad","status":"passed","time":{"start":1729368467461,"stop":1729368497084,"duration":29623}},{"uid":"a17718ffaca175cc","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/a17718ffaca175cc","status":"passed","time":{"start":1729361315422,"stop":1729361344277,"duration":28855}},{"uid":"6cdadd770a522c4b","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/6cdadd770a522c4b","status":"passed","time":{"start":1729298002627,"stop":1729298030173,"duration":27546}},{"uid":"7b960c344e52b02d","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/7b960c344e52b02d","status":"passed","time":{"start":1729211588983,"stop":1729211619535,"duration":30552}},{"uid":"547cd879f63d2380","reportUrl":"https://golioth.github.io/allure-reports/main/1674//#testresult/547cd879f63d2380","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729202682467,"stop":1729202695139,"duration":12672}},{"uid":"e71cbe7981ee7933","reportUrl":"https://golioth.github.io/allure-reports/main/1649//#testresult/e71cbe7981ee7933","status":"passed","time":{"start":1729109270830,"stop":1729109293968,"duration":23138}},{"uid":"fd52a9dbf56cf750","reportUrl":"https://golioth.github.io/allure-reports/main/1647//#testresult/fd52a9dbf56cf750","status":"passed","time":{"start":1729038901764,"stop":1729038924586,"duration":22822}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"3a412fef0652f9ba.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}