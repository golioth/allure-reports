{"uid":"8df314835e78ce32","name":"test_set_string","fullName":"tests.hil.tests.settings.test_settings#test_set_string","historyId":"255ac2a53dd5f6b8beaad2a09e6c1323","time":{"start":1731565563145,"stop":1731565563145,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 170680.6984305003\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffffb1544fd0>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffb1493050>\ndevice = <golioth.golioth.Device object at 0xffffb14fc510>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 170680.6984305003\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731565407068,"stop":1731565407068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731565407069,"stop":1731565407069,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731565407070,"stop":1731565407070,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731565407071,"stop":1731565407072,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731565407071,"stop":1731565407071,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731565407072,"stop":1731565407072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731565407073,"stop":1731565407073,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731565407073,"stop":1731565407073,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731565407074,"stop":1731565407074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731565407074,"stop":1731565407074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731565407075,"stop":1731565407075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731565407075,"stop":1731565407075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731565407076,"stop":1731565407502,"duration":426},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731565407503,"stop":1731565429401,"duration":21898},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731565429403,"stop":1731565430435,"duration":1032},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731565430435,"stop":1731565558905,"duration":128470},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1731565564999,"stop":1731565565369,"duration":370},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731565565371,"stop":1731565565372,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731565565375,"stop":1731565565377,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"51e999fa6880"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":36,"skipped":0,"passed":9,"unknown":0,"total":45},"items":[{"uid":"8d4029a1852a4628","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/8d4029a1852a4628","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731545180285,"stop":1731545180285,"duration":0}},{"uid":"8ab5dadb112d30f7","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/8ab5dadb112d30f7","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731458737317,"stop":1731458737317,"duration":0}},{"uid":"22a09ef3140b1305","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/22a09ef3140b1305","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731372556010,"stop":1731372556010,"duration":0}},{"uid":"f93f0a5e6fb9f121","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/f93f0a5e6fb9f121","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731286115441,"stop":1731286115441,"duration":0}},{"uid":"2a811fea34cccf1e","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/2a811fea34cccf1e","status":"passed","time":{"start":1731199815433,"stop":1731199819356,"duration":3923}},{"uid":"4410f0fc0b39b5d4","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/4410f0fc0b39b5d4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731113169157,"stop":1731113169157,"duration":0}},{"uid":"973b349d021fd3c3","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/973b349d021fd3c3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731026936752,"stop":1731026936752,"duration":0}},{"uid":"5a04bf548d67c927","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/5a04bf548d67c927","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730940428250,"stop":1730940428250,"duration":0}},{"uid":"e6103a34fbf261ee","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/e6103a34fbf261ee","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730894199733,"stop":1730894199733,"duration":0}},{"uid":"e410769d56cb37eb","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/e410769d56cb37eb","status":"passed","time":{"start":1730854209927,"stop":1730854213811,"duration":3884}},{"uid":"272d6afdad8c62d1","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/272d6afdad8c62d1","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730767734501,"stop":1730767734501,"duration":0}},{"uid":"55bb716c770abc52","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/55bb716c770abc52","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730681212490,"stop":1730681212490,"duration":0}},{"uid":"82db0a3bed23caab","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/82db0a3bed23caab","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730594987878,"stop":1730594987878,"duration":0}},{"uid":"e5e1283ae74b9d76","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/e5e1283ae74b9d76","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730508563182,"stop":1730508563182,"duration":0}},{"uid":"786f57de3a19a7a0","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/786f57de3a19a7a0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730422256892,"stop":1730422256892,"duration":0}},{"uid":"8204b12fee14be7c","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/8204b12fee14be7c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730335719244,"stop":1730335719244,"duration":0}},{"uid":"f02726a8b315a634","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/f02726a8b315a634","status":"passed","time":{"start":1730304236042,"stop":1730304239834,"duration":3792}},{"uid":"90eab42fa04da29a","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/90eab42fa04da29a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730249195452,"stop":1730249195452,"duration":0}},{"uid":"471c91fab9226d32","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/471c91fab9226d32","status":"passed","time":{"start":1730162858288,"stop":1730162862263,"duration":3975}},{"uid":"c4468e58cde7c247","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/c4468e58cde7c247","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730076650002,"stop":1730076650002,"duration":0}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"8df314835e78ce32.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}