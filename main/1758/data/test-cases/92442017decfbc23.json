{"uid":"92442017decfbc23","name":"test_not_registered","fullName":"tests.hil.tests.rpc.test_rpc#test_not_registered","historyId":"c7e615c14db2f0766e67e4a7fe001e13","time":{"start":1731803934591,"stop":1731803940147,"duration":5556},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff8aa4ca50>\ndevice = <golioth.golioth.Device object at 0xffff8aa803d0>\n\n    async def test_not_registered(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           await device.rpc.not_registered([])\n\ntests/hil/tests/rpc/test_rpc.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: in call\n    response = await c.post('rpc', json={\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731803890018,"stop":1731803890018,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731803890019,"stop":1731803890019,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731803890020,"stop":1731803890020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731803890021,"stop":1731803890021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731803890022,"stop":1731803890022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731803890023,"stop":1731803890023,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731803890023,"stop":1731803890023,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731803890024,"stop":1731803890024,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731803890024,"stop":1731803890024,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731803890025,"stop":1731803890025,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731803890025,"stop":1731803890025,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731803890026,"stop":1731803890592,"duration":566},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731803890026,"stop":1731803890026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731803890593,"stop":1731803930210,"duration":39617},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731803930212,"stop":1731803931438,"duration":1226},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731803931439,"stop":1731803934582,"duration":3143},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff8aa4ca50>\ndevice = <golioth.golioth.Device object at 0xffff8aa803d0>\n\n    async def test_not_registered(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           await device.rpc.not_registered([])\n\ntests/hil/tests/rpc/test_rpc.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: in call\n    response = await c.post('rpc', json={\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","steps":[],"attachments":[{"uid":"89f418573f114f1f","name":"stdout","source":"89f418573f114f1f.txt","type":"text/plain","size":7818}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1731804004157,"stop":1731804004157,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1731804004160,"stop":1731804004757,"duration":597},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731804004760,"stop":1731804004764,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731804004766,"stop":1731804004768,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"8ca9338a1e97"},{"name":"thread","value":"260-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":43,"unknown":0,"total":46},"items":[{"uid":"57b05c04293732e","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/57b05c04293732e","status":"passed","time":{"start":1731717360103,"stop":1731717361275,"duration":1172}},{"uid":"88fb6dd9ca54ee07","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/88fb6dd9ca54ee07","status":"passed","time":{"start":1731630857310,"stop":1731630858530,"duration":1220}},{"uid":"956b2b570df1222","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/956b2b570df1222","status":"passed","time":{"start":1731606582265,"stop":1731606583575,"duration":1310}},{"uid":"e99aeb1770b1a9f2","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/e99aeb1770b1a9f2","status":"passed","time":{"start":1731565000045,"stop":1731565001587,"duration":1542}},{"uid":"2f919789779dc138","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/2f919789779dc138","status":"passed","time":{"start":1731544498520,"stop":1731544499802,"duration":1282}},{"uid":"12daec18388b77eb","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/12daec18388b77eb","status":"passed","time":{"start":1731458093641,"stop":1731458095103,"duration":1462}},{"uid":"20daa62e8d09447b","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/20daa62e8d09447b","status":"passed","time":{"start":1731198869275,"stop":1731198870648,"duration":1373}},{"uid":"17b6b4b924d7c601","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/17b6b4b924d7c601","status":"passed","time":{"start":1731112300101,"stop":1731112301464,"duration":1363}},{"uid":"a311bdfd73de73c","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/a311bdfd73de73c","status":"passed","time":{"start":1731026012730,"stop":1731026014318,"duration":1588}},{"uid":"24cc6f2594de34b","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/24cc6f2594de34b","status":"passed","time":{"start":1730939531883,"stop":1730939533325,"duration":1442}},{"uid":"b05a0328c04ad749","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/b05a0328c04ad749","status":"passed","time":{"start":1730893304648,"stop":1730893306633,"duration":1985}},{"uid":"23a769577ea63344","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/23a769577ea63344","status":"passed","time":{"start":1730853231174,"stop":1730853233801,"duration":2627}},{"uid":"7839512e784a157b","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/7839512e784a157b","status":"passed","time":{"start":1730766769945,"stop":1730766771098,"duration":1153}},{"uid":"32ff72ffedb4f5ce","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/32ff72ffedb4f5ce","status":"passed","time":{"start":1730680447894,"stop":1730680449157,"duration":1263}},{"uid":"6efa2dffd23821d5","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/6efa2dffd23821d5","status":"passed","time":{"start":1730594180622,"stop":1730594183388,"duration":2766}},{"uid":"df594f09822dac2a","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/df594f09822dac2a","status":"passed","time":{"start":1730507606605,"stop":1730507608592,"duration":1987}},{"uid":"130f512c29784836","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/130f512c29784836","status":"passed","time":{"start":1730421411519,"stop":1730421414120,"duration":2601}},{"uid":"697c2f4f9583cacf","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/697c2f4f9583cacf","status":"passed","time":{"start":1730334845361,"stop":1730334846994,"duration":1633}},{"uid":"1a48888ec8063ca0","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/1a48888ec8063ca0","status":"passed","time":{"start":1730303285255,"stop":1730303286979,"duration":1724}},{"uid":"6efbdf7acad44bfb","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/6efbdf7acad44bfb","status":"passed","time":{"start":1730248358162,"stop":1730248359372,"duration":1210}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"92442017decfbc23.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}