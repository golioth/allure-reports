{"uid":"915abd35744bc757","name":"test_unrecognized_key","fullName":"tests.hil.tests.settings.test_settings#test_unrecognized_key","historyId":"f7d2df17961194151206462c59561dd5","time":{"start":1731718360478,"stop":1731718360478,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 98265.47953040255\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffff897c1b10>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff8979ae50>\ndevice = <golioth.golioth.Device object at 0xffff8975d2d0>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 98265.47953040255\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1731718204853,"stop":1731718204853,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1731718204854,"stop":1731718204854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1731718204855,"stop":1731718204855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1731718204856,"stop":1731718204856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1731718204857,"stop":1731718204857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1731718204858,"stop":1731718204859,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1731718204859,"stop":1731718204860,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1731718204860,"stop":1731718204861,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1731718204861,"stop":1731718204862,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1731718204862,"stop":1731718204862,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1731718204863,"stop":1731718204864,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1731718204863,"stop":1731718204863,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1731718204864,"stop":1731718205265,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1731718205266,"stop":1731718227211,"duration":21945},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1731718227212,"stop":1731718228307,"duration":1095},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1731718228308,"stop":1731718355937,"duration":127629},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1731718362013,"stop":1731718362481,"duration":468},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1731718362484,"stop":1731718362485,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1731718362487,"stop":1731718362489,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"00d39c572941"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":39,"skipped":0,"passed":9,"unknown":0,"total":48},"items":[{"uid":"20ad4c99fba787ec","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/20ad4c99fba787ec","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731631722127,"stop":1731631722127,"duration":0}},{"uid":"5325d8815cb8f052","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/5325d8815cb8f052","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731607631046,"stop":1731607631046,"duration":0}},{"uid":"367a1a2bfefb90b3","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/367a1a2bfefb90b3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731565563466,"stop":1731565563466,"duration":0}},{"uid":"f3dc5ec9c31a4796","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/f3dc5ec9c31a4796","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731545180842,"stop":1731545180842,"duration":0}},{"uid":"fe7d8c8a8df65d95","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/fe7d8c8a8df65d95","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731458737872,"stop":1731458737872,"duration":0}},{"uid":"2688b49d51e81247","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/2688b49d51e81247","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731372556565,"stop":1731372556565,"duration":0}},{"uid":"97cd2e30e0310d24","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/97cd2e30e0310d24","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731286116001,"stop":1731286116001,"duration":0}},{"uid":"5e9bd2c76049fba1","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/5e9bd2c76049fba1","status":"passed","time":{"start":1731199819367,"stop":1731199819786,"duration":419}},{"uid":"f20ca929ddc16455","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/f20ca929ddc16455","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731113169717,"stop":1731113169717,"duration":0}},{"uid":"2338d0609ddd6429","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/2338d0609ddd6429","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731026937074,"stop":1731026937074,"duration":0}},{"uid":"fb03f6448fae840c","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/fb03f6448fae840c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730940428805,"stop":1730940428805,"duration":0}},{"uid":"419d3aee673e171","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/419d3aee673e171","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730894200293,"stop":1730894200293,"duration":0}},{"uid":"e5572d259d113715","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/e5572d259d113715","status":"passed","time":{"start":1730854213830,"stop":1730854214344,"duration":514}},{"uid":"3a8ea071e3b46b4a","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/3a8ea071e3b46b4a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730767734996,"stop":1730767734996,"duration":0}},{"uid":"cf2d40e27b6865cc","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/cf2d40e27b6865cc","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730681212813,"stop":1730681212813,"duration":0}},{"uid":"6902031e6821d26a","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/6902031e6821d26a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730594988433,"stop":1730594988433,"duration":0}},{"uid":"d655f2e1848eaf4","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/d655f2e1848eaf4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730508563739,"stop":1730508563739,"duration":0}},{"uid":"ffc71013645443de","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/ffc71013645443de","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730422257449,"stop":1730422257449,"duration":0}},{"uid":"caf8d10acb370aae","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/caf8d10acb370aae","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730335719800,"stop":1730335719800,"duration":0}},{"uid":"5caef64ca74b1db8","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/5caef64ca74b1db8","status":"passed","time":{"start":1730304239854,"stop":1730304240664,"duration":810}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"915abd35744bc757.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}