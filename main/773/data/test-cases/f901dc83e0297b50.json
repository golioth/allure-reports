{"uid":"f901dc83e0297b50","name":"test_set_int_range_max","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range_max","historyId":"ca8404d918b131eefbabe06b89ebb9a2","time":{"start":1760715793666,"stop":1760715804456,"duration":10790},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"seconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:46: in receive_some\n    return await self.serial.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1579: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff957842f0>\ndevice = <golioth.golioth.Device object at 0xffff958b34d0>\n\n    async def test_set_int_range_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 100)\n    \n>       assert None != await board.wait_for_regex_in_line('Received test_int_range: 100', timeout_s=10)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/hil/tests/settings/test_settings.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760715685801,"stop":1760715685801,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760715685802,"stop":1760715685802,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760715685803,"stop":1760715685803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760715685804,"stop":1760715685804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760715685804,"stop":1760715685805,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760715685805,"stop":1760715685805,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760715685806,"stop":1760715686309,"duration":503},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760715685806,"stop":1760715685806,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760715686309,"stop":1760715739872,"duration":53563},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760715739874,"stop":1760715740786,"duration":912},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760715740786,"stop":1760715758542,"duration":17756},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"seconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n>           yield scope\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:185: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:46: in receive_some\n    return await self.serial.receive_some()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/root/venv/lib/python3.13/site-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:336: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/root/venv/lib/python3.13/site-packages/trio/_core/_io_epoll.py:311: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/root/venv/lib/python3.13/site-packages/trio/_core/_traps.py:208: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/root/venv/lib/python3.13/site-packages/trio/_core/_run.py:1579: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff957842f0>\ndevice = <golioth.golioth.Device object at 0xffff958b34d0>\n\n    async def test_set_int_range_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 100)\n    \n>       assert None != await board.wait_for_regex_in_line('Received test_int_range: 100', timeout_s=10)\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/hil/tests/settings/test_settings.py:113: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/pytest_hil/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nseconds = 10\n\n    @contextmanager\n    def fail_after(\n        seconds: float,\n        *,\n        shield: bool = False,\n    ) -> Generator[trio.CancelScope, None, None]:\n        \"\"\"Creates a cancel scope with the given timeout, and raises an error if\n        it is actually cancelled.\n    \n        This function and :func:`move_on_after` are similar in that both create a\n        cancel scope with a given timeout, and if the timeout expires then both\n        will cause :exc:`Cancelled` to be raised within the scope. The difference\n        is that when the :exc:`Cancelled` exception reaches :func:`move_on_after`,\n        it's caught and discarded. When it reaches :func:`fail_after`, then it's\n        caught and :exc:`TooSlowError` is raised in its place.\n    \n        The deadline of the cancel scope is calculated upon entering.\n    \n        Args:\n          seconds (float): The timeout.\n          shield (bool): Initial value for the `~trio.CancelScope.shield` attribute\n              of the newly created cancel scope.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if *seconds* is less than zero or NaN.\n    \n        \"\"\"\n        with move_on_after(seconds, shield=shield) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/root/venv/lib/python3.13/site-packages/trio/_timeouts.py:187: TooSlowError","steps":[],"attachments":[{"uid":"e728624a3d8e18ed","name":"stdout","source":"e728624a3d8e18ed.txt","type":"text/plain","size":2839}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1760715915292,"stop":1760715915292,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760715915298,"stop":1760715915836,"duration":538},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760715915838,"stop":1760715915846,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760715915848,"stop":1760715915851,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"66cd64a3b61d"},{"name":"thread","value":"256-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":28,"unknown":0,"total":29},"items":[{"uid":"826cca5ec6e4affd","reportUrl":"https://golioth.github.io/allure-reports/main/772//#testresult/826cca5ec6e4affd","status":"passed","time":{"start":1760660625018,"stop":1760660628375,"duration":3357}},{"uid":"48ef22767644c60b","reportUrl":"https://golioth.github.io/allure-reports/main/770//#testresult/48ef22767644c60b","status":"passed","time":{"start":1760574026677,"stop":1760574029125,"duration":2448}},{"uid":"8972128020b7d444","reportUrl":"https://golioth.github.io/allure-reports/main/769//#testresult/8972128020b7d444","status":"passed","time":{"start":1760487583864,"stop":1760487587258,"duration":3394}},{"uid":"430ca24785e7e9b0","reportUrl":"https://golioth.github.io/allure-reports/main/768//#testresult/430ca24785e7e9b0","status":"passed","time":{"start":1760476258519,"stop":1760476262028,"duration":3509}},{"uid":"ac9677ea4535db6d","reportUrl":"https://golioth.github.io/allure-reports/main/767//#testresult/ac9677ea4535db6d","status":"passed","time":{"start":1760401048717,"stop":1760401052150,"duration":3433}},{"uid":"2f1b255f14612b4b","reportUrl":"https://golioth.github.io/allure-reports/main/766//#testresult/2f1b255f14612b4b","status":"passed","time":{"start":1760315453978,"stop":1760315457462,"duration":3484}},{"uid":"e0bfeacd11447882","reportUrl":"https://golioth.github.io/allure-reports/main/765//#testresult/e0bfeacd11447882","status":"passed","time":{"start":1760228285651,"stop":1760228288722,"duration":3071}},{"uid":"49e4a3e01e7db767","reportUrl":"https://golioth.github.io/allure-reports/main/763//#testresult/49e4a3e01e7db767","status":"passed","time":{"start":1760141867587,"stop":1760141870735,"duration":3148}},{"uid":"1f093589acad62d1","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/1f093589acad62d1","status":"passed","time":{"start":1760055457434,"stop":1760055460679,"duration":3245}},{"uid":"e0ef54340cce245d","reportUrl":"https://golioth.github.io/allure-reports/main/761//#testresult/e0ef54340cce245d","status":"passed","time":{"start":1760039929922,"stop":1760039933435,"duration":3513}},{"uid":"72d8d4a167ca0f77","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/72d8d4a167ca0f77","status":"passed","time":{"start":1759992088843,"stop":1759992091714,"duration":2871}},{"uid":"562e263205b64cb4","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/562e263205b64cb4","status":"passed","time":{"start":1759969041222,"stop":1759969044889,"duration":3667}},{"uid":"1b44dd9b9165e9f2","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/1b44dd9b9165e9f2","status":"passed","time":{"start":1759882715954,"stop":1759882718077,"duration":2123}},{"uid":"d3d46d598984c433","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/d3d46d598984c433","status":"passed","time":{"start":1759861198947,"stop":1759861202471,"duration":3524}},{"uid":"24c1411101ee9e19","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/24c1411101ee9e19","status":"passed","time":{"start":1759849007848,"stop":1759849012264,"duration":4416}},{"uid":"c809253bedb80f75","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/c809253bedb80f75","status":"passed","time":{"start":1759796262812,"stop":1759796266324,"duration":3512}},{"uid":"38a8746a1d871ee5","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/38a8746a1d871ee5","status":"passed","time":{"start":1759776102370,"stop":1759776105497,"duration":3127}},{"uid":"939a087229477585","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/939a087229477585","status":"passed","time":{"start":1759710620996,"stop":1759710624279,"duration":3283}},{"uid":"90f2d9fa59aaae1e","reportUrl":"https://golioth.github.io/allure-reports/main/741//#testresult/90f2d9fa59aaae1e","status":"passed","time":{"start":1759623469319,"stop":1759623472597,"duration":3278}},{"uid":"42157a8f60535f3d","reportUrl":"https://golioth.github.io/allure-reports/main/740//#testresult/42157a8f60535f3d","status":"passed","time":{"start":1759537050918,"stop":1759537054238,"duration":3320}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf"]},"source":"f901dc83e0297b50.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}