{"uid":"fccd693801c5885d","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"7268589362b684a762988362b0d4783e","time":{"start":1760834570352,"stop":1760834630926,"duration":60574},"status":"failed","statusMessage":"AssertionError: assert 9 == 7\n +  where 9 = int('9')","statusTrace":"board = <pytest_hil.frdmrw612.FRDMRW612 object at 0xffffb5ba7230>\ndevice = <golioth.golioth.Device object at 0xffffb5a006e0>\nproject = <golioth.golioth.Project object at 0xffffb5ba7b60>\nreleases = {'test_blocks': Release <68f433fe81db3c0394bbc11d, release_tags=[], device_tags=['68f433fc81db3c0394bbc11a'], artifact...ease_tags=[], device_tags=['68f433fc81db3c0394bbc11a'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 9 == 7\nE                    +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760834535747,"stop":1760834535748,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760834535748,"stop":1760834535748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760834535749,"stop":1760834535749,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760834535750,"stop":1760834535750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760834535750,"stop":1760834535750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760834535751,"stop":1760834535751,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760834535751,"stop":1760834535752,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760834535752,"stop":1760834551305,"duration":15553},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760834551307,"stop":1760834552171,"duration":864},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760834552172,"stop":1760834552791,"duration":619},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760834552792,"stop":1760834556260,"duration":3468},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1760834556261,"stop":1760834556633,"duration":372},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1760834556634,"stop":1760834557312,"duration":678},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1760834557313,"stop":1760834559072,"duration":1759},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1760834570349,"stop":1760834570349,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 9 == 7\n +  where 9 = int('9')","statusTrace":"board = <pytest_hil.frdmrw612.FRDMRW612 object at 0xffffb5ba7230>\ndevice = <golioth.golioth.Device object at 0xffffb5a006e0>\nproject = <golioth.golioth.Project object at 0xffffb5ba7b60>\nreleases = {'test_blocks': Release <68f433fe81db3c0394bbc11d, release_tags=[], device_tags=['68f433fc81db3c0394bbc11a'], artifact...ease_tags=[], device_tags=['68f433fc81db3c0394bbc11a'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 9 == 7\nE                    +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:214: AssertionError","steps":[],"attachments":[{"uid":"df6271d459e98198","name":"stdout","source":"df6271d459e98198.txt","type":"text/plain","size":853}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1760834631189,"stop":1760834631854,"duration":665},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1760834631857,"stop":1760834633390,"duration":1533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1760834633392,"stop":1760834634028,"duration":636},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1760834634030,"stop":1760834634030,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1760834634032,"stop":1760834634032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760834634034,"stop":1760834634387,"duration":353},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760834634390,"stop":1760834634390,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760834634392,"stop":1760834634449,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"frdm_rw612"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.frdm_rw612"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"554d3db23cbd"},{"name":"thread","value":"212-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'frdm_rw612'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":8,"skipped":0,"passed":21,"unknown":0,"total":31},"items":[{"uid":"cf0e83193f7c93ed","reportUrl":"https://golioth.github.io/allure-reports/main/778//#testresult/cf0e83193f7c93ed","status":"passed","time":{"start":1760748770344,"stop":1760748817639,"duration":47295}},{"uid":"ab175cc10de920fd","reportUrl":"https://golioth.github.io/allure-reports/main/773//#testresult/ab175cc10de920fd","status":"passed","time":{"start":1760718768421,"stop":1760718815267,"duration":46846}},{"uid":"96db4ff97c5732d","reportUrl":"https://golioth.github.io/allure-reports/main/772//#testresult/96db4ff97c5732d","status":"passed","time":{"start":1760662389279,"stop":1760662436259,"duration":46980}},{"uid":"42b47a9db50a9373","reportUrl":"https://golioth.github.io/allure-reports/main/770//#testresult/42b47a9db50a9373","status":"passed","time":{"start":1760574390234,"stop":1760574437336,"duration":47102}},{"uid":"873bf1c723ec6536","reportUrl":"https://golioth.github.io/allure-reports/main/769//#testresult/873bf1c723ec6536","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1760487601864,"stop":1760487649424,"duration":47560}},{"uid":"49c4646cb077144e","reportUrl":"https://golioth.github.io/allure-reports/main/768//#testresult/49c4646cb077144e","status":"passed","time":{"start":1760475888503,"stop":1760475939130,"duration":50627}},{"uid":"247563e70a515133","reportUrl":"https://golioth.github.io/allure-reports/main/767//#testresult/247563e70a515133","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1760400578355,"stop":1760400578355,"duration":0}},{"uid":"60beb085882d5bab","reportUrl":"https://golioth.github.io/allure-reports/main/766//#testresult/60beb085882d5bab","status":"passed","time":{"start":1760314341948,"stop":1760314389725,"duration":47777}},{"uid":"6c94fdae7fd31ace","reportUrl":"https://golioth.github.io/allure-reports/main/765//#testresult/6c94fdae7fd31ace","status":"passed","time":{"start":1760230726499,"stop":1760230773453,"duration":46954}},{"uid":"e26d93dfbf322bed","reportUrl":"https://golioth.github.io/allure-reports/main/763//#testresult/e26d93dfbf322bed","status":"passed","time":{"start":1760141204363,"stop":1760141251487,"duration":47124}},{"uid":"492546b1a8cc73ac","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/492546b1a8cc73ac","status":"passed","time":{"start":1760056944120,"stop":1760056990878,"duration":46758}},{"uid":"9efdd0bcbc339dcf","reportUrl":"https://golioth.github.io/allure-reports/main/761//#testresult/9efdd0bcbc339dcf","status":"passed","time":{"start":1760039253458,"stop":1760039303749,"duration":50291}},{"uid":"4db96cc44b088406","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/4db96cc44b088406","status":"passed","time":{"start":1759991653515,"stop":1759991703227,"duration":49712}},{"uid":"8c553ec3e0430319","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/8c553ec3e0430319","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759968708279,"stop":1759968750124,"duration":41845}},{"uid":"33223b7bfcf64c64","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/33223b7bfcf64c64","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759884875419,"stop":1759884912553,"duration":37134}},{"uid":"d5fd0187860ba224","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/d5fd0187860ba224","status":"passed","time":{"start":1759864553121,"stop":1759864604116,"duration":50995}},{"uid":"7a94d459a448668e","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/7a94d459a448668e","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759847770754,"stop":1759847800981,"duration":30227}},{"uid":"ace1e8e4ccccdb6d","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/ace1e8e4ccccdb6d","status":"passed","time":{"start":1759801244547,"stop":1759801293080,"duration":48533}},{"uid":"e641c799311d78c0","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/e641c799311d78c0","status":"broken","statusDetails":"httpx.ConnectError: [Errno -5] No address associated with hostname","time":{"start":1759781359528,"stop":1759781359528,"duration":0}},{"uid":"94061194398b23a8","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/94061194398b23a8","status":"failed","statusDetails":"AssertionError: assert 9 == 4\n +  where 9 = int('9')","time":{"start":1759711079000,"stop":1759711124568,"duration":45568}}]},"tags":["anyio","sams_orange_pi","frdm_rw612","zephyr"]},"source":"fccd693801c5885d.json","parameterValues":["'frdm_rw612'","'zephyr'"]}