{"uid":"463d779396a41e71","name":"test_hello","fullName":"examples.esp_idf.cpp.pytest.test_sample#test_hello","historyId":"34a63110b03fdfdd0be1a7f29b2c4fb8","time":{"start":1760833489308,"stop":1760833502655,"duration":13347},"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff800b3770>\ndevice = <golioth.golioth.Device object at 0xffff7ffe4ec0>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.now(timezone.utc)\n        await board.wait_for_regex_in_line('.*Hello, Golioth 2!', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.now(timezone.utc)\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        r = re.compile(\".*Hello, Golioth 1!\")\n        matching_log = list(filter(r.match, [str(l) for l in logs]))\n>       assert len(matching_log) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nexamples/esp_idf/cpp/pytest/test_sample.py:24: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760833434452,"stop":1760833434452,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760833434453,"stop":1760833434453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760833434454,"stop":1760833434454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760833434455,"stop":1760833434456,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760833434455,"stop":1760833434455,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760833434456,"stop":1760833434456,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760833434457,"stop":1760833487772,"duration":53315},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760833434457,"stop":1760833434457,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1760833434494,"stop":1760833434495,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1760833434495,"stop":1760833434495,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1760833434496,"stop":1760833434496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1760833434496,"stop":1760833434496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1760833434497,"stop":1760833434497,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760833487774,"stop":1760833488456,"duration":682},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760833488456,"stop":1760833489305,"duration":849},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff800b3770>\ndevice = <golioth.golioth.Device object at 0xffff7ffe4ec0>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.now(timezone.utc)\n        await board.wait_for_regex_in_line('.*Hello, Golioth 2!', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.now(timezone.utc)\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        r = re.compile(\".*Hello, Golioth 1!\")\n        matching_log = list(filter(r.match, [str(l) for l in logs]))\n>       assert len(matching_log) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nexamples/esp_idf/cpp/pytest/test_sample.py:24: AssertionError","steps":[],"attachments":[{"uid":"ccc4fb9e6342d6d7","name":"stdout","source":"ccc4fb9e6342d6d7.txt","type":"text/plain","size":7148}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1760833502772,"stop":1760833503254,"duration":482},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760833503256,"stop":1760833503256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760833503258,"stop":1760833503268,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"0c1eb1d4286a"},{"name":"thread","value":"253-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.cpp.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":1,"skipped":0,"passed":27,"unknown":0,"total":31},"items":[{"uid":"d584d1321c250691","reportUrl":"https://golioth.github.io/allure-reports/main/778//#testresult/d584d1321c250691","status":"passed","time":{"start":1760747278432,"stop":1760747291934,"duration":13502}},{"uid":"ee6ea1ac44720a1f","reportUrl":"https://golioth.github.io/allure-reports/main/773//#testresult/ee6ea1ac44720a1f","status":"passed","time":{"start":1760716392960,"stop":1760716405614,"duration":12654}},{"uid":"ef97ac5f28bab3b7","reportUrl":"https://golioth.github.io/allure-reports/main/772//#testresult/ef97ac5f28bab3b7","status":"passed","time":{"start":1760660726029,"stop":1760660739498,"duration":13469}},{"uid":"5d1243f9f5f266ca","reportUrl":"https://golioth.github.io/allure-reports/main/770//#testresult/5d1243f9f5f266ca","status":"passed","time":{"start":1760575305544,"stop":1760575318156,"duration":12612}},{"uid":"cac6df6dd1fc2a16","reportUrl":"https://golioth.github.io/allure-reports/main/769//#testresult/cac6df6dd1fc2a16","status":"passed","time":{"start":1760487931877,"stop":1760487945827,"duration":13950}},{"uid":"fdba14f5761c1278","reportUrl":"https://golioth.github.io/allure-reports/main/768//#testresult/fdba14f5761c1278","status":"passed","time":{"start":1760476831393,"stop":1760476843873,"duration":12480}},{"uid":"b4425c2695f35506","reportUrl":"https://golioth.github.io/allure-reports/main/767//#testresult/b4425c2695f35506","status":"passed","time":{"start":1760401624112,"stop":1760401638554,"duration":14442}},{"uid":"4d7bbd8101313435","reportUrl":"https://golioth.github.io/allure-reports/main/766//#testresult/4d7bbd8101313435","status":"passed","time":{"start":1760315335635,"stop":1760315348878,"duration":13243}},{"uid":"2e3e446b2178f707","reportUrl":"https://golioth.github.io/allure-reports/main/765//#testresult/2e3e446b2178f707","status":"passed","time":{"start":1760229709782,"stop":1760229722366,"duration":12584}},{"uid":"8c5f83a5e652d5cb","reportUrl":"https://golioth.github.io/allure-reports/main/763//#testresult/8c5f83a5e652d5cb","status":"passed","time":{"start":1760142380941,"stop":1760142394290,"duration":13349}},{"uid":"f84e596419183fe","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/f84e596419183fe","status":"passed","time":{"start":1760056844947,"stop":1760056857507,"duration":12560}},{"uid":"a0183de9177e43bc","reportUrl":"https://golioth.github.io/allure-reports/main/761//#testresult/a0183de9177e43bc","status":"passed","time":{"start":1760040503689,"stop":1760040516430,"duration":12741}},{"uid":"12f289d9da79ecbe","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/12f289d9da79ecbe","status":"passed","time":{"start":1759992673354,"stop":1759992685870,"duration":12516}},{"uid":"1aa3418cd7777fde","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/1aa3418cd7777fde","status":"passed","time":{"start":1759970126603,"stop":1759970139852,"duration":13249}},{"uid":"6db57f7394f34abb","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/6db57f7394f34abb","status":"passed","time":{"start":1759883128273,"stop":1759883140822,"duration":12549}},{"uid":"9b77e665bf99aa39","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/9b77e665bf99aa39","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1759861788616,"stop":1759861806113,"duration":17497}},{"uid":"86d9b4fb0c0337cc","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/86d9b4fb0c0337cc","status":"passed","time":{"start":1759848789211,"stop":1759848802567,"duration":13356}},{"uid":"f216f749e671b071","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/f216f749e671b071","status":"passed","time":{"start":1759797596386,"stop":1759797613154,"duration":16768}},{"uid":"630f3bc463338cb4","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/630f3bc463338cb4","status":"passed","time":{"start":1759776598719,"stop":1759776614095,"duration":15376}},{"uid":"d109910541b88fc0","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/d109910541b88fc0","status":"passed","time":{"start":1759711795814,"stop":1759711809043,"duration":13229}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf"]},"source":"463d779396a41e71.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}