{"uid":"7ac161eed6a4000","name":"test_logging","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.logging.pytest.test_sample#test_logging","historyId":"3038e6d5fffa4527a437bf078474dadf","time":{"start":1760833693365,"stop":1760833693365,"duration":0},"status":"broken","statusMessage":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'","statusTrace":"self = Serial<id=0xffff80c366e0, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n>           self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n\n/root/venv/lib/python3.13/site-packages/serial/serialposix.py:322: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_logging>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_zephyr_samples/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:65: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:87: in launch\n    self.connect(retry_s = 10)\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:118: in connect\n    self._connect_device()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:145: in _connect_device\n    self._serial_connection = serial.Serial(\n/root/venv/lib/python3.13/site-packages/serial/serialutil.py:244: in __init__\n    self.open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Serial<id=0xffff80c366e0, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n            self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n        except OSError as msg:\n            self.fd = None\n>           raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\nE           serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n\n/root/venv/lib/python3.13/site-packages/serial/serialposix.py:325: SerialException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760833693369,"stop":1760833693369,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760833693369,"stop":1760833693369,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760833693370,"stop":1760833693370,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760833693370,"stop":1760833693370,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1760833693371,"stop":1760833693373,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1760833693371,"stop":1760833693371,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760833693374,"stop":1760833693374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760833693375,"stop":1760833693375,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760833693375,"stop":1760833694402,"duration":1027},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760833694402,"stop":1760833695118,"duration":716},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1760833695119,"stop":1760833718867,"duration":23748},"status":"broken","statusMessage":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n","statusTrace":"  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 53, in run_old_style_hookwrapper\n    return result.get_result()\n           ~~~~~~~~~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_result.py\", line 103, in get_result\n    raise exc.with_traceback(tb)\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 38, in run_old_style_hookwrapper\n    res = yield\n          ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    teardown.throw(exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/root/venv/lib/python3.13/site-packages/pluggy/_callers.py\", line 121, in _multicall\n    res = hook_impl.function(*args)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1195, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/root/venv/lib/python3.13/site-packages/_pytest/fixtures.py\", line 922, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 65, in dut\n    device_object.launch()\n    ~~~~~~~~~~~~~~~~~~~~^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py\", line 87, in launch\n    self.connect(retry_s = 10)\n    ~~~~~~~~~~~~^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py\", line 118, in connect\n    self._connect_device()\n    ~~~~~~~~~~~~~~~~~~~~^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py\", line 145, in _connect_device\n    self._serial_connection = serial.Serial(\n                              ~~~~~~~~~~~~~^\n        serial_name,\n        ^^^^^^^^^^^^\n    ...<4 lines>...\n        timeout=self.base_timeout,\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/root/venv/lib/python3.13/site-packages/serial/serialutil.py\", line 244, in __init__\n    self.open()\n    ~~~~~~~~~^^\n  File \"/root/venv/lib/python3.13/site-packages/serial/serialposix.py\", line 325, in open\n    raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'","statusTrace":"self = Serial<id=0xffff80c366e0, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n>           self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE           FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n\n/root/venv/lib/python3.13/site-packages/serial/serialposix.py:322: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nitem = <Function test_logging>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/root/venv/lib/python3.13/site-packages/pytest_zephyr_samples/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:65: in dut\n    device_object.launch()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:87: in launch\n    self.connect(retry_s = 10)\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/device_adapter.py:118: in connect\n    self._connect_device()\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/device/hardware_adapter.py:145: in _connect_device\n    self._serial_connection = serial.Serial(\n/root/venv/lib/python3.13/site-packages/serial/serialutil.py:244: in __init__\n    self.open()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = Serial<id=0xffff80c366e0, open=False>(port='/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00', baudrate=115200, bytesize=8, parity='N', stopbits=1, timeout=180.0, xonxoff=False, rtscts=False, dsrdtr=False)\n\n    def open(self):\n        \"\"\"\\\n        Open port with current settings. This may throw a SerialException\n        if the port cannot be opened.\"\"\"\n        if self._port is None:\n            raise SerialException(\"Port must be configured before it can be used.\")\n        if self.is_open:\n            raise SerialException(\"Port is already open.\")\n        self.fd = None\n        # open\n        try:\n            self.fd = os.open(self.portstr, os.O_RDWR | os.O_NOCTTY | os.O_NONBLOCK)\n        except OSError as msg:\n            self.fd = None\n>           raise SerialException(msg.errno, \"could not open port {}: {}\".format(self._port, msg))\nE           serial.serialutil.SerialException: [Errno 2] could not open port /dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_A79B173FF273CE6E-if00'\n\n/root/venv/lib/python3.13/site-packages/serial/serialposix.py:325: SerialException","steps":[],"attachments":[{"uid":"f1e538e667c01168","name":"log","source":"f1e538e667c01168.txt","type":"text/plain","size":201407}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1760833719364,"stop":1760833719717,"duration":353},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760833719719,"stop":1760833719721,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1760833719726,"stop":1760833719726,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"82acd7e8abfa"},{"name":"thread","value":"362-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.logging.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":17,"unknown":0,"total":23},"items":[{"uid":"72671054d8fbbf3","reportUrl":"https://golioth.github.io/allure-reports/main/778//#testresult/72671054d8fbbf3","status":"passed","time":{"start":1760746733795,"stop":1760746762174,"duration":28379}},{"uid":"ebf12eff099fd88d","reportUrl":"https://golioth.github.io/allure-reports/main/773//#testresult/ebf12eff099fd88d","status":"passed","time":{"start":1760719103922,"stop":1760719131531,"duration":27609}},{"uid":"ee5ce797e5a1f7ae","reportUrl":"https://golioth.github.io/allure-reports/main/772//#testresult/ee5ce797e5a1f7ae","status":"passed","time":{"start":1760661356109,"stop":1760661403808,"duration":47699}},{"uid":"332c45515c5300e8","reportUrl":"https://golioth.github.io/allure-reports/main/770//#testresult/332c45515c5300e8","status":"passed","time":{"start":1760573874119,"stop":1760573900854,"duration":26735}},{"uid":"1e66ea7b55d691dc","reportUrl":"https://golioth.github.io/allure-reports/main/769//#testresult/1e66ea7b55d691dc","status":"passed","time":{"start":1760488095655,"stop":1760488123447,"duration":27792}},{"uid":"c6b162e7e4d938de","reportUrl":"https://golioth.github.io/allure-reports/main/768//#testresult/c6b162e7e4d938de","status":"passed","time":{"start":1760477786454,"stop":1760477834780,"duration":48326}},{"uid":"4e86f1696b877558","reportUrl":"https://golioth.github.io/allure-reports/main/767//#testresult/4e86f1696b877558","status":"passed","time":{"start":1760403096756,"stop":1760403124390,"duration":27634}},{"uid":"d1be1b3a6b7c5e53","reportUrl":"https://golioth.github.io/allure-reports/main/766//#testresult/d1be1b3a6b7c5e53","status":"passed","time":{"start":1760314966627,"stop":1760315017144,"duration":50517}},{"uid":"c38660faac64f657","reportUrl":"https://golioth.github.io/allure-reports/main/765//#testresult/c38660faac64f657","status":"passed","time":{"start":1760228623727,"stop":1760228650003,"duration":26276}},{"uid":"f8546fb8bb798e27","reportUrl":"https://golioth.github.io/allure-reports/main/763//#testresult/f8546fb8bb798e27","status":"passed","time":{"start":1760142364811,"stop":1760142391602,"duration":26791}},{"uid":"99491124ae17780","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/99491124ae17780","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1760055470863,"stop":1760055563510,"duration":92647}},{"uid":"cd5dfa44e7535962","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/cd5dfa44e7535962","status":"passed","time":{"start":1759992890833,"stop":1759992919104,"duration":28271}},{"uid":"24c9af12f5f088a7","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/24c9af12f5f088a7","status":"broken","statusDetails":"httpx.ReadTimeout","time":{"start":1759969263126,"stop":1759969294916,"duration":31790}},{"uid":"2790d4330efc26a4","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/2790d4330efc26a4","status":"passed","time":{"start":1759883774169,"stop":1759883801718,"duration":27549}},{"uid":"53d6637aec64985b","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/53d6637aec64985b","status":"passed","time":{"start":1759801900376,"stop":1759801927146,"duration":26770}},{"uid":"b983f1d60bfa60a5","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/b983f1d60bfa60a5","status":"passed","time":{"start":1759777544891,"stop":1759777574826,"duration":29935}},{"uid":"22697d2371630203","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/22697d2371630203","status":"passed","time":{"start":1759709900665,"stop":1759709928015,"duration":27350}},{"uid":"3ef3361e030ec172","reportUrl":"https://golioth.github.io/allure-reports/main/741//#testresult/3ef3361e030ec172","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1759627522554,"stop":1759627615357,"duration":92803}},{"uid":"6ea0dd0fffe905c7","reportUrl":"https://golioth.github.io/allure-reports/main/733//#testresult/6ea0dd0fffe905c7","status":"passed","time":{"start":1759277971578,"stop":1759278000019,"duration":28441}},{"uid":"b6fbb3af0b304587","reportUrl":"https://golioth.github.io/allure-reports/main/730//#testresult/b6fbb3af0b304587","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1759191663147,"stop":1759191755830,"duration":92683}}]},"tags":["anyio","mikes_testbench","rak5010","zephyr"]},"source":"7ac161eed6a4000.json","parameterValues":["'rak5010'","'zephyr'"]}