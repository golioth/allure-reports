{"uid":"8b62d39829b44218","name":"test_block_operations","fullName":"tests.hil.tests.ota.test_ota#test_block_operations","historyId":"8a302f3c779c33cfc91a9576b7d0d383","time":{"start":1732408951056,"stop":1732408956161,"duration":5105},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 161276.5607795734\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffba2f5f50>\nproject = <golioth.golioth.Project object at 0xffffba37a890>\nreleases = {'test_blocks': Release <67427670bb6157cf6cdf83e9, release_tags=[], device_tags=['6742766ebb6157cf6cdf83e5'], artifact...ease_tags=[], device_tags=['6742766ebb6157cf6cdf83e5'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_block_operations(board, project, releases):\n        await project.releases.rollout_set(releases[\"test_blocks\"].id, True)\n        assert None != await board.wait_for_regex_in_line(f\"golioth_ota_size_to_nblocks: {TEST_BLOCK_CNT + 1}\", timeout_s=12)\n    \n        # Test NULL client\n    \n        assert None != await board.wait_for_regex_in_line(\"Block sync failed: 5\", timeout_s=12)\n    \n        # Test block download\n    \n>       assert None != await board.wait_for_regex_in_line(\"Received block 0\", timeout_s=4)\n\ntests/hil/tests/ota/test_ota.py:169: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 161276.5607795734\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732408895297,"stop":1732408895297,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"board_name","time":{"start":1732408895298,"stop":1732408895298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"baud","time":{"start":1732408895299,"stop":1732408895300,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"port","time":{"start":1732408895299,"stop":1732408895299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"wifi_ssid","time":{"start":1732408895300,"stop":1732408895300,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"wifi_psk","time":{"start":1732408895301,"stop":1732408895301,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"fw_image","time":{"start":1732408895302,"stop":1732408895302,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"serial_number","time":{"start":1732408895302,"stop":1732408895302,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"api_url","time":{"start":1732408895303,"stop":1732408895304,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"api_key","time":{"start":1732408895303,"stop":1732408895303,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"bmp_port","time":{"start":1732408895303,"stop":1732408895303,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"device_name","time":{"start":1732408895304,"stop":1732408895304,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"board","time":{"start":1732408895305,"stop":1732408935370,"duration":40065},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"project","time":{"start":1732408935371,"stop":1732408936161,"duration":790},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"device","time":{"start":1732408936162,"stop":1732408937445,"duration":1283},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"setup","time":{"start":1732408937445,"stop":1732408940550,"duration":3105},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"artifacts","time":{"start":1732408940551,"stop":1732408941407,"duration":856},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"tag","time":{"start":1732408941408,"stop":1732408942679,"duration":1271},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"releases","time":{"start":1732408942679,"stop":1732408945374,"duration":2695},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"releases_teardown","time":{"start":1732408951052,"stop":1732408951053,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 161276.5607795734\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffba2f5f50>\nproject = <golioth.golioth.Project object at 0xffffba37a890>\nreleases = {'test_blocks': Release <67427670bb6157cf6cdf83e9, release_tags=[], device_tags=['6742766ebb6157cf6cdf83e5'], artifact...ease_tags=[], device_tags=['6742766ebb6157cf6cdf83e5'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_block_operations(board, project, releases):\n        await project.releases.rollout_set(releases[\"test_blocks\"].id, True)\n        assert None != await board.wait_for_regex_in_line(f\"golioth_ota_size_to_nblocks: {TEST_BLOCK_CNT + 1}\", timeout_s=12)\n    \n        # Test NULL client\n    \n        assert None != await board.wait_for_regex_in_line(\"Block sync failed: 5\", timeout_s=12)\n    \n        # Test block download\n    \n>       assert None != await board.wait_for_regex_in_line(\"Received block 0\", timeout_s=4)\n\ntests/hil/tests/ota/test_ota.py:169: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 161276.5607795734\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"e8ff54c38622362a","name":"stdout","source":"e8ff54c38622362a.txt","type":"text/plain","size":563}],"parameters":[],"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0},"afterStages":[{"name":"releases_teardown::0","time":{"start":1732408956804,"stop":1732408962793,"duration":5989},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"releases::0","time":{"start":1732409024730,"stop":1732409027184,"duration":2454},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"tag::0","time":{"start":1732409027186,"stop":1732409028026,"duration":840},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"artifacts::0","time":{"start":1732409028028,"stop":1732409028028,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"setup::0","time":{"start":1732409028030,"stop":1732409028030,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"device::0","time":{"start":1732409028032,"stop":1732409028670,"duration":638},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"project::0","time":{"start":1732409028673,"stop":1732409028673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"board::0","time":{"start":1732409028675,"stop":1732409028685,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"773dfa931be4"},{"name":"thread","value":"256-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":22,"skipped":0,"passed":40,"unknown":0,"total":63},"items":[{"uid":"58b9f44bb7135b55","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/58b9f44bb7135b55","status":"passed","time":{"start":1732323153367,"stop":1732323157136,"duration":3769}},{"uid":"4e9289443bcd85d9","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/4e9289443bcd85d9","status":"passed","time":{"start":1732320449978,"stop":1732320453852,"duration":3874}},{"uid":"cd162c9ccaa1d0be","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/cd162c9ccaa1d0be","status":"passed","time":{"start":1732307042604,"stop":1732307046479,"duration":3875}},{"uid":"3d6efb2c42f6a32e","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/3d6efb2c42f6a32e","status":"passed","time":{"start":1732305080553,"stop":1732305092830,"duration":12277}},{"uid":"1e9c6637fdbdf29b","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/1e9c6637fdbdf29b","status":"passed","time":{"start":1732297193093,"stop":1732297196488,"duration":3395}},{"uid":"d30a77a42585bd8d","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/d30a77a42585bd8d","status":"passed","time":{"start":1732275357872,"stop":1732275361670,"duration":3798}},{"uid":"145b2149a5cb0a3","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/145b2149a5cb0a3","status":"passed","time":{"start":1732235662702,"stop":1732235667186,"duration":4484}},{"uid":"893c7602c3132b9c","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/893c7602c3132b9c","status":"passed","time":{"start":1732210617711,"stop":1732210627063,"duration":9352}},{"uid":"aa9c3a728a9e669","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/aa9c3a728a9e669","status":"passed","time":{"start":1732160371876,"stop":1732160384920,"duration":13044}},{"uid":"a69e4ba2354e76d5","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/a69e4ba2354e76d5","status":"passed","time":{"start":1732150495503,"stop":1732150504914,"duration":9411}},{"uid":"65e2cd2ab66dc56","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/65e2cd2ab66dc56","status":"passed","time":{"start":1732136984423,"stop":1732136990910,"duration":6487}},{"uid":"80c8d115620235b4","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/80c8d115620235b4","status":"passed","time":{"start":1732062812198,"stop":1732062818198,"duration":6000}},{"uid":"2d7b084210d4b729","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/2d7b084210d4b729","status":"passed","time":{"start":1732035827834,"stop":1732035835009,"duration":7175}},{"uid":"80fc719928fca305","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/80fc719928fca305","status":"passed","time":{"start":1731976473972,"stop":1731976478300,"duration":4328}},{"uid":"cdd73b9eef4df06f","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/cdd73b9eef4df06f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731965348243,"stop":1731965353191,"duration":4948}},{"uid":"a1bfdfb0b02d27e5","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/a1bfdfb0b02d27e5","status":"passed","time":{"start":1731890116582,"stop":1731890120391,"duration":3809}},{"uid":"9e1cc71e7e2af13f","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/9e1cc71e7e2af13f","status":"passed","time":{"start":1731803796988,"stop":1731803802146,"duration":5158}},{"uid":"41c5ddf62a606949","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/41c5ddf62a606949","status":"passed","time":{"start":1731717224170,"stop":1731717227816,"duration":3646}},{"uid":"e827ecfa14eee93","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/e827ecfa14eee93","status":"passed","time":{"start":1731630737858,"stop":1731630742223,"duration":4365}},{"uid":"6b58dc24620eed9a","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/6b58dc24620eed9a","status":"passed","time":{"start":1731606445957,"stop":1731606449802,"duration":3845}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"8b62d39829b44218.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}