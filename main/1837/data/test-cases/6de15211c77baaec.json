{"uid":"6de15211c77baaec","name":"test_connect","fullName":"tests.hil.tests.connection.test_connection#test_connect","historyId":"375270c98e577eab3d4010c1152ecddd","time":{"start":1732410110925,"stop":1732410231368,"duration":120443},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 196829.64439230307\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa8fbf290>\ndevice = <golioth.golioth.Device object at 0xffffa8f92c50>\n\n    async def test_connect(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/connection/test_connection.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 196829.64439230307\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732410094792,"stop":1732410094792,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"board_name","time":{"start":1732410094793,"stop":1732410094793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"baud","time":{"start":1732410094794,"stop":1732410094794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"port","time":{"start":1732410094794,"stop":1732410094794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"wifi_ssid","time":{"start":1732410094795,"stop":1732410094795,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"wifi_psk","time":{"start":1732410094796,"stop":1732410094796,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"fw_image","time":{"start":1732410094796,"stop":1732410094797,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"bmp_port","time":{"start":1732410094797,"stop":1732410094798,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"serial_number","time":{"start":1732410094797,"stop":1732410094797,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"api_key","time":{"start":1732410094798,"stop":1732410094798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"device_name","time":{"start":1732410094798,"stop":1732410094798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"board","time":{"start":1732410094799,"stop":1732410109508,"duration":14709},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"api_url","time":{"start":1732410094799,"stop":1732410094799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"project","time":{"start":1732410109510,"stop":1732410110090,"duration":580},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"device","time":{"start":1732410110090,"stop":1732410110921,"duration":831},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 196829.64439230307\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa8fbf290>\ndevice = <golioth.golioth.Device object at 0xffffa8f92c50>\n\n    async def test_connect(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/connection/test_connection.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 196829.64439230307\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","steps":[],"attachments":[{"uid":"588a0197cae24b05","name":"stdout","source":"588a0197cae24b05.txt","type":"text/plain","size":3048}],"parameters":[],"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0},"afterStages":[{"name":"device::0","time":{"start":1732410232067,"stop":1732410232448,"duration":381},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"project::0","time":{"start":1732410232450,"stop":1732410232450,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"board::0","time":{"start":1732410232452,"stop":1732410232456,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_connection"},{"name":"host","value":"f0a9229d3620"},{"name":"thread","value":"235-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.connection.test_connection"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":62,"unknown":0,"total":67},"items":[{"uid":"7a8af803684595e7","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/7a8af803684595e7","status":"passed","time":{"start":1732324190627,"stop":1732324220165,"duration":29538}},{"uid":"375dca700027fde9","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/375dca700027fde9","status":"passed","time":{"start":1732321681143,"stop":1732321743076,"duration":61933}},{"uid":"a9ecaf795b2a5c1d","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/a9ecaf795b2a5c1d","status":"passed","time":{"start":1732309280551,"stop":1732309313156,"duration":32605}},{"uid":"647f8019ec9996b1","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/647f8019ec9996b1","status":"passed","time":{"start":1732305726640,"stop":1732305756463,"duration":29823}},{"uid":"95b135a735ceff55","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/95b135a735ceff55","status":"passed","time":{"start":1732298294042,"stop":1732298344095,"duration":50053}},{"uid":"c06083e066ad8110","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/c06083e066ad8110","status":"passed","time":{"start":1732277285574,"stop":1732277321911,"duration":36337}},{"uid":"35bfcf23fc69e0ec","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/35bfcf23fc69e0ec","status":"passed","time":{"start":1732236960940,"stop":1732237103191,"duration":142251}},{"uid":"461ab1619b29b9ce","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/461ab1619b29b9ce","status":"passed","time":{"start":1732213135421,"stop":1732213280068,"duration":144647}},{"uid":"72a3e0a4c21b6ffe","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/72a3e0a4c21b6ffe","status":"passed","time":{"start":1732161564932,"stop":1732161610648,"duration":45716}},{"uid":"2e6fc4adeb47eecc","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/2e6fc4adeb47eecc","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732151117368,"stop":1732151237829,"duration":120461}},{"uid":"e007a390f6625f0b","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/e007a390f6625f0b","status":"passed","time":{"start":1732138048722,"stop":1732138092411,"duration":43689}},{"uid":"ad0e8cb1c377e95","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/ad0e8cb1c377e95","status":"passed","time":{"start":1732063942378,"stop":1732063972064,"duration":29686}},{"uid":"c494410ca7254236","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/c494410ca7254236","status":"passed","time":{"start":1732058763425,"stop":1732058795053,"duration":31628}},{"uid":"4ae72052ed8e26ec","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/4ae72052ed8e26ec","status":"passed","time":{"start":1732036960296,"stop":1732036990635,"duration":30339}},{"uid":"a14e5e2d6f372dbe","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/a14e5e2d6f372dbe","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731977579935,"stop":1731977701668,"duration":121733}},{"uid":"48200a0e33978c5f","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/48200a0e33978c5f","status":"passed","time":{"start":1731966824601,"stop":1731966876167,"duration":51566}},{"uid":"99cf31cc2c738688","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/99cf31cc2c738688","status":"passed","time":{"start":1731891363747,"stop":1731891398397,"duration":34650}},{"uid":"c4b6e80d1a18b5de","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/c4b6e80d1a18b5de","status":"passed","time":{"start":1731804981298,"stop":1731805011743,"duration":30445}},{"uid":"1ba27732d8a88984","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/1ba27732d8a88984","status":"passed","time":{"start":1731718541537,"stop":1731718585685,"duration":44148}},{"uid":"143ddba4e393d720","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/143ddba4e393d720","status":"passed","time":{"start":1731632019783,"stop":1731632059935,"duration":40152}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"6de15211c77baaec.json","parameterValues":["'nrf9160dk'","'zephyr'"]}