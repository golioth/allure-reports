{"uid":"f87455dcdb9e8247","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1732408974367,"stop":1732409023725,"duration":49358},"status":"failed","statusMessage":"AssertionError: assert 9 == 4\n +  where 9 = int('9')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffba2f5f50>\ndevice = <golioth.golioth.Device object at 0xffffba35ac90>\nproject = <golioth.golioth.Project object at 0xffffba37a890>\nreleases = {'test_blocks': Release <67427670bb6157cf6cdf83e9, release_tags=[], device_tags=['6742766ebb6157cf6cdf83e5'], artifact...ease_tags=[], device_tags=['6742766ebb6157cf6cdf83e5'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 9 == 4\nE                    +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732408895297,"stop":1732408895297,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"board_name","time":{"start":1732408895298,"stop":1732408895298,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"baud","time":{"start":1732408895299,"stop":1732408895300,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"port","time":{"start":1732408895299,"stop":1732408895299,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"wifi_ssid","time":{"start":1732408895300,"stop":1732408895300,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"wifi_psk","time":{"start":1732408895301,"stop":1732408895301,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"fw_image","time":{"start":1732408895302,"stop":1732408895302,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"serial_number","time":{"start":1732408895302,"stop":1732408895302,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"api_url","time":{"start":1732408895303,"stop":1732408895304,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"api_key","time":{"start":1732408895303,"stop":1732408895303,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"bmp_port","time":{"start":1732408895303,"stop":1732408895303,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"device_name","time":{"start":1732408895304,"stop":1732408895304,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"board","time":{"start":1732408895305,"stop":1732408935370,"duration":40065},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"project","time":{"start":1732408935371,"stop":1732408936161,"duration":790},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"device","time":{"start":1732408936162,"stop":1732408937445,"duration":1283},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"setup","time":{"start":1732408937445,"stop":1732408940550,"duration":3105},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"artifacts","time":{"start":1732408940551,"stop":1732408941407,"duration":856},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"tag","time":{"start":1732408941408,"stop":1732408942679,"duration":1271},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"releases","time":{"start":1732408942679,"stop":1732408945374,"duration":2695},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"releases_teardown","time":{"start":1732408974363,"stop":1732408974364,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 9 == 4\n +  where 9 = int('9')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffba2f5f50>\ndevice = <golioth.golioth.Device object at 0xffffba35ac90>\nproject = <golioth.golioth.Project object at 0xffffba37a890>\nreleases = {'test_blocks': Release <67427670bb6157cf6cdf83e9, release_tags=[], device_tags=['6742766ebb6157cf6cdf83e5'], artifact...ease_tags=[], device_tags=['6742766ebb6157cf6cdf83e5'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>, ...}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            retries_left = 20\n    \n            while retries_left:\n                await trio.sleep(1)\n                retries_left -= 1\n    \n                await device.refresh()\n    \n                try:\n                    latest_reason_code = int(device.metadata['update']['lobster']['reasonCode'])\n                except:\n                    if retries_left == 0:\n                        assert false, \"Unable to get reason/state using REST API\"\n                    continue\n    \n                if retries_left == 0 or latest_reason_code == i:\n                    print(f\"Test reason code: {r}\")\n                    print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>                   assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE                   AssertionError: assert 9 == 4\nE                    +  where 9 = int('9')\n\ntests/hil/tests/ota/test_ota.py:208: AssertionError","steps":[],"attachments":[{"uid":"248b62a907cc3019","name":"stdout","source":"248b62a907cc3019.txt","type":"text/plain","size":511}],"parameters":[],"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0},"afterStages":[{"name":"releases_teardown::0","time":{"start":1732409023805,"stop":1732409024728,"duration":923},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"releases::0","time":{"start":1732409024730,"stop":1732409027184,"duration":2454},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"tag::0","time":{"start":1732409027186,"stop":1732409028026,"duration":840},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"artifacts::0","time":{"start":1732409028028,"stop":1732409028028,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"setup::0","time":{"start":1732409028030,"stop":1732409028030,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"device::0","time":{"start":1732409028032,"stop":1732409028670,"duration":638},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"project::0","time":{"start":1732409028673,"stop":1732409028673,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"board::0","time":{"start":1732409028675,"stop":1732409028685,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"773dfa931be4"},{"name":"thread","value":"256-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":20,"broken":5,"skipped":0,"passed":38,"unknown":0,"total":63},"items":[{"uid":"242714054127f775","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/242714054127f775","status":"passed","time":{"start":1732323169560,"stop":1732323216559,"duration":46999}},{"uid":"ca6f29545329a66f","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/ca6f29545329a66f","status":"passed","time":{"start":1732320462287,"stop":1732320510129,"duration":47842}},{"uid":"8d8fb4d41d791323","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/8d8fb4d41d791323","status":"failed","statusDetails":"AssertionError: assert 9 == 1\n +  where 9 = int('9')","time":{"start":1732307056098,"stop":1732307095871,"duration":39773}},{"uid":"5c9963d7f5b08862","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/5c9963d7f5b08862","status":"failed","statusDetails":"AssertionError: assert 9 == 8\n +  where 9 = int('9')","time":{"start":1732305105725,"stop":1732305168927,"duration":63202}},{"uid":"1f48bf24bcdffc01","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/1f48bf24bcdffc01","status":"passed","time":{"start":1732297204550,"stop":1732297252072,"duration":47522}},{"uid":"853fd8c4cb8afb65","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/853fd8c4cb8afb65","status":"passed","time":{"start":1732275363038,"stop":1732275409842,"duration":46804}},{"uid":"53e64a8a4c26efbb","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/53e64a8a4c26efbb","status":"passed","time":{"start":1732235668509,"stop":1732235715515,"duration":47006}},{"uid":"106c356f80be429e","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/106c356f80be429e","status":"passed","time":{"start":1732210628082,"stop":1732210678194,"duration":50112}},{"uid":"a2989ee667cfc2f6","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/a2989ee667cfc2f6","status":"passed","time":{"start":1732160385829,"stop":1732160435495,"duration":49666}},{"uid":"4855eb8567304ec2","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/4855eb8567304ec2","status":"passed","time":{"start":1732150506659,"stop":1732150554208,"duration":47549}},{"uid":"33aee2ffcd6790ad","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/33aee2ffcd6790ad","status":"passed","time":{"start":1732136992194,"stop":1732137039260,"duration":47066}},{"uid":"84c70ada2d8a0bba","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/84c70ada2d8a0bba","status":"passed","time":{"start":1732062819538,"stop":1732062866365,"duration":46827}},{"uid":"a85a02e79d998c05","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/a85a02e79d998c05","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1732035836645,"stop":1732035885393,"duration":48748}},{"uid":"366c8dddc89604bf","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/366c8dddc89604bf","status":"failed","statusDetails":"AssertionError: assert 7 == 0\n +  where 7 = int('7')","time":{"start":1731976479901,"stop":1731976512554,"duration":32653}},{"uid":"f289d558318c4315","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/f289d558318c4315","status":"passed","time":{"start":1731965354986,"stop":1731965403854,"duration":48868}},{"uid":"890043f69929ee01","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/890043f69929ee01","status":"passed","time":{"start":1731890122101,"stop":1731890198619,"duration":76518}},{"uid":"e472c0a0ae3b0455","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/e472c0a0ae3b0455","status":"passed","time":{"start":1731803803833,"stop":1731803881777,"duration":77944}},{"uid":"7c6a7e21152699d1","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/7c6a7e21152699d1","status":"passed","time":{"start":1731717229605,"stop":1731717307134,"duration":77529}},{"uid":"362c13adfeead566","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/362c13adfeead566","status":"passed","time":{"start":1731630743455,"stop":1731630820605,"duration":77150}},{"uid":"9b08deb59d010e9f","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/9b08deb59d010e9f","status":"passed","time":{"start":1731606451161,"stop":1731606528271,"duration":77110}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"f87455dcdb9e8247.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}