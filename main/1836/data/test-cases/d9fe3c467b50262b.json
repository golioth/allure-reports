{"uid":"d9fe3c467b50262b","name":"test_lightdb_observed","fullName":"tests.hil.tests.lightdb.test_lightdb#test_lightdb_observed","historyId":"6a9b2d9ded727e5112c8dfc89c96cb7e","time":{"start":1732323077389,"stop":1732323089323,"duration":11934},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nproject = <golioth.golioth.Project object at 0xffff923f9610>\nboard = <espidfboard.ESPIDFBoard object at 0xffff92429dd0>\ndevice = <golioth.golioth.Device object at 0xffff923d2c10>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Setup data for replication\n        await device.lightdb.delete('hil/lightdb')\n    \n        await device.lightdb.set('hil/lightdb/desired/true', True)\n        await device.lightdb.set('hil/lightdb/desired/false', False)\n        await device.lightdb.set('hil/lightdb/desired/int', 13)\n        await device.lightdb.set('hil/lightdb/desired/float', -234.25)\n        await device.lightdb.set('hil/lightdb/desired/str', '15')\n        await device.lightdb.set('hil/lightdb/desired/obj', {'c': '26', 'd': -12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/sync/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/sync/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/sync/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/to_delete/async/true', True)\n        await device.lightdb.set('hil/lightdb/to_delete/async/false', False)\n        await device.lightdb.set('hil/lightdb/to_delete/async/int', 14)\n        await device.lightdb.set('hil/lightdb/to_delete/async/str', '16')\n        await device.lightdb.set('hil/lightdb/to_delete/async/obj', {'a': '16', 'b': 12})\n    \n        await device.lightdb.set('hil/lightdb/observed/int', 0)\n        await device.lightdb.set('hil/lightdb/observed/cbor/int', 0)\n    \n        # Mark test data ready\n        await device.lightdb.set('hil/lightdb/desired/ready', True)\n    \n        # Confirm connection to Golioth\n        assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n    \n        # Give some time to replicate desired state\n        assert None != await board.wait_for_regex_in_line('LightDB State reported data is ready', timeout_s=30)\n    \n        # Give enough time for Golioth backend to propagate data\n        await trio.sleep(5)\n    \n        yield\n    \n>       await device.lightdb.delete('hil/lightdb')\n\ntests/hil/tests/lightdb/test_lightdb.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:529: in delete\n    await c.delete(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:2012: in delete\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732323001748,"stop":1732323001748,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device_name","time":{"start":1732323001749,"stop":1732323001749,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_url","time":{"start":1732323001750,"stop":1732323001751,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_key","time":{"start":1732323001750,"stop":1732323001750,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board_name","time":{"start":1732323001752,"stop":1732323001752,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"port","time":{"start":1732323001752,"stop":1732323001753,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_ssid","time":{"start":1732323001753,"stop":1732323001754,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"baud","time":{"start":1732323001753,"stop":1732323001753,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"fw_image","time":{"start":1732323001754,"stop":1732323001754,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_psk","time":{"start":1732323001754,"stop":1732323001754,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"serial_number","time":{"start":1732323001755,"stop":1732323001755,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"bmp_port","time":{"start":1732323001755,"stop":1732323001755,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project","time":{"start":1732323001756,"stop":1732323002331,"duration":575},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board","time":{"start":1732323002332,"stop":1732323042449,"duration":40117},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device","time":{"start":1732323042450,"stop":1732323043783,"duration":1333},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"setup","time":{"start":1732323043784,"stop":1732323065921,"duration":22137},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"afterStages":[{"name":"setup::0","time":{"start":1732323089325,"stop":1732323094627,"duration":5302},"status":"broken","statusMessage":"httpx.ConnectTimeout\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 81, in wrapper\n    yield from runner.run_asyncgen_fixture(func, kwargs)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 934, in run_asyncgen_fixture\n    self._call_in_runner_task(asyncgen.asend, None)\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/lightdb/test_lightdb.py\", line 52, in setup\n    await device.lightdb.delete('hil/lightdb')\n  File \"/usr/local/lib/python3.11/dist-packages/golioth/golioth.py\", line 529, in delete\n    await c.delete(f'data/{path}')\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 2012, in delete\n    return await self.request(\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},{"name":"device::0","time":{"start":1732323094630,"stop":1732323095386,"duration":756},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board::0","time":{"start":1732323095388,"stop":1732323095396,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project::0","time":{"start":1732323095398,"stop":1732323095400,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"025a645258a7"},{"name":"thread","value":"251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":54,"unknown":0,"total":62},"items":[{"uid":"766167ec9cebb3da","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/766167ec9cebb3da","status":"passed","time":{"start":1732320398896,"stop":1732320410226,"duration":11330}},{"uid":"a34a44edee656b49","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/a34a44edee656b49","status":"passed","time":{"start":1732306962204,"stop":1732306979767,"duration":17563}},{"uid":"7f169b7a036f2ad","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/7f169b7a036f2ad","status":"passed","time":{"start":1732305027503,"stop":1732305039358,"duration":11855}},{"uid":"12eaf1bd364019b4","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/12eaf1bd364019b4","status":"passed","time":{"start":1732297122005,"stop":1732297133970,"duration":11965}},{"uid":"baeaa8fbee05bb42","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/baeaa8fbee05bb42","status":"passed","time":{"start":1732275287934,"stop":1732275299930,"duration":11996}},{"uid":"a6650d5413f153f","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/a6650d5413f153f","status":"passed","time":{"start":1732235589373,"stop":1732235601968,"duration":12595}},{"uid":"e38ef3e7281f0a7d","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/e38ef3e7281f0a7d","status":"passed","time":{"start":1732210560813,"stop":1732210575825,"duration":15012}},{"uid":"35696adf7e22d2d6","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/35696adf7e22d2d6","status":"passed","time":{"start":1732160319574,"stop":1732160331059,"duration":11485}},{"uid":"4f9911036289ce67","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/4f9911036289ce67","status":"passed","time":{"start":1732150426170,"stop":1732150437486,"duration":11316}},{"uid":"c241762008e0f529","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/c241762008e0f529","status":"passed","time":{"start":1732136913573,"stop":1732136925908,"duration":12335}},{"uid":"9235e84652255928","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/9235e84652255928","status":"passed","time":{"start":1732062742741,"stop":1732062754706,"duration":11965}},{"uid":"60f953b66b61427","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/60f953b66b61427","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1732035742124,"stop":1732035758682,"duration":16558}},{"uid":"153aa344d31ab0b1","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/153aa344d31ab0b1","status":"passed","time":{"start":1731976401514,"stop":1731976413639,"duration":12125}},{"uid":"ed97efd6c767c63d","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/ed97efd6c767c63d","status":"passed","time":{"start":1731965275117,"stop":1731965287774,"duration":12657}},{"uid":"39c549b0ed79208","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/39c549b0ed79208","status":"passed","time":{"start":1731890045878,"stop":1731890057799,"duration":11921}},{"uid":"384604b7102bac8e","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/384604b7102bac8e","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1731803729050,"stop":1731803729050,"duration":0}},{"uid":"4580b056a77a3325","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/4580b056a77a3325","status":"passed","time":{"start":1731717153096,"stop":1731717164650,"duration":11554}},{"uid":"d69378a940861f1b","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/d69378a940861f1b","status":"passed","time":{"start":1731630683156,"stop":1731630696230,"duration":13074}},{"uid":"27cec077e15130e6","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/27cec077e15130e6","status":"passed","time":{"start":1731606373436,"stop":1731606386781,"duration":13345}},{"uid":"f0cfc6101f9f55dc","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/f0cfc6101f9f55dc","status":"passed","time":{"start":1731564788636,"stop":1731564802911,"duration":14275}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"d9fe3c467b50262b.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}