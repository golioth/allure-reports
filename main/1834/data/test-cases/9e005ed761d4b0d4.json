{"uid":"9e005ed761d4b0d4","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"c24c9ea14e94690f05bf86748c5128c2","time":{"start":1732307338096,"stop":1732307354352,"duration":16256},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffad06f490>\ndevice = <golioth.golioth.Device object at 0xffffad02f290>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffad02f290>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732307237310,"stop":1732307237311,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732307237311,"stop":1732307237312,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732307237312,"stop":1732307237312,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732307237313,"stop":1732307237313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732307237314,"stop":1732307237314,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732307237315,"stop":1732307237315,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732307237316,"stop":1732307237316,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732307237317,"stop":1732307237318,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732307237317,"stop":1732307237317,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732307237318,"stop":1732307237318,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732307237319,"stop":1732307237320,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732307237319,"stop":1732307237319,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732307237320,"stop":1732307238976,"duration":1656},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732307238977,"stop":1732307278980,"duration":40003},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732307278981,"stop":1732307283311,"duration":4330},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732307283312,"stop":1732307330312,"duration":47000},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffad06f490>\ndevice = <golioth.golioth.Device object at 0xffffad02f290>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffad02f290>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"1351b0695efdcef2","name":"stdout","source":"1351b0695efdcef2.txt","type":"text/plain","size":5218}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1732307480064,"stop":1732307480065,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732307480067,"stop":1732307480536,"duration":469},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732307480538,"stop":1732307480546,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732307480549,"stop":1732307480551,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"8b88893882dd"},{"name":"thread","value":"268-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":2,"skipped":0,"passed":39,"unknown":0,"total":60},"items":[{"uid":"5bee48a635d95f46","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/5bee48a635d95f46","status":"passed","time":{"start":1732305317875,"stop":1732305330218,"duration":12343}},{"uid":"107facf64e9d5214","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/107facf64e9d5214","status":"passed","time":{"start":1732297435772,"stop":1732297448870,"duration":13098}},{"uid":"45af9f2c35f8644e","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/45af9f2c35f8644e","status":"passed","time":{"start":1732275590148,"stop":1732275602802,"duration":12654}},{"uid":"4e2c93e829d91eb7","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/4e2c93e829d91eb7","status":"passed","time":{"start":1732235895318,"stop":1732235908907,"duration":13589}},{"uid":"aadef73991e2f87f","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/aadef73991e2f87f","status":"passed","time":{"start":1732210823688,"stop":1732210836020,"duration":12332}},{"uid":"b4b579ba046dae40","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/b4b579ba046dae40","status":"passed","time":{"start":1732160575296,"stop":1732160587648,"duration":12352}},{"uid":"45a50f77149b2791","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/45a50f77149b2791","status":"passed","time":{"start":1732150730206,"stop":1732150742735,"duration":12529}},{"uid":"9b21825b34d7447d","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/9b21825b34d7447d","status":"passed","time":{"start":1732137224572,"stop":1732137237626,"duration":13054}},{"uid":"81790a9604731c34","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/81790a9604731c34","status":"passed","time":{"start":1732063040317,"stop":1732063053001,"duration":12684}},{"uid":"84f99ba546df2a2c","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/84f99ba546df2a2c","status":"passed","time":{"start":1732036071601,"stop":1732036084239,"duration":12638}},{"uid":"a2b1a5e6453a5930","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/a2b1a5e6453a5930","status":"passed","time":{"start":1731976694754,"stop":1731976707411,"duration":12657}},{"uid":"b49a3a9115cf71b5","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/b49a3a9115cf71b5","status":"passed","time":{"start":1731965569858,"stop":1731965582918,"duration":13060}},{"uid":"bfe19dd1a01ecac3","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/bfe19dd1a01ecac3","status":"passed","time":{"start":1731890373718,"stop":1731890386222,"duration":12504}},{"uid":"426ab3d2ec642fbe","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/426ab3d2ec642fbe","status":"passed","time":{"start":1731804069189,"stop":1731804081880,"duration":12691}},{"uid":"19ac35d24bd3101d","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/19ac35d24bd3101d","status":"passed","time":{"start":1731717482866,"stop":1731717495540,"duration":12674}},{"uid":"54f40e29459a4f62","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/54f40e29459a4f62","status":"passed","time":{"start":1731630960034,"stop":1731630972701,"duration":12667}},{"uid":"101f5fd977ce635f","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/101f5fd977ce635f","status":"passed","time":{"start":1731606707108,"stop":1731606719753,"duration":12645}},{"uid":"81699a7d661add7","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/81699a7d661add7","status":"passed","time":{"start":1731565126790,"stop":1731565139707,"duration":12917}},{"uid":"9c5bcf679968a999","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/9c5bcf679968a999","status":"passed","time":{"start":1731544622822,"stop":1731544636111,"duration":13289}},{"uid":"e6ca1266cf13af97","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/e6ca1266cf13af97","status":"passed","time":{"start":1731458204629,"stop":1731458217172,"duration":12543}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"9e005ed761d4b0d4.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}