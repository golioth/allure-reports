{"uid":"b6f4a0ff8f8d2b8e","name":"test_multiple_artifacts","fullName":"tests.hil.tests.ota.test_ota#test_multiple_artifacts","historyId":"d93bee5ae90f63872828b28cc21c16f4","time":{"start":1732309537193,"stop":1732309537193,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 173493.74346514695\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffffa2797690>\ndevice = <golioth.golioth.Device object at 0xffffa2984990>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(board, device):\n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/ota/test_ota.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 173493.74346514695\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732309399707,"stop":1732309399707,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732309399708,"stop":1732309399709,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732309399710,"stop":1732309399710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732309399711,"stop":1732309399711,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732309399712,"stop":1732309399712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732309399713,"stop":1732309399713,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732309399714,"stop":1732309399715,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732309399715,"stop":1732309399716,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732309399717,"stop":1732309399717,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732309399718,"stop":1732309399719,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732309399718,"stop":1732309399718,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732309399719,"stop":1732309399719,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732309399720,"stop":1732309414513,"duration":14793},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732309414516,"stop":1732309415074,"duration":558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732309415074,"stop":1732309416092,"duration":1018},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732309416093,"stop":1732309536576,"duration":120483},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/ota/test_ota.py\", line 47, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1732309538592,"stop":1732309538984,"duration":392},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732309538986,"stop":1732309538986,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732309538988,"stop":1732309538992,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"e393a5bfdf25"},{"name":"thread","value":"268-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":9,"skipped":0,"passed":54,"unknown":0,"total":64},"items":[{"uid":"80c18b835c25453e","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/80c18b835c25453e","status":"passed","time":{"start":1732305860261,"stop":1732305861220,"duration":959}},{"uid":"d281c1e287e2a6cf","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/d281c1e287e2a6cf","status":"passed","time":{"start":1732298532105,"stop":1732298532957,"duration":852}},{"uid":"e5f168d975fe260","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/e5f168d975fe260","status":"passed","time":{"start":1732277426078,"stop":1732277426976,"duration":898}},{"uid":"f1062c9be7e6bbed","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/f1062c9be7e6bbed","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732237442937,"stop":1732237442937,"duration":0}},{"uid":"19770c542f563948","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/19770c542f563948","status":"passed","time":{"start":1732213620968,"stop":1732213622136,"duration":1168}},{"uid":"e5b02581650c955e","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/e5b02581650c955e","status":"passed","time":{"start":1732161762102,"stop":1732161763043,"duration":941}},{"uid":"fba64e5633bc34dc","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/fba64e5633bc34dc","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732151529123,"stop":1732151529123,"duration":0}},{"uid":"34f5897095be54b5","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/34f5897095be54b5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1732138321288,"stop":1732138321288,"duration":0}},{"uid":"24e1c36dadb1c531","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/24e1c36dadb1c531","status":"passed","time":{"start":1732064078461,"stop":1732064079359,"duration":898}},{"uid":"3d47b4555e22e6ec","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/3d47b4555e22e6ec","status":"passed","time":{"start":1732058897818,"stop":1732058899041,"duration":1223}},{"uid":"74971800f9b8dc99","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/74971800f9b8dc99","status":"passed","time":{"start":1732037093026,"stop":1732037094006,"duration":980}},{"uid":"e0d3b46918086221","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/e0d3b46918086221","status":"passed","time":{"start":1731977808043,"stop":1731977809021,"duration":978}},{"uid":"382e2bdddcc56f0c","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/382e2bdddcc56f0c","status":"passed","time":{"start":1731967083471,"stop":1731967084588,"duration":1117}},{"uid":"8216b3cd71b6c929","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/8216b3cd71b6c929","status":"passed","time":{"start":1731891496122,"stop":1731891497094,"duration":972}},{"uid":"53cf3d18b7faaf77","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/53cf3d18b7faaf77","status":"passed","time":{"start":1731805117659,"stop":1731805121477,"duration":3818}},{"uid":"f54ec6f6a5c0b34","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/f54ec6f6a5c0b34","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731718812058,"stop":1731718812058,"duration":0}},{"uid":"8b3f739d6052ec31","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/8b3f739d6052ec31","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731632288704,"stop":1731632288705,"duration":1}},{"uid":"dbef70088ff69811","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/dbef70088ff69811","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1731607954022,"stop":1731607954022,"duration":0}},{"uid":"79bfd0ecee6e4c2","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/79bfd0ecee6e4c2","status":"passed","time":{"start":1731565943971,"stop":1731565945093,"duration":1122}},{"uid":"bd13ab18f0ed5715","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/bd13ab18f0ed5715","status":"passed","time":{"start":1731545468437,"stop":1731545469637,"duration":1200}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"b6f4a0ff8f8d2b8e.json","parameterValues":["'nrf9160dk'","'zephyr'"]}