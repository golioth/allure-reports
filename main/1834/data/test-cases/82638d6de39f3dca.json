{"uid":"82638d6de39f3dca","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"f92c1c5a2344b07676094482cb8eb654","time":{"start":1732308119446,"stop":1732308125122,"duration":5676},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff9043a050>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf52840dk.nRF52840DK object at 0xffff902a0610>\ndevice = <golioth.golioth.Device object at 0xffff9043b150>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff9043a050>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732307956209,"stop":1732307956209,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732307956210,"stop":1732307956210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732307956211,"stop":1732307956211,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732307956212,"stop":1732307956212,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732307956212,"stop":1732307956213,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732307956213,"stop":1732307956213,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732307956214,"stop":1732307956214,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732307956214,"stop":1732307956214,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732307956215,"stop":1732307956215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732307956215,"stop":1732307956215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732307956216,"stop":1732307956216,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732307956216,"stop":1732307956216,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732307956217,"stop":1732307956940,"duration":723},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732307956941,"stop":1732307969703,"duration":12762},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732307969704,"stop":1732307971279,"duration":1575},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732307971279,"stop":1732307978542,"duration":7263},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732308126245,"stop":1732308126246,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732308126248,"stop":1732308126713,"duration":465},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732308126715,"stop":1732308126742,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732308126744,"stop":1732308126746,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"188d8dcc4e76"},{"name":"thread","value":"297-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":57,"unknown":0,"total":64},"items":[{"uid":"30ebe3ebfa3a3d3","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/30ebe3ebfa3a3d3","status":"broken","statusDetails":"pynrfjprog.APIError.APIError: An error was reported by NRFJPROG DLL: -90 NOT_AVAILABLE_BECAUSE_PROTECTION. \n[Probes.1050245958] [Client] Encountered error -90: Command read_device_info executed for 3 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed reading device info.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Client] Encountered error -90: Command erase_file executed for 207 milliseconds with result -90\n\textra: [Probes.1050245958] [DebugProbe] Failed while erasing device.\n\textra: [HighLevel] Failed programming the device.\n\textra: [Probes.1050245958] [nRF52] Failed while erasing device. -90: Access protection is enabled, can't read device version.\n\textra: [Probes.1050245958] [Worker] Access protection is enabled, can't read device version.","time":{"start":1732304941515,"stop":1732304941515,"duration":0}},{"uid":"24a181340ceae4ed","reportUrl":"https://golioth.github.io/allure-reports/main/1831//#testresult/24a181340ceae4ed","status":"passed","time":{"start":1732297931265,"stop":1732297950504,"duration":19239}},{"uid":"3b239f5aae7f21c2","reportUrl":"https://golioth.github.io/allure-reports/main/1822//#testresult/3b239f5aae7f21c2","status":"passed","time":{"start":1732276275712,"stop":1732276295157,"duration":19445}},{"uid":"a41f981d3e50c81b","reportUrl":"https://golioth.github.io/allure-reports/main/1820//#testresult/a41f981d3e50c81b","status":"passed","time":{"start":1732235725876,"stop":1732235745114,"duration":19238}},{"uid":"e830bc15675e1191","reportUrl":"https://golioth.github.io/allure-reports/main/1809//#testresult/e830bc15675e1191","status":"passed","time":{"start":1732211994616,"stop":1732212013961,"duration":19345}},{"uid":"d8aaae8a2edba695","reportUrl":"https://golioth.github.io/allure-reports/main/1804//#testresult/d8aaae8a2edba695","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1732160523498,"stop":1732160523498,"duration":0}},{"uid":"524baf1b4b377b04","reportUrl":"https://golioth.github.io/allure-reports/main/1803//#testresult/524baf1b4b377b04","status":"passed","time":{"start":1732150132758,"stop":1732150151978,"duration":19220}},{"uid":"defe2642d74bdcc","reportUrl":"https://golioth.github.io/allure-reports/main/1794//#testresult/defe2642d74bdcc","status":"passed","time":{"start":1732137658801,"stop":1732137678048,"duration":19247}},{"uid":"f290aea272cfc24","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/f290aea272cfc24","status":"passed","time":{"start":1732062856656,"stop":1732062876100,"duration":19444}},{"uid":"208ce0a3f332ec3e","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/208ce0a3f332ec3e","status":"passed","time":{"start":1732057384955,"stop":1732057403990,"duration":19035}},{"uid":"bf8a867bb163bbdb","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/bf8a867bb163bbdb","status":"passed","time":{"start":1732035866181,"stop":1732035885628,"duration":19447}},{"uid":"b2ca75d8c0e26d83","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/b2ca75d8c0e26d83","status":"passed","time":{"start":1731976493416,"stop":1731976512856,"duration":19440}},{"uid":"5a14320a6b125e36","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/5a14320a6b125e36","status":"passed","time":{"start":1731965637022,"stop":1731965656466,"duration":19444}},{"uid":"3917feba4620f2e7","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/3917feba4620f2e7","status":"passed","time":{"start":1731890186381,"stop":1731890205832,"duration":19451}},{"uid":"186085623bf9ce68","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/186085623bf9ce68","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731803962964,"stop":1731803968510,"duration":5546}},{"uid":"3e1a8d077b08818a","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/3e1a8d077b08818a","status":"passed","time":{"start":1731717654567,"stop":1731717673806,"duration":19239}},{"uid":"e6d30f6ffbd1e67c","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/e6d30f6ffbd1e67c","status":"passed","time":{"start":1731630999807,"stop":1731631019140,"duration":19333}},{"uid":"a6be45685b806b6d","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/a6be45685b806b6d","status":"passed","time":{"start":1731607209244,"stop":1731607228686,"duration":19442}},{"uid":"37d91ce82f98863d","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/37d91ce82f98863d","status":"passed","time":{"start":1731564804963,"stop":1731564824509,"duration":19546}},{"uid":"fce6b853da341818","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/fce6b853da341818","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731546332421,"stop":1731546337793,"duration":5372}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"82638d6de39f3dca.json","parameterValues":["'nrf52840dk'","'zephyr'"]}