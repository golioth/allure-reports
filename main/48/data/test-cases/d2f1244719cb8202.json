{"uid":"d2f1244719cb8202","name":"test_set_string","fullName":"tests.hil.tests.settings.test_settings#test_set_string","historyId":"255ac2a53dd5f6b8beaad2a09e6c1323","time":{"start":1736555156483,"stop":1736555156483,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 121990.68689228922\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffffb078e710>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffaf0f1890>\ndevice = <golioth.golioth.Device object at 0xffffaf037310>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 121990.68689228922\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1736555002144,"stop":1736555002144,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1736555002145,"stop":1736555002145,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1736555002145,"stop":1736555002146,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1736555002146,"stop":1736555002146,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1736555002147,"stop":1736555002148,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1736555002147,"stop":1736555002147,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1736555002148,"stop":1736555002148,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1736555002148,"stop":1736555002149,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1736555002149,"stop":1736555002149,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1736555002149,"stop":1736555002150,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1736555002150,"stop":1736555002150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1736555002150,"stop":1736555002150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1736555002151,"stop":1736555002800,"duration":649},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1736555002801,"stop":1736555023584,"duration":20783},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1736555023585,"stop":1736555024485,"duration":900},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1736555024486,"stop":1736555152203,"duration":127717},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1736555158216,"stop":1736555158606,"duration":390},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1736555158609,"stop":1736555158610,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1736555158612,"stop":1736555158614,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"e7843a4e7a92"},{"name":"thread","value":"242-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":24,"unknown":0,"total":45},"items":[{"uid":"75acd2d37f1dcaef","reportUrl":"https://golioth.github.io/allure-reports/main/45//#testresult/75acd2d37f1dcaef","status":"passed","time":{"start":1736468637807,"stop":1736468641777,"duration":3970}},{"uid":"fbd74da2598078b4","reportUrl":"https://golioth.github.io/allure-reports/main/44//#testresult/fbd74da2598078b4","status":"passed","time":{"start":1736456006664,"stop":1736456010794,"duration":4130}},{"uid":"df16e6a44dc9a643","reportUrl":"https://golioth.github.io/allure-reports/main/34//#testresult/df16e6a44dc9a643","status":"passed","time":{"start":1736382718229,"stop":1736382722145,"duration":3916}},{"uid":"58d4a8c117789a08","reportUrl":"https://golioth.github.io/allure-reports/main/28/#testresult/58d4a8c117789a08","status":"passed","time":{"start":1736296974769,"stop":1736296978687,"duration":3918}},{"uid":"56fb24da9bbc89b2","reportUrl":"https://golioth.github.io/allure-reports/main/23/#testresult/56fb24da9bbc89b2","status":"passed","time":{"start":1736264638717,"stop":1736264642747,"duration":4030}},{"uid":"1dadbbbcadd0df1a","reportUrl":"https://golioth.github.io/allure-reports/main/21/#testresult/1dadbbbcadd0df1a","status":"passed","time":{"start":1736210096808,"stop":1736210100697,"duration":3889}},{"uid":"51375478e5363ff7","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/51375478e5363ff7","status":"passed","time":{"start":1736189605962,"stop":1736189609818,"duration":3856}},{"uid":"1facf71285e9f6ca","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/1facf71285e9f6ca","status":"passed","time":{"start":1736189605962,"stop":1736189609818,"duration":3856}},{"uid":"af17d6d194f37091","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/af17d6d194f37091","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736183155818,"stop":1736183155818,"duration":0}},{"uid":"532bfa194bada5ea","reportUrl":"https://golioth.github.io/allure-reports/main/17/#testresult/532bfa194bada5ea","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736124220507,"stop":1736124220507,"duration":0}},{"uid":"acf45b6fc40b3383","reportUrl":"https://golioth.github.io/allure-reports/main/16/#testresult/acf45b6fc40b3383","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1736037046108,"stop":1736037046108,"duration":0}},{"uid":"1f5023b43d0d3d69","reportUrl":"https://golioth.github.io/allure-reports/main/15/#testresult/1f5023b43d0d3d69","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1735951536551,"stop":1735951536551,"duration":0}},{"uid":"61bb34bc0aae4dab","reportUrl":"https://golioth.github.io/allure-reports/main/8/#testresult/61bb34bc0aae4dab","status":"passed","time":{"start":1735865700919,"stop":1735865704758,"duration":3839}},{"uid":"8d61ec2fd580c771","reportUrl":"https://golioth.github.io/allure-reports/main/1991/#testresult/8d61ec2fd580c771","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1735779853427,"stop":1735779853427,"duration":0}},{"uid":"5671cd2a70e6f3b5","reportUrl":"https://golioth.github.io/allure-reports/main/1990/#testresult/5671cd2a70e6f3b5","status":"passed","time":{"start":1735692806421,"stop":1735692810306,"duration":3885}},{"uid":"78f6dafc794d2435","reportUrl":"https://golioth.github.io/allure-reports/main/1984/#testresult/78f6dafc794d2435","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1735657551679,"stop":1735657551679,"duration":0}},{"uid":"f010cdf3b956cce3","reportUrl":"https://golioth.github.io/allure-reports/main/1983/#testresult/f010cdf3b956cce3","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1735607022939,"stop":1735607022939,"duration":0}},{"uid":"4b8b5c596df3107b","reportUrl":"https://golioth.github.io/allure-reports/main/1980/#testresult/4b8b5c596df3107b","status":"passed","time":{"start":1735520357717,"stop":1735520361624,"duration":3907}},{"uid":"a4a5d1f0949e9e24","reportUrl":"https://golioth.github.io/allure-reports/main/1979/#testresult/a4a5d1f0949e9e24","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1735433718577,"stop":1735433718577,"duration":0}},{"uid":"c5ffe375b0bf5047","reportUrl":"https://golioth.github.io/allure-reports/main/1978/#testresult/c5ffe375b0bf5047","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1735347189312,"stop":1735347189312,"duration":0}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"d2f1244719cb8202.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}