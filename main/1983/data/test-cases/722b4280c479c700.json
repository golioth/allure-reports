{
  "uid" : "722b4280c479c700",
  "name" : "test_block_upload",
  "fullName" : "tests.hil.tests.stream.test_stream#test_block_upload",
  "historyId" : "bf5aaea165a010a9ece478740708b5e9",
  "time" : {
    "start" : 1735606713066,
    "stop" : 1735606726005,
    "duration" : 12939
  },
  "status" : "broken",
  "statusMessage" : "httpx.ConnectTimeout",
  "statusTrace" : "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffb55acfd0>\ndevice = <golioth.golioth.Device object at 0xffffb55907d0>\n\n    async def test_block_upload(board, device):\n        assert None != await board.wait_for_regex_in_line('Block upload successful', timeout_s=20)\n    \n        # Wait for stream to propagate from CDG to LightDB Stream\n        await trio.sleep(6)\n    \n        # Get Stream entry of the block upload from cloud\n>       stream = await device.stream.get(path=BLOCK_UPLOAD_PATH, interval=\"1m\")\n\ntests/hil/tests/stream/test_stream.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:596: in get\n    response = await c.post(f'stream', json=json_data)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "fw_image",
    "time" : {
      "start" : 1735606666548,
      "stop" : 1735606666548,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1735606666550,
      "stop" : 1735606666550,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1735606666544,
      "stop" : 1735606666544,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1735606709592,
      "stop" : 1735606710510,
      "duration" : 918
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1735606666547,
      "stop" : 1735606666547,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1735606666547,
      "stop" : 1735606666548,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board_name",
    "time" : {
      "start" : 1735606666545,
      "stop" : 1735606666545,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1735606666551,
      "stop" : 1735606709103,
      "duration" : 42552
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1735606666549,
      "stop" : 1735606666549,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1735606666549,
      "stop" : 1735606666549,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1735606709105,
      "stop" : 1735606709592,
      "duration" : 487
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1735606666546,
      "stop" : 1735606666546,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1735606710510,
      "stop" : 1735606713063,
      "duration" : 2553
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1735606666550,
      "stop" : 1735606666550,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1735606666548,
      "stop" : 1735606666548,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1735606666551,
      "stop" : 1735606666551,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "httpx.ConnectTimeout",
    "statusTrace" : "@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffb55acfd0>\ndevice = <golioth.golioth.Device object at 0xffffb55907d0>\n\n    async def test_block_upload(board, device):\n        assert None != await board.wait_for_regex_in_line('Block upload successful', timeout_s=20)\n    \n        # Wait for stream to propagate from CDG to LightDB Stream\n        await trio.sleep(6)\n    \n        # Get Stream entry of the block upload from cloud\n>       stream = await device.stream.get(path=BLOCK_UPLOAD_PATH, interval=\"1m\")\n\ntests/hil/tests/stream/test_stream.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:596: in get\n    response = await c.post(f'stream', json=json_data)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "94f226dac40b3376",
      "name" : "stdout",
      "source" : "94f226dac40b3376.txt",
      "type" : "text/plain",
      "size" : 8056
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "device::0",
    "time" : {
      "start" : 1735606726967,
      "stop" : 1735606727364,
      "duration" : 397
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board::0",
    "time" : {
      "start" : 1735606727368,
      "stop" : 1735606727371,
      "duration" : 3
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1735606727366,
      "stop" : 1735606727366,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup::0",
    "time" : {
      "start" : 1735606726965,
      "stop" : 1735606726965,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "esp32_devkitc_wrover_espidf"
  }, {
    "name" : "tag",
    "value" : "esp-idf"
  }, {
    "name" : "parentSuite",
    "value" : "hil.esp-idf.esp32_devkitc_wrover_espidf"
  }, {
    "name" : "tag",
    "value" : "tims_orange_pi"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_stream"
  }, {
    "name" : "host",
    "value" : "20cbe26ecb1e"
  }, {
    "name" : "thread",
    "value" : "273-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.stream.test_stream"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'esp32_devkitc_wrover_espidf'"
  }, {
    "name" : "platform_name",
    "value" : "'esp-idf'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 27,
        "unknown" : 0,
        "total" : 28
      },
      "items" : [ {
        "uid" : "b881605a0cf76deb",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1980/#testresult/b881605a0cf76deb",
        "status" : "passed",
        "time" : {
          "start" : 1735521056398,
          "stop" : 1735521064600,
          "duration" : 8202
        }
      }, {
        "uid" : "8e30bfe0590531c4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1979/#testresult/8e30bfe0590531c4",
        "status" : "passed",
        "time" : {
          "start" : 1735434363025,
          "stop" : 1735434371013,
          "duration" : 7988
        }
      }, {
        "uid" : "32f862f192b2adad",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1978/#testresult/32f862f192b2adad",
        "status" : "passed",
        "time" : {
          "start" : 1735347825905,
          "stop" : 1735347833837,
          "duration" : 7932
        }
      }, {
        "uid" : "fdf1eb0fddc031cc",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1977/#testresult/fdf1eb0fddc031cc",
        "status" : "passed",
        "time" : {
          "start" : 1735261323930,
          "stop" : 1735261332035,
          "duration" : 8105
        }
      }, {
        "uid" : "d7cacdce15e7782d",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1976/#testresult/d7cacdce15e7782d",
        "status" : "passed",
        "time" : {
          "start" : 1735174985017,
          "stop" : 1735174993093,
          "duration" : 8076
        }
      }, {
        "uid" : "be06f0e3649ff8a2",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1975/#testresult/be06f0e3649ff8a2",
        "status" : "passed",
        "time" : {
          "start" : 1735088280180,
          "stop" : 1735088288239,
          "duration" : 8059
        }
      }, {
        "uid" : "3fbeb8cad54c2c8a",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1974/#testresult/3fbeb8cad54c2c8a",
        "status" : "passed",
        "time" : {
          "start" : 1735002291283,
          "stop" : 1735002299281,
          "duration" : 7998
        }
      }, {
        "uid" : "63e395b51d58c778",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1973/#testresult/63e395b51d58c778",
        "status" : "passed",
        "time" : {
          "start" : 1734915844217,
          "stop" : 1734915852345,
          "duration" : 8128
        }
      }, {
        "uid" : "e7a130d2872c0a2d",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1972/#testresult/e7a130d2872c0a2d",
        "status" : "passed",
        "time" : {
          "start" : 1734829333002,
          "stop" : 1734829341092,
          "duration" : 8090
        }
      }, {
        "uid" : "ffd2334469b6293c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1969/#testresult/ffd2334469b6293c",
        "status" : "passed",
        "time" : {
          "start" : 1734742880678,
          "stop" : 1734742888659,
          "duration" : 7981
        }
      }, {
        "uid" : "ebc6f16fdb2c2614",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1965/#testresult/ebc6f16fdb2c2614",
        "status" : "passed",
        "time" : {
          "start" : 1734656692076,
          "stop" : 1734656700100,
          "duration" : 8024
        }
      }, {
        "uid" : "61be6d3a4c3a3bc4",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1957/#testresult/61be6d3a4c3a3bc4",
        "status" : "passed",
        "time" : {
          "start" : 1734569893616,
          "stop" : 1734569901666,
          "duration" : 8050
        }
      }, {
        "uid" : "31d9dd6993aabfe7",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1950/#testresult/31d9dd6993aabfe7",
        "status" : "passed",
        "time" : {
          "start" : 1734483618759,
          "stop" : 1734483627125,
          "duration" : 8366
        }
      }, {
        "uid" : "4ed1f052a8a67f5c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1949/#testresult/4ed1f052a8a67f5c",
        "status" : "passed",
        "time" : {
          "start" : 1734469772555,
          "stop" : 1734469780658,
          "duration" : 8103
        }
      }, {
        "uid" : "51f56294b75bc928",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1946/#testresult/51f56294b75bc928",
        "status" : "passed",
        "time" : {
          "start" : 1734444552782,
          "stop" : 1734444560941,
          "duration" : 8159
        }
      }, {
        "uid" : "6038aab31e346494",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1944/#testresult/6038aab31e346494",
        "status" : "passed",
        "time" : {
          "start" : 1734396045473,
          "stop" : 1734396053588,
          "duration" : 8115
        }
      }, {
        "uid" : "5444b1501a5e4fc",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1935/#testresult/5444b1501a5e4fc",
        "status" : "passed",
        "time" : {
          "start" : 1734309731299,
          "stop" : 1734309739808,
          "duration" : 8509
        }
      }, {
        "uid" : "af3e377816e26884",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1934/#testresult/af3e377816e26884",
        "status" : "passed",
        "time" : {
          "start" : 1734223409334,
          "stop" : 1734223417762,
          "duration" : 8428
        }
      }, {
        "uid" : "8f2819e251531b83",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1933/#testresult/8f2819e251531b83",
        "status" : "passed",
        "time" : {
          "start" : 1734136837015,
          "stop" : 1734136845186,
          "duration" : 8171
        }
      }, {
        "uid" : "9508412dc5adac8f",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1930/#testresult/9508412dc5adac8f",
        "status" : "passed",
        "time" : {
          "start" : 1734117462213,
          "stop" : 1734117470234,
          "duration" : 8021
        }
      } ]
    },
    "tags" : [ "esp-idf", "anyio", "tims_orange_pi", "esp32_devkitc_wrover_espidf", "@pytest.mark.usefixtures('anyio_backend')" ]
  },
  "source" : "722b4280c479c700.json",
  "parameterValues" : [ "'esp32_devkitc_wrover_espidf'", "'esp-idf'" ]
}