{"uid":"57231bdc1c8274c6","name":"test_hello","fullName":"examples.esp_idf.cpp.pytest.test_sample#test_hello","historyId":"01825beeab41f1aa93031b146a613606","time":{"start":1760660982418,"stop":1760660995823,"duration":13405},"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff8c5cf770>\ndevice = <golioth.golioth.Device object at 0xffff8c504ec0>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.now(timezone.utc)\n        await board.wait_for_regex_in_line('.*Hello, Golioth 2!', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.now(timezone.utc)\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        r = re.compile(\".*Hello, Golioth 1!\")\n        matching_log = list(filter(r.match, [str(l) for l in logs]))\n>       assert len(matching_log) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nexamples/esp_idf/cpp/pytest/test_sample.py:24: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760660956708,"stop":1760660956709,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760660956709,"stop":1760660956710,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760660956710,"stop":1760660956711,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760660956711,"stop":1760660956711,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760660956712,"stop":1760660956712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760660956712,"stop":1760660956712,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760660956713,"stop":1760660956713,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760660956713,"stop":1760660981197,"duration":24484},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1760660956750,"stop":1760660956751,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1760660956751,"stop":1760660956751,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1760660956752,"stop":1760660956752,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1760660956752,"stop":1760660956752,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1760660956753,"stop":1760660956753,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760660981199,"stop":1760660981692,"duration":493},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760660981693,"stop":1760660982414,"duration":721},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 0 == 1\n +  where 0 = len([])","statusTrace":"board = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffff8c5cf770>\ndevice = <golioth.golioth.Device object at 0xffff8c504ec0>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.now(timezone.utc)\n        await board.wait_for_regex_in_line('.*Hello, Golioth 2!', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.now(timezone.utc)\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        r = re.compile(\".*Hello, Golioth 1!\")\n        matching_log = list(filter(r.match, [str(l) for l in logs]))\n>       assert len(matching_log) == 1\nE       assert 0 == 1\nE        +  where 0 = len([])\n\nexamples/esp_idf/cpp/pytest/test_sample.py:24: AssertionError","steps":[],"attachments":[{"uid":"b232d79a65f30bca","name":"stdout","source":"b232d79a65f30bca.txt","type":"text/plain","size":7193}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1760660995939,"stop":1760660996281,"duration":342},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760660996283,"stop":1760660996283,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760660996285,"stop":1760660996288,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"074303278b3b"},{"name":"thread","value":"256-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.cpp.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":27,"unknown":0,"total":28},"items":[{"uid":"c5b192cdfe89c652","reportUrl":"https://golioth.github.io/allure-reports/main/770//#testresult/c5b192cdfe89c652","status":"passed","time":{"start":1760574235066,"stop":1760574248874,"duration":13808}},{"uid":"661846ecd7a68443","reportUrl":"https://golioth.github.io/allure-reports/main/769//#testresult/661846ecd7a68443","status":"passed","time":{"start":1760488640737,"stop":1760488654737,"duration":14000}},{"uid":"90d574ec01bbb2d2","reportUrl":"https://golioth.github.io/allure-reports/main/768//#testresult/90d574ec01bbb2d2","status":"passed","time":{"start":1760476899718,"stop":1760476913073,"duration":13355}},{"uid":"dc096b491c842343","reportUrl":"https://golioth.github.io/allure-reports/main/767//#testresult/dc096b491c842343","status":"passed","time":{"start":1760401620578,"stop":1760401638836,"duration":18258}},{"uid":"c0e5f02c34321df","reportUrl":"https://golioth.github.io/allure-reports/main/766//#testresult/c0e5f02c34321df","status":"passed","time":{"start":1760315950077,"stop":1760315963640,"duration":13563}},{"uid":"a94ef56cc649fe82","reportUrl":"https://golioth.github.io/allure-reports/main/765//#testresult/a94ef56cc649fe82","status":"passed","time":{"start":1760228743574,"stop":1760228756341,"duration":12767}},{"uid":"4d1c35423bc4a87d","reportUrl":"https://golioth.github.io/allure-reports/main/763//#testresult/4d1c35423bc4a87d","status":"passed","time":{"start":1760142301833,"stop":1760142315184,"duration":13351}},{"uid":"a073f98fb6f3aa6f","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/a073f98fb6f3aa6f","status":"passed","time":{"start":1760055915642,"stop":1760055928300,"duration":12658}},{"uid":"eb8bfbd6307fd31d","reportUrl":"https://golioth.github.io/allure-reports/main/761//#testresult/eb8bfbd6307fd31d","status":"passed","time":{"start":1760040673762,"stop":1760040687414,"duration":13652}},{"uid":"65ae26e23230b22f","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/65ae26e23230b22f","status":"passed","time":{"start":1759992651986,"stop":1759992667134,"duration":15148}},{"uid":"14bf4e5e50d0f58e","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/14bf4e5e50d0f58e","status":"passed","time":{"start":1759969527568,"stop":1759969540650,"duration":13082}},{"uid":"7bdee035b5308fa3","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/7bdee035b5308fa3","status":"passed","time":{"start":1759884457923,"stop":1759884474201,"duration":16278}},{"uid":"1066c1c7c6d51e19","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/1066c1c7c6d51e19","status":"passed","time":{"start":1759861626975,"stop":1759861642176,"duration":15201}},{"uid":"c90c6425f6aa120a","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/c90c6425f6aa120a","status":"passed","time":{"start":1759849501444,"stop":1759849518811,"duration":17367}},{"uid":"45b4fe990742f9e5","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/45b4fe990742f9e5","status":"passed","time":{"start":1759798790470,"stop":1759798806635,"duration":16165}},{"uid":"4917ddb94ee96bb8","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/4917ddb94ee96bb8","status":"passed","time":{"start":1759777298703,"stop":1759777312219,"duration":13516}},{"uid":"b0c5afe7ef9d20ce","reportUrl":"https://golioth.github.io/allure-reports/main/742//#testresult/b0c5afe7ef9d20ce","status":"passed","time":{"start":1759711078661,"stop":1759711091399,"duration":12738}},{"uid":"647d080f48e8fac5","reportUrl":"https://golioth.github.io/allure-reports/main/741//#testresult/647d080f48e8fac5","status":"passed","time":{"start":1759623931333,"stop":1759623945023,"duration":13690}},{"uid":"b175eeb756a419b5","reportUrl":"https://golioth.github.io/allure-reports/main/740//#testresult/b175eeb756a419b5","status":"passed","time":{"start":1759538796138,"stop":1759538808898,"duration":12760}},{"uid":"bb0cf01d1e088fd0","reportUrl":"https://golioth.github.io/allure-reports/main/738//#testresult/bb0cf01d1e088fd0","status":"passed","time":{"start":1759451183623,"stop":1759451196404,"duration":12781}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","mikes_testbench"]},"source":"57231bdc1c8274c6.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}