{"uid":"2df35c0e112d16e8","name":"test_observation_repeat_restart","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_repeat_restart","historyId":"8637bee89139c59b9a376b1a0ce5b728","time":{"start":1760919371729,"stop":1760919377060,"duration":5331},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n>           yield\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:101: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:394: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:256: in handle_async_request\n    raise exc from None\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection_pool.py:236: in handle_async_request\n    response = await connection.handle_async_request(\n/root/venv/lib/python3.13/site-packages/httpcore/_async/connection.py:103: in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:136: in handle_async_request\n    raise exc\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:106: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:177: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpcore/_async/http11.py:217: in _receive_event\n    data = await self._network_stream.read(\n/root/venv/lib/python3.13/site-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n         ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/root/venv/lib/python3.13/site-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffb77c3620>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:681: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1859: in post\n    return await self.request(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1540: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1629: in send\n    response = await self._send_handling_auth(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1657: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1694: in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_client.py:1730: in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:393: in handle_async_request\n    with map_httpcore_exceptions():\n         ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/cpython-3.13.5-linux-aarch64-gnu/lib/python3.13/contextlib.py:162: in __exit__\n    self.gen.throw(value)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        global HTTPCORE_EXC_MAP\n        if len(HTTPCORE_EXC_MAP) == 0:\n            HTTPCORE_EXC_MAP = _load_httpcore_exceptions()\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/root/venv/lib/python3.13/site-packages/httpx/_transports/default.py:118: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <pytest_hil.espidfboard.ESPIDFBoard object at 0xffffb78942f0>\ndevice = <golioth.golioth.Device object at 0xffffb77c30e0>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n>           rsp = await device.rpc.disconnect()\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests/hil/tests/rpc/test_rpc.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:704: in call_method\n    return await self.call(name, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffb77c3620>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/root/venv/lib/python3.13/site-packages/golioth/golioth.py:686: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1760919281537,"stop":1760919281537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1760919281538,"stop":1760919281538,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1760919281539,"stop":1760919281539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1760919281540,"stop":1760919281541,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1760919281540,"stop":1760919281540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1760919281541,"stop":1760919281542,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1760919281541,"stop":1760919281541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1760919281542,"stop":1760919282071,"duration":529},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1760919282071,"stop":1760919335840,"duration":53769},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1760919335842,"stop":1760919336809,"duration":967},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1760919336809,"stop":1760919343123,"duration":6314},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1760919397265,"stop":1760919397265,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1760919397268,"stop":1760919397687,"duration":419},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1760919397689,"stop":1760919397694,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1760919397696,"stop":1760919397699,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"e30749561781"},{"name":"thread","value":"249-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":28,"unknown":0,"total":32},"items":[{"uid":"6626c92abe8d9e34","reportUrl":"https://golioth.github.io/allure-reports/main/779//#testresult/6626c92abe8d9e34","status":"passed","time":{"start":1760832965557,"stop":1760832988087,"duration":22530}},{"uid":"6e2d39873cbcfa48","reportUrl":"https://golioth.github.io/allure-reports/main/778//#testresult/6e2d39873cbcfa48","status":"passed","time":{"start":1760746548523,"stop":1760746578286,"duration":29763}},{"uid":"c5f7ea940396cac2","reportUrl":"https://golioth.github.io/allure-reports/main/773//#testresult/c5f7ea940396cac2","status":"passed","time":{"start":1760715621349,"stop":1760715661900,"duration":40551}},{"uid":"5d2c0f09037aea96","reportUrl":"https://golioth.github.io/allure-reports/main/772//#testresult/5d2c0f09037aea96","status":"passed","time":{"start":1760660488267,"stop":1760660512545,"duration":24278}},{"uid":"17275e74ae1c6297","reportUrl":"https://golioth.github.io/allure-reports/main/770//#testresult/17275e74ae1c6297","status":"passed","time":{"start":1760573905758,"stop":1760573928515,"duration":22757}},{"uid":"257a6fb317c91a1c","reportUrl":"https://golioth.github.io/allure-reports/main/769//#testresult/257a6fb317c91a1c","status":"passed","time":{"start":1760487433115,"stop":1760487463196,"duration":30081}},{"uid":"452c155f41df4d08","reportUrl":"https://golioth.github.io/allure-reports/main/768//#testresult/452c155f41df4d08","status":"passed","time":{"start":1760476099490,"stop":1760476129533,"duration":30043}},{"uid":"8c2afa4dc157a438","reportUrl":"https://golioth.github.io/allure-reports/main/767//#testresult/8c2afa4dc157a438","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1760400908635,"stop":1760400931535,"duration":22900}},{"uid":"a35eb31a41a92767","reportUrl":"https://golioth.github.io/allure-reports/main/766//#testresult/a35eb31a41a92767","status":"passed","time":{"start":1760315298740,"stop":1760315324521,"duration":25781}},{"uid":"132e524d7b4fa489","reportUrl":"https://golioth.github.io/allure-reports/main/765//#testresult/132e524d7b4fa489","status":"passed","time":{"start":1760228129894,"stop":1760228156926,"duration":27032}},{"uid":"70dfb33ef4da66f3","reportUrl":"https://golioth.github.io/allure-reports/main/763//#testresult/70dfb33ef4da66f3","status":"passed","time":{"start":1760141711639,"stop":1760141738677,"duration":27038}},{"uid":"1d0a5c95170046fb","reportUrl":"https://golioth.github.io/allure-reports/main/762//#testresult/1d0a5c95170046fb","status":"passed","time":{"start":1760055303509,"stop":1760055328043,"duration":24534}},{"uid":"e90763d53a0260b5","reportUrl":"https://golioth.github.io/allure-reports/main/761//#testresult/e90763d53a0260b5","status":"passed","time":{"start":1760039762220,"stop":1760039800019,"duration":37799}},{"uid":"c7686c2105b67ff3","reportUrl":"https://golioth.github.io/allure-reports/main/758//#testresult/c7686c2105b67ff3","status":"passed","time":{"start":1759991931635,"stop":1759991959185,"duration":27550}},{"uid":"be6dbd426b3bab07","reportUrl":"https://golioth.github.io/allure-reports/main/757//#testresult/be6dbd426b3bab07","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1759968899178,"stop":1759968922577,"duration":23399}},{"uid":"521e2c7ba0a618dd","reportUrl":"https://golioth.github.io/allure-reports/main/753//#testresult/521e2c7ba0a618dd","status":"passed","time":{"start":1759882571227,"stop":1759882600779,"duration":29552}},{"uid":"fb679646263b3c90","reportUrl":"https://golioth.github.io/allure-reports/main/752//#testresult/fb679646263b3c90","status":"passed","time":{"start":1759861034314,"stop":1759861066890,"duration":32576}},{"uid":"8330638aef12c9e0","reportUrl":"https://golioth.github.io/allure-reports/main/751//#testresult/8330638aef12c9e0","status":"passed","time":{"start":1759848855303,"stop":1759848883609,"duration":28306}},{"uid":"220b291138e2397d","reportUrl":"https://golioth.github.io/allure-reports/main/750//#testresult/220b291138e2397d","status":"passed","time":{"start":1759796106545,"stop":1759796133080,"duration":26535}},{"uid":"e176b770ece87218","reportUrl":"https://golioth.github.io/allure-reports/main/746//#testresult/e176b770ece87218","status":"passed","time":{"start":1759775947380,"stop":1759775972416,"duration":25036}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf"]},"source":"2df35c0e112d16e8.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}