{"uid":"593ae4cc146ce120","name":"test_wrong_type","fullName":"tests.hil.tests.settings.test_settings#test_wrong_type","historyId":"e14c6d163a087575777337be59bc13e1","time":{"start":1730681213258,"stop":1730681213258,"duration":0},"status":"broken","statusMessage":"trio.TooSlowError","statusTrace":"deadline = 102628.04366111461\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n>           yield scope\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:72: in wait_for_regex_in_line\n    chunk = await self.receive_some()\n/usr/local/lib/python3.11/dist-packages/board.py:46: in receive_some\n    return await self.serial.receive_some()\n/usr/local/lib/python3.11/dist-packages/trio_serial/abstract.py:215: in receive_some\n    return bytes(await self._recv(max_bytes))\n/usr/local/lib/python3.11/dist-packages/trio_serial/posix.py:159: in _recv\n    await trio.lowlevel.wait_readable(self.fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_generated_io_epoll.py:45: in wait_readable\n    return await GLOBAL_RUN_CONTEXT.runner.io_manager.wait_readable(fd)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:334: in wait_readable\n    await self._epoll_wait(fd, \"read_task\")\n/usr/local/lib/python3.11/dist-packages/trio/_core/_io_epoll.py:309: in _epoll_wait\n    await _core.wait_task_rescheduled(abort)\n/usr/local/lib/python3.11/dist-packages/trio/_core/_traps.py:178: in wait_task_rescheduled\n    return (await _async_yield(WaitTaskRescheduled(abort_func))).unwrap()\n/usr/local/lib/python3.11/dist-packages/outcome/_impl.py:213: in unwrap\n    raise captured_error\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    def raise_cancel() -> NoReturn:\n>       raise Cancelled._create()\nE       trio.Cancelled: Cancelled\n\n/usr/local/lib/python3.11/dist-packages/trio/_core/_run.py:1437: Cancelled\n\nDuring handling of the above exception, another exception occurred:\n\nproject = <golioth.golioth.Project object at 0xffffaf284fd0>\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffffaf1d3050>\ndevice = <golioth.golioth.Device object at 0xffffaf23cd90>\n\n    @pytest.fixture(autouse=True, scope=\"module\")\n    async def setup(project, board, device):\n        # Delete any existing device-level settings\n    \n        settings = await device.settings.get_all()\n        for setting in settings:\n            if 'deviceId' in setting:\n                await device.settings.delete(setting['key'])\n    \n        # Ensure the project-level settings exist\n    \n        await project.settings.set('TEST_INT', 1)\n        await project.settings.set('TEST_INT_RANGE', 1)\n        await project.settings.set('TEST_BOOL', False)\n        await project.settings.set('TEST_FLOAT', 1.23)\n        await project.settings.set('TEST_STRING', \"foo\")\n        await project.settings.set('TEST_NOT_REGISTERED', 27)\n        await project.settings.set('TEST_WRONG_TYPE', \"wrong\")\n        await project.settings.set('TEST_CANCEL', False)\n        await project.settings.set('TEST_RESTART', False)\n    \n        # Set Golioth credentials\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Confirm connection to Golioth\n>       assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n\ntests/hil/tests/settings/test_settings.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/board.py:54: in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndeadline = 102628.04366111461\n\n    def fail_at(deadline: float) -> AbstractContextManager[trio.CancelScope]:  # type: ignore[misc]\n        \"\"\"Creates a cancel scope with the given deadline, and raises an error if it\n        is actually cancelled.\n    \n        This function and :func:`move_on_at` are similar in that both create a\n        cancel scope with a given absolute deadline, and if the deadline expires\n        then both will cause :exc:`Cancelled` to be raised within the scope. The\n        difference is that when the :exc:`Cancelled` exception reaches\n        :func:`move_on_at`, it's caught and discarded. When it reaches\n        :func:`fail_at`, then it's caught and :exc:`TooSlowError` is raised in its\n        place.\n    \n        Args:\n          deadline (float): The deadline.\n    \n        Raises:\n          TooSlowError: if a :exc:`Cancelled` exception is raised in this scope\n            and caught by the context manager.\n          ValueError: if deadline is NaN.\n    \n        \"\"\"\n        with move_on_at(deadline) as scope:\n            yield scope\n        if scope.cancelled_caught:\n>           raise TooSlowError\nE           trio.TooSlowError\n\n/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py:123: TooSlowError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730681056165,"stop":1730681056165,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730681056166,"stop":1730681056166,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730681056167,"stop":1730681056168,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730681056167,"stop":1730681056167,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730681056168,"stop":1730681056168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730681056168,"stop":1730681056169,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730681056169,"stop":1730681056170,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730681056169,"stop":1730681056169,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730681056170,"stop":1730681056170,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730681056170,"stop":1730681056170,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730681056171,"stop":1730681056171,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730681056172,"stop":1730681056172,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730681056173,"stop":1730681056563,"duration":390},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730681056564,"stop":1730681079705,"duration":23141},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730681079707,"stop":1730681080571,"duration":864},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730681080572,"stop":1730681208233,"duration":127661},"status":"broken","statusMessage":"trio.TooSlowError\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/pytest_plugin.py\", line 83, in wrapper\n    yield runner.run_fixture(func, kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 946, in run_fixture\n    return self._call_in_runner_task(fixture_func, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 921, in _call_in_runner_task\n    return outcome_holder[0].unwrap()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/outcome/_impl.py\", line 213, in unwrap\n    raise captured_error\n  File \"/usr/local/lib/python3.11/dist-packages/anyio/_backends/_trio.py\", line 891, in _run_tests_and_fixtures\n    retval = await coro\n             ^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/tests/hil/tests/settings/test_settings.py\", line 42, in setup\n    assert None != await board.wait_for_regex_in_line('Golioth CoAP client connected', timeout_s=120)\n  File \"/usr/local/lib/python3.11/dist-packages/board.py\", line 54, in wait_for_regex_in_line\n    with trio.fail_after(timeout_s):\n  File \"/usr/lib/python3.11/contextlib.py\", line 155, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/dist-packages/trio/_timeouts.py\", line 123, in fail_at\n    raise TooSlowError\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[{"name":"device::0","time":{"start":1730681214351,"stop":1730681214722,"duration":371},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730681214724,"stop":1730681214725,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730681214727,"stop":1730681214730,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"5ebb4bda7565"},{"name":"thread","value":"258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":26,"skipped":0,"passed":7,"unknown":0,"total":33},"items":[{"uid":"c7f46593fb0d5999","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/c7f46593fb0d5999","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730594988989,"stop":1730594988989,"duration":0}},{"uid":"4f9b9db542b82f4f","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/4f9b9db542b82f4f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730508564296,"stop":1730508564296,"duration":0}},{"uid":"f1cf347a113145e0","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/f1cf347a113145e0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730422258006,"stop":1730422258006,"duration":0}},{"uid":"8ae7cf649a296b40","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/8ae7cf649a296b40","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730335720357,"stop":1730335720357,"duration":0}},{"uid":"d27a1b62690626dc","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/d27a1b62690626dc","status":"passed","time":{"start":1730304240675,"stop":1730304241063,"duration":388}},{"uid":"45f7f0bc666b8cbd","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/45f7f0bc666b8cbd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730249196223,"stop":1730249196223,"duration":0}},{"uid":"99577d966f34da13","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/99577d966f34da13","status":"passed","time":{"start":1730162862809,"stop":1730162863258,"duration":449}},{"uid":"9b4d82399749a55c","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/9b4d82399749a55c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730076651116,"stop":1730076651116,"duration":0}},{"uid":"a6002056f24360e8","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/a6002056f24360e8","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729990321098,"stop":1729990321098,"duration":0}},{"uid":"5b3733eefa5592b","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/5b3733eefa5592b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729903766834,"stop":1729903766834,"duration":0}},{"uid":"138ab938360ee2d4","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/138ab938360ee2d4","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729817400792,"stop":1729817400792,"duration":0}},{"uid":"df4456cdc7548c8d","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/df4456cdc7548c8d","status":"passed","time":{"start":1729731000892,"stop":1729731001324,"duration":432}},{"uid":"6e62115c85f23a20","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/6e62115c85f23a20","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729644541727,"stop":1729644541727,"duration":0}},{"uid":"e0c0e5180a827fc","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/e0c0e5180a827fc","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729558135142,"stop":1729558135142,"duration":0}},{"uid":"5bd96d72cf7f78da","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/5bd96d72cf7f78da","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729471789606,"stop":1729471789606,"duration":0}},{"uid":"539934e120aa3321","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/539934e120aa3321","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729385506765,"stop":1729385506765,"duration":0}},{"uid":"d59f55b87c2b0045","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/d59f55b87c2b0045","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729369375277,"stop":1729369375277,"duration":0}},{"uid":"a89e18b8ad1a3c4f","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/a89e18b8ad1a3c4f","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729362145041,"stop":1729362145041,"duration":0}},{"uid":"e5f84681447aca78","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/e5f84681447aca78","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729299038412,"stop":1729299038412,"duration":0}},{"uid":"515172cf53654fab","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/515172cf53654fab","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1729212456294,"stop":1729212456294,"duration":0}}]},"tags":["mikes_orange_pi","anyio","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"593ae4cc146ce120.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}