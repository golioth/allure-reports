{"uid":"3381fadfc942e5c","name":"test_lightdb_reported","fullName":"tests.hil.tests.lightdb.test_lightdb#test_lightdb_reported","historyId":"d275ff9cb39891a92ecdfac770405766","time":{"start":1730680454156,"stop":1730680471774,"duration":17618},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\ndevice = <golioth.golioth.Device object at 0xffffa3167c10>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/false')) is False\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/int')) == 13\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/float')) == -234.25\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/str')) == '15'\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/obj')) == {'c': '26', 'd': -12}\n    \n        assert (await device.lightdb.get('hil/lightdb/reported/sync/invalid')) in ('GOLIOTH_ERR_NULL', 'GOLIOTH_ERR_BAD_REQUEST')\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/nothing')) == 'GOLIOTH_ERR_NULL'\n\ntests/hil/tests/lightdb/test_lightdb.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:520: in get\n    response = await c.get(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"device_name","time":{"start":1730680408194,"stop":1730680408195,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1730680408194,"stop":1730680408194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730680408195,"stop":1730680408196,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730680408196,"stop":1730680408196,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730680408197,"stop":1730680408198,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730680408197,"stop":1730680408197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730680408198,"stop":1730680408198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730680408199,"stop":1730680408199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730680408200,"stop":1730680408200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730680408201,"stop":1730680408201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730680408201,"stop":1730680408202,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730680408202,"stop":1730680408202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730680408203,"stop":1730680408886,"duration":683},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730680408887,"stop":1730680428836,"duration":19949},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730680428837,"stop":1730680430262,"duration":1425},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730680430263,"stop":1730680454147,"duration":23884},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:154: in _connect\n    stream = await stream.start_tls(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:74: in start_tls\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\ndevice = <golioth.golioth.Device object at 0xffffa3167c10>\n\n    async def test_lightdb_reported(device):\n        # Check if all values in desired state were replicated\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/true')) is True\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/false')) is False\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/int')) == 13\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/float')) == -234.25\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/str')) == '15'\n        assert (await device.lightdb.get('hil/lightdb/reported/sync/obj')) == {'c': '26', 'd': -12}\n    \n        assert (await device.lightdb.get('hil/lightdb/reported/sync/invalid')) in ('GOLIOTH_ERR_NULL', 'GOLIOTH_ERR_BAD_REQUEST')\n>       assert (await device.lightdb.get('hil/lightdb/reported/sync/nothing')) == 'GOLIOTH_ERR_NULL'\n\ntests/hil/tests/lightdb/test_lightdb.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:520: in get\n    response = await c.get(f'data/{path}')\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","steps":[],"attachments":[{"uid":"eee92339cffb1a93","name":"stdout","source":"eee92339cffb1a93.txt","type":"text/plain","size":2363}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1730680492433,"stop":1730680493430,"duration":997},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730680493433,"stop":1730680493956,"duration":523},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730680493958,"stop":1730680494014,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730680494016,"stop":1730680494018,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"mimxrt1024_evk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.mimxrt1024_evk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_lightdb"},{"name":"host","value":"66165610e1dc"},{"name":"thread","value":"262-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.lightdb.test_lightdb"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'mimxrt1024_evk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":27,"unknown":0,"total":31},"items":[{"uid":"4826de415abe3567","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/4826de415abe3567","status":"passed","time":{"start":1730594813465,"stop":1730594820483,"duration":7018}},{"uid":"c8d5bbd1aa19940e","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/c8d5bbd1aa19940e","status":"passed","time":{"start":1730508016248,"stop":1730508021445,"duration":5197}},{"uid":"c46727a6d977fae9","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/c46727a6d977fae9","status":"passed","time":{"start":1730421810205,"stop":1730421815269,"duration":5064}},{"uid":"19d16a14cdf217bd","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/19d16a14cdf217bd","status":"passed","time":{"start":1730335446779,"stop":1730335452841,"duration":6062}},{"uid":"eb9fe5d535f3c8ba","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/eb9fe5d535f3c8ba","status":"passed","time":{"start":1730303862414,"stop":1730303869765,"duration":7351}},{"uid":"f67a9c92abc70584","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/f67a9c92abc70584","status":"passed","time":{"start":1730248996239,"stop":1730249003163,"duration":6924}},{"uid":"25b6d3d4a4b9a538","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/25b6d3d4a4b9a538","status":"passed","time":{"start":1730162579423,"stop":1730162584707,"duration":5284}},{"uid":"bd2e2f9a5a556d8c","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/bd2e2f9a5a556d8c","status":"passed","time":{"start":1730076342140,"stop":1730076348668,"duration":6528}},{"uid":"adb8f801ace44b06","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/adb8f801ace44b06","status":"passed","time":{"start":1729989845857,"stop":1729989854597,"duration":8740}},{"uid":"84127a698ed6d089","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/84127a698ed6d089","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1729903421232,"stop":1729903421232,"duration":0}},{"uid":"3173f6776c5d2a18","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/3173f6776c5d2a18","status":"passed","time":{"start":1729817013748,"stop":1729817022673,"duration":8925}},{"uid":"f076e064ba98036d","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/f076e064ba98036d","status":"passed","time":{"start":1729730521335,"stop":1729730526632,"duration":5297}},{"uid":"809587662ed1e6e3","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/809587662ed1e6e3","status":"passed","time":{"start":1729643528655,"stop":1729643534676,"duration":6021}},{"uid":"19bcf1b164cc2696","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/19bcf1b164cc2696","status":"passed","time":{"start":1729557835184,"stop":1729557842933,"duration":7749}},{"uid":"31c35242a2a249b0","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/31c35242a2a249b0","status":"passed","time":{"start":1729471450596,"stop":1729471456657,"duration":6061}},{"uid":"dd8f18fc5c33fd41","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/dd8f18fc5c33fd41","status":"passed","time":{"start":1729385210188,"stop":1729385217422,"duration":7234}},{"uid":"17dfde9514ba2aa","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/17dfde9514ba2aa","status":"passed","time":{"start":1729369059144,"stop":1729369067091,"duration":7947}},{"uid":"25c10d2d24a944ef","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/25c10d2d24a944ef","status":"passed","time":{"start":1729361886428,"stop":1729361892459,"duration":6031}},{"uid":"b1a6ccb8fdebf9b0","reportUrl":"https://golioth.github.io/allure-reports/main/1676//#testresult/b1a6ccb8fdebf9b0","status":"passed","time":{"start":1729298636634,"stop":1729298643154,"duration":6520}},{"uid":"498e05d930971b35","reportUrl":"https://golioth.github.io/allure-reports/main/1675//#testresult/498e05d930971b35","status":"passed","time":{"start":1729212165697,"stop":1729212172891,"duration":7194}}]},"tags":["anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","mimxrt1024_evk","zephyr"]},"source":"3381fadfc942e5c.json","parameterValues":["'mimxrt1024_evk'","'zephyr'"]}