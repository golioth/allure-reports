{"uid":"b90068942d85517b","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1732037172875,"stop":1732037196731,"duration":23856},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffbc65afd0>\ndevice = <golioth.golioth.Device object at 0xffffbc842250>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732037157385,"stop":1732037157385,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732037157386,"stop":1732037157386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732037157386,"stop":1732037157386,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732037157387,"stop":1732037157387,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732037157387,"stop":1732037157388,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732037157388,"stop":1732037157390,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732037157391,"stop":1732037157391,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732037157391,"stop":1732037157392,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732037157392,"stop":1732037157957,"duration":565},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732037157958,"stop":1732037158985,"duration":1027},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732037158986,"stop":1732037172235,"duration":13249},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732037172236,"stop":1732037172873,"duration":637},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffbc65afd0>\ndevice = <golioth.golioth.Device object at 0xffffbc842250>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"822fad65204e25e7","name":"log","source":"822fad65204e25e7.txt","type":"text/plain","size":29761}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732037196963,"stop":1732037197151,"duration":188},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732037197153,"stop":1732037197547,"duration":394},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732037197549,"stop":1732037197551,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732037197556,"stop":1732037197556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"732aaedd64ed"},{"name":"thread","value":"347-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":12,"skipped":0,"passed":41,"unknown":0,"total":53},"items":[{"uid":"f723a9c095239522","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/f723a9c095239522","status":"passed","time":{"start":1731977827072,"stop":1731977846123,"duration":19051}},{"uid":"9a96383193df1912","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/9a96383193df1912","status":"passed","time":{"start":1731967411636,"stop":1731967435377,"duration":23741}},{"uid":"8c03a6c133d40838","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/8c03a6c133d40838","status":"passed","time":{"start":1731891548967,"stop":1731891567423,"duration":18456}},{"uid":"6e317d03ad63c67e","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/6e317d03ad63c67e","status":"passed","time":{"start":1731805194680,"stop":1731805213447,"duration":18767}},{"uid":"34122edc04fcc978","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/34122edc04fcc978","status":"passed","time":{"start":1731718816413,"stop":1731718835049,"duration":18636}},{"uid":"272d8e957bea40c4","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/272d8e957bea40c4","status":"passed","time":{"start":1731632379330,"stop":1731632398381,"duration":19051}},{"uid":"cb369c08fc400851","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/cb369c08fc400851","status":"passed","time":{"start":1731607980308,"stop":1731608013888,"duration":33580}},{"uid":"6278660f5c08bfd6","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/6278660f5c08bfd6","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1731566082167,"stop":1731566104484,"duration":22317}},{"uid":"fc1bdc0ae22bd79","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/fc1bdc0ae22bd79","status":"passed","time":{"start":1731545478365,"stop":1731545497452,"duration":19087}},{"uid":"e91724b06e720802","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/e91724b06e720802","status":"passed","time":{"start":1731459889767,"stop":1731459910495,"duration":20728}},{"uid":"98ccf4b61fbc8967","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/98ccf4b61fbc8967","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1731372910719,"stop":1731372934977,"duration":24258}},{"uid":"eb2b02373e78c54a","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/eb2b02373e78c54a","status":"passed","time":{"start":1731286636675,"stop":1731286681429,"duration":44754}},{"uid":"7a11f24aaa5a4667","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/7a11f24aaa5a4667","status":"passed","time":{"start":1731200392980,"stop":1731200417756,"duration":24776}},{"uid":"b5b917521c365ba2","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/b5b917521c365ba2","status":"passed","time":{"start":1731113796962,"stop":1731113816569,"duration":19607}},{"uid":"96dc78b70c203037","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/96dc78b70c203037","status":"passed","time":{"start":1731027354396,"stop":1731027374190,"duration":19794}},{"uid":"411fa24a4bb1fbfe","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/411fa24a4bb1fbfe","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1730941015292,"stop":1730941037764,"duration":22472}},{"uid":"df87fa0a4be0a97a","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/df87fa0a4be0a97a","status":"passed","time":{"start":1730854600426,"stop":1730854621478,"duration":21052}},{"uid":"2ffd85d879f438d9","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/2ffd85d879f438d9","status":"passed","time":{"start":1730854600426,"stop":1730854621478,"duration":21052}},{"uid":"ef60a7ac93a3888a","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/ef60a7ac93a3888a","status":"passed","time":{"start":1730768279112,"stop":1730768307042,"duration":27930}},{"uid":"1877ff97ff74ef6c","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/1877ff97ff74ef6c","status":"passed","time":{"start":1730681957182,"stop":1730681976168,"duration":18986}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"b90068942d85517b.json","parameterValues":["'rak5010'","'zephyr'"]}