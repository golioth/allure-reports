{"uid":"dee8012404fdf023","name":"test_int_return","fullName":"tests.hil.tests.rpc.test_rpc#test_int_return","historyId":"144279241e7c8c85c59394f6c4c23368","time":{"start":1732037192106,"stop":1732037197534,"duration":5428},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff914fa390>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <nrf9160dk.nRF9160DK object at 0xffff914f8a50>\ndevice = <golioth.golioth.Device object at 0xffff914f8fd0>\n\n    async def test_int_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"int\")\n\ntests/hil/tests/rpc/test_rpc.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff914fa390>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732037166757,"stop":1732037166757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1732037166758,"stop":1732037166758,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1732037166759,"stop":1732037166760,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1732037166759,"stop":1732037166759,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732037166760,"stop":1732037166760,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1732037166761,"stop":1732037166762,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732037166761,"stop":1732037166761,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1732037166762,"stop":1732037166763,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1732037166762,"stop":1732037166762,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732037166763,"stop":1732037166764,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732037166763,"stop":1732037166763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732037166764,"stop":1732037167176,"duration":412},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732037166764,"stop":1732037166764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1732037167176,"stop":1732037181762,"duration":14586},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732037181764,"stop":1732037182887,"duration":1123},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1732037182887,"stop":1732037187103,"duration":4216},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1732037258011,"stop":1732037258011,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732037258013,"stop":1732037258454,"duration":441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1732037258456,"stop":1732037258458,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732037258460,"stop":1732037258462,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"3fae0ca98497"},{"name":"thread","value":"285-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":46,"unknown":0,"total":53},"items":[{"uid":"f01bb281dcc9f15","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/f01bb281dcc9f15","status":"passed","time":{"start":1731977913033,"stop":1731977914147,"duration":1114}},{"uid":"6e8aaf2a086405d6","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/6e8aaf2a086405d6","status":"passed","time":{"start":1731967185237,"stop":1731967186489,"duration":1252}},{"uid":"135b79960f15c9de","reportUrl":"https://golioth.github.io/allure-reports/main/1759//#testresult/135b79960f15c9de","status":"passed","time":{"start":1731891623155,"stop":1731891624157,"duration":1002}},{"uid":"f9454b8f4f93d0f8","reportUrl":"https://golioth.github.io/allure-reports/main/1758//#testresult/f9454b8f4f93d0f8","status":"passed","time":{"start":1731805248483,"stop":1731805249294,"duration":811}},{"uid":"90392d620cab6f17","reportUrl":"https://golioth.github.io/allure-reports/main/1757//#testresult/90392d620cab6f17","status":"passed","time":{"start":1731718862911,"stop":1731718863724,"duration":813}},{"uid":"c6c4ceb776d2079d","reportUrl":"https://golioth.github.io/allure-reports/main/1748//#testresult/c6c4ceb776d2079d","status":"passed","time":{"start":1731632333021,"stop":1731632334367,"duration":1346}},{"uid":"f231eb7d5279a43c","reportUrl":"https://golioth.github.io/allure-reports/main/13//#testresult/f231eb7d5279a43c","status":"passed","time":{"start":1731607998107,"stop":1731607999355,"duration":1248}},{"uid":"e86f87e84d6565f4","reportUrl":"https://golioth.github.io/allure-reports/main/1741//#testresult/e86f87e84d6565f4","status":"passed","time":{"start":1731566089815,"stop":1731566091097,"duration":1282}},{"uid":"36cd75e600e161e0","reportUrl":"https://golioth.github.io/allure-reports/main/1738//#testresult/36cd75e600e161e0","status":"passed","time":{"start":1731545616302,"stop":1731545617754,"duration":1452}},{"uid":"11f0d96ffaf3b39","reportUrl":"https://golioth.github.io/allure-reports/main/1728//#testresult/11f0d96ffaf3b39","status":"passed","time":{"start":1731458829362,"stop":1731458830331,"duration":969}},{"uid":"685a36cfeed910ec","reportUrl":"https://golioth.github.io/allure-reports/main/1724//#testresult/685a36cfeed910ec","status":"passed","time":{"start":1731373195531,"stop":1731373196421,"duration":890}},{"uid":"4e5518efdf3abe65","reportUrl":"https://golioth.github.io/allure-reports/main/1723//#testresult/4e5518efdf3abe65","status":"passed","time":{"start":1731286096039,"stop":1731286097047,"duration":1008}},{"uid":"e85e3d1d571a5fea","reportUrl":"https://golioth.github.io/allure-reports/main/1722//#testresult/e85e3d1d571a5fea","status":"passed","time":{"start":1731200275801,"stop":1731200277022,"duration":1221}},{"uid":"cd1be464b904f19e","reportUrl":"https://golioth.github.io/allure-reports/main/1721//#testresult/cd1be464b904f19e","status":"passed","time":{"start":1731113783893,"stop":1731113785173,"duration":1280}},{"uid":"eb5099a1794c375f","reportUrl":"https://golioth.github.io/allure-reports/main/1718//#testresult/eb5099a1794c375f","status":"passed","time":{"start":1731027499705,"stop":1731027500608,"duration":903}},{"uid":"c0d85585f1496a5b","reportUrl":"https://golioth.github.io/allure-reports/main/1717//#testresult/c0d85585f1496a5b","status":"passed","time":{"start":1730941116609,"stop":1730941117878,"duration":1269}},{"uid":"29fec9171fcb7635","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/29fec9171fcb7635","status":"passed","time":{"start":1730894401875,"stop":1730894403101,"duration":1226}},{"uid":"a7485e325faa3a06","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/a7485e325faa3a06","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1730854280702,"stop":1730854280702,"duration":0}},{"uid":"76345966a1100fdb","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/76345966a1100fdb","status":"passed","time":{"start":1730768270929,"stop":1730768271934,"duration":1005}},{"uid":"9f774bef5208d84b","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/9f774bef5208d84b","status":"passed","time":{"start":1730681717316,"stop":1730681718631,"duration":1315}}]},"tags":["nrf9160dk","anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"dee8012404fdf023.json","parameterValues":["'nrf9160dk'","'zephyr'"]}