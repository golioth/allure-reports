{"uid":"ece4e7733e461440","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"904917f16e15151e1ed741401de93920","time":{"start":1730893495527,"stop":1730893508066,"duration":12539},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff956dca10>\ndevice = <golioth.golioth.Device object at 0xffff95741f50>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff95741f50>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1730893425762,"stop":1730893425762,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730893425763,"stop":1730893425763,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730893425764,"stop":1730893425764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730893425764,"stop":1730893425765,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730893425765,"stop":1730893425765,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730893425766,"stop":1730893425766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730893425767,"stop":1730893425767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730893425767,"stop":1730893425767,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730893425768,"stop":1730893425768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730893425768,"stop":1730893425768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730893425769,"stop":1730893425769,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730893425769,"stop":1730893425769,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730893425770,"stop":1730893426200,"duration":430},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730893426201,"stop":1730893475936,"duration":49735},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730893475938,"stop":1730893477154,"duration":1216},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730893477154,"stop":1730893491485,"duration":14331},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff956dca10>\ndevice = <golioth.golioth.Device object at 0xffff95741f50>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff95741f50>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"639031c36b798cf9","name":"stdout","source":"639031c36b798cf9.txt","type":"text/plain","size":1322}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1730893629021,"stop":1730893629021,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730893629026,"stop":1730893629592,"duration":566},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730893629594,"stop":1730893629602,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730893629604,"stop":1730893629606,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"f53a392b3e3e"},{"name":"thread","value":"256-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9ab9420d3feb285b","status":"passed","time":{"start":1730853236382,"stop":1730853248638,"duration":12256}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":35,"unknown":0,"total":36},"items":[{"uid":"8f4d2f7d1560bf7a","reportUrl":"https://golioth.github.io/allure-reports/main/1716//#testresult/8f4d2f7d1560bf7a","status":"passed","time":{"start":1730853236382,"stop":1730853248638,"duration":12256}},{"uid":"595a7b0e38fa05a","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/595a7b0e38fa05a","status":"passed","time":{"start":1730766914581,"stop":1730766926979,"duration":12398}},{"uid":"8ec2d5857d3ce673","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/8ec2d5857d3ce673","status":"passed","time":{"start":1730680704939,"stop":1730680717351,"duration":12412}},{"uid":"43ad07712b1c272b","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/43ad07712b1c272b","status":"passed","time":{"start":1730594239585,"stop":1730594251734,"duration":12149}},{"uid":"25ac70a3f995cdcd","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/25ac70a3f995cdcd","status":"passed","time":{"start":1730507717991,"stop":1730507730275,"duration":12284}},{"uid":"d854f40b159a4ee6","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/d854f40b159a4ee6","status":"passed","time":{"start":1730421526367,"stop":1730421538643,"duration":12276}},{"uid":"1102b794d5610c2a","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/1102b794d5610c2a","status":"passed","time":{"start":1730334932124,"stop":1730334944501,"duration":12377}},{"uid":"f5afd580d025d7a0","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/f5afd580d025d7a0","status":"passed","time":{"start":1730303341644,"stop":1730303353829,"duration":12185}},{"uid":"877c7005cc00660","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/877c7005cc00660","status":"passed","time":{"start":1730248514474,"stop":1730248526819,"duration":12345}},{"uid":"cd2abc5fd8bb95b7","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/cd2abc5fd8bb95b7","status":"passed","time":{"start":1730162217757,"stop":1730162230294,"duration":12537}},{"uid":"6712e6bbfd41f1f3","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/6712e6bbfd41f1f3","status":"passed","time":{"start":1730075864530,"stop":1730075876976,"duration":12446}},{"uid":"c7135d7ee1971fc6","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/c7135d7ee1971fc6","status":"passed","time":{"start":1729989514863,"stop":1729989527223,"duration":12360}},{"uid":"e7db2e5b6ba09daf","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/e7db2e5b6ba09daf","status":"passed","time":{"start":1729902936377,"stop":1729902948945,"duration":12568}},{"uid":"d932de66de97568c","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/d932de66de97568c","status":"passed","time":{"start":1729816573885,"stop":1729816586383,"duration":12498}},{"uid":"c4327e60c6b44dbf","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/c4327e60c6b44dbf","status":"passed","time":{"start":1729730106676,"stop":1729730118867,"duration":12191}},{"uid":"adcda74009b7a2d9","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/adcda74009b7a2d9","status":"passed","time":{"start":1729643764095,"stop":1729643776510,"duration":12415}},{"uid":"6cb931a71093020c","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/6cb931a71093020c","status":"passed","time":{"start":1729557356902,"stop":1729557369404,"duration":12502}},{"uid":"9f9d21e4f5724e8","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/9f9d21e4f5724e8","status":"passed","time":{"start":1729471005512,"stop":1729471018003,"duration":12491}},{"uid":"aeb58ed06028a91e","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/aeb58ed06028a91e","status":"passed","time":{"start":1729384692460,"stop":1729384704984,"duration":12524}},{"uid":"b16c54e90960e089","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/b16c54e90960e089","status":"passed","time":{"start":1729368602711,"stop":1729368615082,"duration":12371}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"ece4e7733e461440.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}