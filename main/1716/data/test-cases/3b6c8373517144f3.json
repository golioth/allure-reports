{"uid":"3b6c8373517144f3","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"9e71d39341bcf45922b5bb6a4bc2bdd4","time":{"start":1730853282405,"stop":1730853287715,"duration":5310},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffaed34ad0>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffaecbe6d0>\ndevice = <golioth.golioth.Device object at 0xffffaed34310>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffaed34ad0>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1730853164726,"stop":1730853164727,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1730853164728,"stop":1730853164728,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1730853164729,"stop":1730853164729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1730853164730,"stop":1730853164730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1730853164730,"stop":1730853164731,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1730853164731,"stop":1730853164731,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1730853164732,"stop":1730853164732,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1730853164733,"stop":1730853164733,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1730853164734,"stop":1730853164735,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1730853164734,"stop":1730853164734,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1730853164735,"stop":1730853164735,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1730853164735,"stop":1730853164736,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1730853164736,"stop":1730853165159,"duration":423},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1730853165159,"stop":1730853216896,"duration":51737},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1730853216897,"stop":1730853217979,"duration":1082},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1730853217980,"stop":1730853231166,"duration":13186},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1730853288846,"stop":1730853288846,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1730853288849,"stop":1730853289279,"duration":430},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1730853289281,"stop":1730853289283,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1730853289285,"stop":1730853289287,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"f3ee121c16b7"},{"name":"thread","value":"248-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":27,"unknown":0,"total":34},"items":[{"uid":"af23c6a31536241e","reportUrl":"https://golioth.github.io/allure-reports/main/1715//#testresult/af23c6a31536241e","status":"passed","time":{"start":1730766811734,"stop":1730766830016,"duration":18282}},{"uid":"8577961b71913213","reportUrl":"https://golioth.github.io/allure-reports/main/1714//#testresult/8577961b71913213","status":"passed","time":{"start":1730680489338,"stop":1730680507382,"duration":18044}},{"uid":"e1b9611ce0c446ef","reportUrl":"https://golioth.github.io/allure-reports/main/1713//#testresult/e1b9611ce0c446ef","status":"passed","time":{"start":1730594229641,"stop":1730594254144,"duration":24503}},{"uid":"d153069092e280d5","reportUrl":"https://golioth.github.io/allure-reports/main/1711//#testresult/d153069092e280d5","status":"passed","time":{"start":1730507664305,"stop":1730507683117,"duration":18812}},{"uid":"d23ff3f625cf5de7","reportUrl":"https://golioth.github.io/allure-reports/main/1709//#testresult/d23ff3f625cf5de7","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1730421443394,"stop":1730421448732,"duration":5338}},{"uid":"f7130b6b6526bdc4","reportUrl":"https://golioth.github.io/allure-reports/main/1705//#testresult/f7130b6b6526bdc4","status":"passed","time":{"start":1730334924071,"stop":1730334943413,"duration":19342}},{"uid":"713d39b8814a50df","reportUrl":"https://golioth.github.io/allure-reports/main/1704//#testresult/713d39b8814a50df","status":"passed","time":{"start":1730303348367,"stop":1730303367410,"duration":19043}},{"uid":"68798d5a495b78f8","reportUrl":"https://golioth.github.io/allure-reports/main/1703//#testresult/68798d5a495b78f8","status":"passed","time":{"start":1730248397782,"stop":1730248416096,"duration":18314}},{"uid":"d2fd88378dbf6877","reportUrl":"https://golioth.github.io/allure-reports/main/1701//#testresult/d2fd88378dbf6877","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1730162102189,"stop":1730162107607,"duration":5418}},{"uid":"13c552da5b3c4223","reportUrl":"https://golioth.github.io/allure-reports/main/1700//#testresult/13c552da5b3c4223","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1730075751815,"stop":1730075757125,"duration":5310}},{"uid":"6a493d1a9f8da623","reportUrl":"https://golioth.github.io/allure-reports/main/1699//#testresult/6a493d1a9f8da623","status":"passed","time":{"start":1729989438419,"stop":1729989457237,"duration":18818}},{"uid":"df95ad53c60b7e4f","reportUrl":"https://golioth.github.io/allure-reports/main/1698//#testresult/df95ad53c60b7e4f","status":"passed","time":{"start":1729902861614,"stop":1729902880366,"duration":18752}},{"uid":"f17f09aee8fcc566","reportUrl":"https://golioth.github.io/allure-reports/main/1697//#testresult/f17f09aee8fcc566","status":"passed","time":{"start":1729816491537,"stop":1729816512620,"duration":21083}},{"uid":"6d2e7253e289bb82","reportUrl":"https://golioth.github.io/allure-reports/main/1695//#testresult/6d2e7253e289bb82","status":"passed","time":{"start":1729729973599,"stop":1729729991901,"duration":18302}},{"uid":"a140eb952f2732c0","reportUrl":"https://golioth.github.io/allure-reports/main/1689//#testresult/a140eb952f2732c0","status":"passed","time":{"start":1729645378151,"stop":1729645396907,"duration":18756}},{"uid":"6ecbf2c47254f8b9","reportUrl":"https://golioth.github.io/allure-reports/main/1688//#testresult/6ecbf2c47254f8b9","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1729557361654,"stop":1729557366962,"duration":5308}},{"uid":"f64364cac84817fa","reportUrl":"https://golioth.github.io/allure-reports/main/1684//#testresult/f64364cac84817fa","status":"passed","time":{"start":1729470900284,"stop":1729470919050,"duration":18766}},{"uid":"f8d477c53a34d98","reportUrl":"https://golioth.github.io/allure-reports/main/1683//#testresult/f8d477c53a34d98","status":"passed","time":{"start":1729384631210,"stop":1729384651510,"duration":20300}},{"uid":"35768273b179354d","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/35768273b179354d","status":"passed","time":{"start":1729368497112,"stop":1729368515868,"duration":18756}},{"uid":"8ae1548b4416b8f5","reportUrl":"https://golioth.github.io/allure-reports/main/1//#testresult/8ae1548b4416b8f5","status":"passed","time":{"start":1729361344306,"stop":1729361364103,"duration":19797}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"3b6c8373517144f3.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}