{
  "uid" : "f1b10b14b1e830f2",
  "name" : "test_set_int_range_out_max",
  "fullName" : "tests.hil.tests.settings.test_settings#test_set_int_range_out_max",
  "historyId" : "d996311c79c8c8a4a6817c6dd32ebd6a",
  "time" : {
    "start" : 1733409671865,
    "stop" : 1733409685028,
    "duration" : 13163
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert (False or 4 is None)",
  "statusTrace" : "board = <nrf9160dk.nRF9160DK object at 0xffff9df3e510>\ndevice = <golioth.golioth.Device object at 0xffff9df31250>\n\n    async def test_set_int_range_out_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 101)\n    \n        with pytest.raises(trio.TooSlowError):\n            assert None != await board.wait_for_regex_in_line('Received test_int_range: 101', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:140: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff9df31250>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "board_name",
    "time" : {
      "start" : 1733409565664,
      "stop" : 1733409565664,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "baud",
    "time" : {
      "start" : 1733409565666,
      "stop" : 1733409565666,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device_name",
    "time" : {
      "start" : 1733409565669,
      "stop" : 1733409565670,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "port",
    "time" : {
      "start" : 1733409565665,
      "stop" : 1733409565665,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "board",
    "time" : {
      "start" : 1733409566081,
      "stop" : 1733409580685,
      "duration" : 14604
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_psk",
    "time" : {
      "start" : 1733409565667,
      "stop" : 1733409565667,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "bmp_port",
    "time" : {
      "start" : 1733409565669,
      "stop" : 1733409565669,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "anyio_backend",
    "time" : {
      "start" : 1733409565663,
      "stop" : 1733409565663,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_url",
    "time" : {
      "start" : 1733409565670,
      "stop" : 1733409565670,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "api_key",
    "time" : {
      "start" : 1733409565670,
      "stop" : 1733409565670,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "fw_image",
    "time" : {
      "start" : 1733409565668,
      "stop" : 1733409565668,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "serial_number",
    "time" : {
      "start" : 1733409565668,
      "stop" : 1733409565668,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device",
    "time" : {
      "start" : 1733409580687,
      "stop" : 1733409581670,
      "duration" : 983
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project",
    "time" : {
      "start" : 1733409565671,
      "stop" : 1733409566081,
      "duration" : 410
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1733409581671,
      "stop" : 1733409595785,
      "duration" : 14114
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "wifi_ssid",
    "time" : {
      "start" : 1733409565666,
      "stop" : 1733409565667,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert (False or 4 is None)",
    "statusTrace" : "board = <nrf9160dk.nRF9160DK object at 0xffff9df3e510>\ndevice = <golioth.golioth.Device object at 0xffff9df31250>\n\n    async def test_set_int_range_out_max(board, device):\n        await device.settings.set('TEST_INT_RANGE', 101)\n    \n        with pytest.raises(trio.TooSlowError):\n            assert None != await board.wait_for_regex_in_line('Received test_int_range: 101', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT_RANGE', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:140: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff9df31250>\nkey = 'TEST_INT_RANGE', error = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ca429567d3c0b882",
      "name" : "stdout",
      "source" : "ca429567d3c0b882.txt",
      "type" : "text/plain",
      "size" : 1406
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "board::0",
    "time" : {
      "start" : 1733409756604,
      "stop" : 1733409756606,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "device::0",
    "time" : {
      "start" : 1733409756195,
      "stop" : 1733409756602,
      "duration" : 407
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "project::0",
    "time" : {
      "start" : 1733409756608,
      "stop" : 1733409756610,
      "duration" : 2
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "setup::0",
    "time" : {
      "start" : 1733409756193,
      "stop" : 1733409756193,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "zephyr"
  }, {
    "name" : "parentSuite",
    "value" : "hil.zephyr.nrf9160dk"
  }, {
    "name" : "tag",
    "value" : "mikes_testbench"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('anyio_backend')"
  }, {
    "name" : "tag",
    "value" : "anyio"
  }, {
    "name" : "suite",
    "value" : "test_settings"
  }, {
    "name" : "host",
    "value" : "b4b0a513e976"
  }, {
    "name" : "thread",
    "value" : "307-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.hil.tests.settings.test_settings"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "board_name",
    "value" : "'nrf9160dk'"
  }, {
    "name" : "platform_name",
    "value" : "'zephyr'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 4,
        "skipped" : 0,
        "passed" : 81,
        "unknown" : 0,
        "total" : 86
      },
      "items" : [ {
        "uid" : "453cfe30efa1480f",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1866/#testresult/453cfe30efa1480f",
        "status" : "passed",
        "time" : {
          "start" : 1733360576456,
          "stop" : 1733360588632,
          "duration" : 12176
        }
      }, {
        "uid" : "27993aef7dae05c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1863/#testresult/27993aef7dae05c",
        "status" : "passed",
        "time" : {
          "start" : 1733273693799,
          "stop" : 1733273706183,
          "duration" : 12384
        }
      }, {
        "uid" : "f14aaa3ddfe3b0d9",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1859/#testresult/f14aaa3ddfe3b0d9",
        "status" : "passed",
        "time" : {
          "start" : 1733187741755,
          "stop" : 1733187754053,
          "duration" : 12298
        }
      }, {
        "uid" : "e4b51ee83499155d",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1858/#testresult/e4b51ee83499155d",
        "status" : "passed",
        "time" : {
          "start" : 1733162592443,
          "stop" : 1733162604564,
          "duration" : 12121
        }
      }, {
        "uid" : "85b162579b64e66e",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1857//#testresult/85b162579b64e66e",
        "status" : "passed",
        "time" : {
          "start" : 1733101472379,
          "stop" : 1733101484518,
          "duration" : 12139
        }
      }, {
        "uid" : "ad1e76ded1f5783e",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1856//#testresult/ad1e76ded1f5783e",
        "status" : "passed",
        "time" : {
          "start" : 1733014818823,
          "stop" : 1733014831230,
          "duration" : 12407
        }
      }, {
        "uid" : "ecb4a4cdf6a664c2",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1855//#testresult/ecb4a4cdf6a664c2",
        "status" : "passed",
        "time" : {
          "start" : 1732928004436,
          "stop" : 1732928016640,
          "duration" : 12204
        }
      }, {
        "uid" : "def8deeead8c0e74",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1854//#testresult/def8deeead8c0e74",
        "status" : "passed",
        "time" : {
          "start" : 1732842085393,
          "stop" : 1732842097643,
          "duration" : 12250
        }
      }, {
        "uid" : "c4d8fc84256898e",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1853//#testresult/c4d8fc84256898e",
        "status" : "passed",
        "time" : {
          "start" : 1732755590749,
          "stop" : 1732755603030,
          "duration" : 12281
        }
      }, {
        "uid" : "3416df5016bbf967",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1846//#testresult/3416df5016bbf967",
        "status" : "passed",
        "time" : {
          "start" : 1732669203517,
          "stop" : 1732669215820,
          "duration" : 12303
        }
      }, {
        "uid" : "aa92e49bf503fb89",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1845//#testresult/aa92e49bf503fb89",
        "status" : "broken",
        "statusDetails" : "trio.TooSlowError",
        "time" : {
          "start" : 1732643416727,
          "stop" : 1732643416727,
          "duration" : 0
        }
      }, {
        "uid" : "2d897d16d3c2aab6",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/2d897d16d3c2aab6",
        "status" : "passed",
        "time" : {
          "start" : 1732577240721,
          "stop" : 1732577252909,
          "duration" : 12188
        }
      }, {
        "uid" : "2d51f9b66c4e9249",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/2d51f9b66c4e9249",
        "status" : "passed",
        "time" : {
          "start" : 1732577240721,
          "stop" : 1732577252909,
          "duration" : 12188
        }
      }, {
        "uid" : "ce6e6be2f56f9f49",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1843//#testresult/ce6e6be2f56f9f49",
        "status" : "passed",
        "time" : {
          "start" : 1732582861192,
          "stop" : 1732582873420,
          "duration" : 12228
        }
      }, {
        "uid" : "a6dcd8f9c8932e44",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/a6dcd8f9c8932e44",
        "status" : "passed",
        "time" : {
          "start" : 1732577240721,
          "stop" : 1732577252909,
          "duration" : 12188
        }
      }, {
        "uid" : "e1c60689dff4015c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/e1c60689dff4015c",
        "status" : "passed",
        "time" : {
          "start" : 1732577240721,
          "stop" : 1732577252909,
          "duration" : 12188
        }
      }, {
        "uid" : "c4bc549062d8940c",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1842//#testresult/c4bc549062d8940c",
        "status" : "passed",
        "time" : {
          "start" : 1732567899359,
          "stop" : 1732567911603,
          "duration" : 12244
        }
      }, {
        "uid" : "8a0d172952ff83bf",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1838//#testresult/8a0d172952ff83bf",
        "status" : "passed",
        "time" : {
          "start" : 1732496668585,
          "stop" : 1732496680893,
          "duration" : 12308
        }
      }, {
        "uid" : "2294271143e59547",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1837//#testresult/2294271143e59547",
        "status" : "passed",
        "time" : {
          "start" : 1732410665249,
          "stop" : 1732410677449,
          "duration" : 12200
        }
      }, {
        "uid" : "cdc0963433699905",
        "reportUrl" : "https://golioth.github.io/allure-reports/main/1836//#testresult/cdc0963433699905",
        "status" : "passed",
        "time" : {
          "start" : 1732324605776,
          "stop" : 1732324617941,
          "duration" : 12165
        }
      } ]
    },
    "tags" : [ "nrf9160dk", "anyio", "mikes_testbench", "@pytest.mark.usefixtures('anyio_backend')", "zephyr" ]
  },
  "source" : "f1b10b14b1e830f2.json",
  "parameterValues" : [ "'nrf9160dk'", "'zephyr'" ]
}