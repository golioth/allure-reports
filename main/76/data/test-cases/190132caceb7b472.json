{"uid":"190132caceb7b472","name":"test_observation_repeat_restart","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_repeat_restart","historyId":"d288d6d850cc6568d6c7d8519c57154a","time":{"start":1737054132709,"stop":1737054138073,"duration":5364},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff81745e50>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff81762910>\ndevice = <golioth.golioth.Device object at 0xffff81744ed0>\n\n    async def test_observation_repeat_restart(board, device):\n        for i in range(3):\n>           rsp = await device.rpc.disconnect()\n\ntests/hil/tests/rpc/test_rpc.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff81745e50>\nmethod = 'disconnect', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1737054061419,"stop":1737054061419,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1737054061420,"stop":1737054061420,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1737054061421,"stop":1737054061421,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1737054061422,"stop":1737054061422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737054061423,"stop":1737054061423,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737054061423,"stop":1737054061423,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1737054061424,"stop":1737054061424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1737054061424,"stop":1737054061424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1737054061425,"stop":1737054061425,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737054061426,"stop":1737054061426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737054061426,"stop":1737054061426,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737054061427,"stop":1737054061427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737054061427,"stop":1737054062130,"duration":703},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1737054062131,"stop":1737054103692,"duration":41561},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737054103693,"stop":1737054104570,"duration":877},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1737054104570,"stop":1737054114305,"duration":9735},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1737054160434,"stop":1737054160434,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1737054160436,"stop":1737054160824,"duration":388},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1737054160826,"stop":1737054160827,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737054160829,"stop":1737054160832,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"c218e8e2bb5e"},{"name":"thread","value":"236-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":16,"skipped":0,"passed":37,"unknown":0,"total":53},"items":[{"uid":"2e5d3ab174692580","reportUrl":"https://golioth.github.io/allure-reports/main/68//#testresult/2e5d3ab174692580","status":"passed","time":{"start":1736993253167,"stop":1736993283231,"duration":30064}},{"uid":"1f9107cdb4a75dd7","reportUrl":"https://golioth.github.io/allure-reports/main/67//#testresult/1f9107cdb4a75dd7","status":"passed","time":{"start":1736988001371,"stop":1736988032332,"duration":30961}},{"uid":"b1c97ccc28108e9b","reportUrl":"https://golioth.github.io/allure-reports/main/56//#testresult/b1c97ccc28108e9b","status":"passed","time":{"start":1736948255908,"stop":1736948285774,"duration":29866}},{"uid":"6f0e7847d3c55b7b","reportUrl":"https://golioth.github.io/allure-reports/main/56//#testresult/6f0e7847d3c55b7b","status":"passed","time":{"start":1736900284831,"stop":1736900315628,"duration":30797}},{"uid":"eda0b4630218216e","reportUrl":"https://golioth.github.io/allure-reports/main/54//#testresult/eda0b4630218216e","status":"passed","time":{"start":1736727514796,"stop":1736727546723,"duration":31927}},{"uid":"803f2a2e9aadd8a9","reportUrl":"https://golioth.github.io/allure-reports/main/53//#testresult/803f2a2e9aadd8a9","status":"passed","time":{"start":1736641386291,"stop":1736641416427,"duration":30136}},{"uid":"d3903bc682b05f82","reportUrl":"https://golioth.github.io/allure-reports/main/49//#testresult/d3903bc682b05f82","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1736576364732,"stop":1736576390026,"duration":25294}},{"uid":"7d941925df905e94","reportUrl":"https://golioth.github.io/allure-reports/main/48//#testresult/7d941925df905e94","status":"passed","time":{"start":1736554298808,"stop":1736554328734,"duration":29926}},{"uid":"903f1b900716b6ff","reportUrl":"https://golioth.github.io/allure-reports/main/45//#testresult/903f1b900716b6ff","status":"passed","time":{"start":1736468221492,"stop":1736468251464,"duration":29972}},{"uid":"5238d8a290dfbceb","reportUrl":"https://golioth.github.io/allure-reports/main/44//#testresult/5238d8a290dfbceb","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1736455232212,"stop":1736455237547,"duration":5335}},{"uid":"2872a6b33980e7b2","reportUrl":"https://golioth.github.io/allure-reports/main/34//#testresult/2872a6b33980e7b2","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1736381982527,"stop":1736381998205,"duration":15678}},{"uid":"75d0ce091d325b4","reportUrl":"https://golioth.github.io/allure-reports/main/28/#testresult/75d0ce091d325b4","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1736295020723,"stop":1736295046094,"duration":25371}},{"uid":"a0a76f74bf497726","reportUrl":"https://golioth.github.io/allure-reports/main/23/#testresult/a0a76f74bf497726","status":"passed","time":{"start":1736265506404,"stop":1736265536102,"duration":29698}},{"uid":"ab85e2d2c1206d22","reportUrl":"https://golioth.github.io/allure-reports/main/21/#testresult/ab85e2d2c1206d22","status":"passed","time":{"start":1736209364276,"stop":1736209394111,"duration":29835}},{"uid":"903963f9b2cbc2bb","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/903963f9b2cbc2bb","status":"passed","time":{"start":1736191648049,"stop":1736191678170,"duration":30121}},{"uid":"d4fd477054080e4d","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/d4fd477054080e4d","status":"passed","time":{"start":1736190091426,"stop":1736190121660,"duration":30234}},{"uid":"ffbeea65aafa9f96","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/ffbeea65aafa9f96","status":"passed","time":{"start":1736181925032,"stop":1736181956170,"duration":31138}},{"uid":"eb1c1c2b8f29137c","reportUrl":"https://golioth.github.io/allure-reports/main/17/#testresult/eb1c1c2b8f29137c","status":"passed","time":{"start":1736122628920,"stop":1736122658880,"duration":29960}},{"uid":"5e0604273ce0d74a","reportUrl":"https://golioth.github.io/allure-reports/main/16/#testresult/5e0604273ce0d74a","status":"passed","time":{"start":1736037623075,"stop":1736037652892,"duration":29817}},{"uid":"580895dc77e6f532","reportUrl":"https://golioth.github.io/allure-reports/main/15/#testresult/580895dc77e6f532","status":"passed","time":{"start":1735949903462,"stop":1735949933432,"duration":29970}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"190132caceb7b472.json","parameterValues":["'rak5010'","'zephyr'"]}