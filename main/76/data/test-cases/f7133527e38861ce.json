{"uid":"f7133527e38861ce","name":"test_hello","fullName":"examples.esp_idf.hello.pytest.test_sample#test_hello","historyId":"50ac528343c8f63b54127405b2c48a27","time":{"start":1737060466771,"stop":1737060484941,"duration":18170},"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffaa0df150>\ndevice = <golioth.golioth.Device object at 0xffffaa17e950>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1737060423093,"stop":1737060423093,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1737060423094,"stop":1737060423094,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1737060423094,"stop":1737060423095,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1737060423095,"stop":1737060423095,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1737060423096,"stop":1737060423097,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1737060423096,"stop":1737060423096,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1737060423097,"stop":1737060423098,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1737060423097,"stop":1737060423097,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1737060423098,"stop":1737060423098,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1737060423098,"stop":1737060423099,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1737060423099,"stop":1737060423099,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1737060423099,"stop":1737060423099,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1737060423100,"stop":1737060465452,"duration":42352},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1737060465454,"stop":1737060465895,"duration":441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1737060465896,"stop":1737060466768,"duration":872},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffaa0df150>\ndevice = <golioth.golioth.Device object at 0xffffaa17e950>\n\n    async def test_hello(board, device):\n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Record timestamp and wait for fourth hello message\n        start = datetime.datetime.utcnow()\n        await board.wait_for_regex_in_line('.*Sending hello! 3', timeout_s=90.0)\n    \n        # Check logs for hello messages\n        end = datetime.datetime.utcnow()\n        logs = await device.get_logs({'start': start.strftime('%Y-%m-%dT%H:%M:%S.%fZ'), 'end': end.strftime('%Y-%m-%dT%H:%M:%S.%fZ')})\n    \n        # Test logs received from server\n        LOGGER.info(\"Searching log messages from end to start:\")\n        test_idx = 2\n        test_hits = 0\n        for m in reversed(logs):\n    \n            if m.message == f\"Sending hello! {test_idx}\":\n                LOGGER.info(\"### MATCH FOUND! ---> {0}\".format(m.message))\n                test_hits += 1\n                test_idx -= 1\n                if test_idx < 0:\n                    break\n            else:\n                LOGGER.info(m.message)\n    \n>       assert test_hits == 3, 'Unable to find all Hello messages on server'\nE       AssertionError: Unable to find all Hello messages on server\nE       assert 0 == 3\n\nexamples/esp_idf/hello/pytest/test_sample.py:42: AssertionError","steps":[],"attachments":[{"uid":"9a9fddb9c1b8baa7","name":"stdout","source":"9a9fddb9c1b8baa7.txt","type":"text/plain","size":7347}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"device::0","time":{"start":1737060485094,"stop":1737060485467,"duration":373},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1737060485469,"stop":1737060485469,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1737060485471,"stop":1737060485474,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"d22b2cce09e0"},{"name":"thread","value":"255-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":51,"unknown":0,"total":53},"items":[{"uid":"8ee4ad31b47a4bd2","reportUrl":"https://golioth.github.io/allure-reports/main/68//#testresult/8ee4ad31b47a4bd2","status":"passed","time":{"start":1736996176574,"stop":1736996194866,"duration":18292}},{"uid":"5de0478f1d498f94","reportUrl":"https://golioth.github.io/allure-reports/main/67//#testresult/5de0478f1d498f94","status":"passed","time":{"start":1736989508904,"stop":1736989527054,"duration":18150}},{"uid":"c8115e7fafedc338","reportUrl":"https://golioth.github.io/allure-reports/main/56//#testresult/c8115e7fafedc338","status":"passed","time":{"start":1736903137639,"stop":1736903155885,"duration":18246}},{"uid":"2f7a6c15ca497a7","reportUrl":"https://golioth.github.io/allure-reports/main/56//#testresult/2f7a6c15ca497a7","status":"passed","time":{"start":1736903137639,"stop":1736903155885,"duration":18246}},{"uid":"5dcb313945a95a66","reportUrl":"https://golioth.github.io/allure-reports/main/54//#testresult/5dcb313945a95a66","status":"passed","time":{"start":1736729697725,"stop":1736729715791,"duration":18066}},{"uid":"c3225ee95bc93754","reportUrl":"https://golioth.github.io/allure-reports/main/53//#testresult/c3225ee95bc93754","status":"passed","time":{"start":1736644578446,"stop":1736644596879,"duration":18433}},{"uid":"1f61fcbcb15b210c","reportUrl":"https://golioth.github.io/allure-reports/main/49//#testresult/1f61fcbcb15b210c","status":"passed","time":{"start":1736586262918,"stop":1736586281427,"duration":18509}},{"uid":"1a1504965afda150","reportUrl":"https://golioth.github.io/allure-reports/main/48//#testresult/1a1504965afda150","status":"passed","time":{"start":1736557539626,"stop":1736557557896,"duration":18270}},{"uid":"2df6b00635449d50","reportUrl":"https://golioth.github.io/allure-reports/main/45//#testresult/2df6b00635449d50","status":"passed","time":{"start":1736471217714,"stop":1736471236174,"duration":18460}},{"uid":"d6ef1772a0261aef","reportUrl":"https://golioth.github.io/allure-reports/main/44//#testresult/d6ef1772a0261aef","status":"passed","time":{"start":1736458338413,"stop":1736458356586,"duration":18173}},{"uid":"124cdf805383d6e9","reportUrl":"https://golioth.github.io/allure-reports/main/34//#testresult/124cdf805383d6e9","status":"passed","time":{"start":1736384711615,"stop":1736384730021,"duration":18406}},{"uid":"cfe96fd680980291","reportUrl":"https://golioth.github.io/allure-reports/main/28/#testresult/cfe96fd680980291","status":"passed","time":{"start":1736298448584,"stop":1736298467548,"duration":18964}},{"uid":"d8d13951631db814","reportUrl":"https://golioth.github.io/allure-reports/main/23/#testresult/d8d13951631db814","status":"passed","time":{"start":1736271157569,"stop":1736271175862,"duration":18293}},{"uid":"39158b751924b31d","reportUrl":"https://golioth.github.io/allure-reports/main/21/#testresult/39158b751924b31d","status":"passed","time":{"start":1736212061753,"stop":1736212079893,"duration":18140}},{"uid":"c55341fdc2de4c6b","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/c55341fdc2de4c6b","status":"passed","time":{"start":1736188718041,"stop":1736188736540,"duration":18499}},{"uid":"c9f3b7a7cd477c74","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/c9f3b7a7cd477c74","status":"passed","time":{"start":1736188718041,"stop":1736188736540,"duration":18499}},{"uid":"38a9b0d5bd13699","reportUrl":"https://golioth.github.io/allure-reports/main/18/#testresult/38a9b0d5bd13699","status":"failed","statusDetails":"AssertionError: Unable to find all Hello messages on server\nassert 0 == 3","time":{"start":1736185006818,"stop":1736185025205,"duration":18387}},{"uid":"3b4a67715f191877","reportUrl":"https://golioth.github.io/allure-reports/main/17/#testresult/3b4a67715f191877","status":"passed","time":{"start":1736125349980,"stop":1736125368311,"duration":18331}},{"uid":"f1a36980e66ed014","reportUrl":"https://golioth.github.io/allure-reports/main/16/#testresult/f1a36980e66ed014","status":"passed","time":{"start":1736038844244,"stop":1736038862688,"duration":18444}},{"uid":"907847b31fb66d16","reportUrl":"https://golioth.github.io/allure-reports/main/15/#testresult/907847b31fb66d16","status":"passed","time":{"start":1735952665352,"stop":1735952683662,"duration":18310}}]},"tags":["esp-idf","anyio","tims_orange_pi","esp32_devkitc_wrover_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"f7133527e38861ce.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}