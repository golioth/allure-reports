{"uid":"64df9cf812784f2d","name":"test_hello","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample#test_hello","historyId":"728c1ad8cfe5fc9c60fb1445998f2048","time":{"start":1732844379136,"stop":1732844379136,"duration":0},"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_hello>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1732844379140,"stop":1732844379140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1732844379141,"stop":1732844379141,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1732844379141,"stop":1732844379141,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1732844379142,"stop":1732844379142,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1732844379142,"stop":1732844379143,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1732844379143,"stop":1732844379145,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1732844379146,"stop":1732844379146,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1732844379146,"stop":1732844379146,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1732844379147,"stop":1732844379563,"duration":416},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1732844379564,"stop":1732844380422,"duration":858},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1732844380423,"stop":1732844407357,"duration":26934},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1732844407358,"stop":1732844427388,"duration":20030},"status":"failed","statusMessage":"Failed: Prompt not found\n","statusTrace":"  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/__w/golioth-firmware-sdk/golioth-firmware-sdk/zephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py\", line 77, in shell\n    pytest.fail('Prompt not found')\n  File \"/usr/local/lib/python3.11/dist-packages/_pytest/outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"Failed: Prompt not found","statusTrace":"item = <Function test_hello>\n\n    @pytest.hookimpl(wrapper=True)\n    def pytest_runtest_setup(item):\n        if item.config.getoption(\"--hil-board\") is not None:\n            hil_board = item.config.getoption(\"--hil-board\")\n        elif 'hil_board' in os.environ:\n            hil_board = os.environ['hil_board']\n        else:\n            hil_board = item.config.option.device_serial\n    \n        allure.dynamic.tag(hil_board)\n        allure.dynamic.tag(\"zephyr\")\n        allure.dynamic.parameter(\"board_name\", hil_board)\n        allure.dynamic.parameter(\"platform_name\", \"zephyr\")\n        allure.dynamic.parent_suite(f\"sample.zephyr.{hil_board}\")\n    \n        if runner_name is not None:\n            allure.dynamic.tag(item.config.getoption(\"--runner-name\"))\n    \n>       yield\n\n/usr/local/lib/python3.11/dist-packages/plugin.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndut = HardwareAdapter()\n\n    @pytest.fixture(scope=determine_scope)\n    def shell(dut: DeviceAdapter) -> Shell:\n        \"\"\"Return ready to use shell interface\"\"\"\n        shell = Shell(dut, timeout=20.0)\n        if prompt := find_in_config(Path(dut.device_config.app_build_dir) / 'zephyr' / '.config',\n                                    'CONFIG_SHELL_PROMPT_UART'):\n            shell.prompt = prompt\n        logger.info('Wait for prompt')\n        if not shell.wait_for_prompt():\n>           pytest.fail('Prompt not found')\nE           Failed: Prompt not found\n\nzephyr/scripts/pylib/pytest-twister-harness/src/twister_harness/fixtures.py:77: Failed","steps":[],"attachments":[{"uid":"e2eab0a8bc02e174","name":"log","source":"e2eab0a8bc02e174.txt","type":"text/plain","size":9579}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1732844427627,"stop":1732844427676,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1732844427678,"stop":1732844428064,"duration":386},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1732844428067,"stop":1732844428069,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1732844428074,"stop":1732844428074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"a15078861c3b"},{"name":"thread","value":"1081-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.hello.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"999a9b7af73f3b37","status":"failed","statusDetails":"Failed: Prompt not found","time":{"start":1732844326135,"stop":1732844326135,"duration":0}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":11,"skipped":0,"passed":57,"unknown":0,"total":70},"items":[{"uid":"aff89846ae13c74d","reportUrl":"https://golioth.github.io/allure-reports/main/1853//#testresult/aff89846ae13c74d","status":"passed","time":{"start":1732757959431,"stop":1732757998921,"duration":39490}},{"uid":"1a06e83c3ca327e1","reportUrl":"https://golioth.github.io/allure-reports/main/1846//#testresult/1a06e83c3ca327e1","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732671403838,"stop":1732671516555,"duration":112717}},{"uid":"9297c362ce33452d","reportUrl":"https://golioth.github.io/allure-reports/main/1845//#testresult/9297c362ce33452d","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732645554048,"stop":1732645666787,"duration":112739}},{"uid":"591ada11a75bf48e","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/591ada11a75bf48e","status":"passed","time":{"start":1732570192269,"stop":1732570216606,"duration":24337}},{"uid":"cefb11017a26dcb1","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/cefb11017a26dcb1","status":"passed","time":{"start":1732570192269,"stop":1732570216606,"duration":24337}},{"uid":"a6961a2ed15273f3","reportUrl":"https://golioth.github.io/allure-reports/main/1843//#testresult/a6961a2ed15273f3","status":"passed","time":{"start":1732585015834,"stop":1732585061435,"duration":45601}},{"uid":"7c5c3bb0253f3fc","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/7c5c3bb0253f3fc","status":"passed","time":{"start":1732570192269,"stop":1732570216606,"duration":24337}},{"uid":"7ad791ebac6790ac","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/7ad791ebac6790ac","status":"passed","time":{"start":1732570192269,"stop":1732570216606,"duration":24337}},{"uid":"b8b585ccef1c342a","reportUrl":"https://golioth.github.io/allure-reports/main/1842//#testresult/b8b585ccef1c342a","status":"passed","time":{"start":1732570192269,"stop":1732570216606,"duration":24337}},{"uid":"92215d2488e6b9d3","reportUrl":"https://golioth.github.io/allure-reports/main/1838//#testresult/92215d2488e6b9d3","status":"passed","time":{"start":1732499009170,"stop":1732499034071,"duration":24901}},{"uid":"754aeb31f4d01db","reportUrl":"https://golioth.github.io/allure-reports/main/1837//#testresult/754aeb31f4d01db","status":"passed","time":{"start":1732412390780,"stop":1732412415342,"duration":24562}},{"uid":"6354eb22df6c035c","reportUrl":"https://golioth.github.io/allure-reports/main/1836//#testresult/6354eb22df6c035c","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732327403278,"stop":1732327516057,"duration":112779}},{"uid":"476a3f82dc36aa03","reportUrl":"https://golioth.github.io/allure-reports/main/28//#testresult/476a3f82dc36aa03","status":"passed","time":{"start":1732324405707,"stop":1732324461832,"duration":56125}},{"uid":"cf9499786def63d2","reportUrl":"https://golioth.github.io/allure-reports/main/1834//#testresult/cf9499786def63d2","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732311215832,"stop":1732311328622,"duration":112790}},{"uid":"c09edfd255d8ea0d","reportUrl":"https://golioth.github.io/allure-reports/main/27//#testresult/c09edfd255d8ea0d","status":"passed","time":{"start":1732308248341,"stop":1732308302858,"duration":54517}},{"uid":"7923c7bd20ef0956","reportUrl":"https://golioth.github.io/allure-reports/main/1789//#testresult/7923c7bd20ef0956","status":"broken","statusDetails":"twister_harness.exceptions.TwisterHarnessTimeoutException: Read from device timeout occurred","time":{"start":1732066423929,"stop":1732066536798,"duration":112869}},{"uid":"102d7a6536c94009","reportUrl":"https://golioth.github.io/allure-reports/main/1788//#testresult/102d7a6536c94009","status":"passed","time":{"start":1732061419438,"stop":1732061468271,"duration":48833}},{"uid":"fa6d385ec098f69b","reportUrl":"https://golioth.github.io/allure-reports/main/1782//#testresult/fa6d385ec098f69b","status":"passed","time":{"start":1732038660530,"stop":1732038684878,"duration":24348}},{"uid":"e78100dc6ac9e7fb","reportUrl":"https://golioth.github.io/allure-reports/main/1777//#testresult/e78100dc6ac9e7fb","status":"passed","time":{"start":1731980191658,"stop":1731980241036,"duration":49378}},{"uid":"993ac6c9cd0a380a","reportUrl":"https://golioth.github.io/allure-reports/main/1775//#testresult/993ac6c9cd0a380a","status":"passed","time":{"start":1731969803459,"stop":1731969848738,"duration":45279}}]},"tags":["mikes_orange_pi","nrf9160dk","anyio","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"64df9cf812784f2d.json","parameterValues":["'nrf9160dk'","'zephyr'"]}