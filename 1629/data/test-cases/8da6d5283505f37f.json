{"uid":"8da6d5283505f37f","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"b3d5b97364e6f035c71c0a09d7a1be64","time":{"start":1728608207021,"stop":1728608251482,"duration":44461},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff890ad650>\ndevice = <golioth.golioth.Device object at 0xffff89108590>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728608187288,"stop":1728608187289,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728608187289,"stop":1728608187289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728608187290,"stop":1728608187290,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728608187290,"stop":1728608187291,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1728608187291,"stop":1728608187291,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1728608187291,"stop":1728608187293,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728608187294,"stop":1728608187295,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728608187295,"stop":1728608187295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728608187296,"stop":1728608187808,"duration":512},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728608187808,"stop":1728608188623,"duration":815},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1728608188624,"stop":1728608206373,"duration":17749},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1728608206374,"stop":1728608207018,"duration":644},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff890ad650>\ndevice = <golioth.golioth.Device object at 0xffff89108590>\nwifi_ssid = '***MIKES_ORANGE_PI_WIFI_SSID***', wifi_psk = '***MIKES_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"5a197fb5d7f1376","name":"log","source":"5a197fb5d7f1376.txt","type":"text/plain","size":26257}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1728608251751,"stop":1728608251787,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728608251789,"stop":1728608252284,"duration":495},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728608252286,"stop":1728608252289,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1728608252294,"stop":1728608252294,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.rak5010"},{"name":"tag","value":"mikes_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"2c8292f57231"},{"name":"thread","value":"348-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":101,"unknown":0,"total":123},"items":[{"uid":"fd7042f35e873bd6","reportUrl":"https://golioth.github.io/allure-reports/1626//#testresult/fd7042f35e873bd6","status":"passed","time":{"start":1728600306044,"stop":1728600325293,"duration":19249}},{"uid":"e635a6ad58d2f6ee","reportUrl":"https://golioth.github.io/allure-reports/1624//#testresult/e635a6ad58d2f6ee","status":"passed","time":{"start":1728598134353,"stop":1728598154351,"duration":19998}},{"uid":"7df0e5f82a0640be","reportUrl":"https://golioth.github.io/allure-reports/1623//#testresult/7df0e5f82a0640be","status":"passed","time":{"start":1728594899513,"stop":1728594918229,"duration":18716}},{"uid":"362539db312d89e5","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/362539db312d89e5","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1728536317999,"stop":1728536341530,"duration":23531}},{"uid":"22e75dfd72cb8fe3","reportUrl":"https://golioth.github.io/allure-reports/1622//#testresult/22e75dfd72cb8fe3","status":"passed","time":{"start":1728521740014,"stop":1728521759509,"duration":19495}},{"uid":"2373f40c1b31e230","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/2373f40c1b31e230","status":"passed","time":{"start":1728321212030,"stop":1728321253437,"duration":41407}},{"uid":"29693a04682515bb","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/29693a04682515bb","status":"broken","statusDetails":"httpx.ConnectTimeout","time":{"start":1728492837709,"stop":1728492845028,"duration":7319}},{"uid":"75fd56df3e2f4a94","reportUrl":"https://golioth.github.io/allure-reports/1619//#testresult/75fd56df3e2f4a94","status":"passed","time":{"start":1728484675460,"stop":1728484695048,"duration":19588}},{"uid":"1184d5b5da0024d6","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/1184d5b5da0024d6","status":"passed","time":{"start":1728436016633,"stop":1728436057542,"duration":40909}},{"uid":"a27cf5e47ba126ba","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/a27cf5e47ba126ba","status":"passed","time":{"start":1728426666243,"stop":1728426707137,"duration":40894}},{"uid":"60afc3c89a686abd","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/60afc3c89a686abd","status":"passed","time":{"start":1728342356736,"stop":1728342375996,"duration":19260}},{"uid":"3688164cae17256f","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/3688164cae17256f","status":"broken","statusDetails":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","time":{"start":1728400605527,"stop":1728400628888,"duration":23361}},{"uid":"7a8474aecb16d3d7","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/7a8474aecb16d3d7","status":"passed","time":{"start":1728342356736,"stop":1728342375996,"duration":19260}},{"uid":"e670f6343142b9c","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/e670f6343142b9c","status":"passed","time":{"start":1728349322887,"stop":1728349363309,"duration":40422}},{"uid":"aff35d35c9a7afcc","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/aff35d35c9a7afcc","status":"passed","time":{"start":1728343770805,"stop":1728343810831,"duration":40026}},{"uid":"7c63e15d8cec3c55","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/7c63e15d8cec3c55","status":"passed","time":{"start":1728342356736,"stop":1728342375996,"duration":19260}},{"uid":"fafc8a5cee1d531","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/fafc8a5cee1d531","status":"passed","time":{"start":1728337330958,"stop":1728337371043,"duration":40085}},{"uid":"eddff60f634a05cb","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/eddff60f634a05cb","status":"passed","time":{"start":1728318132067,"stop":1728318172736,"duration":40669}},{"uid":"58dd9e2646748d2c","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/58dd9e2646748d2c","status":"passed","time":{"start":1728321212030,"stop":1728321253437,"duration":41407}},{"uid":"4596d0f7a51a9960","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/4596d0f7a51a9960","status":"passed","time":{"start":1728321212030,"stop":1728321253437,"duration":41407}}]},"tags":["mikes_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"8da6d5283505f37f.json","parameterValues":["'rak5010'","'zephyr'"]}