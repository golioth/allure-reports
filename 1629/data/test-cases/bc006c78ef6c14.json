{"uid":"bc006c78ef6c14","name":"test_int_return","fullName":"tests.hil.tests.rpc.test_rpc#test_int_return","historyId":"bf2669c3d5f55bc25a610c366b97b6e9","time":{"start":1728606830385,"stop":1728606835767,"duration":5382},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff91496b90>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff9145f890>\ndevice = <golioth.golioth.Device object at 0xffff914945d0>\n\n    async def test_int_return(board, device):\n>       rsp = await device.rpc.basic_return_type(\"int\")\n\ntests/hil/tests/rpc/test_rpc.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff91496b90>\nmethod = 'basic_return_type', params = ('int',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728606776007,"stop":1728606776008,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728606776008,"stop":1728606776008,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728606776009,"stop":1728606776009,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728606776010,"stop":1728606776010,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728606776011,"stop":1728606776011,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728606776011,"stop":1728606776012,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728606776012,"stop":1728606776012,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728606776013,"stop":1728606776013,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728606776013,"stop":1728606776014,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728606776013,"stop":1728606776013,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728606776014,"stop":1728606776014,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728606776014,"stop":1728606776015,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728606776015,"stop":1728606776452,"duration":437},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728606776453,"stop":1728606821688,"duration":45235},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728606821690,"stop":1728606822658,"duration":968},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728606822658,"stop":1728606825825,"duration":3167},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728606889523,"stop":1728606889523,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728606889526,"stop":1728606889905,"duration":379},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728606889907,"stop":1728606889908,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728606889911,"stop":1728606889913,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32_devkitc_wrover_espidf"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"9e33cd5d31e6"},{"name":"thread","value":"247-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":130,"unknown":0,"total":132},"items":[{"uid":"877fb7cd91a4f656","reportUrl":"https://golioth.github.io/allure-reports/1626//#testresult/877fb7cd91a4f656","status":"passed","time":{"start":1728581463814,"stop":1728581465027,"duration":1213}},{"uid":"a294a2781338b81a","reportUrl":"https://golioth.github.io/allure-reports/1624//#testresult/a294a2781338b81a","status":"passed","time":{"start":1728577114578,"stop":1728577115804,"duration":1226}},{"uid":"a66474cdd9c5033d","reportUrl":"https://golioth.github.io/allure-reports/1623//#testresult/a66474cdd9c5033d","status":"passed","time":{"start":1728572535479,"stop":1728572536454,"duration":975}},{"uid":"ad6a049dbcb1ad1a","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/ad6a049dbcb1ad1a","status":"passed","time":{"start":1728491490954,"stop":1728491491932,"duration":978}},{"uid":"d70429c08db8831b","reportUrl":"https://golioth.github.io/allure-reports/1622//#testresult/d70429c08db8831b","status":"passed","time":{"start":1728520356530,"stop":1728520357507,"duration":977}},{"uid":"1db9354f05a5d3ea","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/1db9354f05a5d3ea","status":"passed","time":{"start":1728320996101,"stop":1728320997327,"duration":1226}},{"uid":"89daee342a590119","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/89daee342a590119","status":"passed","time":{"start":1728491490954,"stop":1728491491932,"duration":978}},{"uid":"60f537b2227ed518","reportUrl":"https://golioth.github.io/allure-reports/1619//#testresult/60f537b2227ed518","status":"passed","time":{"start":1728483292163,"stop":1728483293380,"duration":1217}},{"uid":"e4a792c1b95906fa","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/e4a792c1b95906fa","status":"passed","time":{"start":1728433995749,"stop":1728433996740,"duration":991}},{"uid":"5730d306994443a4","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/5730d306994443a4","status":"passed","time":{"start":1728424618328,"stop":1728424619569,"duration":1241}},{"uid":"f2f3f2f25daa43aa","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/f2f3f2f25daa43aa","status":"passed","time":{"start":1728330635749,"stop":1728330636988,"duration":1239}},{"uid":"c1d774d1b1dfe604","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/c1d774d1b1dfe604","status":"passed","time":{"start":1728326605809,"stop":1728326607036,"duration":1227}},{"uid":"51385663e34ecee3","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/51385663e34ecee3","status":"passed","time":{"start":1728338742206,"stop":1728338743431,"duration":1225}},{"uid":"97da4d94bdddcb80","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/97da4d94bdddcb80","status":"passed","time":{"start":1728399206152,"stop":1728399207401,"duration":1249}},{"uid":"91f22e82af8e1604","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/91f22e82af8e1604","status":"passed","time":{"start":1728338742206,"stop":1728338743431,"duration":1225}},{"uid":"60e106c94eb083e8","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/60e106c94eb083e8","status":"passed","time":{"start":1728347713484,"stop":1728347714458,"duration":974}},{"uid":"50c22f4c9a943165","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/50c22f4c9a943165","status":"passed","time":{"start":1728340143382,"stop":1728340144357,"duration":975}},{"uid":"cbdf2e4d7fb2d09f","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/cbdf2e4d7fb2d09f","status":"passed","time":{"start":1728338742206,"stop":1728338743431,"duration":1225}},{"uid":"34b7380ee564bb8","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/34b7380ee564bb8","status":"passed","time":{"start":1728335684896,"stop":1728335685871,"duration":975}},{"uid":"217a8aef8c82c977","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/217a8aef8c82c977","status":"passed","time":{"start":1728316557586,"stop":1728316558561,"duration":975}}]},"tags":["esp-idf","anyio","esp32_devkitc_wrover_espidf","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')"]},"source":"bc006c78ef6c14.json","parameterValues":["'esp32_devkitc_wrover_espidf'","'esp-idf'"]}