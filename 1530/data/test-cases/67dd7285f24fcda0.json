{"uid":"67dd7285f24fcda0","name":"test_many_args","fullName":"tests.hil.tests.rpc.test_rpc#test_many_args","historyId":"8434800bfcabc04f3e59c72cefb707fd","time":{"start":1727947583731,"stop":1727947589095,"duration":5364},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff7eca4f90>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <rak5010.RAK5010 object at 0xffff7ec83410>\ndevice = <golioth.golioth.Device object at 0xffff7eca5c50>\n\n    async def test_many_args(board, device):\n>       await device.rpc.no_response(1,2,3,4,5,6,7,8,9)\n\ntests/hil/tests/rpc/test_rpc.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff7eca4f90>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727947506553,"stop":1727947506553,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727947506554,"stop":1727947506554,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727947506555,"stop":1727947506555,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727947506556,"stop":1727947506556,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727947506557,"stop":1727947506557,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727947506558,"stop":1727947506558,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727947506558,"stop":1727947506559,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727947506559,"stop":1727947506560,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727947506560,"stop":1727947506561,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727947506561,"stop":1727947506562,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727947506562,"stop":1727947506563,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727947506563,"stop":1727947506564,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727947506564,"stop":1727947507005,"duration":441},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727947507006,"stop":1727947548135,"duration":41129},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727947548136,"stop":1727947549110,"duration":974},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727947549110,"stop":1727947579834,"duration":30724},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727947643146,"stop":1727947643146,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727947643151,"stop":1727947643666,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727947643668,"stop":1727947643670,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727947643672,"stop":1727947643674,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"b69f59fbc324"},{"name":"thread","value":"272-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":56,"unknown":0,"total":63},"items":[{"uid":"9904339c16a375e","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/9904339c16a375e","status":"passed","time":{"start":1727944760890,"stop":1727944762464,"duration":1574}},{"uid":"da29f3702122fa05","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/da29f3702122fa05","status":"passed","time":{"start":1727944791503,"stop":1727944793197,"duration":1694}},{"uid":"ec0b3e77eb4ef62e","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/ec0b3e77eb4ef62e","status":"passed","time":{"start":1727943345428,"stop":1727943347008,"duration":1580}},{"uid":"f8e55b4b70432e80","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/f8e55b4b70432e80","status":"passed","time":{"start":1727933333931,"stop":1727933335643,"duration":1712}},{"uid":"eff3ce4ef70c7d9e","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/eff3ce4ef70c7d9e","status":"passed","time":{"start":1727926139312,"stop":1727926141002,"duration":1690}},{"uid":"836f294a0a8889e0","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/836f294a0a8889e0","status":"passed","time":{"start":1727915804851,"stop":1727915806560,"duration":1709}},{"uid":"e2c2a0cb80201cd5","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/e2c2a0cb80201cd5","status":"passed","time":{"start":1727906860432,"stop":1727906862033,"duration":1601}},{"uid":"b3e6c3122f2faa11","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/b3e6c3122f2faa11","status":"passed","time":{"start":1727832649912,"stop":1727832651537,"duration":1625}},{"uid":"e2e5e6b9c9809f85","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/e2e5e6b9c9809f85","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'","time":{"start":1727829832247,"stop":1727829832247,"duration":0}},{"uid":"af6e7397a1356baf","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/af6e7397a1356baf","status":"passed","time":{"start":1727802360666,"stop":1727802362260,"duration":1594}},{"uid":"97f2080ae4d424a3","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/97f2080ae4d424a3","status":"passed","time":{"start":1727815181549,"stop":1727815183250,"duration":1701}},{"uid":"79a056c873d7c262","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/79a056c873d7c262","status":"passed","time":{"start":1727811742575,"stop":1727811744181,"duration":1606}},{"uid":"ee5756634e3b0c44","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/ee5756634e3b0c44","status":"passed","time":{"start":1727810963995,"stop":1727810965561,"duration":1566}},{"uid":"f90568f3eb220db2","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/f90568f3eb220db2","status":"passed","time":{"start":1727806287636,"stop":1727806289219,"duration":1583}},{"uid":"d573042fa29354bd","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/d573042fa29354bd","status":"passed","time":{"start":1727796751623,"stop":1727796753221,"duration":1598}},{"uid":"578835a103ecb7b2","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/578835a103ecb7b2","status":"passed","time":{"start":1727795192911,"stop":1727795194667,"duration":1756}},{"uid":"17d329796590722","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/17d329796590722","status":"passed","time":{"start":1727790001694,"stop":1727790003346,"duration":1652}},{"uid":"be007c5798b9e10c","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/be007c5798b9e10c","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727785385874,"stop":1727785385874,"duration":0}},{"uid":"6b7b833fdbf49b3e","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/6b7b833fdbf49b3e","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727784401291,"stop":1727784401291,"duration":0}},{"uid":"ce03a1338854413","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/ce03a1338854413","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727779976879,"stop":1727779976879,"duration":0}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"67dd7285f24fcda0.json","parameterValues":["'rak5010'","'zephyr'"]}