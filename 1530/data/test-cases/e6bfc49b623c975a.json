{"uid":"e6bfc49b623c975a","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1727945037763,"stop":1727945050916,"duration":13153},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff7dfdbc90>\ndevice = <golioth.golioth.Device object at 0xffff7dfb0910>\nproject = <golioth.golioth.Project object at 0xffff7e0efcd0>\nreleases = {'test_blocks': Release <66fe59432860a8ee0e301a65, release_tags=[], device_tags=['66fe59412860a8ee0e301a62'], artifact..., release_tags=[], device_tags=['66fe59412860a8ee0e301a62'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727944994065,"stop":1727944994065,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727944994066,"stop":1727944994066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727944994067,"stop":1727944994067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727944994068,"stop":1727944994068,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727944994069,"stop":1727944994069,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727944994070,"stop":1727944994070,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727944994071,"stop":1727944994071,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727944994071,"stop":1727944994072,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727944994072,"stop":1727944994072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727944994073,"stop":1727944994073,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727944994073,"stop":1727944994074,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727944994074,"stop":1727944994074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727944994075,"stop":1727945019619,"duration":25544},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727945019621,"stop":1727945020178,"duration":557},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727945020179,"stop":1727945021164,"duration":985},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727945021164,"stop":1727945024707,"duration":3543},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727945024708,"stop":1727945025282,"duration":574},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727945025283,"stop":1727945026094,"duration":811},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727945026094,"stop":1727945027844,"duration":1750},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727945037760,"stop":1727945037761,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff7dfdbc90>\ndevice = <golioth.golioth.Device object at 0xffff7dfb0910>\nproject = <golioth.golioth.Project object at 0xffff7e0efcd0>\nreleases = {'test_blocks': Release <66fe59432860a8ee0e301a65, release_tags=[], device_tags=['66fe59412860a8ee0e301a62'], artifact..., release_tags=[], device_tags=['66fe59412860a8ee0e301a62'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"98f317bb69afe4da","name":"stdout","source":"98f317bb69afe4da.txt","type":"text/plain","size":958}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727945050958,"stop":1727945051953,"duration":995},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727945051955,"stop":1727945053542,"duration":1587},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727945053544,"stop":1727945054389,"duration":845},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727945054391,"stop":1727945054391,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727945054393,"stop":1727945054393,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727945054395,"stop":1727945054849,"duration":454},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727945054852,"stop":1727945054852,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727945054854,"stop":1727945054864,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"0feccf88518c"},{"name":"thread","value":"245-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":16,"broken":9,"skipped":0,"passed":37,"unknown":0,"total":62},"items":[{"uid":"bf83665b92c0041a","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/bf83665b92c0041a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727944102289,"stop":1727944122678,"duration":20389}},{"uid":"507829cb9a9bb744","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/507829cb9a9bb744","status":"passed","time":{"start":1727943370033,"stop":1727943448057,"duration":78024}},{"uid":"292be6c078857560","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/292be6c078857560","status":"passed","time":{"start":1727831539937,"stop":1727831616744,"duration":76807}},{"uid":"ae7fb5e15dafd442","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/ae7fb5e15dafd442","status":"passed","time":{"start":1727925904334,"stop":1727925981705,"duration":77371}},{"uid":"63a51370c476b2a8","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/63a51370c476b2a8","status":"passed","time":{"start":1727925904334,"stop":1727925981705,"duration":77371}},{"uid":"29e730de3d5f6bcc","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/29e730de3d5f6bcc","status":"passed","time":{"start":1727915571958,"stop":1727915649524,"duration":77566}},{"uid":"b6a2f016f527e51f","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/b6a2f016f527e51f","status":"failed","statusDetails":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","time":{"start":1727906850899,"stop":1727906893184,"duration":42285}},{"uid":"e1066e9cd74919fa","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/e1066e9cd74919fa","status":"passed","time":{"start":1727831539937,"stop":1727831616744,"duration":76807}},{"uid":"790af021e43a9d04","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/790af021e43a9d04","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1727829123314,"stop":1727829145602,"duration":22288}},{"uid":"949f3b408a018019","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/949f3b408a018019","status":"passed","time":{"start":1727801547083,"stop":1727801626841,"duration":79758}},{"uid":"558470ecc9f7eea0","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/558470ecc9f7eea0","status":"passed","time":{"start":1727813124443,"stop":1727813204032,"duration":79589}},{"uid":"e377971d6070e1b0","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/e377971d6070e1b0","status":"passed","time":{"start":1727795356149,"stop":1727795433531,"duration":77382}},{"uid":"f5b379086ad3eabe","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/f5b379086ad3eabe","status":"passed","time":{"start":1727809276036,"stop":1727809353034,"duration":76998}},{"uid":"4fa9dd1873db6536","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/4fa9dd1873db6536","status":"passed","time":{"start":1727805386698,"stop":1727805463433,"duration":76735}},{"uid":"7fbb413e705c4547","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/7fbb413e705c4547","status":"passed","time":{"start":1727795356149,"stop":1727795433531,"duration":77382}},{"uid":"d79a934aced66506","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/d79a934aced66506","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727794483178,"stop":1727794503544,"duration":20366}},{"uid":"ac441743f49d2cb0","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/ac441743f49d2cb0","status":"passed","time":{"start":1727785997299,"stop":1727786076941,"duration":79642}},{"uid":"c000804139febec4","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/c000804139febec4","status":"passed","time":{"start":1727782200704,"stop":1727782277955,"duration":77251}},{"uid":"21215e1c7d72fff5","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/21215e1c7d72fff5","status":"passed","time":{"start":1727780507498,"stop":1727780587452,"duration":79954}},{"uid":"f98b91404fb91241","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/f98b91404fb91241","status":"passed","time":{"start":1727778712731,"stop":1727778793402,"duration":80671}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","jons_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"e6bfc49b623c975a.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}