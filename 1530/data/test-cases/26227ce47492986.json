{"uid":"26227ce47492986","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1727944256756,"stop":1727944273588,"duration":16832},"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffae15ad90>\ndevice = <golioth.golioth.Device object at 0xffffae133310>\nproject = <golioth.golioth.Project object at 0xffffae092710>\nreleases = {'test_blocks': Release <66fe56362860a8ee0e3019be, release_tags=[], device_tags=['66fe56342860a8ee0e3019ba'], artifact..., release_tags=[], device_tags=['66fe56342860a8ee0e3019ba'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727944188633,"stop":1727944188634,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727944188634,"stop":1727944188635,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727944188635,"stop":1727944188635,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727944188636,"stop":1727944188636,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727944188637,"stop":1727944188638,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727944188637,"stop":1727944188637,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727944188638,"stop":1727944188638,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727944188639,"stop":1727944188639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727944188639,"stop":1727944188639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727944188640,"stop":1727944188640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727944188640,"stop":1727944188640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727944188641,"stop":1727944238173,"duration":49532},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727944188641,"stop":1727944188641,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727944238175,"stop":1727944238709,"duration":534},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727944238710,"stop":1727944239664,"duration":954},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727944239665,"stop":1727944243373,"duration":3708},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727944243375,"stop":1727944243856,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727944243857,"stop":1727944244886,"duration":1029},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727944244886,"stop":1727944246691,"duration":1805},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727944256753,"stop":1727944256753,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffae15ad90>\ndevice = <golioth.golioth.Device object at 0xffffae133310>\nproject = <golioth.golioth.Project object at 0xffffae092710>\nreleases = {'test_blocks': Release <66fe56362860a8ee0e3019be, release_tags=[], device_tags=['66fe56342860a8ee0e3019ba'], artifact..., release_tags=[], device_tags=['66fe56342860a8ee0e3019ba'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 1 == 0\nE            +  where 1 = int('1')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"ea0d1c06611983d2","name":"stdout","source":"ea0d1c06611983d2.txt","type":"text/plain","size":1120}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727944273631,"stop":1727944274576,"duration":945},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727944274578,"stop":1727944276207,"duration":1629},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727944276209,"stop":1727944277108,"duration":899},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727944277110,"stop":1727944277110,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727944277112,"stop":1727944277112,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727944277114,"stop":1727944277599,"duration":485},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727944277602,"stop":1727944277602,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727944277604,"stop":1727944277613,"duration":9},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"0b5cd9fbf529"},{"name":"thread","value":"246-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":3,"skipped":0,"passed":56,"unknown":0,"total":66},"items":[{"uid":"e83a134399442f40","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/e83a134399442f40","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727943407179,"stop":1727943427918,"duration":20739}},{"uid":"d089958d2a99d33d","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/d089958d2a99d33d","status":"passed","time":{"start":1727942478328,"stop":1727942558743,"duration":80415}},{"uid":"1cca893b4ff44e2e","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/1cca893b4ff44e2e","status":"passed","time":{"start":1727831564555,"stop":1727831641958,"duration":77403}},{"uid":"126f790c31a2217b","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/126f790c31a2217b","status":"passed","time":{"start":1727932241316,"stop":1727932318711,"duration":77395}},{"uid":"45b62037680e4c60","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/45b62037680e4c60","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727925818737,"stop":1727925839161,"duration":20424}},{"uid":"6f5834cd2dd2d9c4","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/6f5834cd2dd2d9c4","status":"passed","time":{"start":1727915486990,"stop":1727915568637,"duration":81647}},{"uid":"fda33434d229da4f","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/fda33434d229da4f","status":"passed","time":{"start":1727906531727,"stop":1727906612487,"duration":80760}},{"uid":"d456c5762841d1e0","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/d456c5762841d1e0","status":"passed","time":{"start":1727831564555,"stop":1727831641958,"duration":77403}},{"uid":"6848a290bc108e3a","reportUrl":"https://golioth.github.io/allure-reports/1523//#testresult/6848a290bc108e3a","status":"passed","time":{"start":1727829086308,"stop":1727829166410,"duration":80102}},{"uid":"1ad1e51ce10d3e5d","reportUrl":"https://golioth.github.io/allure-reports/1518//#testresult/1ad1e51ce10d3e5d","status":"passed","time":{"start":1727800694981,"stop":1727800776097,"duration":81116}},{"uid":"45a043c05f4eb3e4","reportUrl":"https://golioth.github.io/allure-reports/1517//#testresult/45a043c05f4eb3e4","status":"passed","time":{"start":1727799771178,"stop":1727799852249,"duration":81071}},{"uid":"d52d7c208df2eaf4","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/d52d7c208df2eaf4","status":"passed","time":{"start":1727811167584,"stop":1727811257195,"duration":89611}},{"uid":"cf933d1f48f090b2","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/cf933d1f48f090b2","status":"passed","time":{"start":1727809369229,"stop":1727809448857,"duration":79628}},{"uid":"8020a71196c8ff10","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/8020a71196c8ff10","status":"passed","time":{"start":1727805317656,"stop":1727805395602,"duration":77946}},{"uid":"b844a2710f832a6b","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/b844a2710f832a6b","status":"failed","statusDetails":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","time":{"start":1727795149716,"stop":1727795172499,"duration":22783}},{"uid":"d6a71335b35dd469","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/d6a71335b35dd469","status":"passed","time":{"start":1727794190769,"stop":1727794271427,"duration":80658}},{"uid":"9245b80f6ab6cafa","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/9245b80f6ab6cafa","status":"passed","time":{"start":1727785167227,"stop":1727785247704,"duration":80477}},{"uid":"811cda4b0eef4162","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/811cda4b0eef4162","status":"passed","time":{"start":1727782351447,"stop":1727782431485,"duration":80038}},{"uid":"317b8dc2f52f6fd1","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/317b8dc2f52f6fd1","status":"passed","time":{"start":1727772305258,"stop":1727772385999,"duration":80741}},{"uid":"ba6108b04c9b37fd","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/ba6108b04c9b37fd","status":"passed","time":{"start":1727777889872,"stop":1727777970714,"duration":80842}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"26227ce47492986.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}