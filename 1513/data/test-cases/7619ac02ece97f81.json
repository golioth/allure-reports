{"uid":"7619ac02ece97f81","name":"test_many_args","fullName":"tests.hil.tests.rpc.test_rpc#test_many_args","historyId":"cc52a12cc09d9df64d6b7f7ebed31db5","time":{"start":1727795250528,"stop":1727795255866,"duration":5338},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa542b490>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa4bc3710>\ndevice = <golioth.golioth.Device object at 0xffffa4be7190>\n\n    async def test_many_args(board, device):\n>       await device.rpc.no_response(1,2,3,4,5,6,7,8,9)\n\ntests/hil/tests/rpc/test_rpc.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa542b490>\nmethod = 'no_response', params = (1, 2, 3, 4, 5, 6, ...)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727795179872,"stop":1727795179873,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board_name","time":{"start":1727795179874,"stop":1727795179874,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"port","time":{"start":1727795179875,"stop":1727795179875,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"baud","time":{"start":1727795179876,"stop":1727795179877,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_ssid","time":{"start":1727795179878,"stop":1727795179878,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_psk","time":{"start":1727795179879,"stop":1727795179880,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"fw_image","time":{"start":1727795179880,"stop":1727795179880,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"serial_number","time":{"start":1727795179881,"stop":1727795179881,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"bmp_port","time":{"start":1727795179882,"stop":1727795179882,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device_name","time":{"start":1727795179883,"stop":1727795179884,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_key","time":{"start":1727795179884,"stop":1727795179884,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_url","time":{"start":1727795179885,"stop":1727795179885,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project","time":{"start":1727795179886,"stop":1727795180333,"duration":447},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board","time":{"start":1727795180334,"stop":1727795229710,"duration":49376},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device","time":{"start":1727795229712,"stop":1727795230758,"duration":1046},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"setup","time":{"start":1727795230758,"stop":1727795234612,"duration":3854},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"afterStages":[{"name":"setup::0","time":{"start":1727795316464,"stop":1727795316464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device::0","time":{"start":1727795316466,"stop":1727795316921,"duration":455},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board::0","time":{"start":1727795316923,"stop":1727795316928,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project::0","time":{"start":1727795316931,"stop":1727795316933,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"a67b7e62524e"},{"name":"thread","value":"256-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":49,"unknown":0,"total":51},"items":[{"uid":"1bcf5e142e749b0e","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/1bcf5e142e749b0e","status":"passed","time":{"start":1727794337977,"stop":1727794339477,"duration":1500}},{"uid":"517db444dfaa2680","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/517db444dfaa2680","status":"passed","time":{"start":1727785314297,"stop":1727785315796,"duration":1499}},{"uid":"f66e24abfbf2a16","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/f66e24abfbf2a16","status":"passed","time":{"start":1727782508745,"stop":1727782510245,"duration":1500}},{"uid":"af71c998c7d0425e","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/af71c998c7d0425e","status":"passed","time":{"start":1727772452389,"stop":1727772453890,"duration":1501}},{"uid":"a9b1cfa3c69dfee6","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/a9b1cfa3c69dfee6","status":"passed","time":{"start":1727778037033,"stop":1727778038536,"duration":1503}},{"uid":"9cb4480cc08092cc","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/9cb4480cc08092cc","status":"passed","time":{"start":1727774573238,"stop":1727774574446,"duration":1208}},{"uid":"fd52b8f7ad7239eb","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/fd52b8f7ad7239eb","status":"passed","time":{"start":1727772452389,"stop":1727772453890,"duration":1501}},{"uid":"c0c1ac508454490a","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/c0c1ac508454490a","status":"passed","time":{"start":1727767707533,"stop":1727767708996,"duration":1463}},{"uid":"86ef38b18da16bde","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/86ef38b18da16bde","status":"passed","time":{"start":1727766844153,"stop":1727766845653,"duration":1500}},{"uid":"dffda5202d95397d","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/dffda5202d95397d","status":"passed","time":{"start":1727762252058,"stop":1727762253558,"duration":1500}},{"uid":"7b7e16d9586e9a04","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/7b7e16d9586e9a04","status":"passed","time":{"start":1727761335929,"stop":1727761337145,"duration":1216}},{"uid":"f2a0a3ca2fff4e08","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/f2a0a3ca2fff4e08","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727758470103,"stop":1727758470103,"duration":0}},{"uid":"272f3a0ff7f5fb91","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/272f3a0ff7f5fb91","status":"passed","time":{"start":1727742962553,"stop":1727742963548,"duration":995}},{"uid":"a27ca9970e7e71b8","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/a27ca9970e7e71b8","status":"passed","time":{"start":1727730557252,"stop":1727730558255,"duration":1003}},{"uid":"d3be5f5217bda459","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/d3be5f5217bda459","status":"passed","time":{"start":1727656471240,"stop":1727656472219,"duration":979}},{"uid":"b56e2186af517a2c","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/b56e2186af517a2c","status":"passed","time":{"start":1727570142319,"stop":1727570143309,"duration":990}},{"uid":"230459dbcffed01e","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/230459dbcffed01e","status":"passed","time":{"start":1727543123447,"stop":1727543124952,"duration":1505}},{"uid":"afff558f209ea5ad","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/afff558f209ea5ad","status":"passed","time":{"start":1727542235158,"stop":1727542236659,"duration":1501}},{"uid":"f193303e8591a3ec","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/f193303e8591a3ec","status":"passed","time":{"start":1727541335273,"stop":1727541336526,"duration":1253}},{"uid":"d3c48741276e5e10","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/d3c48741276e5e10","status":"passed","time":{"start":1727483616128,"stop":1727483617628,"duration":1500}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"7619ac02ece97f81.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}