{"uid":"c7a78b4ab9cd2dd5","name":"test_stream","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample#test_stream","historyId":"92fec5fac7da5ac3a26deeb8207f2647","time":{"start":1727811083169,"stop":1727811149322,"duration":66153},"status":"failed","statusMessage":"AssertionError: assert 24 == 21.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff7de61750>\ndevice = <golioth.golioth.Device object at 0xffff7de80110>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 24 == 21.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1727811053464,"stop":1727811053464,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727811053465,"stop":1727811053465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727811053465,"stop":1727811053465,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727811053466,"stop":1727811053466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1727811053466,"stop":1727811053467,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1727811053467,"stop":1727811053469,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727811053470,"stop":1727811053470,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727811053470,"stop":1727811053471,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727811053471,"stop":1727811053980,"duration":509},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727811053981,"stop":1727811055077,"duration":1096},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1727811055078,"stop":1727811082052,"duration":26974},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1727811082052,"stop":1727811083166,"duration":1114},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 24 == 21.0","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffff7de61750>\ndevice = <golioth.golioth.Device object at 0xffff7de80110>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_stream(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Verify temp messages\n    \n        temp = 20.0\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] == temp)\nE               assert 24 == 21.0\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/stream/pytest/test_sample.py:34: AssertionError","steps":[],"attachments":[{"uid":"dd13e5bea9c3b6c7","name":"log","source":"dd13e5bea9c3b6c7.txt","type":"text/plain","size":16133}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1727811149615,"stop":1727811149650,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727811149652,"stop":1727811150473,"duration":821},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727811150475,"stop":1727811150478,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1727811150483,"stop":1727811150483,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf9160dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf9160dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"bd086f9267f0"},{"name":"thread","value":"585-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf9160dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"b0e0c7ba3a925a36","status":"passed","time":{"start":1727800167126,"stop":1727800214226,"duration":47100}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":1,"skipped":0,"passed":38,"unknown":0,"total":43},"items":[{"uid":"cb724b4f94d5862a","reportUrl":"https://golioth.github.io/allure-reports/1522//#testresult/cb724b4f94d5862a","status":"passed","time":{"start":1727808989776,"stop":1727809131318,"duration":141542}},{"uid":"2fd31caa39ba10c7","reportUrl":"https://golioth.github.io/allure-reports/1520//#testresult/2fd31caa39ba10c7","status":"failed","statusDetails":"AssertionError: assert 21 == 20.5","time":{"start":1727807978924,"stop":1727808008336,"duration":29412}},{"uid":"bd65a5b8b88b5377","reportUrl":"https://golioth.github.io/allure-reports/1513//#testresult/bd65a5b8b88b5377","status":"passed","time":{"start":1727800167126,"stop":1727800214226,"duration":47100}},{"uid":"8644c4603a0952bb","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/8644c4603a0952bb","status":"passed","time":{"start":1727799106221,"stop":1727799127952,"duration":21731}},{"uid":"58ad9ebff87b53cf","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/58ad9ebff87b53cf","status":"passed","time":{"start":1727775289568,"stop":1727775314383,"duration":24815}},{"uid":"70567b71eb337dae","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/70567b71eb337dae","status":"passed","time":{"start":1727775289568,"stop":1727775314383,"duration":24815}},{"uid":"f44f8706137d3b40","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/f44f8706137d3b40","status":"passed","time":{"start":1727771952596,"stop":1727771974823,"duration":22227}},{"uid":"504f2136c233a60b","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/504f2136c233a60b","status":"passed","time":{"start":1727766836727,"stop":1727766860233,"duration":23506}},{"uid":"5c1fc1ec002b5b16","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/5c1fc1ec002b5b16","status":"passed","time":{"start":1727765606424,"stop":1727765628446,"duration":22022}},{"uid":"4a3cc704232140b7","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/4a3cc704232140b7","status":"passed","time":{"start":1727745410588,"stop":1727745451349,"duration":40761}},{"uid":"58cd051a4edc75c8","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/58cd051a4edc75c8","status":"passed","time":{"start":1727733175710,"stop":1727733200331,"duration":24621}},{"uid":"16bd10b301493a88","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/16bd10b301493a88","status":"passed","time":{"start":1727659077561,"stop":1727659106085,"duration":28524}},{"uid":"8c7b04758df0e524","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/8c7b04758df0e524","status":"passed","time":{"start":1727571949551,"stop":1727571974017,"duration":24466}},{"uid":"1062b0f7d00a35c0","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/1062b0f7d00a35c0","status":"passed","time":{"start":1727549793053,"stop":1727549817092,"duration":24039}},{"uid":"91fe4da98948810a","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/91fe4da98948810a","status":"passed","time":{"start":1727548734854,"stop":1727548759188,"duration":24334}},{"uid":"179fa5a0c8dfecd5","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/179fa5a0c8dfecd5","status":"passed","time":{"start":1727548522863,"stop":1727548569517,"duration":46654}},{"uid":"da9139eddb7aef9","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/da9139eddb7aef9","status":"passed","time":{"start":1727486057684,"stop":1727486085483,"duration":27799}},{"uid":"dd18dad21fcc6fb0","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/dd18dad21fcc6fb0","status":"passed","time":{"start":1727478383934,"stop":1727478527570,"duration":143636}},{"uid":"459b8340bc883003","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/459b8340bc883003","status":"passed","time":{"start":1727462756230,"stop":1727462784377,"duration":28147}},{"uid":"32f5f356ea524f","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/32f5f356ea524f","status":"passed","time":{"start":1727462756230,"stop":1727462784377,"duration":28147}}]},"tags":["nrf9160dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"c7a78b4ab9cd2dd5.json","parameterValues":["'nrf9160dk'","'zephyr'"]}