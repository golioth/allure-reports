{"uid":"b844a2710f832a6b","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1727795149716,"stop":1727795172499,"duration":22783},"status":"failed","statusMessage":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa899c650>\ndevice = <golioth.golioth.Device object at 0xffffa89f3f90>\nproject = <golioth.golioth.Project object at 0xffffa898ddd0>\nreleases = {'test_blocks': Release <66fc0fbd9816a3c02f19a8cd, release_tags=[], device_tags=['66fc0fbb9816a3c02f19a8ca'], artifact..., release_tags=[], device_tags=['66fc0fbb9816a3c02f19a8ca'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 0\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727795077328,"stop":1727795077328,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board_name","time":{"start":1727795077330,"stop":1727795077330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"port","time":{"start":1727795077331,"stop":1727795077331,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"baud","time":{"start":1727795077332,"stop":1727795077332,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_ssid","time":{"start":1727795077333,"stop":1727795077333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_psk","time":{"start":1727795077333,"stop":1727795077333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"serial_number","time":{"start":1727795077334,"stop":1727795077334,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"fw_image","time":{"start":1727795077334,"stop":1727795077334,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"bmp_port","time":{"start":1727795077335,"stop":1727795077335,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_key","time":{"start":1727795077335,"stop":1727795077336,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_url","time":{"start":1727795077336,"stop":1727795077336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board","time":{"start":1727795077337,"stop":1727795126704,"duration":49367},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device_name","time":{"start":1727795077337,"stop":1727795077337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project","time":{"start":1727795126706,"stop":1727795127208,"duration":502},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device","time":{"start":1727795127208,"stop":1727795128078,"duration":870},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"setup","time":{"start":1727795128079,"stop":1727795130848,"duration":2769},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"artifacts","time":{"start":1727795130849,"stop":1727795131428,"duration":579},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"tag","time":{"start":1727795131428,"stop":1727795132322,"duration":894},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"releases","time":{"start":1727795132323,"stop":1727795134132,"duration":1809},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"releases_teardown","time":{"start":1727795149713,"stop":1727795149714,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa899c650>\ndevice = <golioth.golioth.Device object at 0xffffa89f3f90>\nproject = <golioth.golioth.Project object at 0xffffa898ddd0>\nreleases = {'test_blocks': Release <66fc0fbd9816a3c02f19a8cd, release_tags=[], device_tags=['66fc0fbb9816a3c02f19a8ca'], artifact..., release_tags=[], device_tags=['66fc0fbb9816a3c02f19a8ca'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 0\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"64e7697b7a3e353","name":"stdout","source":"64e7697b7a3e353.txt","type":"text/plain","size":1294}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727795172650,"stop":1727795173693,"duration":1043},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"releases::0","time":{"start":1727795173696,"stop":1727795175302,"duration":1606},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"tag::0","time":{"start":1727795175304,"stop":1727795176204,"duration":900},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"artifacts::0","time":{"start":1727795176206,"stop":1727795176206,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"setup::0","time":{"start":1727795176208,"stop":1727795176208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device::0","time":{"start":1727795176210,"stop":1727795176685,"duration":475},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project::0","time":{"start":1727795176687,"stop":1727795176687,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board::0","time":{"start":1727795176689,"stop":1727795176696,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"a67b7e62524e"},{"name":"thread","value":"250-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":2,"skipped":0,"passed":44,"unknown":0,"total":51},"items":[{"uid":"d6a71335b35dd469","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/d6a71335b35dd469","status":"passed","time":{"start":1727794190769,"stop":1727794271427,"duration":80658}},{"uid":"9245b80f6ab6cafa","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/9245b80f6ab6cafa","status":"passed","time":{"start":1727785167227,"stop":1727785247704,"duration":80477}},{"uid":"811cda4b0eef4162","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/811cda4b0eef4162","status":"passed","time":{"start":1727782351447,"stop":1727782431485,"duration":80038}},{"uid":"317b8dc2f52f6fd1","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/317b8dc2f52f6fd1","status":"passed","time":{"start":1727772305258,"stop":1727772385999,"duration":80741}},{"uid":"ba6108b04c9b37fd","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/ba6108b04c9b37fd","status":"passed","time":{"start":1727777889872,"stop":1727777970714,"duration":80842}},{"uid":"f397a477e1450694","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/f397a477e1450694","status":"passed","time":{"start":1727774423375,"stop":1727774503841,"duration":80466}},{"uid":"d45623866e954be6","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/d45623866e954be6","status":"passed","time":{"start":1727772305258,"stop":1727772385999,"duration":80741}},{"uid":"73b631bb5cc800a6","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/73b631bb5cc800a6","status":"failed","statusDetails":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","time":{"start":1727767596202,"stop":1727767640604,"duration":44402}},{"uid":"ba62c2f1c2e736ab","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/ba62c2f1c2e736ab","status":"failed","statusDetails":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","time":{"start":1727766742030,"stop":1727766777753,"duration":35723}},{"uid":"82f2b2fb05ec021b","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/82f2b2fb05ec021b","status":"passed","time":{"start":1727762106832,"stop":1727762186308,"duration":79476}},{"uid":"d7fd61463f9e08a1","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/d7fd61463f9e08a1","status":"passed","time":{"start":1727761187245,"stop":1727761267780,"duration":80535}},{"uid":"3a5a37abed2571b1","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/3a5a37abed2571b1","status":"passed","time":{"start":1727758320987,"stop":1727758402081,"duration":81094}},{"uid":"780fb1ec0828ce8b","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/780fb1ec0828ce8b","status":"passed","time":{"start":1727742830525,"stop":1727742909583,"duration":79058}},{"uid":"d351a389becedb89","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/d351a389becedb89","status":"passed","time":{"start":1727730416679,"stop":1727730493493,"duration":76814}},{"uid":"92fcf543fad7fdd9","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/92fcf543fad7fdd9","status":"passed","time":{"start":1727656340895,"stop":1727656418232,"duration":77337}},{"uid":"57f9c4620cd7dc5e","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/57f9c4620cd7dc5e","status":"passed","time":{"start":1727570011718,"stop":1727570089112,"duration":77394}},{"uid":"e18a34c3d1810040","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/e18a34c3d1810040","status":"passed","time":{"start":1727542975420,"stop":1727543056651,"duration":81231}},{"uid":"6e46b4818815f92b","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/6e46b4818815f92b","status":"passed","time":{"start":1727542089054,"stop":1727542169046,"duration":79992}},{"uid":"2f1bb3e485dd7563","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/2f1bb3e485dd7563","status":"passed","time":{"start":1727541186897,"stop":1727541268948,"duration":82051}},{"uid":"181f7c79703b9b0d","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/181f7c79703b9b0d","status":"passed","time":{"start":1727483469825,"stop":1727483549925,"duration":80100}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"b844a2710f832a6b.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}