{"uid":"ee7cbe8e1295e638","name":"test_stream","fullName":"examples.esp_idf.stream.pytest.test_sample#test_stream","historyId":"8de1da5b76f241e44d5455d86d5f64f8","time":{"start":1727799382689,"stop":1727799411796,"duration":29107},"status":"failed","statusMessage":"AssertionError: assert (22 >= 20.0 and 22 <= 21.5)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff94712150>\ndevice = <golioth.golioth.Device object at 0xffff9472b310>\n\n    async def test_stream(board, device):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify temp messages\n    \n        lower_temp = 20.0\n        upper_temp = 21.5\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] >= lower_temp and value[\"data\"][\"temp\"] <= upper_temp)\nE               assert (22 >= 20.0 and 22 <= 21.5)\n\nexamples/esp_idf/stream/pytest/test_sample.py:32: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727799354684,"stop":1727799354684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board_name","time":{"start":1727799354685,"stop":1727799354685,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"port","time":{"start":1727799354686,"stop":1727799354686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"baud","time":{"start":1727799354687,"stop":1727799354687,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_ssid","time":{"start":1727799354688,"stop":1727799354688,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"wifi_psk","time":{"start":1727799354689,"stop":1727799354689,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"fw_image","time":{"start":1727799354690,"stop":1727799354690,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"serial_number","time":{"start":1727799354691,"stop":1727799354691,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"bmp_port","time":{"start":1727799354692,"stop":1727799354692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device_name","time":{"start":1727799354693,"stop":1727799354693,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_key","time":{"start":1727799354694,"stop":1727799354694,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"api_url","time":{"start":1727799354694,"stop":1727799354694,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board","time":{"start":1727799354695,"stop":1727799381231,"duration":26536},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project","time":{"start":1727799381233,"stop":1727799381744,"duration":511},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"device","time":{"start":1727799381744,"stop":1727799382685,"duration":941},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (22 >= 20.0 and 22 <= 21.5)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff94712150>\ndevice = <golioth.golioth.Device object at 0xffff9472b310>\n\n    async def test_stream(board, device):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n        golioth_cred = (await device.credentials.list())[0]\n        await board.set_golioth_psk_credentials(golioth_cred.identity, golioth_cred.key)\n    \n        # Wait for device to connect\n        await board.wait_for_regex_in_line('.*Golioth client connected', timeout_s=30.0)\n    \n        # Verify temp messages\n    \n        lower_temp = 20.0\n        upper_temp = 21.5\n        async with contextlib.aclosing(device.stream.iter()) as stream_iter:\n            async for value in stream_iter:\n                LOGGER.info(\"ts: {0}, temp: {1}\".format(value['timestamp'], value['data']['temp']))\n>               assert (value[\"data\"][\"temp\"] >= lower_temp and value[\"data\"][\"temp\"] <= upper_temp)\nE               assert (22 >= 20.0 and 22 <= 21.5)\n\nexamples/esp_idf/stream/pytest/test_sample.py:32: AssertionError","steps":[],"attachments":[{"uid":"53bf42589fc76958","name":"stdout","source":"53bf42589fc76958.txt","type":"text/plain","size":7975}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[{"name":"device::0","time":{"start":1727799411945,"stop":1727799412437,"duration":492},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"project::0","time":{"start":1727799412439,"stop":1727799412439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"board::0","time":{"start":1727799412441,"stop":1727799412448,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"sample.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"d15203dfcd91"},{"name":"thread","value":"293-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"examples.esp_idf.stream.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":48,"unknown":0,"total":50},"items":[{"uid":"297b24b7cc9c1f3b","reportUrl":"https://golioth.github.io/allure-reports/1512//#testresult/297b24b7cc9c1f3b","status":"passed","time":{"start":1727797535501,"stop":1727797557559,"duration":22058}},{"uid":"eddf97bc6267af6b","reportUrl":"https://golioth.github.io/allure-reports/1510//#testresult/eddf97bc6267af6b","status":"passed","time":{"start":1727788300022,"stop":1727788322700,"duration":22678}},{"uid":"e2c3df1a54ba69ef","reportUrl":"https://golioth.github.io/allure-reports/1507//#testresult/e2c3df1a54ba69ef","status":"passed","time":{"start":1727784782345,"stop":1727784804850,"duration":22505}},{"uid":"7f9f64ac70e34617","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/7f9f64ac70e34617","status":"passed","time":{"start":1727774030212,"stop":1727774053125,"duration":22913}},{"uid":"fc3a57364cbbfe33","reportUrl":"https://golioth.github.io/allure-reports/1506//#testresult/fc3a57364cbbfe33","status":"passed","time":{"start":1727780711497,"stop":1727780738097,"duration":26600}},{"uid":"c2927640509100d9","reportUrl":"https://golioth.github.io/allure-reports/1500//#testresult/c2927640509100d9","status":"passed","time":{"start":1727777507293,"stop":1727777529205,"duration":21912}},{"uid":"2d502488f7a1c58a","reportUrl":"https://golioth.github.io/allure-reports/1493//#testresult/2d502488f7a1c58a","status":"passed","time":{"start":1727774030212,"stop":1727774053125,"duration":22913}},{"uid":"9a86861861711bd1","reportUrl":"https://golioth.github.io/allure-reports/1488//#testresult/9a86861861711bd1","status":"passed","time":{"start":1727771920785,"stop":1727771944123,"duration":23338}},{"uid":"375e021a91e75f50","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/375e021a91e75f50","status":"passed","time":{"start":1727769982632,"stop":1727770004797,"duration":22165}},{"uid":"408f4902a1af11fe","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/408f4902a1af11fe","status":"passed","time":{"start":1727766359998,"stop":1727766382480,"duration":22482}},{"uid":"9012c124381d9384","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/9012c124381d9384","status":"passed","time":{"start":1727764521148,"stop":1727764544096,"duration":22948}},{"uid":"438c7f7d769754d2","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/438c7f7d769754d2","status":"passed","time":{"start":1727760798346,"stop":1727760821710,"duration":23364}},{"uid":"815d2edfdc95fef","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/815d2edfdc95fef","status":"passed","time":{"start":1727744918897,"stop":1727744941150,"duration":22253}},{"uid":"7d5fe05c468d34eb","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/7d5fe05c468d34eb","status":"passed","time":{"start":1727732676376,"stop":1727732698691,"duration":22315}},{"uid":"e78074b9cb18505a","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/e78074b9cb18505a","status":"passed","time":{"start":1727658513444,"stop":1727658537177,"duration":23733}},{"uid":"fdc0a6cd48e33dfd","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/fdc0a6cd48e33dfd","status":"passed","time":{"start":1727572081138,"stop":1727572103470,"duration":22332}},{"uid":"abea7e44ef80f4e9","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/abea7e44ef80f4e9","status":"passed","time":{"start":1727549132886,"stop":1727549156412,"duration":23526}},{"uid":"99ae1a4b81de0859","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/99ae1a4b81de0859","status":"passed","time":{"start":1727547236115,"stop":1727547257470,"duration":21355}},{"uid":"ca1dbd085757f648","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/ca1dbd085757f648","status":"passed","time":{"start":1727544270110,"stop":1727544292708,"duration":22598}},{"uid":"83069333aef55652","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/83069333aef55652","status":"passed","time":{"start":1727485435613,"stop":1727485456893,"duration":21280}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","jons_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"ee7cbe8e1295e638.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}