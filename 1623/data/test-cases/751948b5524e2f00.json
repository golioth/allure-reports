{"uid":"751948b5524e2f00","name":"test_observation_cancel_all","fullName":"tests.hil.tests.rpc.test_rpc#test_observation_cancel_all","historyId":"0d1fa8eedd7c19fe36f83c6979b952f0","time":{"start":1728573350133,"stop":1728573355442,"duration":5309},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffff8db9f410>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <esp32_devkitc_wrover.ESP32DevKitCWROVER object at 0xffff8dc92b50>\ndevice = <golioth.golioth.Device object at 0xffff8db9f5d0>\n\n    async def test_observation_cancel_all(board, device):\n>       rsp = await device.rpc.cancel_all()\n\ntests/hil/tests/rpc/test_rpc.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffff8db9f410>\nmethod = 'cancel_all', params = []\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728573169856,"stop":1728573169856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728573169857,"stop":1728573169857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728573169858,"stop":1728573169858,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728573169859,"stop":1728573169859,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728573169860,"stop":1728573169860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728573169860,"stop":1728573169861,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728573169861,"stop":1728573169861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728573169862,"stop":1728573169862,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728573169863,"stop":1728573169864,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728573169863,"stop":1728573169863,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728573169864,"stop":1728573169864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728573169865,"stop":1728573170608,"duration":743},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728573169865,"stop":1728573169865,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728573170609,"stop":1728573207948,"duration":37339},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728573207949,"stop":1728573209303,"duration":1354},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728573209304,"stop":1728573214968,"duration":5664},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1728573356412,"stop":1728573356412,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728573356414,"stop":1728573356791,"duration":377},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728573356793,"stop":1728573356794,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728573356797,"stop":1728573356799,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32_devkitc_wrover"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.esp32_devkitc_wrover"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"f42d2b6f7518"},{"name":"thread","value":"228-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32_devkitc_wrover'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":65,"skipped":0,"passed":64,"unknown":0,"total":129},"items":[{"uid":"7a78c0669ac166f","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/7a78c0669ac166f","status":"passed","time":{"start":1728537517499,"stop":1728537536637,"duration":19138}},{"uid":"d59234f27a287bed","reportUrl":"https://golioth.github.io/allure-reports/1622//#testresult/d59234f27a287bed","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728521194314,"stop":1728521194314,"duration":0}},{"uid":"41e928aee9724eaa","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/41e928aee9724eaa","status":"passed","time":{"start":1728494621883,"stop":1728494641123,"duration":19240}},{"uid":"baf82ba783120571","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/baf82ba783120571","status":"passed","time":{"start":1728492303828,"stop":1728492323076,"duration":19248}},{"uid":"5b5a387a180b684f","reportUrl":"https://golioth.github.io/allure-reports/1619//#testresult/5b5a387a180b684f","status":"passed","time":{"start":1728484176623,"stop":1728484195874,"duration":19251}},{"uid":"9731fc8663cbfb23","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/9731fc8663cbfb23","status":"passed","time":{"start":1728435070875,"stop":1728435090012,"duration":19137}},{"uid":"68951cd723b1d13","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/68951cd723b1d13","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728425601635,"stop":1728425601635,"duration":0}},{"uid":"ec449029466b79dd","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/ec449029466b79dd","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728331260045,"stop":1728331260045,"duration":0}},{"uid":"4bceec23bfd34297","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/4bceec23bfd34297","status":"broken","statusDetails":"golioth.golioth.RPCTimeout: RPC timeout","time":{"start":1728325980354,"stop":1728325985709,"duration":5355}},{"uid":"d36b44c6487f31f0","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/d36b44c6487f31f0","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728340527104,"stop":1728340527104,"duration":0}},{"uid":"48b716c2ad7cadce","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/48b716c2ad7cadce","status":"passed","time":{"start":1728400015365,"stop":1728400034598,"duration":19233}},{"uid":"60a44f97dbe734b","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/60a44f97dbe734b","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728340527104,"stop":1728340527104,"duration":0}},{"uid":"ad579fe806fc4910","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/ad579fe806fc4910","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728348509588,"stop":1728348509588,"duration":0}},{"uid":"7e11566805d88c56","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/7e11566805d88c56","status":"passed","time":{"start":1728341194014,"stop":1728341213164,"duration":19150}},{"uid":"4baf47e2f5d102af","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/4baf47e2f5d102af","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728340527104,"stop":1728340527104,"duration":0}},{"uid":"190c090470913cfc","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/190c090470913cfc","status":"passed","time":{"start":1728336743764,"stop":1728336762801,"duration":19037}},{"uid":"7ce0d70205c36678","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/7ce0d70205c36678","status":"passed","time":{"start":1728327441443,"stop":1728327460492,"duration":19049}},{"uid":"b66bd16269d0594d","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/b66bd16269d0594d","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728324976912,"stop":1728324976912,"duration":0}},{"uid":"682225b68a0cee67","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/682225b68a0cee67","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728320305084,"stop":1728320305084,"duration":0}},{"uid":"e82816f620df4100","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/e82816f620df4100","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1728317206986,"stop":1728317206986,"duration":0}}]},"tags":["anyio","tims_orange_pi","esp32_devkitc_wrover","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"751948b5524e2f00.json","parameterValues":["'esp32_devkitc_wrover'","'zephyr'"]}