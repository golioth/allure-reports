{"uid":"1d210c36edb75a9f","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"c24c9ea14e94690f05bf86748c5128c2","time":{"start":1728064420267,"stop":1728064433646,"duration":13379},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa2e7a5d0>\ndevice = <golioth.golioth.Device object at 0xffffa2df3810>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa2df3810>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728064375086,"stop":1728064375086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728064375087,"stop":1728064375087,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728064375087,"stop":1728064375088,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728064375088,"stop":1728064375088,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728064375089,"stop":1728064375089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728064375090,"stop":1728064375090,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728064375090,"stop":1728064375090,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728064375091,"stop":1728064375091,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728064375091,"stop":1728064375091,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728064375092,"stop":1728064375092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728064375092,"stop":1728064375092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728064375093,"stop":1728064375093,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728064375093,"stop":1728064375562,"duration":469},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728064375563,"stop":1728064401033,"duration":25470},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728064401035,"stop":1728064402112,"duration":1077},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728064402113,"stop":1728064415789,"duration":13676},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa2e7a5d0>\ndevice = <golioth.golioth.Device object at 0xffffa2df3810>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffffa2df3810>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"a1573f7bf46257bd","name":"stdout","source":"a1573f7bf46257bd.txt","type":"text/plain","size":3747}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728064571061,"stop":1728064571061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728064571066,"stop":1728064571599,"duration":533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728064571601,"stop":1728064571606,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728064571609,"stop":1728064571611,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"055df6b2d9ab"},{"name":"thread","value":"251-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":2,"skipped":0,"passed":69,"unknown":0,"total":99},"items":[{"uid":"117ee4129bf22362","reportUrl":"https://golioth.github.io/allure-reports/1589//#testresult/117ee4129bf22362","status":"passed","time":{"start":1728128506562,"stop":1728128519464,"duration":12902}},{"uid":"8eef91671a2a956e","reportUrl":"https://golioth.github.io/allure-reports/1588//#testresult/8eef91671a2a956e","status":"passed","time":{"start":1728125572449,"stop":1728125585315,"duration":12866}},{"uid":"34fb7635f573ffb","reportUrl":"https://golioth.github.io/allure-reports/1586//#testresult/34fb7635f573ffb","status":"passed","time":{"start":1728122719264,"stop":1728122732101,"duration":12837}},{"uid":"32ec95f21719e041","reportUrl":"https://golioth.github.io/allure-reports/1585//#testresult/32ec95f21719e041","status":"passed","time":{"start":1728121861796,"stop":1728121875880,"duration":14084}},{"uid":"f553eb4b69a942e7","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/f553eb4b69a942e7","status":"passed","time":{"start":1728058251867,"stop":1728058264758,"duration":12891}},{"uid":"5c1f4b961fa979fa","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/5c1f4b961fa979fa","status":"passed","time":{"start":1728026164909,"stop":1728026178020,"duration":13111}},{"uid":"7cb127931621cff2","reportUrl":"https://golioth.github.io/allure-reports/1584//#testresult/7cb127931621cff2","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728088556375,"stop":1728088570159,"duration":13784}},{"uid":"3d355e16f267829d","reportUrl":"https://golioth.github.io/allure-reports/1583//#testresult/3d355e16f267829d","status":"passed","time":{"start":1728080600927,"stop":1728080616569,"duration":15642}},{"uid":"9fd692936cb369d7","reportUrl":"https://golioth.github.io/allure-reports/1582//#testresult/9fd692936cb369d7","status":"passed","time":{"start":1728073501102,"stop":1728073514168,"duration":13066}},{"uid":"9e8e1346489e0020","reportUrl":"https://golioth.github.io/allure-reports/1581//#testresult/9e8e1346489e0020","status":"passed","time":{"start":1728069830525,"stop":1728069843444,"duration":12919}},{"uid":"bfd8d5e7378c7540","reportUrl":"https://golioth.github.io/allure-reports/1579//#testresult/bfd8d5e7378c7540","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728066060195,"stop":1728066073136,"duration":12941}},{"uid":"8ee01c2179c2cc56","reportUrl":"https://golioth.github.io/allure-reports/1572//#testresult/8ee01c2179c2cc56","status":"passed","time":{"start":1728058251867,"stop":1728058264758,"duration":12891}},{"uid":"29d9a57dfd458d8b","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/29d9a57dfd458d8b","status":"passed","time":{"start":1728026164909,"stop":1728026178020,"duration":13111}},{"uid":"535e54772e29c0fb","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/535e54772e29c0fb","status":"passed","time":{"start":1728034736669,"stop":1728034749576,"duration":12907}},{"uid":"acfedb0f36a76b4c","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/acfedb0f36a76b4c","status":"passed","time":{"start":1728027826136,"stop":1728027839027,"duration":12891}},{"uid":"250bb462917a19cc","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/250bb462917a19cc","status":"passed","time":{"start":1728034736669,"stop":1728034749576,"duration":12907}},{"uid":"98621e43ab440103","reportUrl":"https://golioth.github.io/allure-reports/1577//#testresult/98621e43ab440103","status":"passed","time":{"start":1728048645555,"stop":1728048658927,"duration":13372}},{"uid":"ceec4af803873497","reportUrl":"https://golioth.github.io/allure-reports/1576//#testresult/ceec4af803873497","status":"passed","time":{"start":1728034736669,"stop":1728034749576,"duration":12907}},{"uid":"2380626bad99eb5b","reportUrl":"https://golioth.github.io/allure-reports/1574//#testresult/2380626bad99eb5b","status":"passed","time":{"start":1728027826136,"stop":1728027839027,"duration":12891}},{"uid":"81f2a0000dcb4333","reportUrl":"https://golioth.github.io/allure-reports/1573//#testresult/81f2a0000dcb4333","status":"passed","time":{"start":1728026164909,"stop":1728026178020,"duration":13111}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","jons_orange_pi","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"1d210c36edb75a9f.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}