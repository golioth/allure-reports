{"uid":"313d4c9e416b0eca","name":"test_restart","fullName":"tests.hil.tests.settings.test_settings#test_restart","historyId":"455c47e3934f618b0c62f435b1134012","time":{"start":1727544151043,"stop":1727544157617,"duration":6574},"status":"broken","statusMessage":"httpx.ConnectError: [Errno -5] No address associated with hostname","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffff7cf8d790>\ndevice = <golioth.golioth.Device object at 0xffff7cf12050>\n\n    async def test_restart(board, device):\n>       await device.settings.set('TEST_RESTART', True)\n\ntests/hil/tests/settings/test_settings.py:212: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:713: in set\n    setting = await self.device.project.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:986: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:982: in get_all\n    response = await self.project.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectError: [Errno -5] No address associated with hostname\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727543962589,"stop":1727543962589,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727543962590,"stop":1727543962591,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727543962591,"stop":1727543962591,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727543962592,"stop":1727543962592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727543962592,"stop":1727543962592,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727543962593,"stop":1727543962593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727543962593,"stop":1727543962593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727543962594,"stop":1727543962594,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727543962594,"stop":1727543962595,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727543962595,"stop":1727543962595,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727543962596,"stop":1727543962596,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727543962597,"stop":1727543963004,"duration":407},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727543962597,"stop":1727543962597,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727543963005,"stop":1727544002557,"duration":39552},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727544002557,"stop":1727544003797,"duration":1240},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727544003798,"stop":1727544018690,"duration":14892},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727544158758,"stop":1727544158758,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727544158760,"stop":1727544159178,"duration":418},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727544159180,"stop":1727544159188,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727544159191,"stop":1727544159193,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"6aacb9ab3de5"},{"name":"thread","value":"274-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":32,"unknown":0,"total":33},"items":[{"uid":"82ba168a24886800","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/82ba168a24886800","status":"passed","time":{"start":1727542553056,"stop":1727542582535,"duration":29479}},{"uid":"34c1383d1ab08b32","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/34c1383d1ab08b32","status":"passed","time":{"start":1727541622582,"stop":1727541653052,"duration":30470}},{"uid":"968757e6db628407","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/968757e6db628407","status":"passed","time":{"start":1727483860404,"stop":1727483889175,"duration":28771}},{"uid":"9e48d2be634d17b5","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/9e48d2be634d17b5","status":"passed","time":{"start":1727475993959,"stop":1727476025436,"duration":31477}},{"uid":"1ebf4d61c3fc6d6e","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/1ebf4d61c3fc6d6e","status":"passed","time":{"start":1727461256252,"stop":1727461286833,"duration":30581}},{"uid":"9ee277a8850a91f2","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/9ee277a8850a91f2","status":"passed","time":{"start":1727461256252,"stop":1727461286833,"duration":30581}},{"uid":"8a29fb095407f54","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/8a29fb095407f54","status":"passed","time":{"start":1727455851563,"stop":1727455880723,"duration":29160}},{"uid":"a2dec0c5db72a205","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/a2dec0c5db72a205","status":"passed","time":{"start":1727455100130,"stop":1727455129103,"duration":28973}},{"uid":"fb325985021efa8a","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/fb325985021efa8a","status":"passed","time":{"start":1727387988368,"stop":1727388017951,"duration":29583}},{"uid":"253c7f2dd76197ab","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/253c7f2dd76197ab","status":"passed","time":{"start":1727363174832,"stop":1727363204305,"duration":29473}},{"uid":"4c75c1d20d5e5a28","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/4c75c1d20d5e5a28","status":"passed","time":{"start":1727397488336,"stop":1727397519239,"duration":30903}},{"uid":"6c42b3344f0918d6","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/6c42b3344f0918d6","status":"passed","time":{"start":1727394457614,"stop":1727394486585,"duration":28971}},{"uid":"fe6f7df0a6c17899","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/fe6f7df0a6c17899","status":"passed","time":{"start":1727387852783,"stop":1727387886929,"duration":34146}},{"uid":"3dc6d4258148a66a","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/3dc6d4258148a66a","status":"passed","time":{"start":1727387988368,"stop":1727388017951,"duration":29583}},{"uid":"1021b21d0502d173","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/1021b21d0502d173","status":"passed","time":{"start":1727384331061,"stop":1727384360938,"duration":29877}},{"uid":"d200d13ec2b47540","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/d200d13ec2b47540","status":"passed","time":{"start":1727381597782,"stop":1727381626277,"duration":28495}},{"uid":"cd1f3c45c95b5363","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/cd1f3c45c95b5363","status":"passed","time":{"start":1727378936580,"stop":1727378966256,"duration":29676}},{"uid":"a3552d61d0167803","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/a3552d61d0167803","status":"passed","time":{"start":1727374204221,"stop":1727374233836,"duration":29615}},{"uid":"73fc0ae139a136bf","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/73fc0ae139a136bf","status":"passed","time":{"start":1727371024339,"stop":1727371055925,"duration":31586}},{"uid":"8a9c7917495d3db","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/8a9c7917495d3db","status":"passed","time":{"start":1727364209258,"stop":1727364238922,"duration":29664}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"313d4c9e416b0eca.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}