{"uid":"aca25984064def45","name":"test_invalid_arg","fullName":"tests.hil.tests.rpc.test_rpc#test_invalid_arg","historyId":"2cb625b1f8491fe01ea76860d1514c51","time":{"start":1727989408814,"stop":1727989414129,"duration":5315},"status":"broken","statusMessage":"golioth.golioth.RPCTimeout: RPC timeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:101: in handle_async_request\n    return await self._connection.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:143: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:113: in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:186: in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/http11.py:224: in _receive_event\n    data = await self._network_stream.read(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:32: in read\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ReadTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ReadError'>, <class 'trio.ClosedResourceError'>: <class 'httpcore.ReadError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nself = <golioth.golioth.DeviceRPC object at 0xffffa7016010>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n>               response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:633: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1905: in post\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ReadTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffa6ff3990>\ndevice = <golioth.golioth.Device object at 0xffffa7017510>\n\n    async def test_invalid_arg(board, device):\n        with pytest.raises(RPCResultError) as e:\n>           rsp = await device.rpc.basic_return_type(\"foo\")\n\ntests/hil/tests/rpc/test_rpc.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:656: in call_method\n    return await self.call(name, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <golioth.golioth.DeviceRPC object at 0xffffa7016010>\nmethod = 'basic_return_type', params = ('foo',)\n\n    async def call(self, method: str, params: Union[list, dict]):\n        async with self.http_client as c:\n            try:\n                response = await c.post('rpc', json={\n                    \"method\": method,\n                    \"params\": params,\n                })\n            except httpx.ReadTimeout as e:\n>               raise RPCTimeout() from e\nE               golioth.golioth.RPCTimeout: RPC timeout\n\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:638: RPCTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727989313631,"stop":1727989313631,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727989313632,"stop":1727989313632,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727989313632,"stop":1727989313633,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727989313633,"stop":1727989313634,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727989313634,"stop":1727989313634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727989313635,"stop":1727989313635,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727989313635,"stop":1727989313636,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727989313636,"stop":1727989313636,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727989313637,"stop":1727989313637,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727989313638,"stop":1727989313638,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727989313638,"stop":1727989313638,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727989313639,"stop":1727989314058,"duration":419},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727989313639,"stop":1727989313639,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727989314059,"stop":1727989365521,"duration":51462},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727989365522,"stop":1727989366668,"duration":1146},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727989366669,"stop":1727989381039,"duration":14370},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727989449102,"stop":1727989449103,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727989449108,"stop":1727989449649,"duration":541},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727989449651,"stop":1727989449652,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727989449655,"stop":1727989449657,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_rpc"},{"name":"host","value":"ea4aebfb3adf"},{"name":"thread","value":"252-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.rpc.test_rpc"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":71,"unknown":0,"total":76},"items":[{"uid":"21aaafc82dbf1cdb","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/21aaafc82dbf1cdb","status":"passed","time":{"start":1727986303243,"stop":1727986305199,"duration":1956}},{"uid":"34035579c203bba9","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/34035579c203bba9","status":"passed","time":{"start":1727983735052,"stop":1727983736762,"duration":1710}},{"uid":"e2cef6bac453ac3c","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/e2cef6bac453ac3c","status":"passed","time":{"start":1727977060349,"stop":1727977061698,"duration":1349}},{"uid":"852d1da4a7c257eb","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/852d1da4a7c257eb","status":"passed","time":{"start":1727964833328,"stop":1727964835183,"duration":1855}},{"uid":"faba0809ec6e0f8b","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/faba0809ec6e0f8b","status":"passed","time":{"start":1727973395695,"stop":1727973397056,"duration":1361}},{"uid":"1bbb38a4f0d3b7cd","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/1bbb38a4f0d3b7cd","status":"passed","time":{"start":1727968969184,"stop":1727968970753,"duration":1569}},{"uid":"c14f3064da879041","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/c14f3064da879041","status":"passed","time":{"start":1727968551956,"stop":1727968553997,"duration":2041}},{"uid":"e96b63b859b83489","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/e96b63b859b83489","status":"passed","time":{"start":1727964833328,"stop":1727964835183,"duration":1855}},{"uid":"9fa2cae652fa4b05","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/9fa2cae652fa4b05","status":"passed","time":{"start":1727959505954,"stop":1727959507318,"duration":1364}},{"uid":"7dd1d84d37a8ff7d","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/7dd1d84d37a8ff7d","status":"passed","time":{"start":1727956254940,"stop":1727956256300,"duration":1360}},{"uid":"6dd2e3b868d35be3","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/6dd2e3b868d35be3","status":"passed","time":{"start":1727955208255,"stop":1727955210171,"duration":1916}},{"uid":"f8364c79becc1aa0","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/f8364c79becc1aa0","status":"passed","time":{"start":1727951531728,"stop":1727951533130,"duration":1402}},{"uid":"1da9c1c16a7c722c","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/1da9c1c16a7c722c","status":"passed","time":{"start":1727926051021,"stop":1727926052719,"duration":1698}},{"uid":"5bdc50f31ec0e53e","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/5bdc50f31ec0e53e","status":"passed","time":{"start":1727945106552,"stop":1727945107665,"duration":1113}},{"uid":"e37f6c633d5bb3ee","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/e37f6c633d5bb3ee","status":"passed","time":{"start":1727944238728,"stop":1727944241002,"duration":2274}},{"uid":"3c8e4986e13c111f","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/3c8e4986e13c111f","status":"passed","time":{"start":1727943515924,"stop":1727943517610,"duration":1686}},{"uid":"cc09f955b70464ab","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/cc09f955b70464ab","status":"passed","time":{"start":1727831684090,"stop":1727831684961,"duration":871}},{"uid":"8b9ef03629b18255","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/8b9ef03629b18255","status":"passed","time":{"start":1727926051021,"stop":1727926052719,"duration":1698}},{"uid":"8dc52c7939fa8200","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/8dc52c7939fa8200","status":"passed","time":{"start":1727926051021,"stop":1727926052719,"duration":1698}},{"uid":"8af27bfe1cee7f69","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/8af27bfe1cee7f69","status":"passed","time":{"start":1727915718794,"stop":1727915720642,"duration":1848}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"aca25984064def45.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}