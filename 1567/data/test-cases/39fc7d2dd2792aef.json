{"uid":"39fc7d2dd2792aef","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"1c3f2c0d9c38a2f03a05e8ca5e7158fa","time":{"start":1727989287160,"stop":1727989306875,"duration":19715},"status":"failed","statusMessage":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa74abc50>\ndevice = <golioth.golioth.Device object at 0xffffa74552d0>\nproject = <golioth.golioth.Project object at 0xffffa73ec9d0>\nreleases = {'test_blocks': Release <66ff061a329edc57905aef1d, release_tags=[], device_tags=['66ff0618329edc57905aef1a'], artifact..., release_tags=[], device_tags=['66ff0618329edc57905aef1a'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 0\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727989213854,"stop":1727989213854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727989213855,"stop":1727989213855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727989213856,"stop":1727989213856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727989213856,"stop":1727989213856,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727989213857,"stop":1727989213857,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727989213858,"stop":1727989213858,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727989213859,"stop":1727989213859,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727989213859,"stop":1727989213859,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727989213860,"stop":1727989213860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727989213860,"stop":1727989213860,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727989213861,"stop":1727989213861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727989213861,"stop":1727989213861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727989213862,"stop":1727989265459,"duration":51597},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727989265461,"stop":1727989265851,"duration":390},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727989265852,"stop":1727989266674,"duration":822},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727989266675,"stop":1727989271767,"duration":5092},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727989271768,"stop":1727989272272,"duration":504},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727989272273,"stop":1727989272994,"duration":721},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727989272995,"stop":1727989274523,"duration":1528},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727989287157,"stop":1727989287157,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 2 == 0\n +  where 2 = int('2')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffffa74abc50>\ndevice = <golioth.golioth.Device object at 0xffffa74552d0>\nproject = <golioth.golioth.Project object at 0xffffa73ec9d0>\nreleases = {'test_blocks': Release <66ff061a329edc57905aef1d, release_tags=[], device_tags=['66ff0618329edc57905aef1a'], artifact..., release_tags=[], device_tags=['66ff0618329edc57905aef1a'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 2 == 0\nE            +  where 2 = int('2')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"41b28f00c8a95029","name":"stdout","source":"41b28f00c8a95029.txt","type":"text/plain","size":1111}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727989306925,"stop":1727989307796,"duration":871},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727989307798,"stop":1727989309234,"duration":1436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727989309236,"stop":1727989309976,"duration":740},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727989309978,"stop":1727989309978,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727989309980,"stop":1727989309980,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727989309982,"stop":1727989310415,"duration":433},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727989310417,"stop":1727989310417,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727989310419,"stop":1727989310422,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"tims_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"ea4aebfb3adf"},{"name":"thread","value":"247-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":21,"broken":9,"skipped":0,"passed":46,"unknown":0,"total":76},"items":[{"uid":"f2cca8ac5021d37a","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/f2cca8ac5021d37a","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727986213531,"stop":1727986234246,"duration":20715}},{"uid":"2c533adfe80011a0","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/2c533adfe80011a0","status":"passed","time":{"start":1727983589294,"stop":1727983666323,"duration":77029}},{"uid":"c5b5f6161dc78dda","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/c5b5f6161dc78dda","status":"passed","time":{"start":1727976922350,"stop":1727977003392,"duration":81042}},{"uid":"7bcb6a09d180abbb","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/7bcb6a09d180abbb","status":"passed","time":{"start":1727964685560,"stop":1727964762599,"duration":77039}},{"uid":"88b0a0b8d7fb92d9","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/88b0a0b8d7fb92d9","status":"passed","time":{"start":1727973256764,"stop":1727973337455,"duration":80691}},{"uid":"62f5482bea48fa8d","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/62f5482bea48fa8d","status":"failed","statusDetails":"AssertionError: assert 2 == 1\n +  where 2 = int('2')","time":{"start":1727968861580,"stop":1727968883099,"duration":21519}},{"uid":"c65d3e6152f9d7af","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/c65d3e6152f9d7af","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727968439058,"stop":1727968452451,"duration":13393}},{"uid":"6d6317c4a4f8925c","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/6d6317c4a4f8925c","status":"passed","time":{"start":1727964685560,"stop":1727964762599,"duration":77039}},{"uid":"85c31a8ca8dc6aee","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/85c31a8ca8dc6aee","status":"passed","time":{"start":1727959368616,"stop":1727959449095,"duration":80479}},{"uid":"c98900bcb5ca46db","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/c98900bcb5ca46db","status":"passed","time":{"start":1727956113757,"stop":1727956194390,"duration":80633}},{"uid":"efe0d7e271fe4c45","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/efe0d7e271fe4c45","status":"passed","time":{"start":1727955058734,"stop":1727955136444,"duration":77710}},{"uid":"86a28b99e4d0e550","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/86a28b99e4d0e550","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727951462288,"stop":1727951475563,"duration":13275}},{"uid":"7eafe3b4d063ac15","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/7eafe3b4d063ac15","status":"passed","time":{"start":1727925904334,"stop":1727925981705,"duration":77371}},{"uid":"e6bfc49b623c975a","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/e6bfc49b623c975a","status":"failed","statusDetails":"AssertionError: assert 1 == 0\n +  where 1 = int('1')","time":{"start":1727945037763,"stop":1727945050916,"duration":13153}},{"uid":"bf83665b92c0041a","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/bf83665b92c0041a","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727944102289,"stop":1727944122678,"duration":20389}},{"uid":"507829cb9a9bb744","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/507829cb9a9bb744","status":"passed","time":{"start":1727943370033,"stop":1727943448057,"duration":78024}},{"uid":"292be6c078857560","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/292be6c078857560","status":"passed","time":{"start":1727831539937,"stop":1727831616744,"duration":76807}},{"uid":"ae7fb5e15dafd442","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/ae7fb5e15dafd442","status":"passed","time":{"start":1727925904334,"stop":1727925981705,"duration":77371}},{"uid":"63a51370c476b2a8","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/63a51370c476b2a8","status":"passed","time":{"start":1727925904334,"stop":1727925981705,"duration":77371}},{"uid":"29e730de3d5f6bcc","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/29e730de3d5f6bcc","status":"passed","time":{"start":1727915571958,"stop":1727915649524,"duration":77566}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","tims_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"39fc7d2dd2792aef.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}