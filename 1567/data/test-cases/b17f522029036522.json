{"uid":"b17f522029036522","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6ece6f03e91be687a9089212ed56dba8","time":{"start":1727985998029,"stop":1727986054334,"duration":56305},"status":"failed","statusMessage":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","statusTrace":"board = <linuxboard.LinuxBoard object at 0x7f3e784d6b00>\ndevice = <golioth.golioth.Device object at 0x7f3e784d6f80>\nproject = <golioth.golioth.Project object at 0x7f3e784d79a0>\nreleases = {'test_blocks': Release <66fef9492860a8ee0e3041bd, release_tags=[], device_tags=['66fef9482860a8ee0e3041ba'], artifact..., release_tags=[], device_tags=['66fef9482860a8ee0e3041ba'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 7 == 6\nE            +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"board_name","time":{"start":1727985990414,"stop":1727985990414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727985990414,"stop":1727985990414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727985990414,"stop":1727985990414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727985990414,"stop":1727985990414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"anyio_backend","time":{"start":1727985990414,"stop":1727985990414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727985990415,"stop":1727985990415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727985990415,"stop":1727985990415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727985990415,"stop":1727985990415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727985990415,"stop":1727985990415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727985990415,"stop":1727985990415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727985990415,"stop":1727985990415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727985990415,"stop":1727985990415,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727985990415,"stop":1727985990444,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727985990444,"stop":1727985990678,"duration":234},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727985990678,"stop":1727985991217,"duration":539},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727985991217,"stop":1727985991787,"duration":570},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727985991787,"stop":1727985992018,"duration":231},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727985992018,"stop":1727985992547,"duration":529},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727985992547,"stop":1727985993583,"duration":1036},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727985998029,"stop":1727985998029,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 7 == 6\n +  where 7 = int('7')","statusTrace":"board = <linuxboard.LinuxBoard object at 0x7f3e784d6b00>\ndevice = <golioth.golioth.Device object at 0x7f3e784d6f80>\nproject = <golioth.golioth.Project object at 0x7f3e784d79a0>\nreleases = {'test_blocks': Release <66fef9492860a8ee0e3041bd, release_tags=[], device_tags=['66fef9482860a8ee0e3041ba'], artifact..., release_tags=[], device_tags=['66fef9482860a8ee0e3041ba'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 7 == 6\nE            +  where 7 = int('7')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"620940ce9843543b","name":"stdout","source":"620940ce9843543b.txt","type":"text/plain","size":4491}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727986054364,"stop":1727986055129,"duration":765},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727986055130,"stop":1727986056298,"duration":1168},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727986056298,"stop":1727986056863,"duration":565},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727986056864,"stop":1727986056864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727986056864,"stop":1727986056864,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727986056864,"stop":1727986057185,"duration":321},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727986057185,"stop":1727986057185,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727986057185,"stop":1727986057188,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"linux"},{"name":"tag","value":"linux"},{"name":"parentSuite","value":"hil.linux.linux"},{"name":"tag"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"fv-az801-956"},{"name":"thread","value":"3439-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'linux'"},{"name":"platform_name","value":"'linux'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":1,"skipped":0,"passed":74,"unknown":0,"total":79},"items":[{"uid":"ab72e05047efa7ee","reportUrl":"https://golioth.github.io/allure-reports/1566//#testresult/ab72e05047efa7ee","status":"passed","time":{"start":1727984427641,"stop":1727984503008,"duration":75367}},{"uid":"d8b5f01fd90ec88b","reportUrl":"https://golioth.github.io/allure-reports/1560//#testresult/d8b5f01fd90ec88b","status":"passed","time":{"start":1727975126045,"stop":1727975201993,"duration":75948}},{"uid":"d60c0ca1fd8a1dd4","reportUrl":"https://golioth.github.io/allure-reports/1556//#testresult/d60c0ca1fd8a1dd4","status":"passed","time":{"start":1727969984275,"stop":1727970060145,"duration":75870}},{"uid":"877abeff74cd361d","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/877abeff74cd361d","status":"passed","time":{"start":1727969456035,"stop":1727969532857,"duration":76822}},{"uid":"21a025f24df4a878","reportUrl":"https://golioth.github.io/allure-reports/1547//#testresult/21a025f24df4a878","status":"passed","time":{"start":1727967916677,"stop":1727967992709,"duration":76032}},{"uid":"27b8f62ce3d4b313","reportUrl":"https://golioth.github.io/allure-reports/1544//#testresult/27b8f62ce3d4b313","status":"passed","time":{"start":1727965252450,"stop":1727965328193,"duration":75743}},{"uid":"865bb532f0ab33db","reportUrl":"https://golioth.github.io/allure-reports/1543//#testresult/865bb532f0ab33db","status":"failed","statusDetails":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","time":{"start":1727964977815,"stop":1727965019148,"duration":41333}},{"uid":"696756927e1148b","reportUrl":"https://golioth.github.io/allure-reports/1542//#testresult/696756927e1148b","status":"passed","time":{"start":1727964262666,"stop":1727964338226,"duration":75560}},{"uid":"27faa933484f603e","reportUrl":"https://golioth.github.io/allure-reports/1536//#testresult/27faa933484f603e","status":"passed","time":{"start":1727956213016,"stop":1727956289933,"duration":76917}},{"uid":"2ec0cbe8f75bcbf7","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/2ec0cbe8f75bcbf7","status":"passed","time":{"start":1727942601131,"stop":1727942678282,"duration":77151}},{"uid":"c76d14a871ea7176","reportUrl":"https://golioth.github.io/allure-reports/1534//#testresult/c76d14a871ea7176","status":"passed","time":{"start":1727942958116,"stop":1727943033920,"duration":75804}},{"uid":"16212c05601ccf94","reportUrl":"https://golioth.github.io/allure-reports/1525//#testresult/16212c05601ccf94","status":"passed","time":{"start":1727906036389,"stop":1727906112527,"duration":76138}},{"uid":"9c2f505ac730b232","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/9c2f505ac730b232","status":"passed","time":{"start":1727932069963,"stop":1727932146200,"duration":76237}},{"uid":"afe2cef2aad7c485","reportUrl":"https://golioth.github.io/allure-reports/1530//#testresult/afe2cef2aad7c485","status":"passed","time":{"start":1727942601131,"stop":1727942678282,"duration":77151}},{"uid":"c6da3e76c1536e80","reportUrl":"https://golioth.github.io/allure-reports/1529//#testresult/c6da3e76c1536e80","status":"failed","statusDetails":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","time":{"start":1727942235860,"stop":1727942278273,"duration":42413}},{"uid":"b7ef12d683798be2","reportUrl":"https://golioth.github.io/allure-reports/1528//#testresult/b7ef12d683798be2","status":"passed","time":{"start":1727942019559,"stop":1727942095780,"duration":76221}},{"uid":"43e38116a4a0637b","reportUrl":"https://golioth.github.io/allure-reports/1524//#testresult/43e38116a4a0637b","status":"passed","time":{"start":1727941961524,"stop":1727942037110,"duration":75586}},{"uid":"5a111f29b5b4e1af","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/5a111f29b5b4e1af","status":"passed","time":{"start":1727932069963,"stop":1727932146200,"duration":76237}},{"uid":"25199e82f53ef026","reportUrl":"https://golioth.github.io/allure-reports/1527//#testresult/25199e82f53ef026","status":"passed","time":{"start":1727925425997,"stop":1727925501471,"duration":75474}},{"uid":"741e84dc9a2a2953","reportUrl":"https://golioth.github.io/allure-reports/1526//#testresult/741e84dc9a2a2953","status":"passed","time":{"start":1727915107080,"stop":1727915184492,"duration":77412}}]},"tags":["linux","anyio","@pytest.mark.usefixtures('anyio_backend')"]},"source":"b17f522029036522.json","parameterValues":["'linux'","'linux'"]}