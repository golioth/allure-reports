{"uid":"f942d997ce62aaad","name":"test_int_too_large","fullName":"tests.hil.tests.settings.test_settings#test_int_too_large","historyId":"904917f16e15151e1ed741401de93920","time":{"start":1728576478480,"stop":1728576492586,"duration":14106},"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9d01f5d0>\ndevice = <golioth.golioth.Device object at 0xffff9d05aad0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff9d05aad0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1728576403201,"stop":1728576403201,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1728576403202,"stop":1728576403202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1728576403203,"stop":1728576403203,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1728576403204,"stop":1728576403204,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1728576403204,"stop":1728576403205,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1728576403205,"stop":1728576403205,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1728576403206,"stop":1728576403206,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1728576403206,"stop":1728576403206,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1728576403207,"stop":1728576403207,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1728576403207,"stop":1728576403208,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1728576403208,"stop":1728576403208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1728576403208,"stop":1728576403208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1728576403209,"stop":1728576403693,"duration":484},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1728576403693,"stop":1728576453506,"duration":49813},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1728576453508,"stop":1728576454657,"duration":1149},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1728576454657,"stop":1728576469093,"duration":14436},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert (False or 4 is None)","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9d01f5d0>\ndevice = <golioth.golioth.Device object at 0xffff9d05aad0>\n\n    async def test_int_too_large(board, device):\n        await device.settings.set('TEST_INT', 2**33)\n    \n        with pytest.raises(trio.TooSlowError):\n            await board.wait_for_regex_in_line('Received test_int: 8589934592', timeout_s=10)\n    \n        # Wait for device to respond to server\n        await trio.sleep(1)\n    \n>       await assert_settings_error(device, 'TEST_INT', VALUE_OUTSIDE_RANGE)\n\ntests/hil/tests/settings/test_settings.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndevice = <golioth.golioth.Device object at 0xffff9d05aad0>, key = 'TEST_INT'\nerror = 4\n\n    async def assert_settings_error(device, key, error):\n        await device.refresh()\n    \n        key_found = False\n    \n        for e in device.info['metadata']['lastSettingsStatus']['errors']:\n            if e['key'] == key:\n                key_found = True\n                assert e['code'] == error\n    \n>       assert key_found or error is None\nE       assert (False or 4 is None)\n\ntests/hil/tests/settings/test_settings.py:54: AssertionError","steps":[],"attachments":[{"uid":"d92a6ba65242f212","name":"stdout","source":"d92a6ba65242f212.txt","type":"text/plain","size":3689}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1728576632242,"stop":1728576632242,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1728576632244,"stop":1728576632793,"duration":549},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1728576632795,"stop":1728576632803,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1728576632805,"stop":1728576632807,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"9d2f1b18bc93"},{"name":"thread","value":"254-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":27,"broken":2,"skipped":0,"passed":104,"unknown":0,"total":133},"items":[{"uid":"c0523c0cbffd8c75","reportUrl":"https://golioth.github.io/allure-reports/1623//#testresult/c0523c0cbffd8c75","status":"passed","time":{"start":1728566867354,"stop":1728566880577,"duration":13223}},{"uid":"c87d81d06ed0429a","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/c87d81d06ed0429a","status":"passed","time":{"start":1728491631774,"stop":1728491645014,"duration":13240}},{"uid":"b39b97457fe84c1c","reportUrl":"https://golioth.github.io/allure-reports/1622//#testresult/b39b97457fe84c1c","status":"passed","time":{"start":1728520535802,"stop":1728520549619,"duration":13817}},{"uid":"d49bdf9ab78ce13","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/d49bdf9ab78ce13","status":"passed","time":{"start":1728319181227,"stop":1728319194161,"duration":12934}},{"uid":"69431cdbfdc66017","reportUrl":"https://golioth.github.io/allure-reports/1621//#testresult/69431cdbfdc66017","status":"passed","time":{"start":1728491631774,"stop":1728491645014,"duration":13240}},{"uid":"d5a878bab282d8ce","reportUrl":"https://golioth.github.io/allure-reports/1619//#testresult/d5a878bab282d8ce","status":"passed","time":{"start":1728483488786,"stop":1728483502850,"duration":14064}},{"uid":"858f0f43a95a951d","reportUrl":"https://golioth.github.io/allure-reports/1618//#testresult/858f0f43a95a951d","status":"passed","time":{"start":1728434095293,"stop":1728434108215,"duration":12922}},{"uid":"cbdc1557a9083994","reportUrl":"https://golioth.github.io/allure-reports/1617//#testresult/cbdc1557a9083994","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728424713140,"stop":1728424726359,"duration":13219}},{"uid":"f2ad5f8ea9baa6ce","reportUrl":"https://golioth.github.io/allure-reports/1606//#testresult/f2ad5f8ea9baa6ce","status":"passed","time":{"start":1728330494606,"stop":1728330508315,"duration":13709}},{"uid":"bbc3bb9f632fe162","reportUrl":"https://golioth.github.io/allure-reports/1604//#testresult/bbc3bb9f632fe162","status":"passed","time":{"start":1728327192556,"stop":1728327205929,"duration":13373}},{"uid":"7c3778da3f995b23","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/7c3778da3f995b23","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728338844599,"stop":1728338857821,"duration":13222}},{"uid":"51cc4c45bf98290e","reportUrl":"https://golioth.github.io/allure-reports/1616//#testresult/51cc4c45bf98290e","status":"passed","time":{"start":1728399254482,"stop":1728399267238,"duration":12756}},{"uid":"1ab9c64388aa5458","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/1ab9c64388aa5458","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728338844599,"stop":1728338857821,"duration":13222}},{"uid":"6b183fa4c8b81ef","reportUrl":"https://golioth.github.io/allure-reports/1614//#testresult/6b183fa4c8b81ef","status":"passed","time":{"start":1728347865489,"stop":1728347878439,"duration":12950}},{"uid":"61e3ada0456ef7cf","reportUrl":"https://golioth.github.io/allure-reports/1613//#testresult/61e3ada0456ef7cf","status":"passed","time":{"start":1728339891912,"stop":1728339906597,"duration":14685}},{"uid":"4a946f1a25387cb1","reportUrl":"https://golioth.github.io/allure-reports/1611//#testresult/4a946f1a25387cb1","status":"failed","statusDetails":"AssertionError: assert (False or 4 is None)","time":{"start":1728338844599,"stop":1728338857821,"duration":13222}},{"uid":"e344eb29e6c464b2","reportUrl":"https://golioth.github.io/allure-reports/1609//#testresult/e344eb29e6c464b2","status":"passed","time":{"start":1728335797050,"stop":1728335809793,"duration":12743}},{"uid":"1e37b6ee63f51551","reportUrl":"https://golioth.github.io/allure-reports/1599//#testresult/1e37b6ee63f51551","status":"passed","time":{"start":1728316391637,"stop":1728316404377,"duration":12740}},{"uid":"cf17238eb430ec00","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/cf17238eb430ec00","status":"passed","time":{"start":1728319181227,"stop":1728319194161,"duration":12934}},{"uid":"b662cd732d844aae","reportUrl":"https://golioth.github.io/allure-reports/1600//#testresult/b662cd732d844aae","status":"passed","time":{"start":1728319181227,"stop":1728319194161,"duration":12934}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"f942d997ce62aaad.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}