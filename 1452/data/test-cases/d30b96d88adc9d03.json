{"uid":"d30b96d88adc9d03","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"efe21cbbb5934f0489b65e4b580675bb","time":{"start":1727381613078,"stop":1727381641398,"duration":28320},"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <rak5010.RAK5010 object at 0xffff84a66a90>\ndevice = <golioth.golioth.Device object at 0xffff84a3ead0>\nproject = <golioth.golioth.Project object at 0xffff84b4a050>\nreleases = {'test_blocks': Release <66f5c0576c7454038ba9d742, release_tags=[], device_tags=['66f5c0566c7454038ba9d73f'], artifact..., release_tags=[], device_tags=['66f5c0566c7454038ba9d73f'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727381518367,"stop":1727381518367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727381518368,"stop":1727381518368,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727381518369,"stop":1727381518370,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727381518369,"stop":1727381518369,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727381518370,"stop":1727381518370,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727381518371,"stop":1727381518371,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727381518372,"stop":1727381518372,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727381518372,"stop":1727381518372,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727381518373,"stop":1727381518373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727381518373,"stop":1727381518373,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727381518374,"stop":1727381518374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727381518374,"stop":1727381518374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727381518375,"stop":1727381559538,"duration":41163},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727381559540,"stop":1727381560074,"duration":534},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727381560075,"stop":1727381560918,"duration":843},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727381560919,"stop":1727381589261,"duration":28342},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727381589262,"stop":1727381589716,"duration":454},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727381589716,"stop":1727381590523,"duration":807},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727381590523,"stop":1727381592116,"duration":1593},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727381613075,"stop":1727381613076,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n +  where 3 = int('3')","statusTrace":"board = <rak5010.RAK5010 object at 0xffff84a66a90>\ndevice = <golioth.golioth.Device object at 0xffff84a3ead0>\nproject = <golioth.golioth.Project object at 0xffff84b4a050>\nreleases = {'test_blocks': Release <66f5c0576c7454038ba9d742, release_tags=[], device_tags=['66f5c0566c7454038ba9d73f'], artifact..., release_tags=[], device_tags=['66f5c0566c7454038ba9d73f'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 3 == 2\nE            +  where 3 = int('3')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"1c7183e68f3560e6","name":"stdout","source":"1c7183e68f3560e6.txt","type":"text/plain","size":1929}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727381641574,"stop":1727381642419,"duration":845},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727381642422,"stop":1727381643866,"duration":1444},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727381643868,"stop":1727381644632,"duration":764},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727381644634,"stop":1727381644634,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727381644636,"stop":1727381644636,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727381644638,"stop":1727381645071,"duration":433},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727381645074,"stop":1727381645074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727381645076,"stop":1727381645079,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"rak5010"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"hil.zephyr.rak5010"},{"name":"tag","value":"mikes_testbench"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"6c9a43b88515"},{"name":"thread","value":"257-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'rak5010'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":2,"skipped":0,"passed":13,"unknown":0,"total":16},"items":[{"uid":"8abbcee76e86ad8b","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/8abbcee76e86ad8b","status":"passed","time":{"start":1727379306983,"stop":1727379390615,"duration":83632}},{"uid":"fbb54adf2232017b","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/fbb54adf2232017b","status":"passed","time":{"start":1727376533463,"stop":1727376615437,"duration":81974}},{"uid":"36c3863cd333af9f","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/36c3863cd333af9f","status":"passed","time":{"start":1727371347601,"stop":1727371430134,"duration":82533}},{"uid":"843f8d59cda716cb","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/843f8d59cda716cb","status":"passed","time":{"start":1727367158206,"stop":1727367240040,"duration":81834}},{"uid":"d1e886890f995d65","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/d1e886890f995d65","status":"passed","time":{"start":1727363028532,"stop":1727363110618,"duration":82086}},{"uid":"c36170cc71a19927","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/c36170cc71a19927","status":"passed","time":{"start":1727363513046,"stop":1727363594771,"duration":81725}},{"uid":"d8beb8225e71824e","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/d8beb8225e71824e","status":"passed","time":{"start":1727359257231,"stop":1727359339184,"duration":81953}},{"uid":"7fd172b353467cc9","reportUrl":"https://golioth.github.io/allure-reports/1432//#testresult/7fd172b353467cc9","status":"passed","time":{"start":1727314178574,"stop":1727314260527,"duration":81953}},{"uid":"e3ef767b6fb1dbc","reportUrl":"https://golioth.github.io/allure-reports/1429//#testresult/e3ef767b6fb1dbc","status":"passed","time":{"start":1727310793058,"stop":1727310875009,"duration":81951}},{"uid":"aecc0ec32673ecc9","reportUrl":"https://golioth.github.io/allure-reports/1428//#testresult/aecc0ec32673ecc9","status":"passed","time":{"start":1727308086664,"stop":1727308168547,"duration":81883}},{"uid":"8cf6a0d09cd738b3","reportUrl":"https://golioth.github.io/allure-reports/1424//#testresult/8cf6a0d09cd738b3","status":"passed","time":{"start":1727305108182,"stop":1727305191723,"duration":83541}},{"uid":"63a75344af94d933","reportUrl":"https://golioth.github.io/allure-reports/1422//#testresult/63a75344af94d933","status":"passed","time":{"start":1727300383005,"stop":1727300467729,"duration":84724}},{"uid":"97efc163b1a14259","reportUrl":"https://golioth.github.io/allure-reports/1421//#testresult/97efc163b1a14259","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727294112241,"stop":1727294197121,"duration":84880}},{"uid":"2fb1462542f613f1","reportUrl":"https://golioth.github.io/allure-reports/1420//#testresult/2fb1462542f613f1","status":"passed","time":{"start":1727288028011,"stop":1727288110153,"duration":82142}},{"uid":"3c411896f4ea4467","reportUrl":"https://golioth.github.io/allure-reports/1419//#testresult/3c411896f4ea4467","status":"broken","statusDetails":"FileNotFoundError: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-ZEPHYR_RAK5010_Zephyr_B1E5A88410C9C828-if00'","time":{"start":1727284107360,"stop":1727284107360,"duration":0}}]},"tags":["anyio","mikes_testbench","@pytest.mark.usefixtures('anyio_backend')","rak5010","zephyr"]},"source":"d30b96d88adc9d03.json","parameterValues":["'rak5010'","'zephyr'"]}