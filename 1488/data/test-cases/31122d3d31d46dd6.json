{"uid":"31122d3d31d46dd6","name":"test_set_int_range","fullName":"tests.hil.tests.settings.test_settings#test_set_int_range","historyId":"a96a778ab1fd16107e68789a2395aa65","time":{"start":1727768233368,"stop":1727768238564,"duration":5196},"status":"broken","statusMessage":"httpx.ConnectTimeout","statusTrace":"@contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n>           yield\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:377: in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:216: in handle_async_request\n    raise exc from None\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection_pool.py:196: in handle_async_request\n    response = await connection.handle_async_request(\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:99: in handle_async_request\n    raise exc\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:76: in handle_async_request\n    stream = await self._connect(request)\n/usr/local/lib/python3.11/dist-packages/httpcore/_async/connection.py:122: in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/auto.py:30: in connect_tcp\n    return await self._backend.connect_tcp(\n/usr/local/lib/python3.11/dist-packages/httpcore/_backends/trio.py:130: in connect_tcp\n    with map_exceptions(exc_map):\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmap = {<class 'trio.TooSlowError'>: <class 'httpcore.ConnectTimeout'>, <class 'trio.BrokenResourceError'>: <class 'httpcore.ConnectError'>, <class 'OSError'>: <class 'httpcore.ConnectError'>}\n\n    @contextlib.contextmanager\n    def map_exceptions(map: ExceptionMapping) -> Iterator[None]:\n        try:\n            yield\n        except Exception as exc:  # noqa: PIE786\n            for from_exc, to_exc in map.items():\n                if isinstance(exc, from_exc):\n>                   raise to_exc(exc) from exc\nE                   httpcore.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpcore/_exceptions.py:14: ConnectTimeout\n\nThe above exception was the direct cause of the following exception:\n\nboard = <espidfboard.ESPIDFBoard object at 0xffffadf7bd90>\ndevice = <golioth.golioth.Device object at 0xffffadf14190>\n\n    async def test_set_int_range(board, device):\n>       await device.settings.set('TEST_INT_RANGE', 5)\n\ntests/hil/tests/settings/test_settings.py:91: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:704: in set\n    setting = await self.device.settings.get(key)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:674: in get\n    settings = await self.get_all()\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:670: in get_all\n    response = await self.device.get('settings')\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:80: in wrapper\n    resp: httpx.Response = await func(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/golioth/golioth.py:98: in get\n    return await c.get(*args, **kwargs)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1814: in get\n    return await self.request(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1585: in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1674: in send\n    response = await self._send_handling_auth(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1702: in _send_handling_auth\n    response = await self._send_handling_redirects(\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1739: in _send_handling_redirects\n    response = await self._send_single_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_client.py:1776: in _send_single_request\n    response = await transport.handle_async_request(request)\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:376: in handle_async_request\n    with map_httpcore_exceptions():\n/usr/lib/python3.11/contextlib.py:155: in __exit__\n    self.gen.throw(typ, value, traceback)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n    @contextlib.contextmanager\n    def map_httpcore_exceptions() -> typing.Iterator[None]:\n        try:\n            yield\n        except Exception as exc:\n            mapped_exc = None\n    \n            for from_exc, to_exc in HTTPCORE_EXC_MAP.items():\n                if not isinstance(exc, from_exc):\n                    continue\n                # We want to map to the most specific exception we can find.\n                # Eg if `exc` is an `httpcore.ReadTimeout`, we want to map to\n                # `httpx.ReadTimeout`, not just `httpx.TimeoutException`.\n                if mapped_exc is None or issubclass(to_exc, mapped_exc):\n                    mapped_exc = to_exc\n    \n            if mapped_exc is None:  # pragma: no cover\n                raise\n    \n            message = str(exc)\n>           raise mapped_exc(message) from exc\nE           httpx.ConnectTimeout\n\n/usr/local/lib/python3.11/dist-packages/httpx/_transports/default.py:89: ConnectTimeout","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727768133803,"stop":1727768133803,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727768133804,"stop":1727768133804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727768133805,"stop":1727768133806,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727768133805,"stop":1727768133805,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727768133806,"stop":1727768133806,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727768133807,"stop":1727768133807,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727768133808,"stop":1727768133808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727768133808,"stop":1727768133808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727768133809,"stop":1727768133809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727768133809,"stop":1727768133809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727768133810,"stop":1727768133810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727768133810,"stop":1727768133810,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727768133811,"stop":1727768134306,"duration":495},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727768134307,"stop":1727768173852,"duration":39545},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727768173854,"stop":1727768175137,"duration":1283},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727768175138,"stop":1727768193987,"duration":18849},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"setup::0","time":{"start":1727768371470,"stop":1727768371470,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727768371475,"stop":1727768372039,"duration":564},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727768372042,"stop":1727768372046,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727768372048,"stop":1727768372050,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32s3_devkitc_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32s3_devkitc_espidf"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_settings"},{"name":"host","value":"8dc01f75a90e"},{"name":"thread","value":"271-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.settings.test_settings"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32s3_devkitc_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":39,"unknown":0,"total":40},"items":[{"uid":"6ff6b241be726536","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/6ff6b241be726536","status":"passed","time":{"start":1727767650810,"stop":1727767657781,"duration":6971}},{"uid":"6f82a1982ee9f815","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/6f82a1982ee9f815","status":"passed","time":{"start":1727762449628,"stop":1727762454518,"duration":4890}},{"uid":"e233ebeb65df5708","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/e233ebeb65df5708","status":"passed","time":{"start":1727743133195,"stop":1727743137466,"duration":4271}},{"uid":"5e32671ab27d8131","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/5e32671ab27d8131","status":"passed","time":{"start":1727730789422,"stop":1727730795246,"duration":5824}},{"uid":"2565e634b7bbecd4","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/2565e634b7bbecd4","status":"passed","time":{"start":1727656715346,"stop":1727656721422,"duration":6076}},{"uid":"2f8d76af384a3b72","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/2f8d76af384a3b72","status":"passed","time":{"start":1727570314768,"stop":1727570320598,"duration":5830}},{"uid":"bc17563a515a38ff","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/bc17563a515a38ff","status":"passed","time":{"start":1727544051329,"stop":1727544056509,"duration":5180}},{"uid":"1b480f76e0067c40","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/1b480f76e0067c40","status":"passed","time":{"start":1727542453598,"stop":1727542459423,"duration":5825}},{"uid":"dd7ac5efb7271a97","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/dd7ac5efb7271a97","status":"passed","time":{"start":1727541522560,"stop":1727541528487,"duration":5927}},{"uid":"f1c118776a43cbec","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/f1c118776a43cbec","status":"passed","time":{"start":1727483774222,"stop":1727483778601,"duration":4379}},{"uid":"b3406c726151c9ee","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/b3406c726151c9ee","status":"passed","time":{"start":1727475887929,"stop":1727475894370,"duration":6441}},{"uid":"d490affb8684f2b9","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/d490affb8684f2b9","status":"passed","time":{"start":1727461161140,"stop":1727461167273,"duration":6133}},{"uid":"2d2c7e31efefc5e6","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/2d2c7e31efefc5e6","status":"passed","time":{"start":1727461161140,"stop":1727461167273,"duration":6133}},{"uid":"80133833a700dc1c","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/80133833a700dc1c","status":"passed","time":{"start":1727455758151,"stop":1727455763654,"duration":5503}},{"uid":"4cdbbe61d7e4889d","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/4cdbbe61d7e4889d","status":"passed","time":{"start":1727455010321,"stop":1727455014998,"duration":4677}},{"uid":"28143224b326ae9b","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/28143224b326ae9b","status":"passed","time":{"start":1727387894174,"stop":1727387899076,"duration":4902}},{"uid":"7db541c544965fdc","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/7db541c544965fdc","status":"passed","time":{"start":1727363081470,"stop":1727363087091,"duration":5621}},{"uid":"22c9081320a57461","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/22c9081320a57461","status":"passed","time":{"start":1727397396263,"stop":1727397401617,"duration":5354}},{"uid":"9b6549a458bdcb69","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/9b6549a458bdcb69","status":"passed","time":{"start":1727394366693,"stop":1727394371290,"duration":4597}},{"uid":"754ee43df75596d9","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/754ee43df75596d9","status":"passed","time":{"start":1727387764149,"stop":1727387768343,"duration":4194}}]},"tags":["esp32s3_devkitc_espidf","esp-idf","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')"]},"source":"31122d3d31d46dd6.json","parameterValues":["'esp32s3_devkitc_espidf'","'esp-idf'"]}