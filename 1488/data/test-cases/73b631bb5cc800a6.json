{"uid":"73b631bb5cc800a6","name":"test_reason_and_state","fullName":"tests.hil.tests.ota.test_ota#test_reason_and_state","historyId":"6d1f08dc1ecf1c9cd2ea05e90cb8bc0d","time":{"start":1727767596202,"stop":1727767640604,"duration":44402},"status":"failed","statusMessage":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9902c650>\ndevice = <golioth.golioth.Device object at 0xffff99083810>\nproject = <golioth.golioth.Project object at 0xffff9a225f90>\nreleases = {'test_blocks': Release <66fba41d9816a3c02f198db0, release_tags=[], device_tags=['66fba41b9816a3c02f198dac'], artifact..., release_tags=[], device_tags=['66fba41b9816a3c02f198dac'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 5 == 4\nE            +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"anyio_backend","time":{"start":1727767525220,"stop":1727767525220,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board_name","time":{"start":1727767525221,"stop":1727767525221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"port","time":{"start":1727767525222,"stop":1727767525222,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"baud","time":{"start":1727767525223,"stop":1727767525224,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727767525225,"stop":1727767525225,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727767525226,"stop":1727767525226,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"fw_image","time":{"start":1727767525227,"stop":1727767525227,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"serial_number","time":{"start":1727767525228,"stop":1727767525228,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727767525229,"stop":1727767525229,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"bmp_port","time":{"start":1727767525229,"stop":1727767525229,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727767525230,"stop":1727767525230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727767525230,"stop":1727767525230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board","time":{"start":1727767525231,"stop":1727767574600,"duration":49369},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727767574602,"stop":1727767575092,"duration":490},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727767575092,"stop":1727767575994,"duration":902},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1727767575995,"stop":1727767578855,"duration":2860},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts","time":{"start":1727767578857,"stop":1727767579404,"duration":547},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag","time":{"start":1727767579405,"stop":1727767580221,"duration":816},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases","time":{"start":1727767580221,"stop":1727767581931,"duration":1710},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases_teardown","time":{"start":1727767596199,"stop":1727767596200,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 5 == 4\n +  where 5 = int('5')","statusTrace":"board = <espidfboard.ESPIDFBoard object at 0xffff9902c650>\ndevice = <golioth.golioth.Device object at 0xffff99083810>\nproject = <golioth.golioth.Project object at 0xffff9a225f90>\nreleases = {'test_blocks': Release <66fba41d9816a3c02f198db0, release_tags=[], device_tags=['66fba41b9816a3c02f198dac'], artifact..., release_tags=[], device_tags=['66fba41b9816a3c02f198dac'], artifact_ids=['65f224ee02bfe41201d4b3c9'], rollout=False>}\n\n    async def test_reason_and_state(board, device, project, releases):\n        await project.releases.rollout_set(releases[\"test_reasons\"].id, True)\n        # Test reason and state code updates\n    \n        for i, r in enumerate(golioth_ota_reason):\n            await board.wait_for_regex_in_line(\"OTA status reported successfully\", timeout_s=20)\n    \n            # Wait for state update to propagate\n            await trio.sleep(2)\n    \n            await device.refresh()\n    \n            print(f\"Test reason code: {r}\")\n            print(f\"Received reason: {device.metadata['update']['lobster']['reason']}\")\n    \n>           assert int(device.metadata['update']['lobster']['reasonCode']) == i\nE           AssertionError: assert 5 == 4\nE            +  where 5 = int('5')\n\ntests/hil/tests/ota/test_ota.py:189: AssertionError","steps":[],"attachments":[{"uid":"7f4a4bd6e18bc929","name":"stdout","source":"7f4a4bd6e18bc929.txt","type":"text/plain","size":1856}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"releases_teardown::0","time":{"start":1727767640739,"stop":1727767641719,"duration":980},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"releases::0","time":{"start":1727767641721,"stop":1727767643327,"duration":1606},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tag::0","time":{"start":1727767643329,"stop":1727767644208,"duration":879},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"artifacts::0","time":{"start":1727767644210,"stop":1727767644210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1727767644212,"stop":1727767644212,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727767644214,"stop":1727767644658,"duration":444},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727767644661,"stop":1727767644661,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"board::0","time":{"start":1727767644663,"stop":1727767644673,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"esp32c3_devkitm_espidf"},{"name":"tag","value":"esp-idf"},{"name":"parentSuite","value":"hil.esp-idf.esp32c3_devkitm_espidf"},{"name":"tag","value":"jons_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_ota"},{"name":"host","value":"799687e7a50d"},{"name":"thread","value":"244-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.hil.tests.ota.test_ota"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'esp32c3_devkitm_espidf'"},{"name":"platform_name","value":"'esp-idf'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":2,"skipped":0,"passed":37,"unknown":0,"total":43},"items":[{"uid":"ba62c2f1c2e736ab","reportUrl":"https://golioth.github.io/allure-reports/1487//#testresult/ba62c2f1c2e736ab","status":"failed","statusDetails":"AssertionError: assert 4 == 3\n +  where 4 = int('4')","time":{"start":1727766742030,"stop":1727766777753,"duration":35723}},{"uid":"82f2b2fb05ec021b","reportUrl":"https://golioth.github.io/allure-reports/1484//#testresult/82f2b2fb05ec021b","status":"passed","time":{"start":1727762106832,"stop":1727762186308,"duration":79476}},{"uid":"d7fd61463f9e08a1","reportUrl":"https://golioth.github.io/allure-reports/1483//#testresult/d7fd61463f9e08a1","status":"passed","time":{"start":1727761187245,"stop":1727761267780,"duration":80535}},{"uid":"3a5a37abed2571b1","reportUrl":"https://golioth.github.io/allure-reports/1478//#testresult/3a5a37abed2571b1","status":"passed","time":{"start":1727758320987,"stop":1727758402081,"duration":81094}},{"uid":"780fb1ec0828ce8b","reportUrl":"https://golioth.github.io/allure-reports/1477//#testresult/780fb1ec0828ce8b","status":"passed","time":{"start":1727742830525,"stop":1727742909583,"duration":79058}},{"uid":"d351a389becedb89","reportUrl":"https://golioth.github.io/allure-reports/1476//#testresult/d351a389becedb89","status":"passed","time":{"start":1727730416679,"stop":1727730493493,"duration":76814}},{"uid":"92fcf543fad7fdd9","reportUrl":"https://golioth.github.io/allure-reports/1475//#testresult/92fcf543fad7fdd9","status":"passed","time":{"start":1727656340895,"stop":1727656418232,"duration":77337}},{"uid":"57f9c4620cd7dc5e","reportUrl":"https://golioth.github.io/allure-reports/1474//#testresult/57f9c4620cd7dc5e","status":"passed","time":{"start":1727570011718,"stop":1727570089112,"duration":77394}},{"uid":"e18a34c3d1810040","reportUrl":"https://golioth.github.io/allure-reports/1472//#testresult/e18a34c3d1810040","status":"passed","time":{"start":1727542975420,"stop":1727543056651,"duration":81231}},{"uid":"6e46b4818815f92b","reportUrl":"https://golioth.github.io/allure-reports/1473//#testresult/6e46b4818815f92b","status":"passed","time":{"start":1727542089054,"stop":1727542169046,"duration":79992}},{"uid":"2f1bb3e485dd7563","reportUrl":"https://golioth.github.io/allure-reports/1470//#testresult/2f1bb3e485dd7563","status":"passed","time":{"start":1727541186897,"stop":1727541268948,"duration":82051}},{"uid":"181f7c79703b9b0d","reportUrl":"https://golioth.github.io/allure-reports/1468//#testresult/181f7c79703b9b0d","status":"passed","time":{"start":1727483469825,"stop":1727483549925,"duration":80100}},{"uid":"b3fa57365997e11f","reportUrl":"https://golioth.github.io/allure-reports/1467//#testresult/b3fa57365997e11f","status":"passed","time":{"start":1727475533536,"stop":1727475612932,"duration":79396}},{"uid":"291eec0a68ae7fbf","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/291eec0a68ae7fbf","status":"passed","time":{"start":1727460810508,"stop":1727460888849,"duration":78341}},{"uid":"6d77cef11a95b336","reportUrl":"https://golioth.github.io/allure-reports/1466//#testresult/6d77cef11a95b336","status":"passed","time":{"start":1727460810508,"stop":1727460888849,"duration":78341}},{"uid":"dfcf94bb3d39a6cd","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/dfcf94bb3d39a6cd","status":"passed","time":{"start":1727362145993,"stop":1727362227041,"duration":81048}},{"uid":"588b3b7a8dc225d2","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/588b3b7a8dc225d2","status":"passed","time":{"start":1727453903146,"stop":1727453982433,"duration":79287}},{"uid":"b70d881839760b8a","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/b70d881839760b8a","status":"passed","time":{"start":1727386819743,"stop":1727386900349,"duration":80606}},{"uid":"154b2bea03ac9109","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/154b2bea03ac9109","status":"passed","time":{"start":1727453005095,"stop":1727453086217,"duration":81122}},{"uid":"5457e3f4830aa5c5","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/5457e3f4830aa5c5","status":"broken","statusDetails":"trio.TooSlowError","time":{"start":1727397057630,"stop":1727397138642,"duration":81012}}]},"tags":["esp-idf","jons_orange_pi","anyio","esp32c3_devkitm_espidf","@pytest.mark.usefixtures('anyio_backend')"]},"source":"73b631bb5cc800a6.json","parameterValues":["'esp32c3_devkitm_espidf'","'esp-idf'"]}