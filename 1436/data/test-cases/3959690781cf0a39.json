{"uid":"3959690781cf0a39","name":"test_rpc","fullName":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample#test_rpc","historyId":"304ee2a1c41b0469e6badbdc5c89ddc4","time":{"start":1727457391280,"stop":1727457407701,"duration":16421},"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa8ac99d0>\ndevice = <golioth.golioth.Device object at 0xffffa8ae8750>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"anyio_backend","time":{"start":1727457360680,"stop":1727457360680,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_psk","time":{"start":1727457360681,"stop":1727457360681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"wifi_ssid","time":{"start":1727457360681,"stop":1727457360681,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"twister_harness_config","time":{"start":1727457360682,"stop":1727457360682,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_name","time":{"start":1727457360682,"stop":1727457360682,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object","time":{"start":1727457360683,"stop":1727457360685,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_url","time":{"start":1727457360686,"stop":1727457360686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_key","time":{"start":1727457360686,"stop":1727457360686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project","time":{"start":1727457360687,"stop":1727457361380,"duration":693},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device","time":{"start":1727457361381,"stop":1727457363882,"duration":2501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"dut","time":{"start":1727457363882,"stop":1727457388074,"duration":24192},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"shell","time":{"start":1727457388075,"stop":1727457391273,"duration":3198},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"AttributeError: 'RPCTimeout' object has no attribute 'status_code'","statusTrace":"shell = <twister_harness.helpers.shell.Shell object at 0xffffa8ac99d0>\ndevice = <golioth.golioth.Device object at 0xffffa8ae8750>\nwifi_ssid = '***SAMS_ORANGE_PI_WIFI_SSID***', wifi_psk = '***SAMS_ORANGE_PI_WIFI_PSK***'\n\n    async def test_rpc(shell, device, wifi_ssid, wifi_psk):\n        await trio.sleep(2)\n    \n        # Set Golioth credential\n    \n        golioth_cred = (await device.credentials.list())[0]\n        shell.exec_command(f\"settings set golioth/psk-id {golioth_cred.identity}\")\n        shell.exec_command(f\"settings set golioth/psk {golioth_cred.key}\")\n    \n        # Set WiFi credential\n    \n        if wifi_ssid is not None:\n            shell.exec_command(f\"settings set wifi/ssid \\\"{wifi_ssid}\\\"\")\n    \n        if wifi_psk is not None:\n            shell.exec_command(f\"settings set wifi/psk \\\"{wifi_psk}\\\"\")\n    \n        # Wait for device to reboot and connect\n    \n        shell._device.readlines_until(regex=\".*RPC observation established\", timeout=90.0)\n    \n        # Test successful RPC\n    \n        result = await device.rpc.call(\"multiply\", [ 7, 6 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  42))\n        assert result['value'] == 42, \"Didn't receive correct value\"\n    \n        # Test successful RPC using float\n    \n        result = await device.rpc.call(\"multiply\", [ 11.4, 93.81 ])\n        LOGGER.info(\"### Received: {0} Expected: {1}\".format(result['value'],  1069.434))\n        assert result['value'] == 1069.434, \"Didn't receive correct float\"\n    \n        # Test invalid argument RPC\n    \n        error_code = None\n        try:\n            result = await device.rpc.call(\"multiply\", [ 6, 'J' ])\n        except Exception as e:\n            error_code = e\n            pass\n>       LOGGER.info(\"### Received: {0} Expected: {1}\".format(error_code.status_code,  RPCStatusCode.INVALID_ARGUMENT))\nE       AttributeError: 'RPCTimeout' object has no attribute 'status_code'\n\nmodules/lib/golioth-firmware-sdk/examples/zephyr/rpc/pytest/test_sample.py:53: AttributeError","steps":[],"attachments":[{"uid":"9d94828870740614","name":"log","source":"9d94828870740614.txt","type":"text/plain","size":21213}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"dut::0","time":{"start":1727457407982,"stop":1727457408362,"duration":380},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device::0","time":{"start":1727457408364,"stop":1727457408828,"duration":464},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"project::0","time":{"start":1727457408831,"stop":1727457408833,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"device_object::0","time":{"start":1727457408838,"stop":1727457408838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"nrf52840dk"},{"name":"tag","value":"zephyr"},{"name":"parentSuite","value":"sample.zephyr.nrf52840dk"},{"name":"tag","value":"sams_orange_pi"},{"name":"tag","value":"@pytest.mark.usefixtures('anyio_backend')"},{"name":"tag","value":"anyio"},{"name":"suite","value":"test_sample"},{"name":"host","value":"00a5c682e4f4"},{"name":"thread","value":"735-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"modules.lib.golioth-firmware-sdk.examples.zephyr.rpc.pytest.test_sample"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"board_name","value":"'nrf52840dk'"},{"name":"platform_name","value":"'zephyr'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ab4899336cad4144","status":"passed","time":{"start":1727365078618,"stop":1727365089192,"duration":10574}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":21,"unknown":0,"total":22},"items":[{"uid":"6560004493cba566","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/6560004493cba566","status":"passed","time":{"start":1727454233877,"stop":1727454246303,"duration":12426}},{"uid":"ed5bb1a1028335e8","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/ed5bb1a1028335e8","status":"passed","time":{"start":1727455938276,"stop":1727455948749,"duration":10473}},{"uid":"17ff0551ec9df5d3","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/17ff0551ec9df5d3","status":"passed","time":{"start":1727453162043,"stop":1727453172537,"duration":10494}},{"uid":"eb957ade8b50071c","reportUrl":"https://golioth.github.io/allure-reports/1463//#testresult/eb957ade8b50071c","status":"passed","time":{"start":1727398163339,"stop":1727398174168,"duration":10829}},{"uid":"437cc3fd60cdfe6b","reportUrl":"https://golioth.github.io/allure-reports/1450//#testresult/437cc3fd60cdfe6b","status":"passed","time":{"start":1727394842635,"stop":1727394853227,"duration":10592}},{"uid":"215622cdabf0ab3","reportUrl":"https://golioth.github.io/allure-reports/1461//#testresult/215622cdabf0ab3","status":"passed","time":{"start":1727390279415,"stop":1727390290173,"duration":10758}},{"uid":"69bab524e75ba891","reportUrl":"https://golioth.github.io/allure-reports/1462//#testresult/69bab524e75ba891","status":"passed","time":{"start":1727389943026,"stop":1727389953577,"duration":10551}},{"uid":"365400b9ecf85ef1","reportUrl":"https://golioth.github.io/allure-reports/1457//#testresult/365400b9ecf85ef1","status":"passed","time":{"start":1727385349113,"stop":1727385359172,"duration":10059}},{"uid":"f7c0e6eddf9e9172","reportUrl":"https://golioth.github.io/allure-reports/1452//#testresult/f7c0e6eddf9e9172","status":"passed","time":{"start":1727382931485,"stop":1727382941777,"duration":10292}},{"uid":"b100328cf16adc89","reportUrl":"https://golioth.github.io/allure-reports/1447//#testresult/b100328cf16adc89","status":"passed","time":{"start":1727379602958,"stop":1727379613576,"duration":10618}},{"uid":"fb1c39b5aed5b8d6","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/fb1c39b5aed5b8d6","status":"passed","time":{"start":1727374940895,"stop":1727374951548,"duration":10653}},{"uid":"e25ec96b7573bf91","reportUrl":"https://golioth.github.io/allure-reports/1440//#testresult/e25ec96b7573bf91","status":"passed","time":{"start":1727372093302,"stop":1727372103745,"duration":10443}},{"uid":"23feaeb4777c8e84","reportUrl":"https://golioth.github.io/allure-reports/1438//#testresult/23feaeb4777c8e84","status":"passed","time":{"start":1727369629167,"stop":1727369639541,"duration":10374}},{"uid":"34ffb7d52cc5110d","reportUrl":"https://golioth.github.io/allure-reports/1436//#testresult/34ffb7d52cc5110d","status":"passed","time":{"start":1727365078618,"stop":1727365089192,"duration":10574}},{"uid":"1c06799df77587b7","reportUrl":"https://golioth.github.io/allure-reports/1437//#testresult/1c06799df77587b7","status":"passed","time":{"start":1727365592057,"stop":1727365602725,"duration":10668}},{"uid":"3d08e1fdab0ad904","reportUrl":"https://golioth.github.io/allure-reports/1433//#testresult/3d08e1fdab0ad904","status":"passed","time":{"start":1727360934404,"stop":1727360944810,"duration":10406}},{"uid":"5138562a9127589c","reportUrl":"https://golioth.github.io/allure-reports/1432//#testresult/5138562a9127589c","status":"passed","time":{"start":1727314807254,"stop":1727314817689,"duration":10435}},{"uid":"84fd3836f4f60df1","reportUrl":"https://golioth.github.io/allure-reports/1429//#testresult/84fd3836f4f60df1","status":"passed","time":{"start":1727312325288,"stop":1727312335955,"duration":10667}},{"uid":"d5b2df1ebe992103","reportUrl":"https://golioth.github.io/allure-reports/1428//#testresult/d5b2df1ebe992103","status":"passed","time":{"start":1727308597707,"stop":1727308608366,"duration":10659}},{"uid":"5ad3217baec1e552","reportUrl":"https://golioth.github.io/allure-reports/1424//#testresult/5ad3217baec1e552","status":"passed","time":{"start":1727305527030,"stop":1727305537779,"duration":10749}}]},"tags":["nrf52840dk","anyio","sams_orange_pi","@pytest.mark.usefixtures('anyio_backend')","zephyr"]},"source":"3959690781cf0a39.json","parameterValues":["'nrf52840dk'","'zephyr'"]}